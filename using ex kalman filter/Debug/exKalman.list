
exKalman.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000f98c  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000a14  0800fa48  0800fa48  0001fa48  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0801045c  0801045c  00030230  2**0
                  CONTENTS
  4 .ARM          00000000  0801045c  0801045c  00030230  2**0
                  CONTENTS
  5 .preinit_array 00000000  0801045c  0801045c  00030230  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0801045c  0801045c  0002045c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08010464  08010464  00020464  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000230  20000000  08010468  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000410  20000230  08010698  00030230  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000640  08010698  00030640  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00030230  2**0
                  CONTENTS, READONLY
 12 .debug_info   0002a6f7  00000000  00000000  00030258  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000048fd  00000000  00000000  0005a94f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e78  00000000  00000000  0005f250  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000050a0  00000000  00000000  000600c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   000227d6  00000000  00000000  00065168  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    0000c656  00000000  00000000  0008793e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000053  00000000  00000000  00093f94  2**0
                  CONTENTS, READONLY
 19 .debug_frame  000047bc  00000000  00000000  00093fe8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_loc    00025e9a  00000000  00000000  000987a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000230 	.word	0x20000230
 80000dc:	00000000 	.word	0x00000000
 80000e0:	0800fa30 	.word	0x0800fa30

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000234 	.word	0x20000234
 8000100:	0800fa30 	.word	0x0800fa30

08000104 <strlen>:
 8000104:	2300      	movs	r3, #0
 8000106:	5cc2      	ldrb	r2, [r0, r3]
 8000108:	3301      	adds	r3, #1
 800010a:	2a00      	cmp	r2, #0
 800010c:	d1fb      	bne.n	8000106 <strlen+0x2>
 800010e:	1e58      	subs	r0, r3, #1
 8000110:	4770      	bx	lr
	...

08000114 <__gnu_thumb1_case_uqi>:
 8000114:	b402      	push	{r1}
 8000116:	4671      	mov	r1, lr
 8000118:	0849      	lsrs	r1, r1, #1
 800011a:	0049      	lsls	r1, r1, #1
 800011c:	5c09      	ldrb	r1, [r1, r0]
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	448e      	add	lr, r1
 8000122:	bc02      	pop	{r1}
 8000124:	4770      	bx	lr
 8000126:	46c0      	nop			; (mov r8, r8)

08000128 <__gnu_thumb1_case_shi>:
 8000128:	b403      	push	{r0, r1}
 800012a:	4671      	mov	r1, lr
 800012c:	0849      	lsrs	r1, r1, #1
 800012e:	0040      	lsls	r0, r0, #1
 8000130:	0049      	lsls	r1, r1, #1
 8000132:	5e09      	ldrsh	r1, [r1, r0]
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	448e      	add	lr, r1
 8000138:	bc03      	pop	{r0, r1}
 800013a:	4770      	bx	lr

0800013c <__udivsi3>:
 800013c:	2200      	movs	r2, #0
 800013e:	0843      	lsrs	r3, r0, #1
 8000140:	428b      	cmp	r3, r1
 8000142:	d374      	bcc.n	800022e <__udivsi3+0xf2>
 8000144:	0903      	lsrs	r3, r0, #4
 8000146:	428b      	cmp	r3, r1
 8000148:	d35f      	bcc.n	800020a <__udivsi3+0xce>
 800014a:	0a03      	lsrs	r3, r0, #8
 800014c:	428b      	cmp	r3, r1
 800014e:	d344      	bcc.n	80001da <__udivsi3+0x9e>
 8000150:	0b03      	lsrs	r3, r0, #12
 8000152:	428b      	cmp	r3, r1
 8000154:	d328      	bcc.n	80001a8 <__udivsi3+0x6c>
 8000156:	0c03      	lsrs	r3, r0, #16
 8000158:	428b      	cmp	r3, r1
 800015a:	d30d      	bcc.n	8000178 <__udivsi3+0x3c>
 800015c:	22ff      	movs	r2, #255	; 0xff
 800015e:	0209      	lsls	r1, r1, #8
 8000160:	ba12      	rev	r2, r2
 8000162:	0c03      	lsrs	r3, r0, #16
 8000164:	428b      	cmp	r3, r1
 8000166:	d302      	bcc.n	800016e <__udivsi3+0x32>
 8000168:	1212      	asrs	r2, r2, #8
 800016a:	0209      	lsls	r1, r1, #8
 800016c:	d065      	beq.n	800023a <__udivsi3+0xfe>
 800016e:	0b03      	lsrs	r3, r0, #12
 8000170:	428b      	cmp	r3, r1
 8000172:	d319      	bcc.n	80001a8 <__udivsi3+0x6c>
 8000174:	e000      	b.n	8000178 <__udivsi3+0x3c>
 8000176:	0a09      	lsrs	r1, r1, #8
 8000178:	0bc3      	lsrs	r3, r0, #15
 800017a:	428b      	cmp	r3, r1
 800017c:	d301      	bcc.n	8000182 <__udivsi3+0x46>
 800017e:	03cb      	lsls	r3, r1, #15
 8000180:	1ac0      	subs	r0, r0, r3
 8000182:	4152      	adcs	r2, r2
 8000184:	0b83      	lsrs	r3, r0, #14
 8000186:	428b      	cmp	r3, r1
 8000188:	d301      	bcc.n	800018e <__udivsi3+0x52>
 800018a:	038b      	lsls	r3, r1, #14
 800018c:	1ac0      	subs	r0, r0, r3
 800018e:	4152      	adcs	r2, r2
 8000190:	0b43      	lsrs	r3, r0, #13
 8000192:	428b      	cmp	r3, r1
 8000194:	d301      	bcc.n	800019a <__udivsi3+0x5e>
 8000196:	034b      	lsls	r3, r1, #13
 8000198:	1ac0      	subs	r0, r0, r3
 800019a:	4152      	adcs	r2, r2
 800019c:	0b03      	lsrs	r3, r0, #12
 800019e:	428b      	cmp	r3, r1
 80001a0:	d301      	bcc.n	80001a6 <__udivsi3+0x6a>
 80001a2:	030b      	lsls	r3, r1, #12
 80001a4:	1ac0      	subs	r0, r0, r3
 80001a6:	4152      	adcs	r2, r2
 80001a8:	0ac3      	lsrs	r3, r0, #11
 80001aa:	428b      	cmp	r3, r1
 80001ac:	d301      	bcc.n	80001b2 <__udivsi3+0x76>
 80001ae:	02cb      	lsls	r3, r1, #11
 80001b0:	1ac0      	subs	r0, r0, r3
 80001b2:	4152      	adcs	r2, r2
 80001b4:	0a83      	lsrs	r3, r0, #10
 80001b6:	428b      	cmp	r3, r1
 80001b8:	d301      	bcc.n	80001be <__udivsi3+0x82>
 80001ba:	028b      	lsls	r3, r1, #10
 80001bc:	1ac0      	subs	r0, r0, r3
 80001be:	4152      	adcs	r2, r2
 80001c0:	0a43      	lsrs	r3, r0, #9
 80001c2:	428b      	cmp	r3, r1
 80001c4:	d301      	bcc.n	80001ca <__udivsi3+0x8e>
 80001c6:	024b      	lsls	r3, r1, #9
 80001c8:	1ac0      	subs	r0, r0, r3
 80001ca:	4152      	adcs	r2, r2
 80001cc:	0a03      	lsrs	r3, r0, #8
 80001ce:	428b      	cmp	r3, r1
 80001d0:	d301      	bcc.n	80001d6 <__udivsi3+0x9a>
 80001d2:	020b      	lsls	r3, r1, #8
 80001d4:	1ac0      	subs	r0, r0, r3
 80001d6:	4152      	adcs	r2, r2
 80001d8:	d2cd      	bcs.n	8000176 <__udivsi3+0x3a>
 80001da:	09c3      	lsrs	r3, r0, #7
 80001dc:	428b      	cmp	r3, r1
 80001de:	d301      	bcc.n	80001e4 <__udivsi3+0xa8>
 80001e0:	01cb      	lsls	r3, r1, #7
 80001e2:	1ac0      	subs	r0, r0, r3
 80001e4:	4152      	adcs	r2, r2
 80001e6:	0983      	lsrs	r3, r0, #6
 80001e8:	428b      	cmp	r3, r1
 80001ea:	d301      	bcc.n	80001f0 <__udivsi3+0xb4>
 80001ec:	018b      	lsls	r3, r1, #6
 80001ee:	1ac0      	subs	r0, r0, r3
 80001f0:	4152      	adcs	r2, r2
 80001f2:	0943      	lsrs	r3, r0, #5
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d301      	bcc.n	80001fc <__udivsi3+0xc0>
 80001f8:	014b      	lsls	r3, r1, #5
 80001fa:	1ac0      	subs	r0, r0, r3
 80001fc:	4152      	adcs	r2, r2
 80001fe:	0903      	lsrs	r3, r0, #4
 8000200:	428b      	cmp	r3, r1
 8000202:	d301      	bcc.n	8000208 <__udivsi3+0xcc>
 8000204:	010b      	lsls	r3, r1, #4
 8000206:	1ac0      	subs	r0, r0, r3
 8000208:	4152      	adcs	r2, r2
 800020a:	08c3      	lsrs	r3, r0, #3
 800020c:	428b      	cmp	r3, r1
 800020e:	d301      	bcc.n	8000214 <__udivsi3+0xd8>
 8000210:	00cb      	lsls	r3, r1, #3
 8000212:	1ac0      	subs	r0, r0, r3
 8000214:	4152      	adcs	r2, r2
 8000216:	0883      	lsrs	r3, r0, #2
 8000218:	428b      	cmp	r3, r1
 800021a:	d301      	bcc.n	8000220 <__udivsi3+0xe4>
 800021c:	008b      	lsls	r3, r1, #2
 800021e:	1ac0      	subs	r0, r0, r3
 8000220:	4152      	adcs	r2, r2
 8000222:	0843      	lsrs	r3, r0, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d301      	bcc.n	800022c <__udivsi3+0xf0>
 8000228:	004b      	lsls	r3, r1, #1
 800022a:	1ac0      	subs	r0, r0, r3
 800022c:	4152      	adcs	r2, r2
 800022e:	1a41      	subs	r1, r0, r1
 8000230:	d200      	bcs.n	8000234 <__udivsi3+0xf8>
 8000232:	4601      	mov	r1, r0
 8000234:	4152      	adcs	r2, r2
 8000236:	4610      	mov	r0, r2
 8000238:	4770      	bx	lr
 800023a:	e7ff      	b.n	800023c <__udivsi3+0x100>
 800023c:	b501      	push	{r0, lr}
 800023e:	2000      	movs	r0, #0
 8000240:	f000 f8f0 	bl	8000424 <__aeabi_idiv0>
 8000244:	bd02      	pop	{r1, pc}
 8000246:	46c0      	nop			; (mov r8, r8)

08000248 <__aeabi_uidivmod>:
 8000248:	2900      	cmp	r1, #0
 800024a:	d0f7      	beq.n	800023c <__udivsi3+0x100>
 800024c:	e776      	b.n	800013c <__udivsi3>
 800024e:	4770      	bx	lr

08000250 <__divsi3>:
 8000250:	4603      	mov	r3, r0
 8000252:	430b      	orrs	r3, r1
 8000254:	d47f      	bmi.n	8000356 <__divsi3+0x106>
 8000256:	2200      	movs	r2, #0
 8000258:	0843      	lsrs	r3, r0, #1
 800025a:	428b      	cmp	r3, r1
 800025c:	d374      	bcc.n	8000348 <__divsi3+0xf8>
 800025e:	0903      	lsrs	r3, r0, #4
 8000260:	428b      	cmp	r3, r1
 8000262:	d35f      	bcc.n	8000324 <__divsi3+0xd4>
 8000264:	0a03      	lsrs	r3, r0, #8
 8000266:	428b      	cmp	r3, r1
 8000268:	d344      	bcc.n	80002f4 <__divsi3+0xa4>
 800026a:	0b03      	lsrs	r3, r0, #12
 800026c:	428b      	cmp	r3, r1
 800026e:	d328      	bcc.n	80002c2 <__divsi3+0x72>
 8000270:	0c03      	lsrs	r3, r0, #16
 8000272:	428b      	cmp	r3, r1
 8000274:	d30d      	bcc.n	8000292 <__divsi3+0x42>
 8000276:	22ff      	movs	r2, #255	; 0xff
 8000278:	0209      	lsls	r1, r1, #8
 800027a:	ba12      	rev	r2, r2
 800027c:	0c03      	lsrs	r3, r0, #16
 800027e:	428b      	cmp	r3, r1
 8000280:	d302      	bcc.n	8000288 <__divsi3+0x38>
 8000282:	1212      	asrs	r2, r2, #8
 8000284:	0209      	lsls	r1, r1, #8
 8000286:	d065      	beq.n	8000354 <__divsi3+0x104>
 8000288:	0b03      	lsrs	r3, r0, #12
 800028a:	428b      	cmp	r3, r1
 800028c:	d319      	bcc.n	80002c2 <__divsi3+0x72>
 800028e:	e000      	b.n	8000292 <__divsi3+0x42>
 8000290:	0a09      	lsrs	r1, r1, #8
 8000292:	0bc3      	lsrs	r3, r0, #15
 8000294:	428b      	cmp	r3, r1
 8000296:	d301      	bcc.n	800029c <__divsi3+0x4c>
 8000298:	03cb      	lsls	r3, r1, #15
 800029a:	1ac0      	subs	r0, r0, r3
 800029c:	4152      	adcs	r2, r2
 800029e:	0b83      	lsrs	r3, r0, #14
 80002a0:	428b      	cmp	r3, r1
 80002a2:	d301      	bcc.n	80002a8 <__divsi3+0x58>
 80002a4:	038b      	lsls	r3, r1, #14
 80002a6:	1ac0      	subs	r0, r0, r3
 80002a8:	4152      	adcs	r2, r2
 80002aa:	0b43      	lsrs	r3, r0, #13
 80002ac:	428b      	cmp	r3, r1
 80002ae:	d301      	bcc.n	80002b4 <__divsi3+0x64>
 80002b0:	034b      	lsls	r3, r1, #13
 80002b2:	1ac0      	subs	r0, r0, r3
 80002b4:	4152      	adcs	r2, r2
 80002b6:	0b03      	lsrs	r3, r0, #12
 80002b8:	428b      	cmp	r3, r1
 80002ba:	d301      	bcc.n	80002c0 <__divsi3+0x70>
 80002bc:	030b      	lsls	r3, r1, #12
 80002be:	1ac0      	subs	r0, r0, r3
 80002c0:	4152      	adcs	r2, r2
 80002c2:	0ac3      	lsrs	r3, r0, #11
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d301      	bcc.n	80002cc <__divsi3+0x7c>
 80002c8:	02cb      	lsls	r3, r1, #11
 80002ca:	1ac0      	subs	r0, r0, r3
 80002cc:	4152      	adcs	r2, r2
 80002ce:	0a83      	lsrs	r3, r0, #10
 80002d0:	428b      	cmp	r3, r1
 80002d2:	d301      	bcc.n	80002d8 <__divsi3+0x88>
 80002d4:	028b      	lsls	r3, r1, #10
 80002d6:	1ac0      	subs	r0, r0, r3
 80002d8:	4152      	adcs	r2, r2
 80002da:	0a43      	lsrs	r3, r0, #9
 80002dc:	428b      	cmp	r3, r1
 80002de:	d301      	bcc.n	80002e4 <__divsi3+0x94>
 80002e0:	024b      	lsls	r3, r1, #9
 80002e2:	1ac0      	subs	r0, r0, r3
 80002e4:	4152      	adcs	r2, r2
 80002e6:	0a03      	lsrs	r3, r0, #8
 80002e8:	428b      	cmp	r3, r1
 80002ea:	d301      	bcc.n	80002f0 <__divsi3+0xa0>
 80002ec:	020b      	lsls	r3, r1, #8
 80002ee:	1ac0      	subs	r0, r0, r3
 80002f0:	4152      	adcs	r2, r2
 80002f2:	d2cd      	bcs.n	8000290 <__divsi3+0x40>
 80002f4:	09c3      	lsrs	r3, r0, #7
 80002f6:	428b      	cmp	r3, r1
 80002f8:	d301      	bcc.n	80002fe <__divsi3+0xae>
 80002fa:	01cb      	lsls	r3, r1, #7
 80002fc:	1ac0      	subs	r0, r0, r3
 80002fe:	4152      	adcs	r2, r2
 8000300:	0983      	lsrs	r3, r0, #6
 8000302:	428b      	cmp	r3, r1
 8000304:	d301      	bcc.n	800030a <__divsi3+0xba>
 8000306:	018b      	lsls	r3, r1, #6
 8000308:	1ac0      	subs	r0, r0, r3
 800030a:	4152      	adcs	r2, r2
 800030c:	0943      	lsrs	r3, r0, #5
 800030e:	428b      	cmp	r3, r1
 8000310:	d301      	bcc.n	8000316 <__divsi3+0xc6>
 8000312:	014b      	lsls	r3, r1, #5
 8000314:	1ac0      	subs	r0, r0, r3
 8000316:	4152      	adcs	r2, r2
 8000318:	0903      	lsrs	r3, r0, #4
 800031a:	428b      	cmp	r3, r1
 800031c:	d301      	bcc.n	8000322 <__divsi3+0xd2>
 800031e:	010b      	lsls	r3, r1, #4
 8000320:	1ac0      	subs	r0, r0, r3
 8000322:	4152      	adcs	r2, r2
 8000324:	08c3      	lsrs	r3, r0, #3
 8000326:	428b      	cmp	r3, r1
 8000328:	d301      	bcc.n	800032e <__divsi3+0xde>
 800032a:	00cb      	lsls	r3, r1, #3
 800032c:	1ac0      	subs	r0, r0, r3
 800032e:	4152      	adcs	r2, r2
 8000330:	0883      	lsrs	r3, r0, #2
 8000332:	428b      	cmp	r3, r1
 8000334:	d301      	bcc.n	800033a <__divsi3+0xea>
 8000336:	008b      	lsls	r3, r1, #2
 8000338:	1ac0      	subs	r0, r0, r3
 800033a:	4152      	adcs	r2, r2
 800033c:	0843      	lsrs	r3, r0, #1
 800033e:	428b      	cmp	r3, r1
 8000340:	d301      	bcc.n	8000346 <__divsi3+0xf6>
 8000342:	004b      	lsls	r3, r1, #1
 8000344:	1ac0      	subs	r0, r0, r3
 8000346:	4152      	adcs	r2, r2
 8000348:	1a41      	subs	r1, r0, r1
 800034a:	d200      	bcs.n	800034e <__divsi3+0xfe>
 800034c:	4601      	mov	r1, r0
 800034e:	4152      	adcs	r2, r2
 8000350:	4610      	mov	r0, r2
 8000352:	4770      	bx	lr
 8000354:	e05d      	b.n	8000412 <__divsi3+0x1c2>
 8000356:	0fca      	lsrs	r2, r1, #31
 8000358:	d000      	beq.n	800035c <__divsi3+0x10c>
 800035a:	4249      	negs	r1, r1
 800035c:	1003      	asrs	r3, r0, #32
 800035e:	d300      	bcc.n	8000362 <__divsi3+0x112>
 8000360:	4240      	negs	r0, r0
 8000362:	4053      	eors	r3, r2
 8000364:	2200      	movs	r2, #0
 8000366:	469c      	mov	ip, r3
 8000368:	0903      	lsrs	r3, r0, #4
 800036a:	428b      	cmp	r3, r1
 800036c:	d32d      	bcc.n	80003ca <__divsi3+0x17a>
 800036e:	0a03      	lsrs	r3, r0, #8
 8000370:	428b      	cmp	r3, r1
 8000372:	d312      	bcc.n	800039a <__divsi3+0x14a>
 8000374:	22fc      	movs	r2, #252	; 0xfc
 8000376:	0189      	lsls	r1, r1, #6
 8000378:	ba12      	rev	r2, r2
 800037a:	0a03      	lsrs	r3, r0, #8
 800037c:	428b      	cmp	r3, r1
 800037e:	d30c      	bcc.n	800039a <__divsi3+0x14a>
 8000380:	0189      	lsls	r1, r1, #6
 8000382:	1192      	asrs	r2, r2, #6
 8000384:	428b      	cmp	r3, r1
 8000386:	d308      	bcc.n	800039a <__divsi3+0x14a>
 8000388:	0189      	lsls	r1, r1, #6
 800038a:	1192      	asrs	r2, r2, #6
 800038c:	428b      	cmp	r3, r1
 800038e:	d304      	bcc.n	800039a <__divsi3+0x14a>
 8000390:	0189      	lsls	r1, r1, #6
 8000392:	d03a      	beq.n	800040a <__divsi3+0x1ba>
 8000394:	1192      	asrs	r2, r2, #6
 8000396:	e000      	b.n	800039a <__divsi3+0x14a>
 8000398:	0989      	lsrs	r1, r1, #6
 800039a:	09c3      	lsrs	r3, r0, #7
 800039c:	428b      	cmp	r3, r1
 800039e:	d301      	bcc.n	80003a4 <__divsi3+0x154>
 80003a0:	01cb      	lsls	r3, r1, #7
 80003a2:	1ac0      	subs	r0, r0, r3
 80003a4:	4152      	adcs	r2, r2
 80003a6:	0983      	lsrs	r3, r0, #6
 80003a8:	428b      	cmp	r3, r1
 80003aa:	d301      	bcc.n	80003b0 <__divsi3+0x160>
 80003ac:	018b      	lsls	r3, r1, #6
 80003ae:	1ac0      	subs	r0, r0, r3
 80003b0:	4152      	adcs	r2, r2
 80003b2:	0943      	lsrs	r3, r0, #5
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d301      	bcc.n	80003bc <__divsi3+0x16c>
 80003b8:	014b      	lsls	r3, r1, #5
 80003ba:	1ac0      	subs	r0, r0, r3
 80003bc:	4152      	adcs	r2, r2
 80003be:	0903      	lsrs	r3, r0, #4
 80003c0:	428b      	cmp	r3, r1
 80003c2:	d301      	bcc.n	80003c8 <__divsi3+0x178>
 80003c4:	010b      	lsls	r3, r1, #4
 80003c6:	1ac0      	subs	r0, r0, r3
 80003c8:	4152      	adcs	r2, r2
 80003ca:	08c3      	lsrs	r3, r0, #3
 80003cc:	428b      	cmp	r3, r1
 80003ce:	d301      	bcc.n	80003d4 <__divsi3+0x184>
 80003d0:	00cb      	lsls	r3, r1, #3
 80003d2:	1ac0      	subs	r0, r0, r3
 80003d4:	4152      	adcs	r2, r2
 80003d6:	0883      	lsrs	r3, r0, #2
 80003d8:	428b      	cmp	r3, r1
 80003da:	d301      	bcc.n	80003e0 <__divsi3+0x190>
 80003dc:	008b      	lsls	r3, r1, #2
 80003de:	1ac0      	subs	r0, r0, r3
 80003e0:	4152      	adcs	r2, r2
 80003e2:	d2d9      	bcs.n	8000398 <__divsi3+0x148>
 80003e4:	0843      	lsrs	r3, r0, #1
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d301      	bcc.n	80003ee <__divsi3+0x19e>
 80003ea:	004b      	lsls	r3, r1, #1
 80003ec:	1ac0      	subs	r0, r0, r3
 80003ee:	4152      	adcs	r2, r2
 80003f0:	1a41      	subs	r1, r0, r1
 80003f2:	d200      	bcs.n	80003f6 <__divsi3+0x1a6>
 80003f4:	4601      	mov	r1, r0
 80003f6:	4663      	mov	r3, ip
 80003f8:	4152      	adcs	r2, r2
 80003fa:	105b      	asrs	r3, r3, #1
 80003fc:	4610      	mov	r0, r2
 80003fe:	d301      	bcc.n	8000404 <__divsi3+0x1b4>
 8000400:	4240      	negs	r0, r0
 8000402:	2b00      	cmp	r3, #0
 8000404:	d500      	bpl.n	8000408 <__divsi3+0x1b8>
 8000406:	4249      	negs	r1, r1
 8000408:	4770      	bx	lr
 800040a:	4663      	mov	r3, ip
 800040c:	105b      	asrs	r3, r3, #1
 800040e:	d300      	bcc.n	8000412 <__divsi3+0x1c2>
 8000410:	4240      	negs	r0, r0
 8000412:	b501      	push	{r0, lr}
 8000414:	2000      	movs	r0, #0
 8000416:	f000 f805 	bl	8000424 <__aeabi_idiv0>
 800041a:	bd02      	pop	{r1, pc}

0800041c <__aeabi_idivmod>:
 800041c:	2900      	cmp	r1, #0
 800041e:	d0f8      	beq.n	8000412 <__divsi3+0x1c2>
 8000420:	e716      	b.n	8000250 <__divsi3>
 8000422:	4770      	bx	lr

08000424 <__aeabi_idiv0>:
 8000424:	4770      	bx	lr
 8000426:	46c0      	nop			; (mov r8, r8)

08000428 <__aeabi_cdrcmple>:
 8000428:	4684      	mov	ip, r0
 800042a:	1c10      	adds	r0, r2, #0
 800042c:	4662      	mov	r2, ip
 800042e:	468c      	mov	ip, r1
 8000430:	1c19      	adds	r1, r3, #0
 8000432:	4663      	mov	r3, ip
 8000434:	e000      	b.n	8000438 <__aeabi_cdcmpeq>
 8000436:	46c0      	nop			; (mov r8, r8)

08000438 <__aeabi_cdcmpeq>:
 8000438:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043a:	f001 fef5 	bl	8002228 <__ledf2>
 800043e:	2800      	cmp	r0, #0
 8000440:	d401      	bmi.n	8000446 <__aeabi_cdcmpeq+0xe>
 8000442:	2100      	movs	r1, #0
 8000444:	42c8      	cmn	r0, r1
 8000446:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000448 <__aeabi_dcmpeq>:
 8000448:	b510      	push	{r4, lr}
 800044a:	f001 fe3f 	bl	80020cc <__eqdf2>
 800044e:	4240      	negs	r0, r0
 8000450:	3001      	adds	r0, #1
 8000452:	bd10      	pop	{r4, pc}

08000454 <__aeabi_dcmplt>:
 8000454:	b510      	push	{r4, lr}
 8000456:	f001 fee7 	bl	8002228 <__ledf2>
 800045a:	2800      	cmp	r0, #0
 800045c:	db01      	blt.n	8000462 <__aeabi_dcmplt+0xe>
 800045e:	2000      	movs	r0, #0
 8000460:	bd10      	pop	{r4, pc}
 8000462:	2001      	movs	r0, #1
 8000464:	bd10      	pop	{r4, pc}
 8000466:	46c0      	nop			; (mov r8, r8)

08000468 <__aeabi_dcmple>:
 8000468:	b510      	push	{r4, lr}
 800046a:	f001 fedd 	bl	8002228 <__ledf2>
 800046e:	2800      	cmp	r0, #0
 8000470:	dd01      	ble.n	8000476 <__aeabi_dcmple+0xe>
 8000472:	2000      	movs	r0, #0
 8000474:	bd10      	pop	{r4, pc}
 8000476:	2001      	movs	r0, #1
 8000478:	bd10      	pop	{r4, pc}
 800047a:	46c0      	nop			; (mov r8, r8)

0800047c <__aeabi_dcmpgt>:
 800047c:	b510      	push	{r4, lr}
 800047e:	f001 fe61 	bl	8002144 <__gedf2>
 8000482:	2800      	cmp	r0, #0
 8000484:	dc01      	bgt.n	800048a <__aeabi_dcmpgt+0xe>
 8000486:	2000      	movs	r0, #0
 8000488:	bd10      	pop	{r4, pc}
 800048a:	2001      	movs	r0, #1
 800048c:	bd10      	pop	{r4, pc}
 800048e:	46c0      	nop			; (mov r8, r8)

08000490 <__aeabi_dcmpge>:
 8000490:	b510      	push	{r4, lr}
 8000492:	f001 fe57 	bl	8002144 <__gedf2>
 8000496:	2800      	cmp	r0, #0
 8000498:	da01      	bge.n	800049e <__aeabi_dcmpge+0xe>
 800049a:	2000      	movs	r0, #0
 800049c:	bd10      	pop	{r4, pc}
 800049e:	2001      	movs	r0, #1
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	46c0      	nop			; (mov r8, r8)

080004a4 <__aeabi_cfrcmple>:
 80004a4:	4684      	mov	ip, r0
 80004a6:	1c08      	adds	r0, r1, #0
 80004a8:	4661      	mov	r1, ip
 80004aa:	e7ff      	b.n	80004ac <__aeabi_cfcmpeq>

080004ac <__aeabi_cfcmpeq>:
 80004ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80004ae:	f000 fbd7 	bl	8000c60 <__lesf2>
 80004b2:	2800      	cmp	r0, #0
 80004b4:	d401      	bmi.n	80004ba <__aeabi_cfcmpeq+0xe>
 80004b6:	2100      	movs	r1, #0
 80004b8:	42c8      	cmn	r0, r1
 80004ba:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004bc <__aeabi_fcmpeq>:
 80004bc:	b510      	push	{r4, lr}
 80004be:	f000 fb5b 	bl	8000b78 <__eqsf2>
 80004c2:	4240      	negs	r0, r0
 80004c4:	3001      	adds	r0, #1
 80004c6:	bd10      	pop	{r4, pc}

080004c8 <__aeabi_fcmplt>:
 80004c8:	b510      	push	{r4, lr}
 80004ca:	f000 fbc9 	bl	8000c60 <__lesf2>
 80004ce:	2800      	cmp	r0, #0
 80004d0:	db01      	blt.n	80004d6 <__aeabi_fcmplt+0xe>
 80004d2:	2000      	movs	r0, #0
 80004d4:	bd10      	pop	{r4, pc}
 80004d6:	2001      	movs	r0, #1
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	46c0      	nop			; (mov r8, r8)

080004dc <__aeabi_fcmple>:
 80004dc:	b510      	push	{r4, lr}
 80004de:	f000 fbbf 	bl	8000c60 <__lesf2>
 80004e2:	2800      	cmp	r0, #0
 80004e4:	dd01      	ble.n	80004ea <__aeabi_fcmple+0xe>
 80004e6:	2000      	movs	r0, #0
 80004e8:	bd10      	pop	{r4, pc}
 80004ea:	2001      	movs	r0, #1
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	46c0      	nop			; (mov r8, r8)

080004f0 <__aeabi_fcmpgt>:
 80004f0:	b510      	push	{r4, lr}
 80004f2:	f000 fb69 	bl	8000bc8 <__gesf2>
 80004f6:	2800      	cmp	r0, #0
 80004f8:	dc01      	bgt.n	80004fe <__aeabi_fcmpgt+0xe>
 80004fa:	2000      	movs	r0, #0
 80004fc:	bd10      	pop	{r4, pc}
 80004fe:	2001      	movs	r0, #1
 8000500:	bd10      	pop	{r4, pc}
 8000502:	46c0      	nop			; (mov r8, r8)

08000504 <__aeabi_fcmpge>:
 8000504:	b510      	push	{r4, lr}
 8000506:	f000 fb5f 	bl	8000bc8 <__gesf2>
 800050a:	2800      	cmp	r0, #0
 800050c:	da01      	bge.n	8000512 <__aeabi_fcmpge+0xe>
 800050e:	2000      	movs	r0, #0
 8000510:	bd10      	pop	{r4, pc}
 8000512:	2001      	movs	r0, #1
 8000514:	bd10      	pop	{r4, pc}
 8000516:	46c0      	nop			; (mov r8, r8)

08000518 <__aeabi_f2uiz>:
 8000518:	219e      	movs	r1, #158	; 0x9e
 800051a:	b510      	push	{r4, lr}
 800051c:	05c9      	lsls	r1, r1, #23
 800051e:	1c04      	adds	r4, r0, #0
 8000520:	f7ff fff0 	bl	8000504 <__aeabi_fcmpge>
 8000524:	2800      	cmp	r0, #0
 8000526:	d103      	bne.n	8000530 <__aeabi_f2uiz+0x18>
 8000528:	1c20      	adds	r0, r4, #0
 800052a:	f000 fedb 	bl	80012e4 <__aeabi_f2iz>
 800052e:	bd10      	pop	{r4, pc}
 8000530:	219e      	movs	r1, #158	; 0x9e
 8000532:	1c20      	adds	r0, r4, #0
 8000534:	05c9      	lsls	r1, r1, #23
 8000536:	f000 fcf7 	bl	8000f28 <__aeabi_fsub>
 800053a:	f000 fed3 	bl	80012e4 <__aeabi_f2iz>
 800053e:	2380      	movs	r3, #128	; 0x80
 8000540:	061b      	lsls	r3, r3, #24
 8000542:	469c      	mov	ip, r3
 8000544:	4460      	add	r0, ip
 8000546:	e7f2      	b.n	800052e <__aeabi_f2uiz+0x16>

08000548 <__aeabi_d2uiz>:
 8000548:	b570      	push	{r4, r5, r6, lr}
 800054a:	2200      	movs	r2, #0
 800054c:	4b0c      	ldr	r3, [pc, #48]	; (8000580 <__aeabi_d2uiz+0x38>)
 800054e:	0004      	movs	r4, r0
 8000550:	000d      	movs	r5, r1
 8000552:	f7ff ff9d 	bl	8000490 <__aeabi_dcmpge>
 8000556:	2800      	cmp	r0, #0
 8000558:	d104      	bne.n	8000564 <__aeabi_d2uiz+0x1c>
 800055a:	0020      	movs	r0, r4
 800055c:	0029      	movs	r1, r5
 800055e:	f002 fcef 	bl	8002f40 <__aeabi_d2iz>
 8000562:	bd70      	pop	{r4, r5, r6, pc}
 8000564:	4b06      	ldr	r3, [pc, #24]	; (8000580 <__aeabi_d2uiz+0x38>)
 8000566:	2200      	movs	r2, #0
 8000568:	0020      	movs	r0, r4
 800056a:	0029      	movs	r1, r5
 800056c:	f002 f938 	bl	80027e0 <__aeabi_dsub>
 8000570:	f002 fce6 	bl	8002f40 <__aeabi_d2iz>
 8000574:	2380      	movs	r3, #128	; 0x80
 8000576:	061b      	lsls	r3, r3, #24
 8000578:	469c      	mov	ip, r3
 800057a:	4460      	add	r0, ip
 800057c:	e7f1      	b.n	8000562 <__aeabi_d2uiz+0x1a>
 800057e:	46c0      	nop			; (mov r8, r8)
 8000580:	41e00000 	.word	0x41e00000

08000584 <__aeabi_d2lz>:
 8000584:	b570      	push	{r4, r5, r6, lr}
 8000586:	0005      	movs	r5, r0
 8000588:	000c      	movs	r4, r1
 800058a:	2200      	movs	r2, #0
 800058c:	2300      	movs	r3, #0
 800058e:	0028      	movs	r0, r5
 8000590:	0021      	movs	r1, r4
 8000592:	f7ff ff5f 	bl	8000454 <__aeabi_dcmplt>
 8000596:	2800      	cmp	r0, #0
 8000598:	d108      	bne.n	80005ac <__aeabi_d2lz+0x28>
 800059a:	0028      	movs	r0, r5
 800059c:	0021      	movs	r1, r4
 800059e:	f000 f80f 	bl	80005c0 <__aeabi_d2ulz>
 80005a2:	0002      	movs	r2, r0
 80005a4:	000b      	movs	r3, r1
 80005a6:	0010      	movs	r0, r2
 80005a8:	0019      	movs	r1, r3
 80005aa:	bd70      	pop	{r4, r5, r6, pc}
 80005ac:	2380      	movs	r3, #128	; 0x80
 80005ae:	061b      	lsls	r3, r3, #24
 80005b0:	18e1      	adds	r1, r4, r3
 80005b2:	0028      	movs	r0, r5
 80005b4:	f000 f804 	bl	80005c0 <__aeabi_d2ulz>
 80005b8:	2300      	movs	r3, #0
 80005ba:	4242      	negs	r2, r0
 80005bc:	418b      	sbcs	r3, r1
 80005be:	e7f2      	b.n	80005a6 <__aeabi_d2lz+0x22>

080005c0 <__aeabi_d2ulz>:
 80005c0:	b570      	push	{r4, r5, r6, lr}
 80005c2:	2200      	movs	r2, #0
 80005c4:	4b0b      	ldr	r3, [pc, #44]	; (80005f4 <__aeabi_d2ulz+0x34>)
 80005c6:	000d      	movs	r5, r1
 80005c8:	0004      	movs	r4, r0
 80005ca:	f001 fe9d 	bl	8002308 <__aeabi_dmul>
 80005ce:	f7ff ffbb 	bl	8000548 <__aeabi_d2uiz>
 80005d2:	0006      	movs	r6, r0
 80005d4:	f002 fd1a 	bl	800300c <__aeabi_ui2d>
 80005d8:	2200      	movs	r2, #0
 80005da:	4b07      	ldr	r3, [pc, #28]	; (80005f8 <__aeabi_d2ulz+0x38>)
 80005dc:	f001 fe94 	bl	8002308 <__aeabi_dmul>
 80005e0:	0002      	movs	r2, r0
 80005e2:	000b      	movs	r3, r1
 80005e4:	0020      	movs	r0, r4
 80005e6:	0029      	movs	r1, r5
 80005e8:	f002 f8fa 	bl	80027e0 <__aeabi_dsub>
 80005ec:	f7ff ffac 	bl	8000548 <__aeabi_d2uiz>
 80005f0:	0031      	movs	r1, r6
 80005f2:	bd70      	pop	{r4, r5, r6, pc}
 80005f4:	3df00000 	.word	0x3df00000
 80005f8:	41f00000 	.word	0x41f00000

080005fc <__aeabi_l2d>:
 80005fc:	b570      	push	{r4, r5, r6, lr}
 80005fe:	0006      	movs	r6, r0
 8000600:	0008      	movs	r0, r1
 8000602:	f002 fcd3 	bl	8002fac <__aeabi_i2d>
 8000606:	2200      	movs	r2, #0
 8000608:	4b06      	ldr	r3, [pc, #24]	; (8000624 <__aeabi_l2d+0x28>)
 800060a:	f001 fe7d 	bl	8002308 <__aeabi_dmul>
 800060e:	000d      	movs	r5, r1
 8000610:	0004      	movs	r4, r0
 8000612:	0030      	movs	r0, r6
 8000614:	f002 fcfa 	bl	800300c <__aeabi_ui2d>
 8000618:	002b      	movs	r3, r5
 800061a:	0022      	movs	r2, r4
 800061c:	f000 ff04 	bl	8001428 <__aeabi_dadd>
 8000620:	bd70      	pop	{r4, r5, r6, pc}
 8000622:	46c0      	nop			; (mov r8, r8)
 8000624:	41f00000 	.word	0x41f00000

08000628 <__aeabi_fadd>:
 8000628:	b5f0      	push	{r4, r5, r6, r7, lr}
 800062a:	4646      	mov	r6, r8
 800062c:	46d6      	mov	lr, sl
 800062e:	464f      	mov	r7, r9
 8000630:	024d      	lsls	r5, r1, #9
 8000632:	0242      	lsls	r2, r0, #9
 8000634:	b5c0      	push	{r6, r7, lr}
 8000636:	0a52      	lsrs	r2, r2, #9
 8000638:	0a6e      	lsrs	r6, r5, #9
 800063a:	0047      	lsls	r7, r0, #1
 800063c:	46b0      	mov	r8, r6
 800063e:	0e3f      	lsrs	r7, r7, #24
 8000640:	004e      	lsls	r6, r1, #1
 8000642:	0fc4      	lsrs	r4, r0, #31
 8000644:	00d0      	lsls	r0, r2, #3
 8000646:	4694      	mov	ip, r2
 8000648:	003b      	movs	r3, r7
 800064a:	4682      	mov	sl, r0
 800064c:	0e36      	lsrs	r6, r6, #24
 800064e:	0fc9      	lsrs	r1, r1, #31
 8000650:	09ad      	lsrs	r5, r5, #6
 8000652:	428c      	cmp	r4, r1
 8000654:	d06d      	beq.n	8000732 <__aeabi_fadd+0x10a>
 8000656:	1bb8      	subs	r0, r7, r6
 8000658:	4681      	mov	r9, r0
 800065a:	2800      	cmp	r0, #0
 800065c:	dd4d      	ble.n	80006fa <__aeabi_fadd+0xd2>
 800065e:	2e00      	cmp	r6, #0
 8000660:	d100      	bne.n	8000664 <__aeabi_fadd+0x3c>
 8000662:	e088      	b.n	8000776 <__aeabi_fadd+0x14e>
 8000664:	2fff      	cmp	r7, #255	; 0xff
 8000666:	d05a      	beq.n	800071e <__aeabi_fadd+0xf6>
 8000668:	2380      	movs	r3, #128	; 0x80
 800066a:	04db      	lsls	r3, r3, #19
 800066c:	431d      	orrs	r5, r3
 800066e:	464b      	mov	r3, r9
 8000670:	2201      	movs	r2, #1
 8000672:	2b1b      	cmp	r3, #27
 8000674:	dc0a      	bgt.n	800068c <__aeabi_fadd+0x64>
 8000676:	002b      	movs	r3, r5
 8000678:	464a      	mov	r2, r9
 800067a:	4649      	mov	r1, r9
 800067c:	40d3      	lsrs	r3, r2
 800067e:	2220      	movs	r2, #32
 8000680:	1a52      	subs	r2, r2, r1
 8000682:	4095      	lsls	r5, r2
 8000684:	002a      	movs	r2, r5
 8000686:	1e55      	subs	r5, r2, #1
 8000688:	41aa      	sbcs	r2, r5
 800068a:	431a      	orrs	r2, r3
 800068c:	4653      	mov	r3, sl
 800068e:	1a9a      	subs	r2, r3, r2
 8000690:	0153      	lsls	r3, r2, #5
 8000692:	d400      	bmi.n	8000696 <__aeabi_fadd+0x6e>
 8000694:	e0b9      	b.n	800080a <__aeabi_fadd+0x1e2>
 8000696:	0192      	lsls	r2, r2, #6
 8000698:	0996      	lsrs	r6, r2, #6
 800069a:	0030      	movs	r0, r6
 800069c:	f002 fdac 	bl	80031f8 <__clzsi2>
 80006a0:	3805      	subs	r0, #5
 80006a2:	4086      	lsls	r6, r0
 80006a4:	4287      	cmp	r7, r0
 80006a6:	dd00      	ble.n	80006aa <__aeabi_fadd+0x82>
 80006a8:	e0d4      	b.n	8000854 <__aeabi_fadd+0x22c>
 80006aa:	0033      	movs	r3, r6
 80006ac:	1bc7      	subs	r7, r0, r7
 80006ae:	2020      	movs	r0, #32
 80006b0:	3701      	adds	r7, #1
 80006b2:	40fb      	lsrs	r3, r7
 80006b4:	1bc7      	subs	r7, r0, r7
 80006b6:	40be      	lsls	r6, r7
 80006b8:	0032      	movs	r2, r6
 80006ba:	1e56      	subs	r6, r2, #1
 80006bc:	41b2      	sbcs	r2, r6
 80006be:	2700      	movs	r7, #0
 80006c0:	431a      	orrs	r2, r3
 80006c2:	0753      	lsls	r3, r2, #29
 80006c4:	d004      	beq.n	80006d0 <__aeabi_fadd+0xa8>
 80006c6:	230f      	movs	r3, #15
 80006c8:	4013      	ands	r3, r2
 80006ca:	2b04      	cmp	r3, #4
 80006cc:	d000      	beq.n	80006d0 <__aeabi_fadd+0xa8>
 80006ce:	3204      	adds	r2, #4
 80006d0:	0153      	lsls	r3, r2, #5
 80006d2:	d400      	bmi.n	80006d6 <__aeabi_fadd+0xae>
 80006d4:	e09c      	b.n	8000810 <__aeabi_fadd+0x1e8>
 80006d6:	1c7b      	adds	r3, r7, #1
 80006d8:	2ffe      	cmp	r7, #254	; 0xfe
 80006da:	d100      	bne.n	80006de <__aeabi_fadd+0xb6>
 80006dc:	e09a      	b.n	8000814 <__aeabi_fadd+0x1ec>
 80006de:	0192      	lsls	r2, r2, #6
 80006e0:	0a52      	lsrs	r2, r2, #9
 80006e2:	4694      	mov	ip, r2
 80006e4:	b2db      	uxtb	r3, r3
 80006e6:	05d8      	lsls	r0, r3, #23
 80006e8:	4663      	mov	r3, ip
 80006ea:	07e4      	lsls	r4, r4, #31
 80006ec:	4318      	orrs	r0, r3
 80006ee:	4320      	orrs	r0, r4
 80006f0:	bce0      	pop	{r5, r6, r7}
 80006f2:	46ba      	mov	sl, r7
 80006f4:	46b1      	mov	r9, r6
 80006f6:	46a8      	mov	r8, r5
 80006f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80006fa:	2800      	cmp	r0, #0
 80006fc:	d049      	beq.n	8000792 <__aeabi_fadd+0x16a>
 80006fe:	1bf3      	subs	r3, r6, r7
 8000700:	2f00      	cmp	r7, #0
 8000702:	d000      	beq.n	8000706 <__aeabi_fadd+0xde>
 8000704:	e0b6      	b.n	8000874 <__aeabi_fadd+0x24c>
 8000706:	4652      	mov	r2, sl
 8000708:	2a00      	cmp	r2, #0
 800070a:	d060      	beq.n	80007ce <__aeabi_fadd+0x1a6>
 800070c:	3b01      	subs	r3, #1
 800070e:	2b00      	cmp	r3, #0
 8000710:	d100      	bne.n	8000714 <__aeabi_fadd+0xec>
 8000712:	e0fc      	b.n	800090e <__aeabi_fadd+0x2e6>
 8000714:	2eff      	cmp	r6, #255	; 0xff
 8000716:	d000      	beq.n	800071a <__aeabi_fadd+0xf2>
 8000718:	e0b4      	b.n	8000884 <__aeabi_fadd+0x25c>
 800071a:	000c      	movs	r4, r1
 800071c:	4642      	mov	r2, r8
 800071e:	2a00      	cmp	r2, #0
 8000720:	d078      	beq.n	8000814 <__aeabi_fadd+0x1ec>
 8000722:	2080      	movs	r0, #128	; 0x80
 8000724:	03c0      	lsls	r0, r0, #15
 8000726:	4310      	orrs	r0, r2
 8000728:	0242      	lsls	r2, r0, #9
 800072a:	0a53      	lsrs	r3, r2, #9
 800072c:	469c      	mov	ip, r3
 800072e:	23ff      	movs	r3, #255	; 0xff
 8000730:	e7d9      	b.n	80006e6 <__aeabi_fadd+0xbe>
 8000732:	1bb9      	subs	r1, r7, r6
 8000734:	2900      	cmp	r1, #0
 8000736:	dd71      	ble.n	800081c <__aeabi_fadd+0x1f4>
 8000738:	2e00      	cmp	r6, #0
 800073a:	d03f      	beq.n	80007bc <__aeabi_fadd+0x194>
 800073c:	2fff      	cmp	r7, #255	; 0xff
 800073e:	d0ee      	beq.n	800071e <__aeabi_fadd+0xf6>
 8000740:	2380      	movs	r3, #128	; 0x80
 8000742:	04db      	lsls	r3, r3, #19
 8000744:	431d      	orrs	r5, r3
 8000746:	2201      	movs	r2, #1
 8000748:	291b      	cmp	r1, #27
 800074a:	dc07      	bgt.n	800075c <__aeabi_fadd+0x134>
 800074c:	002a      	movs	r2, r5
 800074e:	2320      	movs	r3, #32
 8000750:	40ca      	lsrs	r2, r1
 8000752:	1a59      	subs	r1, r3, r1
 8000754:	408d      	lsls	r5, r1
 8000756:	1e6b      	subs	r3, r5, #1
 8000758:	419d      	sbcs	r5, r3
 800075a:	432a      	orrs	r2, r5
 800075c:	4452      	add	r2, sl
 800075e:	0153      	lsls	r3, r2, #5
 8000760:	d553      	bpl.n	800080a <__aeabi_fadd+0x1e2>
 8000762:	3701      	adds	r7, #1
 8000764:	2fff      	cmp	r7, #255	; 0xff
 8000766:	d055      	beq.n	8000814 <__aeabi_fadd+0x1ec>
 8000768:	2301      	movs	r3, #1
 800076a:	497b      	ldr	r1, [pc, #492]	; (8000958 <__aeabi_fadd+0x330>)
 800076c:	4013      	ands	r3, r2
 800076e:	0852      	lsrs	r2, r2, #1
 8000770:	400a      	ands	r2, r1
 8000772:	431a      	orrs	r2, r3
 8000774:	e7a5      	b.n	80006c2 <__aeabi_fadd+0x9a>
 8000776:	2d00      	cmp	r5, #0
 8000778:	d02c      	beq.n	80007d4 <__aeabi_fadd+0x1ac>
 800077a:	2301      	movs	r3, #1
 800077c:	425b      	negs	r3, r3
 800077e:	469c      	mov	ip, r3
 8000780:	44e1      	add	r9, ip
 8000782:	464b      	mov	r3, r9
 8000784:	2b00      	cmp	r3, #0
 8000786:	d100      	bne.n	800078a <__aeabi_fadd+0x162>
 8000788:	e0ad      	b.n	80008e6 <__aeabi_fadd+0x2be>
 800078a:	2fff      	cmp	r7, #255	; 0xff
 800078c:	d000      	beq.n	8000790 <__aeabi_fadd+0x168>
 800078e:	e76e      	b.n	800066e <__aeabi_fadd+0x46>
 8000790:	e7c5      	b.n	800071e <__aeabi_fadd+0xf6>
 8000792:	20fe      	movs	r0, #254	; 0xfe
 8000794:	1c7e      	adds	r6, r7, #1
 8000796:	4230      	tst	r0, r6
 8000798:	d160      	bne.n	800085c <__aeabi_fadd+0x234>
 800079a:	2f00      	cmp	r7, #0
 800079c:	d000      	beq.n	80007a0 <__aeabi_fadd+0x178>
 800079e:	e093      	b.n	80008c8 <__aeabi_fadd+0x2a0>
 80007a0:	4652      	mov	r2, sl
 80007a2:	2a00      	cmp	r2, #0
 80007a4:	d100      	bne.n	80007a8 <__aeabi_fadd+0x180>
 80007a6:	e0b6      	b.n	8000916 <__aeabi_fadd+0x2ee>
 80007a8:	2d00      	cmp	r5, #0
 80007aa:	d09c      	beq.n	80006e6 <__aeabi_fadd+0xbe>
 80007ac:	1b52      	subs	r2, r2, r5
 80007ae:	0150      	lsls	r0, r2, #5
 80007b0:	d400      	bmi.n	80007b4 <__aeabi_fadd+0x18c>
 80007b2:	e0c3      	b.n	800093c <__aeabi_fadd+0x314>
 80007b4:	4653      	mov	r3, sl
 80007b6:	000c      	movs	r4, r1
 80007b8:	1aea      	subs	r2, r5, r3
 80007ba:	e782      	b.n	80006c2 <__aeabi_fadd+0x9a>
 80007bc:	2d00      	cmp	r5, #0
 80007be:	d009      	beq.n	80007d4 <__aeabi_fadd+0x1ac>
 80007c0:	3901      	subs	r1, #1
 80007c2:	2900      	cmp	r1, #0
 80007c4:	d100      	bne.n	80007c8 <__aeabi_fadd+0x1a0>
 80007c6:	e08b      	b.n	80008e0 <__aeabi_fadd+0x2b8>
 80007c8:	2fff      	cmp	r7, #255	; 0xff
 80007ca:	d1bc      	bne.n	8000746 <__aeabi_fadd+0x11e>
 80007cc:	e7a7      	b.n	800071e <__aeabi_fadd+0xf6>
 80007ce:	000c      	movs	r4, r1
 80007d0:	4642      	mov	r2, r8
 80007d2:	0037      	movs	r7, r6
 80007d4:	2fff      	cmp	r7, #255	; 0xff
 80007d6:	d0a2      	beq.n	800071e <__aeabi_fadd+0xf6>
 80007d8:	0252      	lsls	r2, r2, #9
 80007da:	0a53      	lsrs	r3, r2, #9
 80007dc:	469c      	mov	ip, r3
 80007de:	b2fb      	uxtb	r3, r7
 80007e0:	e781      	b.n	80006e6 <__aeabi_fadd+0xbe>
 80007e2:	21fe      	movs	r1, #254	; 0xfe
 80007e4:	3701      	adds	r7, #1
 80007e6:	4239      	tst	r1, r7
 80007e8:	d165      	bne.n	80008b6 <__aeabi_fadd+0x28e>
 80007ea:	2b00      	cmp	r3, #0
 80007ec:	d17e      	bne.n	80008ec <__aeabi_fadd+0x2c4>
 80007ee:	2800      	cmp	r0, #0
 80007f0:	d100      	bne.n	80007f4 <__aeabi_fadd+0x1cc>
 80007f2:	e0aa      	b.n	800094a <__aeabi_fadd+0x322>
 80007f4:	2d00      	cmp	r5, #0
 80007f6:	d100      	bne.n	80007fa <__aeabi_fadd+0x1d2>
 80007f8:	e775      	b.n	80006e6 <__aeabi_fadd+0xbe>
 80007fa:	002a      	movs	r2, r5
 80007fc:	4452      	add	r2, sl
 80007fe:	2700      	movs	r7, #0
 8000800:	0153      	lsls	r3, r2, #5
 8000802:	d502      	bpl.n	800080a <__aeabi_fadd+0x1e2>
 8000804:	4b55      	ldr	r3, [pc, #340]	; (800095c <__aeabi_fadd+0x334>)
 8000806:	3701      	adds	r7, #1
 8000808:	401a      	ands	r2, r3
 800080a:	0753      	lsls	r3, r2, #29
 800080c:	d000      	beq.n	8000810 <__aeabi_fadd+0x1e8>
 800080e:	e75a      	b.n	80006c6 <__aeabi_fadd+0x9e>
 8000810:	08d2      	lsrs	r2, r2, #3
 8000812:	e7df      	b.n	80007d4 <__aeabi_fadd+0x1ac>
 8000814:	2200      	movs	r2, #0
 8000816:	23ff      	movs	r3, #255	; 0xff
 8000818:	4694      	mov	ip, r2
 800081a:	e764      	b.n	80006e6 <__aeabi_fadd+0xbe>
 800081c:	2900      	cmp	r1, #0
 800081e:	d0e0      	beq.n	80007e2 <__aeabi_fadd+0x1ba>
 8000820:	1bf3      	subs	r3, r6, r7
 8000822:	2f00      	cmp	r7, #0
 8000824:	d03e      	beq.n	80008a4 <__aeabi_fadd+0x27c>
 8000826:	2eff      	cmp	r6, #255	; 0xff
 8000828:	d100      	bne.n	800082c <__aeabi_fadd+0x204>
 800082a:	e777      	b.n	800071c <__aeabi_fadd+0xf4>
 800082c:	2280      	movs	r2, #128	; 0x80
 800082e:	0001      	movs	r1, r0
 8000830:	04d2      	lsls	r2, r2, #19
 8000832:	4311      	orrs	r1, r2
 8000834:	468a      	mov	sl, r1
 8000836:	2201      	movs	r2, #1
 8000838:	2b1b      	cmp	r3, #27
 800083a:	dc08      	bgt.n	800084e <__aeabi_fadd+0x226>
 800083c:	4652      	mov	r2, sl
 800083e:	2120      	movs	r1, #32
 8000840:	4650      	mov	r0, sl
 8000842:	40da      	lsrs	r2, r3
 8000844:	1acb      	subs	r3, r1, r3
 8000846:	4098      	lsls	r0, r3
 8000848:	1e43      	subs	r3, r0, #1
 800084a:	4198      	sbcs	r0, r3
 800084c:	4302      	orrs	r2, r0
 800084e:	0037      	movs	r7, r6
 8000850:	1952      	adds	r2, r2, r5
 8000852:	e784      	b.n	800075e <__aeabi_fadd+0x136>
 8000854:	4a41      	ldr	r2, [pc, #260]	; (800095c <__aeabi_fadd+0x334>)
 8000856:	1a3f      	subs	r7, r7, r0
 8000858:	4032      	ands	r2, r6
 800085a:	e732      	b.n	80006c2 <__aeabi_fadd+0x9a>
 800085c:	4653      	mov	r3, sl
 800085e:	1b5e      	subs	r6, r3, r5
 8000860:	0173      	lsls	r3, r6, #5
 8000862:	d42d      	bmi.n	80008c0 <__aeabi_fadd+0x298>
 8000864:	2e00      	cmp	r6, #0
 8000866:	d000      	beq.n	800086a <__aeabi_fadd+0x242>
 8000868:	e717      	b.n	800069a <__aeabi_fadd+0x72>
 800086a:	2200      	movs	r2, #0
 800086c:	2400      	movs	r4, #0
 800086e:	2300      	movs	r3, #0
 8000870:	4694      	mov	ip, r2
 8000872:	e738      	b.n	80006e6 <__aeabi_fadd+0xbe>
 8000874:	2eff      	cmp	r6, #255	; 0xff
 8000876:	d100      	bne.n	800087a <__aeabi_fadd+0x252>
 8000878:	e74f      	b.n	800071a <__aeabi_fadd+0xf2>
 800087a:	2280      	movs	r2, #128	; 0x80
 800087c:	4650      	mov	r0, sl
 800087e:	04d2      	lsls	r2, r2, #19
 8000880:	4310      	orrs	r0, r2
 8000882:	4682      	mov	sl, r0
 8000884:	2201      	movs	r2, #1
 8000886:	2b1b      	cmp	r3, #27
 8000888:	dc08      	bgt.n	800089c <__aeabi_fadd+0x274>
 800088a:	4652      	mov	r2, sl
 800088c:	2420      	movs	r4, #32
 800088e:	4650      	mov	r0, sl
 8000890:	40da      	lsrs	r2, r3
 8000892:	1ae3      	subs	r3, r4, r3
 8000894:	4098      	lsls	r0, r3
 8000896:	1e43      	subs	r3, r0, #1
 8000898:	4198      	sbcs	r0, r3
 800089a:	4302      	orrs	r2, r0
 800089c:	000c      	movs	r4, r1
 800089e:	0037      	movs	r7, r6
 80008a0:	1aaa      	subs	r2, r5, r2
 80008a2:	e6f5      	b.n	8000690 <__aeabi_fadd+0x68>
 80008a4:	2800      	cmp	r0, #0
 80008a6:	d093      	beq.n	80007d0 <__aeabi_fadd+0x1a8>
 80008a8:	3b01      	subs	r3, #1
 80008aa:	2b00      	cmp	r3, #0
 80008ac:	d04f      	beq.n	800094e <__aeabi_fadd+0x326>
 80008ae:	2eff      	cmp	r6, #255	; 0xff
 80008b0:	d1c1      	bne.n	8000836 <__aeabi_fadd+0x20e>
 80008b2:	4642      	mov	r2, r8
 80008b4:	e733      	b.n	800071e <__aeabi_fadd+0xf6>
 80008b6:	2fff      	cmp	r7, #255	; 0xff
 80008b8:	d0ac      	beq.n	8000814 <__aeabi_fadd+0x1ec>
 80008ba:	4455      	add	r5, sl
 80008bc:	086a      	lsrs	r2, r5, #1
 80008be:	e7a4      	b.n	800080a <__aeabi_fadd+0x1e2>
 80008c0:	4653      	mov	r3, sl
 80008c2:	000c      	movs	r4, r1
 80008c4:	1aee      	subs	r6, r5, r3
 80008c6:	e6e8      	b.n	800069a <__aeabi_fadd+0x72>
 80008c8:	4653      	mov	r3, sl
 80008ca:	2b00      	cmp	r3, #0
 80008cc:	d128      	bne.n	8000920 <__aeabi_fadd+0x2f8>
 80008ce:	2d00      	cmp	r5, #0
 80008d0:	d000      	beq.n	80008d4 <__aeabi_fadd+0x2ac>
 80008d2:	e722      	b.n	800071a <__aeabi_fadd+0xf2>
 80008d4:	2380      	movs	r3, #128	; 0x80
 80008d6:	03db      	lsls	r3, r3, #15
 80008d8:	469c      	mov	ip, r3
 80008da:	2400      	movs	r4, #0
 80008dc:	23ff      	movs	r3, #255	; 0xff
 80008de:	e702      	b.n	80006e6 <__aeabi_fadd+0xbe>
 80008e0:	002a      	movs	r2, r5
 80008e2:	4452      	add	r2, sl
 80008e4:	e73b      	b.n	800075e <__aeabi_fadd+0x136>
 80008e6:	4653      	mov	r3, sl
 80008e8:	1b5a      	subs	r2, r3, r5
 80008ea:	e6d1      	b.n	8000690 <__aeabi_fadd+0x68>
 80008ec:	2800      	cmp	r0, #0
 80008ee:	d100      	bne.n	80008f2 <__aeabi_fadd+0x2ca>
 80008f0:	e714      	b.n	800071c <__aeabi_fadd+0xf4>
 80008f2:	2d00      	cmp	r5, #0
 80008f4:	d100      	bne.n	80008f8 <__aeabi_fadd+0x2d0>
 80008f6:	e712      	b.n	800071e <__aeabi_fadd+0xf6>
 80008f8:	2380      	movs	r3, #128	; 0x80
 80008fa:	03db      	lsls	r3, r3, #15
 80008fc:	421a      	tst	r2, r3
 80008fe:	d100      	bne.n	8000902 <__aeabi_fadd+0x2da>
 8000900:	e70d      	b.n	800071e <__aeabi_fadd+0xf6>
 8000902:	4641      	mov	r1, r8
 8000904:	4219      	tst	r1, r3
 8000906:	d000      	beq.n	800090a <__aeabi_fadd+0x2e2>
 8000908:	e709      	b.n	800071e <__aeabi_fadd+0xf6>
 800090a:	4642      	mov	r2, r8
 800090c:	e707      	b.n	800071e <__aeabi_fadd+0xf6>
 800090e:	000c      	movs	r4, r1
 8000910:	0037      	movs	r7, r6
 8000912:	1aaa      	subs	r2, r5, r2
 8000914:	e6bc      	b.n	8000690 <__aeabi_fadd+0x68>
 8000916:	2d00      	cmp	r5, #0
 8000918:	d013      	beq.n	8000942 <__aeabi_fadd+0x31a>
 800091a:	000c      	movs	r4, r1
 800091c:	46c4      	mov	ip, r8
 800091e:	e6e2      	b.n	80006e6 <__aeabi_fadd+0xbe>
 8000920:	2d00      	cmp	r5, #0
 8000922:	d100      	bne.n	8000926 <__aeabi_fadd+0x2fe>
 8000924:	e6fb      	b.n	800071e <__aeabi_fadd+0xf6>
 8000926:	2380      	movs	r3, #128	; 0x80
 8000928:	03db      	lsls	r3, r3, #15
 800092a:	421a      	tst	r2, r3
 800092c:	d100      	bne.n	8000930 <__aeabi_fadd+0x308>
 800092e:	e6f6      	b.n	800071e <__aeabi_fadd+0xf6>
 8000930:	4640      	mov	r0, r8
 8000932:	4218      	tst	r0, r3
 8000934:	d000      	beq.n	8000938 <__aeabi_fadd+0x310>
 8000936:	e6f2      	b.n	800071e <__aeabi_fadd+0xf6>
 8000938:	000c      	movs	r4, r1
 800093a:	e6ef      	b.n	800071c <__aeabi_fadd+0xf4>
 800093c:	2a00      	cmp	r2, #0
 800093e:	d000      	beq.n	8000942 <__aeabi_fadd+0x31a>
 8000940:	e763      	b.n	800080a <__aeabi_fadd+0x1e2>
 8000942:	2200      	movs	r2, #0
 8000944:	2400      	movs	r4, #0
 8000946:	4694      	mov	ip, r2
 8000948:	e6cd      	b.n	80006e6 <__aeabi_fadd+0xbe>
 800094a:	46c4      	mov	ip, r8
 800094c:	e6cb      	b.n	80006e6 <__aeabi_fadd+0xbe>
 800094e:	002a      	movs	r2, r5
 8000950:	0037      	movs	r7, r6
 8000952:	4452      	add	r2, sl
 8000954:	e703      	b.n	800075e <__aeabi_fadd+0x136>
 8000956:	46c0      	nop			; (mov r8, r8)
 8000958:	7dffffff 	.word	0x7dffffff
 800095c:	fbffffff 	.word	0xfbffffff

08000960 <__aeabi_fdiv>:
 8000960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000962:	464f      	mov	r7, r9
 8000964:	4646      	mov	r6, r8
 8000966:	46d6      	mov	lr, sl
 8000968:	0245      	lsls	r5, r0, #9
 800096a:	b5c0      	push	{r6, r7, lr}
 800096c:	0047      	lsls	r7, r0, #1
 800096e:	1c0c      	adds	r4, r1, #0
 8000970:	0a6d      	lsrs	r5, r5, #9
 8000972:	0e3f      	lsrs	r7, r7, #24
 8000974:	0fc6      	lsrs	r6, r0, #31
 8000976:	2f00      	cmp	r7, #0
 8000978:	d066      	beq.n	8000a48 <__aeabi_fdiv+0xe8>
 800097a:	2fff      	cmp	r7, #255	; 0xff
 800097c:	d06c      	beq.n	8000a58 <__aeabi_fdiv+0xf8>
 800097e:	2300      	movs	r3, #0
 8000980:	00ea      	lsls	r2, r5, #3
 8000982:	2580      	movs	r5, #128	; 0x80
 8000984:	4699      	mov	r9, r3
 8000986:	469a      	mov	sl, r3
 8000988:	04ed      	lsls	r5, r5, #19
 800098a:	4315      	orrs	r5, r2
 800098c:	3f7f      	subs	r7, #127	; 0x7f
 800098e:	0260      	lsls	r0, r4, #9
 8000990:	0061      	lsls	r1, r4, #1
 8000992:	0a43      	lsrs	r3, r0, #9
 8000994:	4698      	mov	r8, r3
 8000996:	0e09      	lsrs	r1, r1, #24
 8000998:	0fe4      	lsrs	r4, r4, #31
 800099a:	2900      	cmp	r1, #0
 800099c:	d048      	beq.n	8000a30 <__aeabi_fdiv+0xd0>
 800099e:	29ff      	cmp	r1, #255	; 0xff
 80009a0:	d010      	beq.n	80009c4 <__aeabi_fdiv+0x64>
 80009a2:	2280      	movs	r2, #128	; 0x80
 80009a4:	00d8      	lsls	r0, r3, #3
 80009a6:	04d2      	lsls	r2, r2, #19
 80009a8:	4302      	orrs	r2, r0
 80009aa:	4690      	mov	r8, r2
 80009ac:	2000      	movs	r0, #0
 80009ae:	397f      	subs	r1, #127	; 0x7f
 80009b0:	464a      	mov	r2, r9
 80009b2:	0033      	movs	r3, r6
 80009b4:	1a7f      	subs	r7, r7, r1
 80009b6:	4302      	orrs	r2, r0
 80009b8:	496c      	ldr	r1, [pc, #432]	; (8000b6c <__aeabi_fdiv+0x20c>)
 80009ba:	0092      	lsls	r2, r2, #2
 80009bc:	588a      	ldr	r2, [r1, r2]
 80009be:	4063      	eors	r3, r4
 80009c0:	b2db      	uxtb	r3, r3
 80009c2:	4697      	mov	pc, r2
 80009c4:	2b00      	cmp	r3, #0
 80009c6:	d16d      	bne.n	8000aa4 <__aeabi_fdiv+0x144>
 80009c8:	2002      	movs	r0, #2
 80009ca:	3fff      	subs	r7, #255	; 0xff
 80009cc:	e033      	b.n	8000a36 <__aeabi_fdiv+0xd6>
 80009ce:	2300      	movs	r3, #0
 80009d0:	4698      	mov	r8, r3
 80009d2:	0026      	movs	r6, r4
 80009d4:	4645      	mov	r5, r8
 80009d6:	4682      	mov	sl, r0
 80009d8:	4653      	mov	r3, sl
 80009da:	2b02      	cmp	r3, #2
 80009dc:	d100      	bne.n	80009e0 <__aeabi_fdiv+0x80>
 80009de:	e07f      	b.n	8000ae0 <__aeabi_fdiv+0x180>
 80009e0:	2b03      	cmp	r3, #3
 80009e2:	d100      	bne.n	80009e6 <__aeabi_fdiv+0x86>
 80009e4:	e094      	b.n	8000b10 <__aeabi_fdiv+0x1b0>
 80009e6:	2b01      	cmp	r3, #1
 80009e8:	d017      	beq.n	8000a1a <__aeabi_fdiv+0xba>
 80009ea:	0038      	movs	r0, r7
 80009ec:	307f      	adds	r0, #127	; 0x7f
 80009ee:	2800      	cmp	r0, #0
 80009f0:	dd5f      	ble.n	8000ab2 <__aeabi_fdiv+0x152>
 80009f2:	076b      	lsls	r3, r5, #29
 80009f4:	d004      	beq.n	8000a00 <__aeabi_fdiv+0xa0>
 80009f6:	230f      	movs	r3, #15
 80009f8:	402b      	ands	r3, r5
 80009fa:	2b04      	cmp	r3, #4
 80009fc:	d000      	beq.n	8000a00 <__aeabi_fdiv+0xa0>
 80009fe:	3504      	adds	r5, #4
 8000a00:	012b      	lsls	r3, r5, #4
 8000a02:	d503      	bpl.n	8000a0c <__aeabi_fdiv+0xac>
 8000a04:	0038      	movs	r0, r7
 8000a06:	4b5a      	ldr	r3, [pc, #360]	; (8000b70 <__aeabi_fdiv+0x210>)
 8000a08:	3080      	adds	r0, #128	; 0x80
 8000a0a:	401d      	ands	r5, r3
 8000a0c:	28fe      	cmp	r0, #254	; 0xfe
 8000a0e:	dc67      	bgt.n	8000ae0 <__aeabi_fdiv+0x180>
 8000a10:	01ad      	lsls	r5, r5, #6
 8000a12:	0a6d      	lsrs	r5, r5, #9
 8000a14:	b2c0      	uxtb	r0, r0
 8000a16:	e002      	b.n	8000a1e <__aeabi_fdiv+0xbe>
 8000a18:	001e      	movs	r6, r3
 8000a1a:	2000      	movs	r0, #0
 8000a1c:	2500      	movs	r5, #0
 8000a1e:	05c0      	lsls	r0, r0, #23
 8000a20:	4328      	orrs	r0, r5
 8000a22:	07f6      	lsls	r6, r6, #31
 8000a24:	4330      	orrs	r0, r6
 8000a26:	bce0      	pop	{r5, r6, r7}
 8000a28:	46ba      	mov	sl, r7
 8000a2a:	46b1      	mov	r9, r6
 8000a2c:	46a8      	mov	r8, r5
 8000a2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a30:	2b00      	cmp	r3, #0
 8000a32:	d12b      	bne.n	8000a8c <__aeabi_fdiv+0x12c>
 8000a34:	2001      	movs	r0, #1
 8000a36:	464a      	mov	r2, r9
 8000a38:	0033      	movs	r3, r6
 8000a3a:	494e      	ldr	r1, [pc, #312]	; (8000b74 <__aeabi_fdiv+0x214>)
 8000a3c:	4302      	orrs	r2, r0
 8000a3e:	0092      	lsls	r2, r2, #2
 8000a40:	588a      	ldr	r2, [r1, r2]
 8000a42:	4063      	eors	r3, r4
 8000a44:	b2db      	uxtb	r3, r3
 8000a46:	4697      	mov	pc, r2
 8000a48:	2d00      	cmp	r5, #0
 8000a4a:	d113      	bne.n	8000a74 <__aeabi_fdiv+0x114>
 8000a4c:	2304      	movs	r3, #4
 8000a4e:	4699      	mov	r9, r3
 8000a50:	3b03      	subs	r3, #3
 8000a52:	2700      	movs	r7, #0
 8000a54:	469a      	mov	sl, r3
 8000a56:	e79a      	b.n	800098e <__aeabi_fdiv+0x2e>
 8000a58:	2d00      	cmp	r5, #0
 8000a5a:	d105      	bne.n	8000a68 <__aeabi_fdiv+0x108>
 8000a5c:	2308      	movs	r3, #8
 8000a5e:	4699      	mov	r9, r3
 8000a60:	3b06      	subs	r3, #6
 8000a62:	27ff      	movs	r7, #255	; 0xff
 8000a64:	469a      	mov	sl, r3
 8000a66:	e792      	b.n	800098e <__aeabi_fdiv+0x2e>
 8000a68:	230c      	movs	r3, #12
 8000a6a:	4699      	mov	r9, r3
 8000a6c:	3b09      	subs	r3, #9
 8000a6e:	27ff      	movs	r7, #255	; 0xff
 8000a70:	469a      	mov	sl, r3
 8000a72:	e78c      	b.n	800098e <__aeabi_fdiv+0x2e>
 8000a74:	0028      	movs	r0, r5
 8000a76:	f002 fbbf 	bl	80031f8 <__clzsi2>
 8000a7a:	2776      	movs	r7, #118	; 0x76
 8000a7c:	1f43      	subs	r3, r0, #5
 8000a7e:	409d      	lsls	r5, r3
 8000a80:	2300      	movs	r3, #0
 8000a82:	427f      	negs	r7, r7
 8000a84:	4699      	mov	r9, r3
 8000a86:	469a      	mov	sl, r3
 8000a88:	1a3f      	subs	r7, r7, r0
 8000a8a:	e780      	b.n	800098e <__aeabi_fdiv+0x2e>
 8000a8c:	0018      	movs	r0, r3
 8000a8e:	f002 fbb3 	bl	80031f8 <__clzsi2>
 8000a92:	4642      	mov	r2, r8
 8000a94:	1f43      	subs	r3, r0, #5
 8000a96:	2176      	movs	r1, #118	; 0x76
 8000a98:	409a      	lsls	r2, r3
 8000a9a:	4249      	negs	r1, r1
 8000a9c:	1a09      	subs	r1, r1, r0
 8000a9e:	4690      	mov	r8, r2
 8000aa0:	2000      	movs	r0, #0
 8000aa2:	e785      	b.n	80009b0 <__aeabi_fdiv+0x50>
 8000aa4:	21ff      	movs	r1, #255	; 0xff
 8000aa6:	2003      	movs	r0, #3
 8000aa8:	e782      	b.n	80009b0 <__aeabi_fdiv+0x50>
 8000aaa:	001e      	movs	r6, r3
 8000aac:	20ff      	movs	r0, #255	; 0xff
 8000aae:	2500      	movs	r5, #0
 8000ab0:	e7b5      	b.n	8000a1e <__aeabi_fdiv+0xbe>
 8000ab2:	2301      	movs	r3, #1
 8000ab4:	1a1b      	subs	r3, r3, r0
 8000ab6:	2b1b      	cmp	r3, #27
 8000ab8:	dcaf      	bgt.n	8000a1a <__aeabi_fdiv+0xba>
 8000aba:	379e      	adds	r7, #158	; 0x9e
 8000abc:	0029      	movs	r1, r5
 8000abe:	40bd      	lsls	r5, r7
 8000ac0:	40d9      	lsrs	r1, r3
 8000ac2:	1e6a      	subs	r2, r5, #1
 8000ac4:	4195      	sbcs	r5, r2
 8000ac6:	430d      	orrs	r5, r1
 8000ac8:	076b      	lsls	r3, r5, #29
 8000aca:	d004      	beq.n	8000ad6 <__aeabi_fdiv+0x176>
 8000acc:	230f      	movs	r3, #15
 8000ace:	402b      	ands	r3, r5
 8000ad0:	2b04      	cmp	r3, #4
 8000ad2:	d000      	beq.n	8000ad6 <__aeabi_fdiv+0x176>
 8000ad4:	3504      	adds	r5, #4
 8000ad6:	016b      	lsls	r3, r5, #5
 8000ad8:	d544      	bpl.n	8000b64 <__aeabi_fdiv+0x204>
 8000ada:	2001      	movs	r0, #1
 8000adc:	2500      	movs	r5, #0
 8000ade:	e79e      	b.n	8000a1e <__aeabi_fdiv+0xbe>
 8000ae0:	20ff      	movs	r0, #255	; 0xff
 8000ae2:	2500      	movs	r5, #0
 8000ae4:	e79b      	b.n	8000a1e <__aeabi_fdiv+0xbe>
 8000ae6:	2580      	movs	r5, #128	; 0x80
 8000ae8:	2600      	movs	r6, #0
 8000aea:	20ff      	movs	r0, #255	; 0xff
 8000aec:	03ed      	lsls	r5, r5, #15
 8000aee:	e796      	b.n	8000a1e <__aeabi_fdiv+0xbe>
 8000af0:	2300      	movs	r3, #0
 8000af2:	4698      	mov	r8, r3
 8000af4:	2080      	movs	r0, #128	; 0x80
 8000af6:	03c0      	lsls	r0, r0, #15
 8000af8:	4205      	tst	r5, r0
 8000afa:	d009      	beq.n	8000b10 <__aeabi_fdiv+0x1b0>
 8000afc:	4643      	mov	r3, r8
 8000afe:	4203      	tst	r3, r0
 8000b00:	d106      	bne.n	8000b10 <__aeabi_fdiv+0x1b0>
 8000b02:	4645      	mov	r5, r8
 8000b04:	4305      	orrs	r5, r0
 8000b06:	026d      	lsls	r5, r5, #9
 8000b08:	0026      	movs	r6, r4
 8000b0a:	20ff      	movs	r0, #255	; 0xff
 8000b0c:	0a6d      	lsrs	r5, r5, #9
 8000b0e:	e786      	b.n	8000a1e <__aeabi_fdiv+0xbe>
 8000b10:	2080      	movs	r0, #128	; 0x80
 8000b12:	03c0      	lsls	r0, r0, #15
 8000b14:	4305      	orrs	r5, r0
 8000b16:	026d      	lsls	r5, r5, #9
 8000b18:	20ff      	movs	r0, #255	; 0xff
 8000b1a:	0a6d      	lsrs	r5, r5, #9
 8000b1c:	e77f      	b.n	8000a1e <__aeabi_fdiv+0xbe>
 8000b1e:	4641      	mov	r1, r8
 8000b20:	016a      	lsls	r2, r5, #5
 8000b22:	0148      	lsls	r0, r1, #5
 8000b24:	4282      	cmp	r2, r0
 8000b26:	d219      	bcs.n	8000b5c <__aeabi_fdiv+0x1fc>
 8000b28:	211b      	movs	r1, #27
 8000b2a:	2500      	movs	r5, #0
 8000b2c:	3f01      	subs	r7, #1
 8000b2e:	2601      	movs	r6, #1
 8000b30:	0014      	movs	r4, r2
 8000b32:	006d      	lsls	r5, r5, #1
 8000b34:	0052      	lsls	r2, r2, #1
 8000b36:	2c00      	cmp	r4, #0
 8000b38:	db01      	blt.n	8000b3e <__aeabi_fdiv+0x1de>
 8000b3a:	4290      	cmp	r0, r2
 8000b3c:	d801      	bhi.n	8000b42 <__aeabi_fdiv+0x1e2>
 8000b3e:	1a12      	subs	r2, r2, r0
 8000b40:	4335      	orrs	r5, r6
 8000b42:	3901      	subs	r1, #1
 8000b44:	2900      	cmp	r1, #0
 8000b46:	d1f3      	bne.n	8000b30 <__aeabi_fdiv+0x1d0>
 8000b48:	1e50      	subs	r0, r2, #1
 8000b4a:	4182      	sbcs	r2, r0
 8000b4c:	0038      	movs	r0, r7
 8000b4e:	307f      	adds	r0, #127	; 0x7f
 8000b50:	001e      	movs	r6, r3
 8000b52:	4315      	orrs	r5, r2
 8000b54:	2800      	cmp	r0, #0
 8000b56:	dd00      	ble.n	8000b5a <__aeabi_fdiv+0x1fa>
 8000b58:	e74b      	b.n	80009f2 <__aeabi_fdiv+0x92>
 8000b5a:	e7aa      	b.n	8000ab2 <__aeabi_fdiv+0x152>
 8000b5c:	211a      	movs	r1, #26
 8000b5e:	2501      	movs	r5, #1
 8000b60:	1a12      	subs	r2, r2, r0
 8000b62:	e7e4      	b.n	8000b2e <__aeabi_fdiv+0x1ce>
 8000b64:	01ad      	lsls	r5, r5, #6
 8000b66:	2000      	movs	r0, #0
 8000b68:	0a6d      	lsrs	r5, r5, #9
 8000b6a:	e758      	b.n	8000a1e <__aeabi_fdiv+0xbe>
 8000b6c:	0800fa48 	.word	0x0800fa48
 8000b70:	f7ffffff 	.word	0xf7ffffff
 8000b74:	0800fa88 	.word	0x0800fa88

08000b78 <__eqsf2>:
 8000b78:	b570      	push	{r4, r5, r6, lr}
 8000b7a:	0042      	lsls	r2, r0, #1
 8000b7c:	024e      	lsls	r6, r1, #9
 8000b7e:	004c      	lsls	r4, r1, #1
 8000b80:	0245      	lsls	r5, r0, #9
 8000b82:	0a6d      	lsrs	r5, r5, #9
 8000b84:	0e12      	lsrs	r2, r2, #24
 8000b86:	0fc3      	lsrs	r3, r0, #31
 8000b88:	0a76      	lsrs	r6, r6, #9
 8000b8a:	0e24      	lsrs	r4, r4, #24
 8000b8c:	0fc9      	lsrs	r1, r1, #31
 8000b8e:	2aff      	cmp	r2, #255	; 0xff
 8000b90:	d00f      	beq.n	8000bb2 <__eqsf2+0x3a>
 8000b92:	2cff      	cmp	r4, #255	; 0xff
 8000b94:	d011      	beq.n	8000bba <__eqsf2+0x42>
 8000b96:	2001      	movs	r0, #1
 8000b98:	42a2      	cmp	r2, r4
 8000b9a:	d000      	beq.n	8000b9e <__eqsf2+0x26>
 8000b9c:	bd70      	pop	{r4, r5, r6, pc}
 8000b9e:	42b5      	cmp	r5, r6
 8000ba0:	d1fc      	bne.n	8000b9c <__eqsf2+0x24>
 8000ba2:	428b      	cmp	r3, r1
 8000ba4:	d00d      	beq.n	8000bc2 <__eqsf2+0x4a>
 8000ba6:	2a00      	cmp	r2, #0
 8000ba8:	d1f8      	bne.n	8000b9c <__eqsf2+0x24>
 8000baa:	0028      	movs	r0, r5
 8000bac:	1e45      	subs	r5, r0, #1
 8000bae:	41a8      	sbcs	r0, r5
 8000bb0:	e7f4      	b.n	8000b9c <__eqsf2+0x24>
 8000bb2:	2001      	movs	r0, #1
 8000bb4:	2d00      	cmp	r5, #0
 8000bb6:	d1f1      	bne.n	8000b9c <__eqsf2+0x24>
 8000bb8:	e7eb      	b.n	8000b92 <__eqsf2+0x1a>
 8000bba:	2001      	movs	r0, #1
 8000bbc:	2e00      	cmp	r6, #0
 8000bbe:	d1ed      	bne.n	8000b9c <__eqsf2+0x24>
 8000bc0:	e7e9      	b.n	8000b96 <__eqsf2+0x1e>
 8000bc2:	2000      	movs	r0, #0
 8000bc4:	e7ea      	b.n	8000b9c <__eqsf2+0x24>
 8000bc6:	46c0      	nop			; (mov r8, r8)

08000bc8 <__gesf2>:
 8000bc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bca:	0042      	lsls	r2, r0, #1
 8000bcc:	0246      	lsls	r6, r0, #9
 8000bce:	024d      	lsls	r5, r1, #9
 8000bd0:	004c      	lsls	r4, r1, #1
 8000bd2:	0fc3      	lsrs	r3, r0, #31
 8000bd4:	0a76      	lsrs	r6, r6, #9
 8000bd6:	0e12      	lsrs	r2, r2, #24
 8000bd8:	0a6d      	lsrs	r5, r5, #9
 8000bda:	0e24      	lsrs	r4, r4, #24
 8000bdc:	0fc8      	lsrs	r0, r1, #31
 8000bde:	2aff      	cmp	r2, #255	; 0xff
 8000be0:	d01f      	beq.n	8000c22 <__gesf2+0x5a>
 8000be2:	2cff      	cmp	r4, #255	; 0xff
 8000be4:	d010      	beq.n	8000c08 <__gesf2+0x40>
 8000be6:	2a00      	cmp	r2, #0
 8000be8:	d11f      	bne.n	8000c2a <__gesf2+0x62>
 8000bea:	4271      	negs	r1, r6
 8000bec:	4171      	adcs	r1, r6
 8000bee:	2c00      	cmp	r4, #0
 8000bf0:	d101      	bne.n	8000bf6 <__gesf2+0x2e>
 8000bf2:	2d00      	cmp	r5, #0
 8000bf4:	d01e      	beq.n	8000c34 <__gesf2+0x6c>
 8000bf6:	2900      	cmp	r1, #0
 8000bf8:	d10e      	bne.n	8000c18 <__gesf2+0x50>
 8000bfa:	4283      	cmp	r3, r0
 8000bfc:	d01e      	beq.n	8000c3c <__gesf2+0x74>
 8000bfe:	2102      	movs	r1, #2
 8000c00:	1e58      	subs	r0, r3, #1
 8000c02:	4008      	ands	r0, r1
 8000c04:	3801      	subs	r0, #1
 8000c06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c08:	2d00      	cmp	r5, #0
 8000c0a:	d126      	bne.n	8000c5a <__gesf2+0x92>
 8000c0c:	2a00      	cmp	r2, #0
 8000c0e:	d1f4      	bne.n	8000bfa <__gesf2+0x32>
 8000c10:	4271      	negs	r1, r6
 8000c12:	4171      	adcs	r1, r6
 8000c14:	2900      	cmp	r1, #0
 8000c16:	d0f0      	beq.n	8000bfa <__gesf2+0x32>
 8000c18:	2800      	cmp	r0, #0
 8000c1a:	d1f4      	bne.n	8000c06 <__gesf2+0x3e>
 8000c1c:	2001      	movs	r0, #1
 8000c1e:	4240      	negs	r0, r0
 8000c20:	e7f1      	b.n	8000c06 <__gesf2+0x3e>
 8000c22:	2e00      	cmp	r6, #0
 8000c24:	d119      	bne.n	8000c5a <__gesf2+0x92>
 8000c26:	2cff      	cmp	r4, #255	; 0xff
 8000c28:	d0ee      	beq.n	8000c08 <__gesf2+0x40>
 8000c2a:	2c00      	cmp	r4, #0
 8000c2c:	d1e5      	bne.n	8000bfa <__gesf2+0x32>
 8000c2e:	2d00      	cmp	r5, #0
 8000c30:	d1e3      	bne.n	8000bfa <__gesf2+0x32>
 8000c32:	e7e4      	b.n	8000bfe <__gesf2+0x36>
 8000c34:	2000      	movs	r0, #0
 8000c36:	2e00      	cmp	r6, #0
 8000c38:	d0e5      	beq.n	8000c06 <__gesf2+0x3e>
 8000c3a:	e7e0      	b.n	8000bfe <__gesf2+0x36>
 8000c3c:	42a2      	cmp	r2, r4
 8000c3e:	dc05      	bgt.n	8000c4c <__gesf2+0x84>
 8000c40:	dbea      	blt.n	8000c18 <__gesf2+0x50>
 8000c42:	42ae      	cmp	r6, r5
 8000c44:	d802      	bhi.n	8000c4c <__gesf2+0x84>
 8000c46:	d3e7      	bcc.n	8000c18 <__gesf2+0x50>
 8000c48:	2000      	movs	r0, #0
 8000c4a:	e7dc      	b.n	8000c06 <__gesf2+0x3e>
 8000c4c:	4241      	negs	r1, r0
 8000c4e:	4141      	adcs	r1, r0
 8000c50:	4248      	negs	r0, r1
 8000c52:	2102      	movs	r1, #2
 8000c54:	4008      	ands	r0, r1
 8000c56:	3801      	subs	r0, #1
 8000c58:	e7d5      	b.n	8000c06 <__gesf2+0x3e>
 8000c5a:	2002      	movs	r0, #2
 8000c5c:	4240      	negs	r0, r0
 8000c5e:	e7d2      	b.n	8000c06 <__gesf2+0x3e>

08000c60 <__lesf2>:
 8000c60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c62:	0042      	lsls	r2, r0, #1
 8000c64:	0246      	lsls	r6, r0, #9
 8000c66:	024d      	lsls	r5, r1, #9
 8000c68:	004c      	lsls	r4, r1, #1
 8000c6a:	0fc3      	lsrs	r3, r0, #31
 8000c6c:	0a76      	lsrs	r6, r6, #9
 8000c6e:	0e12      	lsrs	r2, r2, #24
 8000c70:	0a6d      	lsrs	r5, r5, #9
 8000c72:	0e24      	lsrs	r4, r4, #24
 8000c74:	0fc8      	lsrs	r0, r1, #31
 8000c76:	2aff      	cmp	r2, #255	; 0xff
 8000c78:	d00d      	beq.n	8000c96 <__lesf2+0x36>
 8000c7a:	2cff      	cmp	r4, #255	; 0xff
 8000c7c:	d00f      	beq.n	8000c9e <__lesf2+0x3e>
 8000c7e:	2a00      	cmp	r2, #0
 8000c80:	d123      	bne.n	8000cca <__lesf2+0x6a>
 8000c82:	4271      	negs	r1, r6
 8000c84:	4171      	adcs	r1, r6
 8000c86:	2c00      	cmp	r4, #0
 8000c88:	d10f      	bne.n	8000caa <__lesf2+0x4a>
 8000c8a:	2d00      	cmp	r5, #0
 8000c8c:	d10d      	bne.n	8000caa <__lesf2+0x4a>
 8000c8e:	2000      	movs	r0, #0
 8000c90:	2e00      	cmp	r6, #0
 8000c92:	d014      	beq.n	8000cbe <__lesf2+0x5e>
 8000c94:	e00d      	b.n	8000cb2 <__lesf2+0x52>
 8000c96:	2e00      	cmp	r6, #0
 8000c98:	d110      	bne.n	8000cbc <__lesf2+0x5c>
 8000c9a:	2cff      	cmp	r4, #255	; 0xff
 8000c9c:	d115      	bne.n	8000cca <__lesf2+0x6a>
 8000c9e:	2d00      	cmp	r5, #0
 8000ca0:	d10c      	bne.n	8000cbc <__lesf2+0x5c>
 8000ca2:	2a00      	cmp	r2, #0
 8000ca4:	d103      	bne.n	8000cae <__lesf2+0x4e>
 8000ca6:	4271      	negs	r1, r6
 8000ca8:	4171      	adcs	r1, r6
 8000caa:	2900      	cmp	r1, #0
 8000cac:	d108      	bne.n	8000cc0 <__lesf2+0x60>
 8000cae:	4283      	cmp	r3, r0
 8000cb0:	d010      	beq.n	8000cd4 <__lesf2+0x74>
 8000cb2:	2102      	movs	r1, #2
 8000cb4:	1e58      	subs	r0, r3, #1
 8000cb6:	4008      	ands	r0, r1
 8000cb8:	3801      	subs	r0, #1
 8000cba:	e000      	b.n	8000cbe <__lesf2+0x5e>
 8000cbc:	2002      	movs	r0, #2
 8000cbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cc0:	2800      	cmp	r0, #0
 8000cc2:	d1fc      	bne.n	8000cbe <__lesf2+0x5e>
 8000cc4:	2001      	movs	r0, #1
 8000cc6:	4240      	negs	r0, r0
 8000cc8:	e7f9      	b.n	8000cbe <__lesf2+0x5e>
 8000cca:	2c00      	cmp	r4, #0
 8000ccc:	d1ef      	bne.n	8000cae <__lesf2+0x4e>
 8000cce:	2d00      	cmp	r5, #0
 8000cd0:	d1ed      	bne.n	8000cae <__lesf2+0x4e>
 8000cd2:	e7ee      	b.n	8000cb2 <__lesf2+0x52>
 8000cd4:	42a2      	cmp	r2, r4
 8000cd6:	dc05      	bgt.n	8000ce4 <__lesf2+0x84>
 8000cd8:	dbf2      	blt.n	8000cc0 <__lesf2+0x60>
 8000cda:	42ae      	cmp	r6, r5
 8000cdc:	d802      	bhi.n	8000ce4 <__lesf2+0x84>
 8000cde:	d3ef      	bcc.n	8000cc0 <__lesf2+0x60>
 8000ce0:	2000      	movs	r0, #0
 8000ce2:	e7ec      	b.n	8000cbe <__lesf2+0x5e>
 8000ce4:	4241      	negs	r1, r0
 8000ce6:	4141      	adcs	r1, r0
 8000ce8:	4248      	negs	r0, r1
 8000cea:	2102      	movs	r1, #2
 8000cec:	4008      	ands	r0, r1
 8000cee:	3801      	subs	r0, #1
 8000cf0:	e7e5      	b.n	8000cbe <__lesf2+0x5e>
 8000cf2:	46c0      	nop			; (mov r8, r8)

08000cf4 <__aeabi_fmul>:
 8000cf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cf6:	4657      	mov	r7, sl
 8000cf8:	464e      	mov	r6, r9
 8000cfa:	4645      	mov	r5, r8
 8000cfc:	46de      	mov	lr, fp
 8000cfe:	0244      	lsls	r4, r0, #9
 8000d00:	b5e0      	push	{r5, r6, r7, lr}
 8000d02:	0045      	lsls	r5, r0, #1
 8000d04:	1c0f      	adds	r7, r1, #0
 8000d06:	0a64      	lsrs	r4, r4, #9
 8000d08:	0e2d      	lsrs	r5, r5, #24
 8000d0a:	0fc6      	lsrs	r6, r0, #31
 8000d0c:	2d00      	cmp	r5, #0
 8000d0e:	d047      	beq.n	8000da0 <__aeabi_fmul+0xac>
 8000d10:	2dff      	cmp	r5, #255	; 0xff
 8000d12:	d04d      	beq.n	8000db0 <__aeabi_fmul+0xbc>
 8000d14:	2300      	movs	r3, #0
 8000d16:	2080      	movs	r0, #128	; 0x80
 8000d18:	469a      	mov	sl, r3
 8000d1a:	469b      	mov	fp, r3
 8000d1c:	00e4      	lsls	r4, r4, #3
 8000d1e:	04c0      	lsls	r0, r0, #19
 8000d20:	4304      	orrs	r4, r0
 8000d22:	3d7f      	subs	r5, #127	; 0x7f
 8000d24:	0278      	lsls	r0, r7, #9
 8000d26:	0a43      	lsrs	r3, r0, #9
 8000d28:	4699      	mov	r9, r3
 8000d2a:	007a      	lsls	r2, r7, #1
 8000d2c:	0ffb      	lsrs	r3, r7, #31
 8000d2e:	4698      	mov	r8, r3
 8000d30:	0e12      	lsrs	r2, r2, #24
 8000d32:	464b      	mov	r3, r9
 8000d34:	d044      	beq.n	8000dc0 <__aeabi_fmul+0xcc>
 8000d36:	2aff      	cmp	r2, #255	; 0xff
 8000d38:	d011      	beq.n	8000d5e <__aeabi_fmul+0x6a>
 8000d3a:	00d8      	lsls	r0, r3, #3
 8000d3c:	2380      	movs	r3, #128	; 0x80
 8000d3e:	04db      	lsls	r3, r3, #19
 8000d40:	4303      	orrs	r3, r0
 8000d42:	4699      	mov	r9, r3
 8000d44:	2000      	movs	r0, #0
 8000d46:	3a7f      	subs	r2, #127	; 0x7f
 8000d48:	18ad      	adds	r5, r5, r2
 8000d4a:	4647      	mov	r7, r8
 8000d4c:	4653      	mov	r3, sl
 8000d4e:	4077      	eors	r7, r6
 8000d50:	1c69      	adds	r1, r5, #1
 8000d52:	2b0f      	cmp	r3, #15
 8000d54:	d83f      	bhi.n	8000dd6 <__aeabi_fmul+0xe2>
 8000d56:	4a72      	ldr	r2, [pc, #456]	; (8000f20 <__aeabi_fmul+0x22c>)
 8000d58:	009b      	lsls	r3, r3, #2
 8000d5a:	58d3      	ldr	r3, [r2, r3]
 8000d5c:	469f      	mov	pc, r3
 8000d5e:	35ff      	adds	r5, #255	; 0xff
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	d000      	beq.n	8000d66 <__aeabi_fmul+0x72>
 8000d64:	e079      	b.n	8000e5a <__aeabi_fmul+0x166>
 8000d66:	4652      	mov	r2, sl
 8000d68:	2302      	movs	r3, #2
 8000d6a:	431a      	orrs	r2, r3
 8000d6c:	4692      	mov	sl, r2
 8000d6e:	2002      	movs	r0, #2
 8000d70:	e7eb      	b.n	8000d4a <__aeabi_fmul+0x56>
 8000d72:	4647      	mov	r7, r8
 8000d74:	464c      	mov	r4, r9
 8000d76:	4683      	mov	fp, r0
 8000d78:	465b      	mov	r3, fp
 8000d7a:	2b02      	cmp	r3, #2
 8000d7c:	d028      	beq.n	8000dd0 <__aeabi_fmul+0xdc>
 8000d7e:	2b03      	cmp	r3, #3
 8000d80:	d100      	bne.n	8000d84 <__aeabi_fmul+0x90>
 8000d82:	e0c6      	b.n	8000f12 <__aeabi_fmul+0x21e>
 8000d84:	2b01      	cmp	r3, #1
 8000d86:	d14f      	bne.n	8000e28 <__aeabi_fmul+0x134>
 8000d88:	2000      	movs	r0, #0
 8000d8a:	2400      	movs	r4, #0
 8000d8c:	05c0      	lsls	r0, r0, #23
 8000d8e:	07ff      	lsls	r7, r7, #31
 8000d90:	4320      	orrs	r0, r4
 8000d92:	4338      	orrs	r0, r7
 8000d94:	bcf0      	pop	{r4, r5, r6, r7}
 8000d96:	46bb      	mov	fp, r7
 8000d98:	46b2      	mov	sl, r6
 8000d9a:	46a9      	mov	r9, r5
 8000d9c:	46a0      	mov	r8, r4
 8000d9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000da0:	2c00      	cmp	r4, #0
 8000da2:	d171      	bne.n	8000e88 <__aeabi_fmul+0x194>
 8000da4:	2304      	movs	r3, #4
 8000da6:	469a      	mov	sl, r3
 8000da8:	3b03      	subs	r3, #3
 8000daa:	2500      	movs	r5, #0
 8000dac:	469b      	mov	fp, r3
 8000dae:	e7b9      	b.n	8000d24 <__aeabi_fmul+0x30>
 8000db0:	2c00      	cmp	r4, #0
 8000db2:	d163      	bne.n	8000e7c <__aeabi_fmul+0x188>
 8000db4:	2308      	movs	r3, #8
 8000db6:	469a      	mov	sl, r3
 8000db8:	3b06      	subs	r3, #6
 8000dba:	25ff      	movs	r5, #255	; 0xff
 8000dbc:	469b      	mov	fp, r3
 8000dbe:	e7b1      	b.n	8000d24 <__aeabi_fmul+0x30>
 8000dc0:	2b00      	cmp	r3, #0
 8000dc2:	d150      	bne.n	8000e66 <__aeabi_fmul+0x172>
 8000dc4:	4652      	mov	r2, sl
 8000dc6:	3301      	adds	r3, #1
 8000dc8:	431a      	orrs	r2, r3
 8000dca:	4692      	mov	sl, r2
 8000dcc:	2001      	movs	r0, #1
 8000dce:	e7bc      	b.n	8000d4a <__aeabi_fmul+0x56>
 8000dd0:	20ff      	movs	r0, #255	; 0xff
 8000dd2:	2400      	movs	r4, #0
 8000dd4:	e7da      	b.n	8000d8c <__aeabi_fmul+0x98>
 8000dd6:	4648      	mov	r0, r9
 8000dd8:	0c26      	lsrs	r6, r4, #16
 8000dda:	0424      	lsls	r4, r4, #16
 8000ddc:	0c22      	lsrs	r2, r4, #16
 8000dde:	0404      	lsls	r4, r0, #16
 8000de0:	0c24      	lsrs	r4, r4, #16
 8000de2:	464b      	mov	r3, r9
 8000de4:	0020      	movs	r0, r4
 8000de6:	0c1b      	lsrs	r3, r3, #16
 8000de8:	4350      	muls	r0, r2
 8000dea:	4374      	muls	r4, r6
 8000dec:	435a      	muls	r2, r3
 8000dee:	435e      	muls	r6, r3
 8000df0:	1912      	adds	r2, r2, r4
 8000df2:	0c03      	lsrs	r3, r0, #16
 8000df4:	189b      	adds	r3, r3, r2
 8000df6:	429c      	cmp	r4, r3
 8000df8:	d903      	bls.n	8000e02 <__aeabi_fmul+0x10e>
 8000dfa:	2280      	movs	r2, #128	; 0x80
 8000dfc:	0252      	lsls	r2, r2, #9
 8000dfe:	4694      	mov	ip, r2
 8000e00:	4466      	add	r6, ip
 8000e02:	0400      	lsls	r0, r0, #16
 8000e04:	041a      	lsls	r2, r3, #16
 8000e06:	0c00      	lsrs	r0, r0, #16
 8000e08:	1812      	adds	r2, r2, r0
 8000e0a:	0194      	lsls	r4, r2, #6
 8000e0c:	1e60      	subs	r0, r4, #1
 8000e0e:	4184      	sbcs	r4, r0
 8000e10:	0c1b      	lsrs	r3, r3, #16
 8000e12:	0e92      	lsrs	r2, r2, #26
 8000e14:	199b      	adds	r3, r3, r6
 8000e16:	4314      	orrs	r4, r2
 8000e18:	019b      	lsls	r3, r3, #6
 8000e1a:	431c      	orrs	r4, r3
 8000e1c:	011b      	lsls	r3, r3, #4
 8000e1e:	d572      	bpl.n	8000f06 <__aeabi_fmul+0x212>
 8000e20:	2001      	movs	r0, #1
 8000e22:	0863      	lsrs	r3, r4, #1
 8000e24:	4004      	ands	r4, r0
 8000e26:	431c      	orrs	r4, r3
 8000e28:	0008      	movs	r0, r1
 8000e2a:	307f      	adds	r0, #127	; 0x7f
 8000e2c:	2800      	cmp	r0, #0
 8000e2e:	dd3c      	ble.n	8000eaa <__aeabi_fmul+0x1b6>
 8000e30:	0763      	lsls	r3, r4, #29
 8000e32:	d004      	beq.n	8000e3e <__aeabi_fmul+0x14a>
 8000e34:	230f      	movs	r3, #15
 8000e36:	4023      	ands	r3, r4
 8000e38:	2b04      	cmp	r3, #4
 8000e3a:	d000      	beq.n	8000e3e <__aeabi_fmul+0x14a>
 8000e3c:	3404      	adds	r4, #4
 8000e3e:	0123      	lsls	r3, r4, #4
 8000e40:	d503      	bpl.n	8000e4a <__aeabi_fmul+0x156>
 8000e42:	3180      	adds	r1, #128	; 0x80
 8000e44:	0008      	movs	r0, r1
 8000e46:	4b37      	ldr	r3, [pc, #220]	; (8000f24 <__aeabi_fmul+0x230>)
 8000e48:	401c      	ands	r4, r3
 8000e4a:	28fe      	cmp	r0, #254	; 0xfe
 8000e4c:	dcc0      	bgt.n	8000dd0 <__aeabi_fmul+0xdc>
 8000e4e:	01a4      	lsls	r4, r4, #6
 8000e50:	0a64      	lsrs	r4, r4, #9
 8000e52:	b2c0      	uxtb	r0, r0
 8000e54:	e79a      	b.n	8000d8c <__aeabi_fmul+0x98>
 8000e56:	0037      	movs	r7, r6
 8000e58:	e78e      	b.n	8000d78 <__aeabi_fmul+0x84>
 8000e5a:	4652      	mov	r2, sl
 8000e5c:	2303      	movs	r3, #3
 8000e5e:	431a      	orrs	r2, r3
 8000e60:	4692      	mov	sl, r2
 8000e62:	2003      	movs	r0, #3
 8000e64:	e771      	b.n	8000d4a <__aeabi_fmul+0x56>
 8000e66:	4648      	mov	r0, r9
 8000e68:	f002 f9c6 	bl	80031f8 <__clzsi2>
 8000e6c:	464a      	mov	r2, r9
 8000e6e:	1f43      	subs	r3, r0, #5
 8000e70:	409a      	lsls	r2, r3
 8000e72:	1a2d      	subs	r5, r5, r0
 8000e74:	4691      	mov	r9, r2
 8000e76:	2000      	movs	r0, #0
 8000e78:	3d76      	subs	r5, #118	; 0x76
 8000e7a:	e766      	b.n	8000d4a <__aeabi_fmul+0x56>
 8000e7c:	230c      	movs	r3, #12
 8000e7e:	469a      	mov	sl, r3
 8000e80:	3b09      	subs	r3, #9
 8000e82:	25ff      	movs	r5, #255	; 0xff
 8000e84:	469b      	mov	fp, r3
 8000e86:	e74d      	b.n	8000d24 <__aeabi_fmul+0x30>
 8000e88:	0020      	movs	r0, r4
 8000e8a:	f002 f9b5 	bl	80031f8 <__clzsi2>
 8000e8e:	2576      	movs	r5, #118	; 0x76
 8000e90:	1f43      	subs	r3, r0, #5
 8000e92:	409c      	lsls	r4, r3
 8000e94:	2300      	movs	r3, #0
 8000e96:	426d      	negs	r5, r5
 8000e98:	469a      	mov	sl, r3
 8000e9a:	469b      	mov	fp, r3
 8000e9c:	1a2d      	subs	r5, r5, r0
 8000e9e:	e741      	b.n	8000d24 <__aeabi_fmul+0x30>
 8000ea0:	2480      	movs	r4, #128	; 0x80
 8000ea2:	2700      	movs	r7, #0
 8000ea4:	20ff      	movs	r0, #255	; 0xff
 8000ea6:	03e4      	lsls	r4, r4, #15
 8000ea8:	e770      	b.n	8000d8c <__aeabi_fmul+0x98>
 8000eaa:	2301      	movs	r3, #1
 8000eac:	1a1b      	subs	r3, r3, r0
 8000eae:	2b1b      	cmp	r3, #27
 8000eb0:	dd00      	ble.n	8000eb4 <__aeabi_fmul+0x1c0>
 8000eb2:	e769      	b.n	8000d88 <__aeabi_fmul+0x94>
 8000eb4:	319e      	adds	r1, #158	; 0x9e
 8000eb6:	0020      	movs	r0, r4
 8000eb8:	408c      	lsls	r4, r1
 8000eba:	40d8      	lsrs	r0, r3
 8000ebc:	1e63      	subs	r3, r4, #1
 8000ebe:	419c      	sbcs	r4, r3
 8000ec0:	4304      	orrs	r4, r0
 8000ec2:	0763      	lsls	r3, r4, #29
 8000ec4:	d004      	beq.n	8000ed0 <__aeabi_fmul+0x1dc>
 8000ec6:	230f      	movs	r3, #15
 8000ec8:	4023      	ands	r3, r4
 8000eca:	2b04      	cmp	r3, #4
 8000ecc:	d000      	beq.n	8000ed0 <__aeabi_fmul+0x1dc>
 8000ece:	3404      	adds	r4, #4
 8000ed0:	0163      	lsls	r3, r4, #5
 8000ed2:	d51a      	bpl.n	8000f0a <__aeabi_fmul+0x216>
 8000ed4:	2001      	movs	r0, #1
 8000ed6:	2400      	movs	r4, #0
 8000ed8:	e758      	b.n	8000d8c <__aeabi_fmul+0x98>
 8000eda:	2080      	movs	r0, #128	; 0x80
 8000edc:	03c0      	lsls	r0, r0, #15
 8000ede:	4204      	tst	r4, r0
 8000ee0:	d009      	beq.n	8000ef6 <__aeabi_fmul+0x202>
 8000ee2:	464b      	mov	r3, r9
 8000ee4:	4203      	tst	r3, r0
 8000ee6:	d106      	bne.n	8000ef6 <__aeabi_fmul+0x202>
 8000ee8:	464c      	mov	r4, r9
 8000eea:	4304      	orrs	r4, r0
 8000eec:	0264      	lsls	r4, r4, #9
 8000eee:	4647      	mov	r7, r8
 8000ef0:	20ff      	movs	r0, #255	; 0xff
 8000ef2:	0a64      	lsrs	r4, r4, #9
 8000ef4:	e74a      	b.n	8000d8c <__aeabi_fmul+0x98>
 8000ef6:	2080      	movs	r0, #128	; 0x80
 8000ef8:	03c0      	lsls	r0, r0, #15
 8000efa:	4304      	orrs	r4, r0
 8000efc:	0264      	lsls	r4, r4, #9
 8000efe:	0037      	movs	r7, r6
 8000f00:	20ff      	movs	r0, #255	; 0xff
 8000f02:	0a64      	lsrs	r4, r4, #9
 8000f04:	e742      	b.n	8000d8c <__aeabi_fmul+0x98>
 8000f06:	0029      	movs	r1, r5
 8000f08:	e78e      	b.n	8000e28 <__aeabi_fmul+0x134>
 8000f0a:	01a4      	lsls	r4, r4, #6
 8000f0c:	2000      	movs	r0, #0
 8000f0e:	0a64      	lsrs	r4, r4, #9
 8000f10:	e73c      	b.n	8000d8c <__aeabi_fmul+0x98>
 8000f12:	2080      	movs	r0, #128	; 0x80
 8000f14:	03c0      	lsls	r0, r0, #15
 8000f16:	4304      	orrs	r4, r0
 8000f18:	0264      	lsls	r4, r4, #9
 8000f1a:	20ff      	movs	r0, #255	; 0xff
 8000f1c:	0a64      	lsrs	r4, r4, #9
 8000f1e:	e735      	b.n	8000d8c <__aeabi_fmul+0x98>
 8000f20:	0800fac8 	.word	0x0800fac8
 8000f24:	f7ffffff 	.word	0xf7ffffff

08000f28 <__aeabi_fsub>:
 8000f28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f2a:	4646      	mov	r6, r8
 8000f2c:	46d6      	mov	lr, sl
 8000f2e:	464f      	mov	r7, r9
 8000f30:	0243      	lsls	r3, r0, #9
 8000f32:	0a5b      	lsrs	r3, r3, #9
 8000f34:	00da      	lsls	r2, r3, #3
 8000f36:	4694      	mov	ip, r2
 8000f38:	024a      	lsls	r2, r1, #9
 8000f3a:	b5c0      	push	{r6, r7, lr}
 8000f3c:	0044      	lsls	r4, r0, #1
 8000f3e:	0a56      	lsrs	r6, r2, #9
 8000f40:	1c05      	adds	r5, r0, #0
 8000f42:	46b0      	mov	r8, r6
 8000f44:	0e24      	lsrs	r4, r4, #24
 8000f46:	004e      	lsls	r6, r1, #1
 8000f48:	0992      	lsrs	r2, r2, #6
 8000f4a:	001f      	movs	r7, r3
 8000f4c:	0020      	movs	r0, r4
 8000f4e:	4692      	mov	sl, r2
 8000f50:	0fed      	lsrs	r5, r5, #31
 8000f52:	0e36      	lsrs	r6, r6, #24
 8000f54:	0fc9      	lsrs	r1, r1, #31
 8000f56:	2eff      	cmp	r6, #255	; 0xff
 8000f58:	d100      	bne.n	8000f5c <__aeabi_fsub+0x34>
 8000f5a:	e07f      	b.n	800105c <__aeabi_fsub+0x134>
 8000f5c:	2201      	movs	r2, #1
 8000f5e:	4051      	eors	r1, r2
 8000f60:	428d      	cmp	r5, r1
 8000f62:	d051      	beq.n	8001008 <__aeabi_fsub+0xe0>
 8000f64:	1ba2      	subs	r2, r4, r6
 8000f66:	4691      	mov	r9, r2
 8000f68:	2a00      	cmp	r2, #0
 8000f6a:	dc00      	bgt.n	8000f6e <__aeabi_fsub+0x46>
 8000f6c:	e07e      	b.n	800106c <__aeabi_fsub+0x144>
 8000f6e:	2e00      	cmp	r6, #0
 8000f70:	d100      	bne.n	8000f74 <__aeabi_fsub+0x4c>
 8000f72:	e099      	b.n	80010a8 <__aeabi_fsub+0x180>
 8000f74:	2cff      	cmp	r4, #255	; 0xff
 8000f76:	d100      	bne.n	8000f7a <__aeabi_fsub+0x52>
 8000f78:	e08c      	b.n	8001094 <__aeabi_fsub+0x16c>
 8000f7a:	2380      	movs	r3, #128	; 0x80
 8000f7c:	4652      	mov	r2, sl
 8000f7e:	04db      	lsls	r3, r3, #19
 8000f80:	431a      	orrs	r2, r3
 8000f82:	4692      	mov	sl, r2
 8000f84:	464a      	mov	r2, r9
 8000f86:	2301      	movs	r3, #1
 8000f88:	2a1b      	cmp	r2, #27
 8000f8a:	dc08      	bgt.n	8000f9e <__aeabi_fsub+0x76>
 8000f8c:	4653      	mov	r3, sl
 8000f8e:	2120      	movs	r1, #32
 8000f90:	40d3      	lsrs	r3, r2
 8000f92:	1a89      	subs	r1, r1, r2
 8000f94:	4652      	mov	r2, sl
 8000f96:	408a      	lsls	r2, r1
 8000f98:	1e51      	subs	r1, r2, #1
 8000f9a:	418a      	sbcs	r2, r1
 8000f9c:	4313      	orrs	r3, r2
 8000f9e:	4662      	mov	r2, ip
 8000fa0:	1ad3      	subs	r3, r2, r3
 8000fa2:	015a      	lsls	r2, r3, #5
 8000fa4:	d400      	bmi.n	8000fa8 <__aeabi_fsub+0x80>
 8000fa6:	e0f3      	b.n	8001190 <__aeabi_fsub+0x268>
 8000fa8:	019b      	lsls	r3, r3, #6
 8000faa:	099e      	lsrs	r6, r3, #6
 8000fac:	0030      	movs	r0, r6
 8000fae:	f002 f923 	bl	80031f8 <__clzsi2>
 8000fb2:	3805      	subs	r0, #5
 8000fb4:	4086      	lsls	r6, r0
 8000fb6:	4284      	cmp	r4, r0
 8000fb8:	dd00      	ble.n	8000fbc <__aeabi_fsub+0x94>
 8000fba:	e0f7      	b.n	80011ac <__aeabi_fsub+0x284>
 8000fbc:	0032      	movs	r2, r6
 8000fbe:	1b04      	subs	r4, r0, r4
 8000fc0:	2020      	movs	r0, #32
 8000fc2:	3401      	adds	r4, #1
 8000fc4:	40e2      	lsrs	r2, r4
 8000fc6:	1b04      	subs	r4, r0, r4
 8000fc8:	40a6      	lsls	r6, r4
 8000fca:	0033      	movs	r3, r6
 8000fcc:	1e5e      	subs	r6, r3, #1
 8000fce:	41b3      	sbcs	r3, r6
 8000fd0:	2400      	movs	r4, #0
 8000fd2:	4313      	orrs	r3, r2
 8000fd4:	075a      	lsls	r2, r3, #29
 8000fd6:	d004      	beq.n	8000fe2 <__aeabi_fsub+0xba>
 8000fd8:	220f      	movs	r2, #15
 8000fda:	401a      	ands	r2, r3
 8000fdc:	2a04      	cmp	r2, #4
 8000fde:	d000      	beq.n	8000fe2 <__aeabi_fsub+0xba>
 8000fe0:	3304      	adds	r3, #4
 8000fe2:	015a      	lsls	r2, r3, #5
 8000fe4:	d400      	bmi.n	8000fe8 <__aeabi_fsub+0xc0>
 8000fe6:	e0d6      	b.n	8001196 <__aeabi_fsub+0x26e>
 8000fe8:	1c62      	adds	r2, r4, #1
 8000fea:	2cfe      	cmp	r4, #254	; 0xfe
 8000fec:	d100      	bne.n	8000ff0 <__aeabi_fsub+0xc8>
 8000fee:	e0da      	b.n	80011a6 <__aeabi_fsub+0x27e>
 8000ff0:	019b      	lsls	r3, r3, #6
 8000ff2:	0a5f      	lsrs	r7, r3, #9
 8000ff4:	b2d0      	uxtb	r0, r2
 8000ff6:	05c0      	lsls	r0, r0, #23
 8000ff8:	4338      	orrs	r0, r7
 8000ffa:	07ed      	lsls	r5, r5, #31
 8000ffc:	4328      	orrs	r0, r5
 8000ffe:	bce0      	pop	{r5, r6, r7}
 8001000:	46ba      	mov	sl, r7
 8001002:	46b1      	mov	r9, r6
 8001004:	46a8      	mov	r8, r5
 8001006:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001008:	1ba2      	subs	r2, r4, r6
 800100a:	4691      	mov	r9, r2
 800100c:	2a00      	cmp	r2, #0
 800100e:	dd63      	ble.n	80010d8 <__aeabi_fsub+0x1b0>
 8001010:	2e00      	cmp	r6, #0
 8001012:	d100      	bne.n	8001016 <__aeabi_fsub+0xee>
 8001014:	e099      	b.n	800114a <__aeabi_fsub+0x222>
 8001016:	2cff      	cmp	r4, #255	; 0xff
 8001018:	d03c      	beq.n	8001094 <__aeabi_fsub+0x16c>
 800101a:	2380      	movs	r3, #128	; 0x80
 800101c:	4652      	mov	r2, sl
 800101e:	04db      	lsls	r3, r3, #19
 8001020:	431a      	orrs	r2, r3
 8001022:	4692      	mov	sl, r2
 8001024:	464a      	mov	r2, r9
 8001026:	2301      	movs	r3, #1
 8001028:	2a1b      	cmp	r2, #27
 800102a:	dc08      	bgt.n	800103e <__aeabi_fsub+0x116>
 800102c:	4653      	mov	r3, sl
 800102e:	2120      	movs	r1, #32
 8001030:	40d3      	lsrs	r3, r2
 8001032:	1a89      	subs	r1, r1, r2
 8001034:	4652      	mov	r2, sl
 8001036:	408a      	lsls	r2, r1
 8001038:	1e51      	subs	r1, r2, #1
 800103a:	418a      	sbcs	r2, r1
 800103c:	4313      	orrs	r3, r2
 800103e:	4463      	add	r3, ip
 8001040:	015a      	lsls	r2, r3, #5
 8001042:	d400      	bmi.n	8001046 <__aeabi_fsub+0x11e>
 8001044:	e0a4      	b.n	8001190 <__aeabi_fsub+0x268>
 8001046:	3401      	adds	r4, #1
 8001048:	2cff      	cmp	r4, #255	; 0xff
 800104a:	d100      	bne.n	800104e <__aeabi_fsub+0x126>
 800104c:	e0ab      	b.n	80011a6 <__aeabi_fsub+0x27e>
 800104e:	2201      	movs	r2, #1
 8001050:	4997      	ldr	r1, [pc, #604]	; (80012b0 <__aeabi_fsub+0x388>)
 8001052:	401a      	ands	r2, r3
 8001054:	085b      	lsrs	r3, r3, #1
 8001056:	400b      	ands	r3, r1
 8001058:	4313      	orrs	r3, r2
 800105a:	e7bb      	b.n	8000fd4 <__aeabi_fsub+0xac>
 800105c:	2a00      	cmp	r2, #0
 800105e:	d032      	beq.n	80010c6 <__aeabi_fsub+0x19e>
 8001060:	428d      	cmp	r5, r1
 8001062:	d035      	beq.n	80010d0 <__aeabi_fsub+0x1a8>
 8001064:	22ff      	movs	r2, #255	; 0xff
 8001066:	4252      	negs	r2, r2
 8001068:	4691      	mov	r9, r2
 800106a:	44a1      	add	r9, r4
 800106c:	464a      	mov	r2, r9
 800106e:	2a00      	cmp	r2, #0
 8001070:	d051      	beq.n	8001116 <__aeabi_fsub+0x1ee>
 8001072:	1b30      	subs	r0, r6, r4
 8001074:	2c00      	cmp	r4, #0
 8001076:	d000      	beq.n	800107a <__aeabi_fsub+0x152>
 8001078:	e09c      	b.n	80011b4 <__aeabi_fsub+0x28c>
 800107a:	4663      	mov	r3, ip
 800107c:	2b00      	cmp	r3, #0
 800107e:	d100      	bne.n	8001082 <__aeabi_fsub+0x15a>
 8001080:	e0df      	b.n	8001242 <__aeabi_fsub+0x31a>
 8001082:	3801      	subs	r0, #1
 8001084:	2800      	cmp	r0, #0
 8001086:	d100      	bne.n	800108a <__aeabi_fsub+0x162>
 8001088:	e0f7      	b.n	800127a <__aeabi_fsub+0x352>
 800108a:	2eff      	cmp	r6, #255	; 0xff
 800108c:	d000      	beq.n	8001090 <__aeabi_fsub+0x168>
 800108e:	e099      	b.n	80011c4 <__aeabi_fsub+0x29c>
 8001090:	000d      	movs	r5, r1
 8001092:	4643      	mov	r3, r8
 8001094:	2b00      	cmp	r3, #0
 8001096:	d100      	bne.n	800109a <__aeabi_fsub+0x172>
 8001098:	e085      	b.n	80011a6 <__aeabi_fsub+0x27e>
 800109a:	2780      	movs	r7, #128	; 0x80
 800109c:	03ff      	lsls	r7, r7, #15
 800109e:	431f      	orrs	r7, r3
 80010a0:	027f      	lsls	r7, r7, #9
 80010a2:	20ff      	movs	r0, #255	; 0xff
 80010a4:	0a7f      	lsrs	r7, r7, #9
 80010a6:	e7a6      	b.n	8000ff6 <__aeabi_fsub+0xce>
 80010a8:	4652      	mov	r2, sl
 80010aa:	2a00      	cmp	r2, #0
 80010ac:	d074      	beq.n	8001198 <__aeabi_fsub+0x270>
 80010ae:	2201      	movs	r2, #1
 80010b0:	4252      	negs	r2, r2
 80010b2:	4690      	mov	r8, r2
 80010b4:	44c1      	add	r9, r8
 80010b6:	464a      	mov	r2, r9
 80010b8:	2a00      	cmp	r2, #0
 80010ba:	d100      	bne.n	80010be <__aeabi_fsub+0x196>
 80010bc:	e0c8      	b.n	8001250 <__aeabi_fsub+0x328>
 80010be:	2cff      	cmp	r4, #255	; 0xff
 80010c0:	d000      	beq.n	80010c4 <__aeabi_fsub+0x19c>
 80010c2:	e75f      	b.n	8000f84 <__aeabi_fsub+0x5c>
 80010c4:	e7e6      	b.n	8001094 <__aeabi_fsub+0x16c>
 80010c6:	2201      	movs	r2, #1
 80010c8:	4051      	eors	r1, r2
 80010ca:	42a9      	cmp	r1, r5
 80010cc:	d000      	beq.n	80010d0 <__aeabi_fsub+0x1a8>
 80010ce:	e749      	b.n	8000f64 <__aeabi_fsub+0x3c>
 80010d0:	22ff      	movs	r2, #255	; 0xff
 80010d2:	4252      	negs	r2, r2
 80010d4:	4691      	mov	r9, r2
 80010d6:	44a1      	add	r9, r4
 80010d8:	464a      	mov	r2, r9
 80010da:	2a00      	cmp	r2, #0
 80010dc:	d043      	beq.n	8001166 <__aeabi_fsub+0x23e>
 80010de:	1b31      	subs	r1, r6, r4
 80010e0:	2c00      	cmp	r4, #0
 80010e2:	d100      	bne.n	80010e6 <__aeabi_fsub+0x1be>
 80010e4:	e08c      	b.n	8001200 <__aeabi_fsub+0x2d8>
 80010e6:	2eff      	cmp	r6, #255	; 0xff
 80010e8:	d100      	bne.n	80010ec <__aeabi_fsub+0x1c4>
 80010ea:	e092      	b.n	8001212 <__aeabi_fsub+0x2ea>
 80010ec:	2380      	movs	r3, #128	; 0x80
 80010ee:	4662      	mov	r2, ip
 80010f0:	04db      	lsls	r3, r3, #19
 80010f2:	431a      	orrs	r2, r3
 80010f4:	4694      	mov	ip, r2
 80010f6:	2301      	movs	r3, #1
 80010f8:	291b      	cmp	r1, #27
 80010fa:	dc09      	bgt.n	8001110 <__aeabi_fsub+0x1e8>
 80010fc:	2020      	movs	r0, #32
 80010fe:	4663      	mov	r3, ip
 8001100:	4662      	mov	r2, ip
 8001102:	40cb      	lsrs	r3, r1
 8001104:	1a41      	subs	r1, r0, r1
 8001106:	408a      	lsls	r2, r1
 8001108:	0011      	movs	r1, r2
 800110a:	1e48      	subs	r0, r1, #1
 800110c:	4181      	sbcs	r1, r0
 800110e:	430b      	orrs	r3, r1
 8001110:	0034      	movs	r4, r6
 8001112:	4453      	add	r3, sl
 8001114:	e794      	b.n	8001040 <__aeabi_fsub+0x118>
 8001116:	22fe      	movs	r2, #254	; 0xfe
 8001118:	1c66      	adds	r6, r4, #1
 800111a:	4232      	tst	r2, r6
 800111c:	d164      	bne.n	80011e8 <__aeabi_fsub+0x2c0>
 800111e:	2c00      	cmp	r4, #0
 8001120:	d000      	beq.n	8001124 <__aeabi_fsub+0x1fc>
 8001122:	e082      	b.n	800122a <__aeabi_fsub+0x302>
 8001124:	4663      	mov	r3, ip
 8001126:	2b00      	cmp	r3, #0
 8001128:	d100      	bne.n	800112c <__aeabi_fsub+0x204>
 800112a:	e0ab      	b.n	8001284 <__aeabi_fsub+0x35c>
 800112c:	4653      	mov	r3, sl
 800112e:	2b00      	cmp	r3, #0
 8001130:	d100      	bne.n	8001134 <__aeabi_fsub+0x20c>
 8001132:	e760      	b.n	8000ff6 <__aeabi_fsub+0xce>
 8001134:	4663      	mov	r3, ip
 8001136:	4652      	mov	r2, sl
 8001138:	1a9b      	subs	r3, r3, r2
 800113a:	015a      	lsls	r2, r3, #5
 800113c:	d400      	bmi.n	8001140 <__aeabi_fsub+0x218>
 800113e:	e0aa      	b.n	8001296 <__aeabi_fsub+0x36e>
 8001140:	4663      	mov	r3, ip
 8001142:	4652      	mov	r2, sl
 8001144:	000d      	movs	r5, r1
 8001146:	1ad3      	subs	r3, r2, r3
 8001148:	e744      	b.n	8000fd4 <__aeabi_fsub+0xac>
 800114a:	4652      	mov	r2, sl
 800114c:	2a00      	cmp	r2, #0
 800114e:	d023      	beq.n	8001198 <__aeabi_fsub+0x270>
 8001150:	2201      	movs	r2, #1
 8001152:	4252      	negs	r2, r2
 8001154:	4690      	mov	r8, r2
 8001156:	44c1      	add	r9, r8
 8001158:	464a      	mov	r2, r9
 800115a:	2a00      	cmp	r2, #0
 800115c:	d075      	beq.n	800124a <__aeabi_fsub+0x322>
 800115e:	2cff      	cmp	r4, #255	; 0xff
 8001160:	d000      	beq.n	8001164 <__aeabi_fsub+0x23c>
 8001162:	e75f      	b.n	8001024 <__aeabi_fsub+0xfc>
 8001164:	e796      	b.n	8001094 <__aeabi_fsub+0x16c>
 8001166:	26fe      	movs	r6, #254	; 0xfe
 8001168:	3401      	adds	r4, #1
 800116a:	4226      	tst	r6, r4
 800116c:	d153      	bne.n	8001216 <__aeabi_fsub+0x2ee>
 800116e:	2800      	cmp	r0, #0
 8001170:	d172      	bne.n	8001258 <__aeabi_fsub+0x330>
 8001172:	4663      	mov	r3, ip
 8001174:	2b00      	cmp	r3, #0
 8001176:	d100      	bne.n	800117a <__aeabi_fsub+0x252>
 8001178:	e093      	b.n	80012a2 <__aeabi_fsub+0x37a>
 800117a:	4653      	mov	r3, sl
 800117c:	2b00      	cmp	r3, #0
 800117e:	d100      	bne.n	8001182 <__aeabi_fsub+0x25a>
 8001180:	e739      	b.n	8000ff6 <__aeabi_fsub+0xce>
 8001182:	4463      	add	r3, ip
 8001184:	2400      	movs	r4, #0
 8001186:	015a      	lsls	r2, r3, #5
 8001188:	d502      	bpl.n	8001190 <__aeabi_fsub+0x268>
 800118a:	4a4a      	ldr	r2, [pc, #296]	; (80012b4 <__aeabi_fsub+0x38c>)
 800118c:	3401      	adds	r4, #1
 800118e:	4013      	ands	r3, r2
 8001190:	075a      	lsls	r2, r3, #29
 8001192:	d000      	beq.n	8001196 <__aeabi_fsub+0x26e>
 8001194:	e720      	b.n	8000fd8 <__aeabi_fsub+0xb0>
 8001196:	08db      	lsrs	r3, r3, #3
 8001198:	2cff      	cmp	r4, #255	; 0xff
 800119a:	d100      	bne.n	800119e <__aeabi_fsub+0x276>
 800119c:	e77a      	b.n	8001094 <__aeabi_fsub+0x16c>
 800119e:	025b      	lsls	r3, r3, #9
 80011a0:	0a5f      	lsrs	r7, r3, #9
 80011a2:	b2e0      	uxtb	r0, r4
 80011a4:	e727      	b.n	8000ff6 <__aeabi_fsub+0xce>
 80011a6:	20ff      	movs	r0, #255	; 0xff
 80011a8:	2700      	movs	r7, #0
 80011aa:	e724      	b.n	8000ff6 <__aeabi_fsub+0xce>
 80011ac:	4b41      	ldr	r3, [pc, #260]	; (80012b4 <__aeabi_fsub+0x38c>)
 80011ae:	1a24      	subs	r4, r4, r0
 80011b0:	4033      	ands	r3, r6
 80011b2:	e70f      	b.n	8000fd4 <__aeabi_fsub+0xac>
 80011b4:	2eff      	cmp	r6, #255	; 0xff
 80011b6:	d100      	bne.n	80011ba <__aeabi_fsub+0x292>
 80011b8:	e76a      	b.n	8001090 <__aeabi_fsub+0x168>
 80011ba:	2380      	movs	r3, #128	; 0x80
 80011bc:	4662      	mov	r2, ip
 80011be:	04db      	lsls	r3, r3, #19
 80011c0:	431a      	orrs	r2, r3
 80011c2:	4694      	mov	ip, r2
 80011c4:	2301      	movs	r3, #1
 80011c6:	281b      	cmp	r0, #27
 80011c8:	dc09      	bgt.n	80011de <__aeabi_fsub+0x2b6>
 80011ca:	2420      	movs	r4, #32
 80011cc:	4663      	mov	r3, ip
 80011ce:	4662      	mov	r2, ip
 80011d0:	40c3      	lsrs	r3, r0
 80011d2:	1a20      	subs	r0, r4, r0
 80011d4:	4082      	lsls	r2, r0
 80011d6:	0010      	movs	r0, r2
 80011d8:	1e44      	subs	r4, r0, #1
 80011da:	41a0      	sbcs	r0, r4
 80011dc:	4303      	orrs	r3, r0
 80011de:	4652      	mov	r2, sl
 80011e0:	000d      	movs	r5, r1
 80011e2:	0034      	movs	r4, r6
 80011e4:	1ad3      	subs	r3, r2, r3
 80011e6:	e6dc      	b.n	8000fa2 <__aeabi_fsub+0x7a>
 80011e8:	4663      	mov	r3, ip
 80011ea:	4652      	mov	r2, sl
 80011ec:	1a9e      	subs	r6, r3, r2
 80011ee:	0173      	lsls	r3, r6, #5
 80011f0:	d417      	bmi.n	8001222 <__aeabi_fsub+0x2fa>
 80011f2:	2e00      	cmp	r6, #0
 80011f4:	d000      	beq.n	80011f8 <__aeabi_fsub+0x2d0>
 80011f6:	e6d9      	b.n	8000fac <__aeabi_fsub+0x84>
 80011f8:	2500      	movs	r5, #0
 80011fa:	2000      	movs	r0, #0
 80011fc:	2700      	movs	r7, #0
 80011fe:	e6fa      	b.n	8000ff6 <__aeabi_fsub+0xce>
 8001200:	4663      	mov	r3, ip
 8001202:	2b00      	cmp	r3, #0
 8001204:	d044      	beq.n	8001290 <__aeabi_fsub+0x368>
 8001206:	3901      	subs	r1, #1
 8001208:	2900      	cmp	r1, #0
 800120a:	d04c      	beq.n	80012a6 <__aeabi_fsub+0x37e>
 800120c:	2eff      	cmp	r6, #255	; 0xff
 800120e:	d000      	beq.n	8001212 <__aeabi_fsub+0x2ea>
 8001210:	e771      	b.n	80010f6 <__aeabi_fsub+0x1ce>
 8001212:	4643      	mov	r3, r8
 8001214:	e73e      	b.n	8001094 <__aeabi_fsub+0x16c>
 8001216:	2cff      	cmp	r4, #255	; 0xff
 8001218:	d0c5      	beq.n	80011a6 <__aeabi_fsub+0x27e>
 800121a:	4652      	mov	r2, sl
 800121c:	4462      	add	r2, ip
 800121e:	0853      	lsrs	r3, r2, #1
 8001220:	e7b6      	b.n	8001190 <__aeabi_fsub+0x268>
 8001222:	4663      	mov	r3, ip
 8001224:	000d      	movs	r5, r1
 8001226:	1ad6      	subs	r6, r2, r3
 8001228:	e6c0      	b.n	8000fac <__aeabi_fsub+0x84>
 800122a:	4662      	mov	r2, ip
 800122c:	2a00      	cmp	r2, #0
 800122e:	d116      	bne.n	800125e <__aeabi_fsub+0x336>
 8001230:	4653      	mov	r3, sl
 8001232:	2b00      	cmp	r3, #0
 8001234:	d000      	beq.n	8001238 <__aeabi_fsub+0x310>
 8001236:	e72b      	b.n	8001090 <__aeabi_fsub+0x168>
 8001238:	2780      	movs	r7, #128	; 0x80
 800123a:	2500      	movs	r5, #0
 800123c:	20ff      	movs	r0, #255	; 0xff
 800123e:	03ff      	lsls	r7, r7, #15
 8001240:	e6d9      	b.n	8000ff6 <__aeabi_fsub+0xce>
 8001242:	000d      	movs	r5, r1
 8001244:	4643      	mov	r3, r8
 8001246:	0034      	movs	r4, r6
 8001248:	e7a6      	b.n	8001198 <__aeabi_fsub+0x270>
 800124a:	4653      	mov	r3, sl
 800124c:	4463      	add	r3, ip
 800124e:	e6f7      	b.n	8001040 <__aeabi_fsub+0x118>
 8001250:	4663      	mov	r3, ip
 8001252:	4652      	mov	r2, sl
 8001254:	1a9b      	subs	r3, r3, r2
 8001256:	e6a4      	b.n	8000fa2 <__aeabi_fsub+0x7a>
 8001258:	4662      	mov	r2, ip
 800125a:	2a00      	cmp	r2, #0
 800125c:	d0d9      	beq.n	8001212 <__aeabi_fsub+0x2ea>
 800125e:	4652      	mov	r2, sl
 8001260:	2a00      	cmp	r2, #0
 8001262:	d100      	bne.n	8001266 <__aeabi_fsub+0x33e>
 8001264:	e716      	b.n	8001094 <__aeabi_fsub+0x16c>
 8001266:	2280      	movs	r2, #128	; 0x80
 8001268:	03d2      	lsls	r2, r2, #15
 800126a:	4213      	tst	r3, r2
 800126c:	d100      	bne.n	8001270 <__aeabi_fsub+0x348>
 800126e:	e711      	b.n	8001094 <__aeabi_fsub+0x16c>
 8001270:	4640      	mov	r0, r8
 8001272:	4210      	tst	r0, r2
 8001274:	d000      	beq.n	8001278 <__aeabi_fsub+0x350>
 8001276:	e70d      	b.n	8001094 <__aeabi_fsub+0x16c>
 8001278:	e70a      	b.n	8001090 <__aeabi_fsub+0x168>
 800127a:	4652      	mov	r2, sl
 800127c:	000d      	movs	r5, r1
 800127e:	0034      	movs	r4, r6
 8001280:	1ad3      	subs	r3, r2, r3
 8001282:	e68e      	b.n	8000fa2 <__aeabi_fsub+0x7a>
 8001284:	4653      	mov	r3, sl
 8001286:	2b00      	cmp	r3, #0
 8001288:	d008      	beq.n	800129c <__aeabi_fsub+0x374>
 800128a:	000d      	movs	r5, r1
 800128c:	4647      	mov	r7, r8
 800128e:	e6b2      	b.n	8000ff6 <__aeabi_fsub+0xce>
 8001290:	4643      	mov	r3, r8
 8001292:	0034      	movs	r4, r6
 8001294:	e780      	b.n	8001198 <__aeabi_fsub+0x270>
 8001296:	2b00      	cmp	r3, #0
 8001298:	d000      	beq.n	800129c <__aeabi_fsub+0x374>
 800129a:	e779      	b.n	8001190 <__aeabi_fsub+0x268>
 800129c:	2500      	movs	r5, #0
 800129e:	2700      	movs	r7, #0
 80012a0:	e6a9      	b.n	8000ff6 <__aeabi_fsub+0xce>
 80012a2:	4647      	mov	r7, r8
 80012a4:	e6a7      	b.n	8000ff6 <__aeabi_fsub+0xce>
 80012a6:	4653      	mov	r3, sl
 80012a8:	0034      	movs	r4, r6
 80012aa:	4463      	add	r3, ip
 80012ac:	e6c8      	b.n	8001040 <__aeabi_fsub+0x118>
 80012ae:	46c0      	nop			; (mov r8, r8)
 80012b0:	7dffffff 	.word	0x7dffffff
 80012b4:	fbffffff 	.word	0xfbffffff

080012b8 <__aeabi_fcmpun>:
 80012b8:	0242      	lsls	r2, r0, #9
 80012ba:	024b      	lsls	r3, r1, #9
 80012bc:	0040      	lsls	r0, r0, #1
 80012be:	0049      	lsls	r1, r1, #1
 80012c0:	0a52      	lsrs	r2, r2, #9
 80012c2:	0a5b      	lsrs	r3, r3, #9
 80012c4:	0e09      	lsrs	r1, r1, #24
 80012c6:	0e00      	lsrs	r0, r0, #24
 80012c8:	28ff      	cmp	r0, #255	; 0xff
 80012ca:	d006      	beq.n	80012da <__aeabi_fcmpun+0x22>
 80012cc:	2000      	movs	r0, #0
 80012ce:	29ff      	cmp	r1, #255	; 0xff
 80012d0:	d102      	bne.n	80012d8 <__aeabi_fcmpun+0x20>
 80012d2:	0018      	movs	r0, r3
 80012d4:	1e43      	subs	r3, r0, #1
 80012d6:	4198      	sbcs	r0, r3
 80012d8:	4770      	bx	lr
 80012da:	38fe      	subs	r0, #254	; 0xfe
 80012dc:	2a00      	cmp	r2, #0
 80012de:	d1fb      	bne.n	80012d8 <__aeabi_fcmpun+0x20>
 80012e0:	e7f4      	b.n	80012cc <__aeabi_fcmpun+0x14>
 80012e2:	46c0      	nop			; (mov r8, r8)

080012e4 <__aeabi_f2iz>:
 80012e4:	0241      	lsls	r1, r0, #9
 80012e6:	0042      	lsls	r2, r0, #1
 80012e8:	0fc3      	lsrs	r3, r0, #31
 80012ea:	0a49      	lsrs	r1, r1, #9
 80012ec:	2000      	movs	r0, #0
 80012ee:	0e12      	lsrs	r2, r2, #24
 80012f0:	2a7e      	cmp	r2, #126	; 0x7e
 80012f2:	d903      	bls.n	80012fc <__aeabi_f2iz+0x18>
 80012f4:	2a9d      	cmp	r2, #157	; 0x9d
 80012f6:	d902      	bls.n	80012fe <__aeabi_f2iz+0x1a>
 80012f8:	4a09      	ldr	r2, [pc, #36]	; (8001320 <__aeabi_f2iz+0x3c>)
 80012fa:	1898      	adds	r0, r3, r2
 80012fc:	4770      	bx	lr
 80012fe:	2080      	movs	r0, #128	; 0x80
 8001300:	0400      	lsls	r0, r0, #16
 8001302:	4301      	orrs	r1, r0
 8001304:	2a95      	cmp	r2, #149	; 0x95
 8001306:	dc07      	bgt.n	8001318 <__aeabi_f2iz+0x34>
 8001308:	2096      	movs	r0, #150	; 0x96
 800130a:	1a82      	subs	r2, r0, r2
 800130c:	40d1      	lsrs	r1, r2
 800130e:	4248      	negs	r0, r1
 8001310:	2b00      	cmp	r3, #0
 8001312:	d1f3      	bne.n	80012fc <__aeabi_f2iz+0x18>
 8001314:	0008      	movs	r0, r1
 8001316:	e7f1      	b.n	80012fc <__aeabi_f2iz+0x18>
 8001318:	3a96      	subs	r2, #150	; 0x96
 800131a:	4091      	lsls	r1, r2
 800131c:	e7f7      	b.n	800130e <__aeabi_f2iz+0x2a>
 800131e:	46c0      	nop			; (mov r8, r8)
 8001320:	7fffffff 	.word	0x7fffffff

08001324 <__aeabi_i2f>:
 8001324:	b570      	push	{r4, r5, r6, lr}
 8001326:	2800      	cmp	r0, #0
 8001328:	d013      	beq.n	8001352 <__aeabi_i2f+0x2e>
 800132a:	17c3      	asrs	r3, r0, #31
 800132c:	18c5      	adds	r5, r0, r3
 800132e:	405d      	eors	r5, r3
 8001330:	0fc4      	lsrs	r4, r0, #31
 8001332:	0028      	movs	r0, r5
 8001334:	f001 ff60 	bl	80031f8 <__clzsi2>
 8001338:	239e      	movs	r3, #158	; 0x9e
 800133a:	0001      	movs	r1, r0
 800133c:	1a1b      	subs	r3, r3, r0
 800133e:	2b96      	cmp	r3, #150	; 0x96
 8001340:	dc0f      	bgt.n	8001362 <__aeabi_i2f+0x3e>
 8001342:	2808      	cmp	r0, #8
 8001344:	dd01      	ble.n	800134a <__aeabi_i2f+0x26>
 8001346:	3908      	subs	r1, #8
 8001348:	408d      	lsls	r5, r1
 800134a:	026d      	lsls	r5, r5, #9
 800134c:	0a6d      	lsrs	r5, r5, #9
 800134e:	b2d8      	uxtb	r0, r3
 8001350:	e002      	b.n	8001358 <__aeabi_i2f+0x34>
 8001352:	2400      	movs	r4, #0
 8001354:	2000      	movs	r0, #0
 8001356:	2500      	movs	r5, #0
 8001358:	05c0      	lsls	r0, r0, #23
 800135a:	4328      	orrs	r0, r5
 800135c:	07e4      	lsls	r4, r4, #31
 800135e:	4320      	orrs	r0, r4
 8001360:	bd70      	pop	{r4, r5, r6, pc}
 8001362:	2b99      	cmp	r3, #153	; 0x99
 8001364:	dd0b      	ble.n	800137e <__aeabi_i2f+0x5a>
 8001366:	2205      	movs	r2, #5
 8001368:	002e      	movs	r6, r5
 800136a:	1a12      	subs	r2, r2, r0
 800136c:	40d6      	lsrs	r6, r2
 800136e:	0002      	movs	r2, r0
 8001370:	321b      	adds	r2, #27
 8001372:	4095      	lsls	r5, r2
 8001374:	0028      	movs	r0, r5
 8001376:	1e45      	subs	r5, r0, #1
 8001378:	41a8      	sbcs	r0, r5
 800137a:	0035      	movs	r5, r6
 800137c:	4305      	orrs	r5, r0
 800137e:	2905      	cmp	r1, #5
 8001380:	dd01      	ble.n	8001386 <__aeabi_i2f+0x62>
 8001382:	1f4a      	subs	r2, r1, #5
 8001384:	4095      	lsls	r5, r2
 8001386:	002a      	movs	r2, r5
 8001388:	4e08      	ldr	r6, [pc, #32]	; (80013ac <__aeabi_i2f+0x88>)
 800138a:	4032      	ands	r2, r6
 800138c:	0768      	lsls	r0, r5, #29
 800138e:	d009      	beq.n	80013a4 <__aeabi_i2f+0x80>
 8001390:	200f      	movs	r0, #15
 8001392:	4028      	ands	r0, r5
 8001394:	2804      	cmp	r0, #4
 8001396:	d005      	beq.n	80013a4 <__aeabi_i2f+0x80>
 8001398:	3204      	adds	r2, #4
 800139a:	0150      	lsls	r0, r2, #5
 800139c:	d502      	bpl.n	80013a4 <__aeabi_i2f+0x80>
 800139e:	239f      	movs	r3, #159	; 0x9f
 80013a0:	4032      	ands	r2, r6
 80013a2:	1a5b      	subs	r3, r3, r1
 80013a4:	0192      	lsls	r2, r2, #6
 80013a6:	0a55      	lsrs	r5, r2, #9
 80013a8:	b2d8      	uxtb	r0, r3
 80013aa:	e7d5      	b.n	8001358 <__aeabi_i2f+0x34>
 80013ac:	fbffffff 	.word	0xfbffffff

080013b0 <__aeabi_ui2f>:
 80013b0:	b570      	push	{r4, r5, r6, lr}
 80013b2:	1e05      	subs	r5, r0, #0
 80013b4:	d00e      	beq.n	80013d4 <__aeabi_ui2f+0x24>
 80013b6:	f001 ff1f 	bl	80031f8 <__clzsi2>
 80013ba:	239e      	movs	r3, #158	; 0x9e
 80013bc:	0004      	movs	r4, r0
 80013be:	1a1b      	subs	r3, r3, r0
 80013c0:	2b96      	cmp	r3, #150	; 0x96
 80013c2:	dc0c      	bgt.n	80013de <__aeabi_ui2f+0x2e>
 80013c4:	2808      	cmp	r0, #8
 80013c6:	dd01      	ble.n	80013cc <__aeabi_ui2f+0x1c>
 80013c8:	3c08      	subs	r4, #8
 80013ca:	40a5      	lsls	r5, r4
 80013cc:	026d      	lsls	r5, r5, #9
 80013ce:	0a6d      	lsrs	r5, r5, #9
 80013d0:	b2d8      	uxtb	r0, r3
 80013d2:	e001      	b.n	80013d8 <__aeabi_ui2f+0x28>
 80013d4:	2000      	movs	r0, #0
 80013d6:	2500      	movs	r5, #0
 80013d8:	05c0      	lsls	r0, r0, #23
 80013da:	4328      	orrs	r0, r5
 80013dc:	bd70      	pop	{r4, r5, r6, pc}
 80013de:	2b99      	cmp	r3, #153	; 0x99
 80013e0:	dd09      	ble.n	80013f6 <__aeabi_ui2f+0x46>
 80013e2:	0002      	movs	r2, r0
 80013e4:	0029      	movs	r1, r5
 80013e6:	321b      	adds	r2, #27
 80013e8:	4091      	lsls	r1, r2
 80013ea:	1e4a      	subs	r2, r1, #1
 80013ec:	4191      	sbcs	r1, r2
 80013ee:	2205      	movs	r2, #5
 80013f0:	1a12      	subs	r2, r2, r0
 80013f2:	40d5      	lsrs	r5, r2
 80013f4:	430d      	orrs	r5, r1
 80013f6:	2c05      	cmp	r4, #5
 80013f8:	dd01      	ble.n	80013fe <__aeabi_ui2f+0x4e>
 80013fa:	1f62      	subs	r2, r4, #5
 80013fc:	4095      	lsls	r5, r2
 80013fe:	0029      	movs	r1, r5
 8001400:	4e08      	ldr	r6, [pc, #32]	; (8001424 <__aeabi_ui2f+0x74>)
 8001402:	4031      	ands	r1, r6
 8001404:	076a      	lsls	r2, r5, #29
 8001406:	d009      	beq.n	800141c <__aeabi_ui2f+0x6c>
 8001408:	200f      	movs	r0, #15
 800140a:	4028      	ands	r0, r5
 800140c:	2804      	cmp	r0, #4
 800140e:	d005      	beq.n	800141c <__aeabi_ui2f+0x6c>
 8001410:	3104      	adds	r1, #4
 8001412:	014a      	lsls	r2, r1, #5
 8001414:	d502      	bpl.n	800141c <__aeabi_ui2f+0x6c>
 8001416:	239f      	movs	r3, #159	; 0x9f
 8001418:	4031      	ands	r1, r6
 800141a:	1b1b      	subs	r3, r3, r4
 800141c:	0189      	lsls	r1, r1, #6
 800141e:	0a4d      	lsrs	r5, r1, #9
 8001420:	b2d8      	uxtb	r0, r3
 8001422:	e7d9      	b.n	80013d8 <__aeabi_ui2f+0x28>
 8001424:	fbffffff 	.word	0xfbffffff

08001428 <__aeabi_dadd>:
 8001428:	b5f0      	push	{r4, r5, r6, r7, lr}
 800142a:	464f      	mov	r7, r9
 800142c:	46d6      	mov	lr, sl
 800142e:	4646      	mov	r6, r8
 8001430:	000d      	movs	r5, r1
 8001432:	0001      	movs	r1, r0
 8001434:	0018      	movs	r0, r3
 8001436:	b5c0      	push	{r6, r7, lr}
 8001438:	0017      	movs	r7, r2
 800143a:	032b      	lsls	r3, r5, #12
 800143c:	0a5a      	lsrs	r2, r3, #9
 800143e:	0f4b      	lsrs	r3, r1, #29
 8001440:	4313      	orrs	r3, r2
 8001442:	00ca      	lsls	r2, r1, #3
 8001444:	4691      	mov	r9, r2
 8001446:	0302      	lsls	r2, r0, #12
 8001448:	006e      	lsls	r6, r5, #1
 800144a:	0041      	lsls	r1, r0, #1
 800144c:	0a52      	lsrs	r2, r2, #9
 800144e:	0fec      	lsrs	r4, r5, #31
 8001450:	0f7d      	lsrs	r5, r7, #29
 8001452:	4315      	orrs	r5, r2
 8001454:	0d76      	lsrs	r6, r6, #21
 8001456:	0d49      	lsrs	r1, r1, #21
 8001458:	0fc0      	lsrs	r0, r0, #31
 800145a:	4682      	mov	sl, r0
 800145c:	46ac      	mov	ip, r5
 800145e:	00ff      	lsls	r7, r7, #3
 8001460:	1a72      	subs	r2, r6, r1
 8001462:	4284      	cmp	r4, r0
 8001464:	d100      	bne.n	8001468 <__aeabi_dadd+0x40>
 8001466:	e098      	b.n	800159a <__aeabi_dadd+0x172>
 8001468:	2a00      	cmp	r2, #0
 800146a:	dc00      	bgt.n	800146e <__aeabi_dadd+0x46>
 800146c:	e081      	b.n	8001572 <__aeabi_dadd+0x14a>
 800146e:	2900      	cmp	r1, #0
 8001470:	d100      	bne.n	8001474 <__aeabi_dadd+0x4c>
 8001472:	e0b6      	b.n	80015e2 <__aeabi_dadd+0x1ba>
 8001474:	49c9      	ldr	r1, [pc, #804]	; (800179c <__aeabi_dadd+0x374>)
 8001476:	428e      	cmp	r6, r1
 8001478:	d100      	bne.n	800147c <__aeabi_dadd+0x54>
 800147a:	e172      	b.n	8001762 <__aeabi_dadd+0x33a>
 800147c:	2180      	movs	r1, #128	; 0x80
 800147e:	0028      	movs	r0, r5
 8001480:	0409      	lsls	r1, r1, #16
 8001482:	4308      	orrs	r0, r1
 8001484:	4684      	mov	ip, r0
 8001486:	2a38      	cmp	r2, #56	; 0x38
 8001488:	dd00      	ble.n	800148c <__aeabi_dadd+0x64>
 800148a:	e15e      	b.n	800174a <__aeabi_dadd+0x322>
 800148c:	2a1f      	cmp	r2, #31
 800148e:	dd00      	ble.n	8001492 <__aeabi_dadd+0x6a>
 8001490:	e1ee      	b.n	8001870 <__aeabi_dadd+0x448>
 8001492:	2020      	movs	r0, #32
 8001494:	0039      	movs	r1, r7
 8001496:	4665      	mov	r5, ip
 8001498:	1a80      	subs	r0, r0, r2
 800149a:	4087      	lsls	r7, r0
 800149c:	40d1      	lsrs	r1, r2
 800149e:	4085      	lsls	r5, r0
 80014a0:	430d      	orrs	r5, r1
 80014a2:	0039      	movs	r1, r7
 80014a4:	1e4f      	subs	r7, r1, #1
 80014a6:	41b9      	sbcs	r1, r7
 80014a8:	4667      	mov	r7, ip
 80014aa:	40d7      	lsrs	r7, r2
 80014ac:	4329      	orrs	r1, r5
 80014ae:	1bdb      	subs	r3, r3, r7
 80014b0:	464a      	mov	r2, r9
 80014b2:	1a55      	subs	r5, r2, r1
 80014b4:	45a9      	cmp	r9, r5
 80014b6:	4189      	sbcs	r1, r1
 80014b8:	4249      	negs	r1, r1
 80014ba:	1a5b      	subs	r3, r3, r1
 80014bc:	4698      	mov	r8, r3
 80014be:	4643      	mov	r3, r8
 80014c0:	021b      	lsls	r3, r3, #8
 80014c2:	d400      	bmi.n	80014c6 <__aeabi_dadd+0x9e>
 80014c4:	e0cc      	b.n	8001660 <__aeabi_dadd+0x238>
 80014c6:	4643      	mov	r3, r8
 80014c8:	025b      	lsls	r3, r3, #9
 80014ca:	0a5b      	lsrs	r3, r3, #9
 80014cc:	4698      	mov	r8, r3
 80014ce:	4643      	mov	r3, r8
 80014d0:	2b00      	cmp	r3, #0
 80014d2:	d100      	bne.n	80014d6 <__aeabi_dadd+0xae>
 80014d4:	e12c      	b.n	8001730 <__aeabi_dadd+0x308>
 80014d6:	4640      	mov	r0, r8
 80014d8:	f001 fe8e 	bl	80031f8 <__clzsi2>
 80014dc:	0001      	movs	r1, r0
 80014de:	3908      	subs	r1, #8
 80014e0:	2220      	movs	r2, #32
 80014e2:	0028      	movs	r0, r5
 80014e4:	4643      	mov	r3, r8
 80014e6:	1a52      	subs	r2, r2, r1
 80014e8:	408b      	lsls	r3, r1
 80014ea:	40d0      	lsrs	r0, r2
 80014ec:	408d      	lsls	r5, r1
 80014ee:	4303      	orrs	r3, r0
 80014f0:	428e      	cmp	r6, r1
 80014f2:	dd00      	ble.n	80014f6 <__aeabi_dadd+0xce>
 80014f4:	e117      	b.n	8001726 <__aeabi_dadd+0x2fe>
 80014f6:	1b8e      	subs	r6, r1, r6
 80014f8:	1c72      	adds	r2, r6, #1
 80014fa:	2a1f      	cmp	r2, #31
 80014fc:	dd00      	ble.n	8001500 <__aeabi_dadd+0xd8>
 80014fe:	e1a7      	b.n	8001850 <__aeabi_dadd+0x428>
 8001500:	2120      	movs	r1, #32
 8001502:	0018      	movs	r0, r3
 8001504:	002e      	movs	r6, r5
 8001506:	1a89      	subs	r1, r1, r2
 8001508:	408d      	lsls	r5, r1
 800150a:	4088      	lsls	r0, r1
 800150c:	40d6      	lsrs	r6, r2
 800150e:	40d3      	lsrs	r3, r2
 8001510:	1e69      	subs	r1, r5, #1
 8001512:	418d      	sbcs	r5, r1
 8001514:	4330      	orrs	r0, r6
 8001516:	4698      	mov	r8, r3
 8001518:	2600      	movs	r6, #0
 800151a:	4305      	orrs	r5, r0
 800151c:	076b      	lsls	r3, r5, #29
 800151e:	d009      	beq.n	8001534 <__aeabi_dadd+0x10c>
 8001520:	230f      	movs	r3, #15
 8001522:	402b      	ands	r3, r5
 8001524:	2b04      	cmp	r3, #4
 8001526:	d005      	beq.n	8001534 <__aeabi_dadd+0x10c>
 8001528:	1d2b      	adds	r3, r5, #4
 800152a:	42ab      	cmp	r3, r5
 800152c:	41ad      	sbcs	r5, r5
 800152e:	426d      	negs	r5, r5
 8001530:	44a8      	add	r8, r5
 8001532:	001d      	movs	r5, r3
 8001534:	4643      	mov	r3, r8
 8001536:	021b      	lsls	r3, r3, #8
 8001538:	d400      	bmi.n	800153c <__aeabi_dadd+0x114>
 800153a:	e094      	b.n	8001666 <__aeabi_dadd+0x23e>
 800153c:	4b97      	ldr	r3, [pc, #604]	; (800179c <__aeabi_dadd+0x374>)
 800153e:	1c72      	adds	r2, r6, #1
 8001540:	429a      	cmp	r2, r3
 8001542:	d100      	bne.n	8001546 <__aeabi_dadd+0x11e>
 8001544:	e09d      	b.n	8001682 <__aeabi_dadd+0x25a>
 8001546:	4641      	mov	r1, r8
 8001548:	4b95      	ldr	r3, [pc, #596]	; (80017a0 <__aeabi_dadd+0x378>)
 800154a:	08ed      	lsrs	r5, r5, #3
 800154c:	4019      	ands	r1, r3
 800154e:	000b      	movs	r3, r1
 8001550:	0552      	lsls	r2, r2, #21
 8001552:	0749      	lsls	r1, r1, #29
 8001554:	025b      	lsls	r3, r3, #9
 8001556:	4329      	orrs	r1, r5
 8001558:	0b1b      	lsrs	r3, r3, #12
 800155a:	0d52      	lsrs	r2, r2, #21
 800155c:	0512      	lsls	r2, r2, #20
 800155e:	4313      	orrs	r3, r2
 8001560:	07e4      	lsls	r4, r4, #31
 8001562:	4323      	orrs	r3, r4
 8001564:	0008      	movs	r0, r1
 8001566:	0019      	movs	r1, r3
 8001568:	bce0      	pop	{r5, r6, r7}
 800156a:	46ba      	mov	sl, r7
 800156c:	46b1      	mov	r9, r6
 800156e:	46a8      	mov	r8, r5
 8001570:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001572:	2a00      	cmp	r2, #0
 8001574:	d043      	beq.n	80015fe <__aeabi_dadd+0x1d6>
 8001576:	1b8a      	subs	r2, r1, r6
 8001578:	2e00      	cmp	r6, #0
 800157a:	d000      	beq.n	800157e <__aeabi_dadd+0x156>
 800157c:	e12a      	b.n	80017d4 <__aeabi_dadd+0x3ac>
 800157e:	464c      	mov	r4, r9
 8001580:	431c      	orrs	r4, r3
 8001582:	d100      	bne.n	8001586 <__aeabi_dadd+0x15e>
 8001584:	e1d1      	b.n	800192a <__aeabi_dadd+0x502>
 8001586:	1e54      	subs	r4, r2, #1
 8001588:	2a01      	cmp	r2, #1
 800158a:	d100      	bne.n	800158e <__aeabi_dadd+0x166>
 800158c:	e21f      	b.n	80019ce <__aeabi_dadd+0x5a6>
 800158e:	4d83      	ldr	r5, [pc, #524]	; (800179c <__aeabi_dadd+0x374>)
 8001590:	42aa      	cmp	r2, r5
 8001592:	d100      	bne.n	8001596 <__aeabi_dadd+0x16e>
 8001594:	e272      	b.n	8001a7c <__aeabi_dadd+0x654>
 8001596:	0022      	movs	r2, r4
 8001598:	e123      	b.n	80017e2 <__aeabi_dadd+0x3ba>
 800159a:	2a00      	cmp	r2, #0
 800159c:	dc00      	bgt.n	80015a0 <__aeabi_dadd+0x178>
 800159e:	e098      	b.n	80016d2 <__aeabi_dadd+0x2aa>
 80015a0:	2900      	cmp	r1, #0
 80015a2:	d042      	beq.n	800162a <__aeabi_dadd+0x202>
 80015a4:	497d      	ldr	r1, [pc, #500]	; (800179c <__aeabi_dadd+0x374>)
 80015a6:	428e      	cmp	r6, r1
 80015a8:	d100      	bne.n	80015ac <__aeabi_dadd+0x184>
 80015aa:	e0da      	b.n	8001762 <__aeabi_dadd+0x33a>
 80015ac:	2180      	movs	r1, #128	; 0x80
 80015ae:	0028      	movs	r0, r5
 80015b0:	0409      	lsls	r1, r1, #16
 80015b2:	4308      	orrs	r0, r1
 80015b4:	4684      	mov	ip, r0
 80015b6:	2a38      	cmp	r2, #56	; 0x38
 80015b8:	dd00      	ble.n	80015bc <__aeabi_dadd+0x194>
 80015ba:	e129      	b.n	8001810 <__aeabi_dadd+0x3e8>
 80015bc:	2a1f      	cmp	r2, #31
 80015be:	dc00      	bgt.n	80015c2 <__aeabi_dadd+0x19a>
 80015c0:	e187      	b.n	80018d2 <__aeabi_dadd+0x4aa>
 80015c2:	0011      	movs	r1, r2
 80015c4:	4665      	mov	r5, ip
 80015c6:	3920      	subs	r1, #32
 80015c8:	40cd      	lsrs	r5, r1
 80015ca:	2a20      	cmp	r2, #32
 80015cc:	d004      	beq.n	80015d8 <__aeabi_dadd+0x1b0>
 80015ce:	2040      	movs	r0, #64	; 0x40
 80015d0:	4661      	mov	r1, ip
 80015d2:	1a82      	subs	r2, r0, r2
 80015d4:	4091      	lsls	r1, r2
 80015d6:	430f      	orrs	r7, r1
 80015d8:	0039      	movs	r1, r7
 80015da:	1e4f      	subs	r7, r1, #1
 80015dc:	41b9      	sbcs	r1, r7
 80015de:	430d      	orrs	r5, r1
 80015e0:	e11b      	b.n	800181a <__aeabi_dadd+0x3f2>
 80015e2:	0029      	movs	r1, r5
 80015e4:	4339      	orrs	r1, r7
 80015e6:	d100      	bne.n	80015ea <__aeabi_dadd+0x1c2>
 80015e8:	e0b5      	b.n	8001756 <__aeabi_dadd+0x32e>
 80015ea:	1e51      	subs	r1, r2, #1
 80015ec:	2a01      	cmp	r2, #1
 80015ee:	d100      	bne.n	80015f2 <__aeabi_dadd+0x1ca>
 80015f0:	e1ab      	b.n	800194a <__aeabi_dadd+0x522>
 80015f2:	486a      	ldr	r0, [pc, #424]	; (800179c <__aeabi_dadd+0x374>)
 80015f4:	4282      	cmp	r2, r0
 80015f6:	d100      	bne.n	80015fa <__aeabi_dadd+0x1d2>
 80015f8:	e1b2      	b.n	8001960 <__aeabi_dadd+0x538>
 80015fa:	000a      	movs	r2, r1
 80015fc:	e743      	b.n	8001486 <__aeabi_dadd+0x5e>
 80015fe:	4969      	ldr	r1, [pc, #420]	; (80017a4 <__aeabi_dadd+0x37c>)
 8001600:	1c75      	adds	r5, r6, #1
 8001602:	420d      	tst	r5, r1
 8001604:	d000      	beq.n	8001608 <__aeabi_dadd+0x1e0>
 8001606:	e0cf      	b.n	80017a8 <__aeabi_dadd+0x380>
 8001608:	2e00      	cmp	r6, #0
 800160a:	d000      	beq.n	800160e <__aeabi_dadd+0x1e6>
 800160c:	e193      	b.n	8001936 <__aeabi_dadd+0x50e>
 800160e:	4649      	mov	r1, r9
 8001610:	4319      	orrs	r1, r3
 8001612:	d100      	bne.n	8001616 <__aeabi_dadd+0x1ee>
 8001614:	e1d1      	b.n	80019ba <__aeabi_dadd+0x592>
 8001616:	4661      	mov	r1, ip
 8001618:	4339      	orrs	r1, r7
 800161a:	d000      	beq.n	800161e <__aeabi_dadd+0x1f6>
 800161c:	e1e3      	b.n	80019e6 <__aeabi_dadd+0x5be>
 800161e:	4649      	mov	r1, r9
 8001620:	0758      	lsls	r0, r3, #29
 8001622:	08c9      	lsrs	r1, r1, #3
 8001624:	4301      	orrs	r1, r0
 8001626:	08db      	lsrs	r3, r3, #3
 8001628:	e026      	b.n	8001678 <__aeabi_dadd+0x250>
 800162a:	0029      	movs	r1, r5
 800162c:	4339      	orrs	r1, r7
 800162e:	d100      	bne.n	8001632 <__aeabi_dadd+0x20a>
 8001630:	e091      	b.n	8001756 <__aeabi_dadd+0x32e>
 8001632:	1e51      	subs	r1, r2, #1
 8001634:	2a01      	cmp	r2, #1
 8001636:	d005      	beq.n	8001644 <__aeabi_dadd+0x21c>
 8001638:	4858      	ldr	r0, [pc, #352]	; (800179c <__aeabi_dadd+0x374>)
 800163a:	4282      	cmp	r2, r0
 800163c:	d100      	bne.n	8001640 <__aeabi_dadd+0x218>
 800163e:	e18f      	b.n	8001960 <__aeabi_dadd+0x538>
 8001640:	000a      	movs	r2, r1
 8001642:	e7b8      	b.n	80015b6 <__aeabi_dadd+0x18e>
 8001644:	003d      	movs	r5, r7
 8001646:	444d      	add	r5, r9
 8001648:	454d      	cmp	r5, r9
 800164a:	4189      	sbcs	r1, r1
 800164c:	4463      	add	r3, ip
 800164e:	4698      	mov	r8, r3
 8001650:	4249      	negs	r1, r1
 8001652:	4488      	add	r8, r1
 8001654:	4643      	mov	r3, r8
 8001656:	2602      	movs	r6, #2
 8001658:	021b      	lsls	r3, r3, #8
 800165a:	d500      	bpl.n	800165e <__aeabi_dadd+0x236>
 800165c:	e0eb      	b.n	8001836 <__aeabi_dadd+0x40e>
 800165e:	3e01      	subs	r6, #1
 8001660:	076b      	lsls	r3, r5, #29
 8001662:	d000      	beq.n	8001666 <__aeabi_dadd+0x23e>
 8001664:	e75c      	b.n	8001520 <__aeabi_dadd+0xf8>
 8001666:	4643      	mov	r3, r8
 8001668:	08e9      	lsrs	r1, r5, #3
 800166a:	075a      	lsls	r2, r3, #29
 800166c:	4311      	orrs	r1, r2
 800166e:	0032      	movs	r2, r6
 8001670:	08db      	lsrs	r3, r3, #3
 8001672:	484a      	ldr	r0, [pc, #296]	; (800179c <__aeabi_dadd+0x374>)
 8001674:	4282      	cmp	r2, r0
 8001676:	d021      	beq.n	80016bc <__aeabi_dadd+0x294>
 8001678:	031b      	lsls	r3, r3, #12
 800167a:	0552      	lsls	r2, r2, #21
 800167c:	0b1b      	lsrs	r3, r3, #12
 800167e:	0d52      	lsrs	r2, r2, #21
 8001680:	e76c      	b.n	800155c <__aeabi_dadd+0x134>
 8001682:	2300      	movs	r3, #0
 8001684:	2100      	movs	r1, #0
 8001686:	e769      	b.n	800155c <__aeabi_dadd+0x134>
 8001688:	002a      	movs	r2, r5
 800168a:	433a      	orrs	r2, r7
 800168c:	d069      	beq.n	8001762 <__aeabi_dadd+0x33a>
 800168e:	464a      	mov	r2, r9
 8001690:	0758      	lsls	r0, r3, #29
 8001692:	08d1      	lsrs	r1, r2, #3
 8001694:	08da      	lsrs	r2, r3, #3
 8001696:	2380      	movs	r3, #128	; 0x80
 8001698:	031b      	lsls	r3, r3, #12
 800169a:	4308      	orrs	r0, r1
 800169c:	421a      	tst	r2, r3
 800169e:	d007      	beq.n	80016b0 <__aeabi_dadd+0x288>
 80016a0:	0029      	movs	r1, r5
 80016a2:	08ed      	lsrs	r5, r5, #3
 80016a4:	421d      	tst	r5, r3
 80016a6:	d103      	bne.n	80016b0 <__aeabi_dadd+0x288>
 80016a8:	002a      	movs	r2, r5
 80016aa:	08ff      	lsrs	r7, r7, #3
 80016ac:	0748      	lsls	r0, r1, #29
 80016ae:	4338      	orrs	r0, r7
 80016b0:	0f43      	lsrs	r3, r0, #29
 80016b2:	00c1      	lsls	r1, r0, #3
 80016b4:	075b      	lsls	r3, r3, #29
 80016b6:	08c9      	lsrs	r1, r1, #3
 80016b8:	4319      	orrs	r1, r3
 80016ba:	0013      	movs	r3, r2
 80016bc:	000a      	movs	r2, r1
 80016be:	431a      	orrs	r2, r3
 80016c0:	d100      	bne.n	80016c4 <__aeabi_dadd+0x29c>
 80016c2:	e213      	b.n	8001aec <__aeabi_dadd+0x6c4>
 80016c4:	2280      	movs	r2, #128	; 0x80
 80016c6:	0312      	lsls	r2, r2, #12
 80016c8:	4313      	orrs	r3, r2
 80016ca:	031b      	lsls	r3, r3, #12
 80016cc:	4a33      	ldr	r2, [pc, #204]	; (800179c <__aeabi_dadd+0x374>)
 80016ce:	0b1b      	lsrs	r3, r3, #12
 80016d0:	e744      	b.n	800155c <__aeabi_dadd+0x134>
 80016d2:	2a00      	cmp	r2, #0
 80016d4:	d04b      	beq.n	800176e <__aeabi_dadd+0x346>
 80016d6:	1b8a      	subs	r2, r1, r6
 80016d8:	2e00      	cmp	r6, #0
 80016da:	d100      	bne.n	80016de <__aeabi_dadd+0x2b6>
 80016dc:	e0e7      	b.n	80018ae <__aeabi_dadd+0x486>
 80016de:	482f      	ldr	r0, [pc, #188]	; (800179c <__aeabi_dadd+0x374>)
 80016e0:	4281      	cmp	r1, r0
 80016e2:	d100      	bne.n	80016e6 <__aeabi_dadd+0x2be>
 80016e4:	e195      	b.n	8001a12 <__aeabi_dadd+0x5ea>
 80016e6:	2080      	movs	r0, #128	; 0x80
 80016e8:	0400      	lsls	r0, r0, #16
 80016ea:	4303      	orrs	r3, r0
 80016ec:	2a38      	cmp	r2, #56	; 0x38
 80016ee:	dd00      	ble.n	80016f2 <__aeabi_dadd+0x2ca>
 80016f0:	e143      	b.n	800197a <__aeabi_dadd+0x552>
 80016f2:	2a1f      	cmp	r2, #31
 80016f4:	dd00      	ble.n	80016f8 <__aeabi_dadd+0x2d0>
 80016f6:	e1db      	b.n	8001ab0 <__aeabi_dadd+0x688>
 80016f8:	2020      	movs	r0, #32
 80016fa:	001d      	movs	r5, r3
 80016fc:	464e      	mov	r6, r9
 80016fe:	1a80      	subs	r0, r0, r2
 8001700:	4085      	lsls	r5, r0
 8001702:	40d6      	lsrs	r6, r2
 8001704:	4335      	orrs	r5, r6
 8001706:	464e      	mov	r6, r9
 8001708:	4086      	lsls	r6, r0
 800170a:	0030      	movs	r0, r6
 800170c:	40d3      	lsrs	r3, r2
 800170e:	1e46      	subs	r6, r0, #1
 8001710:	41b0      	sbcs	r0, r6
 8001712:	449c      	add	ip, r3
 8001714:	4305      	orrs	r5, r0
 8001716:	19ed      	adds	r5, r5, r7
 8001718:	42bd      	cmp	r5, r7
 800171a:	419b      	sbcs	r3, r3
 800171c:	425b      	negs	r3, r3
 800171e:	4463      	add	r3, ip
 8001720:	4698      	mov	r8, r3
 8001722:	000e      	movs	r6, r1
 8001724:	e07f      	b.n	8001826 <__aeabi_dadd+0x3fe>
 8001726:	4a1e      	ldr	r2, [pc, #120]	; (80017a0 <__aeabi_dadd+0x378>)
 8001728:	1a76      	subs	r6, r6, r1
 800172a:	4013      	ands	r3, r2
 800172c:	4698      	mov	r8, r3
 800172e:	e6f5      	b.n	800151c <__aeabi_dadd+0xf4>
 8001730:	0028      	movs	r0, r5
 8001732:	f001 fd61 	bl	80031f8 <__clzsi2>
 8001736:	0001      	movs	r1, r0
 8001738:	3118      	adds	r1, #24
 800173a:	291f      	cmp	r1, #31
 800173c:	dc00      	bgt.n	8001740 <__aeabi_dadd+0x318>
 800173e:	e6cf      	b.n	80014e0 <__aeabi_dadd+0xb8>
 8001740:	002b      	movs	r3, r5
 8001742:	3808      	subs	r0, #8
 8001744:	4083      	lsls	r3, r0
 8001746:	2500      	movs	r5, #0
 8001748:	e6d2      	b.n	80014f0 <__aeabi_dadd+0xc8>
 800174a:	4662      	mov	r2, ip
 800174c:	433a      	orrs	r2, r7
 800174e:	0011      	movs	r1, r2
 8001750:	1e4f      	subs	r7, r1, #1
 8001752:	41b9      	sbcs	r1, r7
 8001754:	e6ac      	b.n	80014b0 <__aeabi_dadd+0x88>
 8001756:	4649      	mov	r1, r9
 8001758:	0758      	lsls	r0, r3, #29
 800175a:	08c9      	lsrs	r1, r1, #3
 800175c:	4301      	orrs	r1, r0
 800175e:	08db      	lsrs	r3, r3, #3
 8001760:	e787      	b.n	8001672 <__aeabi_dadd+0x24a>
 8001762:	4649      	mov	r1, r9
 8001764:	075a      	lsls	r2, r3, #29
 8001766:	08c9      	lsrs	r1, r1, #3
 8001768:	4311      	orrs	r1, r2
 800176a:	08db      	lsrs	r3, r3, #3
 800176c:	e7a6      	b.n	80016bc <__aeabi_dadd+0x294>
 800176e:	490d      	ldr	r1, [pc, #52]	; (80017a4 <__aeabi_dadd+0x37c>)
 8001770:	1c70      	adds	r0, r6, #1
 8001772:	4208      	tst	r0, r1
 8001774:	d000      	beq.n	8001778 <__aeabi_dadd+0x350>
 8001776:	e0bb      	b.n	80018f0 <__aeabi_dadd+0x4c8>
 8001778:	2e00      	cmp	r6, #0
 800177a:	d000      	beq.n	800177e <__aeabi_dadd+0x356>
 800177c:	e114      	b.n	80019a8 <__aeabi_dadd+0x580>
 800177e:	4649      	mov	r1, r9
 8001780:	4319      	orrs	r1, r3
 8001782:	d100      	bne.n	8001786 <__aeabi_dadd+0x35e>
 8001784:	e175      	b.n	8001a72 <__aeabi_dadd+0x64a>
 8001786:	0029      	movs	r1, r5
 8001788:	4339      	orrs	r1, r7
 800178a:	d000      	beq.n	800178e <__aeabi_dadd+0x366>
 800178c:	e17e      	b.n	8001a8c <__aeabi_dadd+0x664>
 800178e:	4649      	mov	r1, r9
 8001790:	0758      	lsls	r0, r3, #29
 8001792:	08c9      	lsrs	r1, r1, #3
 8001794:	4301      	orrs	r1, r0
 8001796:	08db      	lsrs	r3, r3, #3
 8001798:	e76e      	b.n	8001678 <__aeabi_dadd+0x250>
 800179a:	46c0      	nop			; (mov r8, r8)
 800179c:	000007ff 	.word	0x000007ff
 80017a0:	ff7fffff 	.word	0xff7fffff
 80017a4:	000007fe 	.word	0x000007fe
 80017a8:	4649      	mov	r1, r9
 80017aa:	1bcd      	subs	r5, r1, r7
 80017ac:	4661      	mov	r1, ip
 80017ae:	1a58      	subs	r0, r3, r1
 80017b0:	45a9      	cmp	r9, r5
 80017b2:	4189      	sbcs	r1, r1
 80017b4:	4249      	negs	r1, r1
 80017b6:	4688      	mov	r8, r1
 80017b8:	0001      	movs	r1, r0
 80017ba:	4640      	mov	r0, r8
 80017bc:	1a09      	subs	r1, r1, r0
 80017be:	4688      	mov	r8, r1
 80017c0:	0209      	lsls	r1, r1, #8
 80017c2:	d500      	bpl.n	80017c6 <__aeabi_dadd+0x39e>
 80017c4:	e0a6      	b.n	8001914 <__aeabi_dadd+0x4ec>
 80017c6:	4641      	mov	r1, r8
 80017c8:	4329      	orrs	r1, r5
 80017ca:	d000      	beq.n	80017ce <__aeabi_dadd+0x3a6>
 80017cc:	e67f      	b.n	80014ce <__aeabi_dadd+0xa6>
 80017ce:	2300      	movs	r3, #0
 80017d0:	2400      	movs	r4, #0
 80017d2:	e751      	b.n	8001678 <__aeabi_dadd+0x250>
 80017d4:	4cc7      	ldr	r4, [pc, #796]	; (8001af4 <__aeabi_dadd+0x6cc>)
 80017d6:	42a1      	cmp	r1, r4
 80017d8:	d100      	bne.n	80017dc <__aeabi_dadd+0x3b4>
 80017da:	e0c7      	b.n	800196c <__aeabi_dadd+0x544>
 80017dc:	2480      	movs	r4, #128	; 0x80
 80017de:	0424      	lsls	r4, r4, #16
 80017e0:	4323      	orrs	r3, r4
 80017e2:	2a38      	cmp	r2, #56	; 0x38
 80017e4:	dc54      	bgt.n	8001890 <__aeabi_dadd+0x468>
 80017e6:	2a1f      	cmp	r2, #31
 80017e8:	dd00      	ble.n	80017ec <__aeabi_dadd+0x3c4>
 80017ea:	e0cc      	b.n	8001986 <__aeabi_dadd+0x55e>
 80017ec:	2420      	movs	r4, #32
 80017ee:	4648      	mov	r0, r9
 80017f0:	1aa4      	subs	r4, r4, r2
 80017f2:	001d      	movs	r5, r3
 80017f4:	464e      	mov	r6, r9
 80017f6:	40a0      	lsls	r0, r4
 80017f8:	40d6      	lsrs	r6, r2
 80017fa:	40a5      	lsls	r5, r4
 80017fc:	0004      	movs	r4, r0
 80017fe:	40d3      	lsrs	r3, r2
 8001800:	4662      	mov	r2, ip
 8001802:	4335      	orrs	r5, r6
 8001804:	1e66      	subs	r6, r4, #1
 8001806:	41b4      	sbcs	r4, r6
 8001808:	1ad3      	subs	r3, r2, r3
 800180a:	469c      	mov	ip, r3
 800180c:	4325      	orrs	r5, r4
 800180e:	e044      	b.n	800189a <__aeabi_dadd+0x472>
 8001810:	4662      	mov	r2, ip
 8001812:	433a      	orrs	r2, r7
 8001814:	0015      	movs	r5, r2
 8001816:	1e6f      	subs	r7, r5, #1
 8001818:	41bd      	sbcs	r5, r7
 800181a:	444d      	add	r5, r9
 800181c:	454d      	cmp	r5, r9
 800181e:	4189      	sbcs	r1, r1
 8001820:	4249      	negs	r1, r1
 8001822:	4688      	mov	r8, r1
 8001824:	4498      	add	r8, r3
 8001826:	4643      	mov	r3, r8
 8001828:	021b      	lsls	r3, r3, #8
 800182a:	d400      	bmi.n	800182e <__aeabi_dadd+0x406>
 800182c:	e718      	b.n	8001660 <__aeabi_dadd+0x238>
 800182e:	4bb1      	ldr	r3, [pc, #708]	; (8001af4 <__aeabi_dadd+0x6cc>)
 8001830:	3601      	adds	r6, #1
 8001832:	429e      	cmp	r6, r3
 8001834:	d049      	beq.n	80018ca <__aeabi_dadd+0x4a2>
 8001836:	4642      	mov	r2, r8
 8001838:	4baf      	ldr	r3, [pc, #700]	; (8001af8 <__aeabi_dadd+0x6d0>)
 800183a:	2101      	movs	r1, #1
 800183c:	401a      	ands	r2, r3
 800183e:	0013      	movs	r3, r2
 8001840:	086a      	lsrs	r2, r5, #1
 8001842:	400d      	ands	r5, r1
 8001844:	4315      	orrs	r5, r2
 8001846:	07d9      	lsls	r1, r3, #31
 8001848:	085b      	lsrs	r3, r3, #1
 800184a:	4698      	mov	r8, r3
 800184c:	430d      	orrs	r5, r1
 800184e:	e665      	b.n	800151c <__aeabi_dadd+0xf4>
 8001850:	0018      	movs	r0, r3
 8001852:	3e1f      	subs	r6, #31
 8001854:	40f0      	lsrs	r0, r6
 8001856:	2a20      	cmp	r2, #32
 8001858:	d003      	beq.n	8001862 <__aeabi_dadd+0x43a>
 800185a:	2140      	movs	r1, #64	; 0x40
 800185c:	1a8a      	subs	r2, r1, r2
 800185e:	4093      	lsls	r3, r2
 8001860:	431d      	orrs	r5, r3
 8001862:	1e69      	subs	r1, r5, #1
 8001864:	418d      	sbcs	r5, r1
 8001866:	2300      	movs	r3, #0
 8001868:	2600      	movs	r6, #0
 800186a:	4698      	mov	r8, r3
 800186c:	4305      	orrs	r5, r0
 800186e:	e6f7      	b.n	8001660 <__aeabi_dadd+0x238>
 8001870:	0011      	movs	r1, r2
 8001872:	4665      	mov	r5, ip
 8001874:	3920      	subs	r1, #32
 8001876:	40cd      	lsrs	r5, r1
 8001878:	2a20      	cmp	r2, #32
 800187a:	d004      	beq.n	8001886 <__aeabi_dadd+0x45e>
 800187c:	2040      	movs	r0, #64	; 0x40
 800187e:	4661      	mov	r1, ip
 8001880:	1a82      	subs	r2, r0, r2
 8001882:	4091      	lsls	r1, r2
 8001884:	430f      	orrs	r7, r1
 8001886:	0039      	movs	r1, r7
 8001888:	1e4f      	subs	r7, r1, #1
 800188a:	41b9      	sbcs	r1, r7
 800188c:	4329      	orrs	r1, r5
 800188e:	e60f      	b.n	80014b0 <__aeabi_dadd+0x88>
 8001890:	464a      	mov	r2, r9
 8001892:	4313      	orrs	r3, r2
 8001894:	001d      	movs	r5, r3
 8001896:	1e6b      	subs	r3, r5, #1
 8001898:	419d      	sbcs	r5, r3
 800189a:	1b7d      	subs	r5, r7, r5
 800189c:	42af      	cmp	r7, r5
 800189e:	419b      	sbcs	r3, r3
 80018a0:	4662      	mov	r2, ip
 80018a2:	425b      	negs	r3, r3
 80018a4:	1ad3      	subs	r3, r2, r3
 80018a6:	4698      	mov	r8, r3
 80018a8:	4654      	mov	r4, sl
 80018aa:	000e      	movs	r6, r1
 80018ac:	e607      	b.n	80014be <__aeabi_dadd+0x96>
 80018ae:	4648      	mov	r0, r9
 80018b0:	4318      	orrs	r0, r3
 80018b2:	d100      	bne.n	80018b6 <__aeabi_dadd+0x48e>
 80018b4:	e0b3      	b.n	8001a1e <__aeabi_dadd+0x5f6>
 80018b6:	1e50      	subs	r0, r2, #1
 80018b8:	2a01      	cmp	r2, #1
 80018ba:	d100      	bne.n	80018be <__aeabi_dadd+0x496>
 80018bc:	e10d      	b.n	8001ada <__aeabi_dadd+0x6b2>
 80018be:	4d8d      	ldr	r5, [pc, #564]	; (8001af4 <__aeabi_dadd+0x6cc>)
 80018c0:	42aa      	cmp	r2, r5
 80018c2:	d100      	bne.n	80018c6 <__aeabi_dadd+0x49e>
 80018c4:	e0a5      	b.n	8001a12 <__aeabi_dadd+0x5ea>
 80018c6:	0002      	movs	r2, r0
 80018c8:	e710      	b.n	80016ec <__aeabi_dadd+0x2c4>
 80018ca:	0032      	movs	r2, r6
 80018cc:	2300      	movs	r3, #0
 80018ce:	2100      	movs	r1, #0
 80018d0:	e644      	b.n	800155c <__aeabi_dadd+0x134>
 80018d2:	2120      	movs	r1, #32
 80018d4:	0038      	movs	r0, r7
 80018d6:	1a89      	subs	r1, r1, r2
 80018d8:	4665      	mov	r5, ip
 80018da:	408f      	lsls	r7, r1
 80018dc:	408d      	lsls	r5, r1
 80018de:	40d0      	lsrs	r0, r2
 80018e0:	1e79      	subs	r1, r7, #1
 80018e2:	418f      	sbcs	r7, r1
 80018e4:	4305      	orrs	r5, r0
 80018e6:	433d      	orrs	r5, r7
 80018e8:	4667      	mov	r7, ip
 80018ea:	40d7      	lsrs	r7, r2
 80018ec:	19db      	adds	r3, r3, r7
 80018ee:	e794      	b.n	800181a <__aeabi_dadd+0x3f2>
 80018f0:	4a80      	ldr	r2, [pc, #512]	; (8001af4 <__aeabi_dadd+0x6cc>)
 80018f2:	4290      	cmp	r0, r2
 80018f4:	d100      	bne.n	80018f8 <__aeabi_dadd+0x4d0>
 80018f6:	e0ec      	b.n	8001ad2 <__aeabi_dadd+0x6aa>
 80018f8:	0039      	movs	r1, r7
 80018fa:	4449      	add	r1, r9
 80018fc:	4549      	cmp	r1, r9
 80018fe:	4192      	sbcs	r2, r2
 8001900:	4463      	add	r3, ip
 8001902:	4252      	negs	r2, r2
 8001904:	189b      	adds	r3, r3, r2
 8001906:	07dd      	lsls	r5, r3, #31
 8001908:	0849      	lsrs	r1, r1, #1
 800190a:	085b      	lsrs	r3, r3, #1
 800190c:	4698      	mov	r8, r3
 800190e:	0006      	movs	r6, r0
 8001910:	430d      	orrs	r5, r1
 8001912:	e6a5      	b.n	8001660 <__aeabi_dadd+0x238>
 8001914:	464a      	mov	r2, r9
 8001916:	1abd      	subs	r5, r7, r2
 8001918:	42af      	cmp	r7, r5
 800191a:	4189      	sbcs	r1, r1
 800191c:	4662      	mov	r2, ip
 800191e:	4249      	negs	r1, r1
 8001920:	1ad3      	subs	r3, r2, r3
 8001922:	1a5b      	subs	r3, r3, r1
 8001924:	4698      	mov	r8, r3
 8001926:	4654      	mov	r4, sl
 8001928:	e5d1      	b.n	80014ce <__aeabi_dadd+0xa6>
 800192a:	076c      	lsls	r4, r5, #29
 800192c:	08f9      	lsrs	r1, r7, #3
 800192e:	4321      	orrs	r1, r4
 8001930:	08eb      	lsrs	r3, r5, #3
 8001932:	0004      	movs	r4, r0
 8001934:	e69d      	b.n	8001672 <__aeabi_dadd+0x24a>
 8001936:	464a      	mov	r2, r9
 8001938:	431a      	orrs	r2, r3
 800193a:	d175      	bne.n	8001a28 <__aeabi_dadd+0x600>
 800193c:	4661      	mov	r1, ip
 800193e:	4339      	orrs	r1, r7
 8001940:	d114      	bne.n	800196c <__aeabi_dadd+0x544>
 8001942:	2380      	movs	r3, #128	; 0x80
 8001944:	2400      	movs	r4, #0
 8001946:	031b      	lsls	r3, r3, #12
 8001948:	e6bc      	b.n	80016c4 <__aeabi_dadd+0x29c>
 800194a:	464a      	mov	r2, r9
 800194c:	1bd5      	subs	r5, r2, r7
 800194e:	45a9      	cmp	r9, r5
 8001950:	4189      	sbcs	r1, r1
 8001952:	4662      	mov	r2, ip
 8001954:	4249      	negs	r1, r1
 8001956:	1a9b      	subs	r3, r3, r2
 8001958:	1a5b      	subs	r3, r3, r1
 800195a:	4698      	mov	r8, r3
 800195c:	2601      	movs	r6, #1
 800195e:	e5ae      	b.n	80014be <__aeabi_dadd+0x96>
 8001960:	464a      	mov	r2, r9
 8001962:	08d1      	lsrs	r1, r2, #3
 8001964:	075a      	lsls	r2, r3, #29
 8001966:	4311      	orrs	r1, r2
 8001968:	08db      	lsrs	r3, r3, #3
 800196a:	e6a7      	b.n	80016bc <__aeabi_dadd+0x294>
 800196c:	4663      	mov	r3, ip
 800196e:	08f9      	lsrs	r1, r7, #3
 8001970:	075a      	lsls	r2, r3, #29
 8001972:	4654      	mov	r4, sl
 8001974:	4311      	orrs	r1, r2
 8001976:	08db      	lsrs	r3, r3, #3
 8001978:	e6a0      	b.n	80016bc <__aeabi_dadd+0x294>
 800197a:	464a      	mov	r2, r9
 800197c:	4313      	orrs	r3, r2
 800197e:	001d      	movs	r5, r3
 8001980:	1e6b      	subs	r3, r5, #1
 8001982:	419d      	sbcs	r5, r3
 8001984:	e6c7      	b.n	8001716 <__aeabi_dadd+0x2ee>
 8001986:	0014      	movs	r4, r2
 8001988:	001e      	movs	r6, r3
 800198a:	3c20      	subs	r4, #32
 800198c:	40e6      	lsrs	r6, r4
 800198e:	2a20      	cmp	r2, #32
 8001990:	d005      	beq.n	800199e <__aeabi_dadd+0x576>
 8001992:	2440      	movs	r4, #64	; 0x40
 8001994:	1aa2      	subs	r2, r4, r2
 8001996:	4093      	lsls	r3, r2
 8001998:	464a      	mov	r2, r9
 800199a:	431a      	orrs	r2, r3
 800199c:	4691      	mov	r9, r2
 800199e:	464d      	mov	r5, r9
 80019a0:	1e6b      	subs	r3, r5, #1
 80019a2:	419d      	sbcs	r5, r3
 80019a4:	4335      	orrs	r5, r6
 80019a6:	e778      	b.n	800189a <__aeabi_dadd+0x472>
 80019a8:	464a      	mov	r2, r9
 80019aa:	431a      	orrs	r2, r3
 80019ac:	d000      	beq.n	80019b0 <__aeabi_dadd+0x588>
 80019ae:	e66b      	b.n	8001688 <__aeabi_dadd+0x260>
 80019b0:	076b      	lsls	r3, r5, #29
 80019b2:	08f9      	lsrs	r1, r7, #3
 80019b4:	4319      	orrs	r1, r3
 80019b6:	08eb      	lsrs	r3, r5, #3
 80019b8:	e680      	b.n	80016bc <__aeabi_dadd+0x294>
 80019ba:	4661      	mov	r1, ip
 80019bc:	4339      	orrs	r1, r7
 80019be:	d054      	beq.n	8001a6a <__aeabi_dadd+0x642>
 80019c0:	4663      	mov	r3, ip
 80019c2:	08f9      	lsrs	r1, r7, #3
 80019c4:	075c      	lsls	r4, r3, #29
 80019c6:	4321      	orrs	r1, r4
 80019c8:	08db      	lsrs	r3, r3, #3
 80019ca:	0004      	movs	r4, r0
 80019cc:	e654      	b.n	8001678 <__aeabi_dadd+0x250>
 80019ce:	464a      	mov	r2, r9
 80019d0:	1abd      	subs	r5, r7, r2
 80019d2:	42af      	cmp	r7, r5
 80019d4:	4189      	sbcs	r1, r1
 80019d6:	4662      	mov	r2, ip
 80019d8:	4249      	negs	r1, r1
 80019da:	1ad3      	subs	r3, r2, r3
 80019dc:	1a5b      	subs	r3, r3, r1
 80019de:	4698      	mov	r8, r3
 80019e0:	0004      	movs	r4, r0
 80019e2:	2601      	movs	r6, #1
 80019e4:	e56b      	b.n	80014be <__aeabi_dadd+0x96>
 80019e6:	464a      	mov	r2, r9
 80019e8:	1bd5      	subs	r5, r2, r7
 80019ea:	45a9      	cmp	r9, r5
 80019ec:	4189      	sbcs	r1, r1
 80019ee:	4662      	mov	r2, ip
 80019f0:	4249      	negs	r1, r1
 80019f2:	1a9a      	subs	r2, r3, r2
 80019f4:	1a52      	subs	r2, r2, r1
 80019f6:	4690      	mov	r8, r2
 80019f8:	0212      	lsls	r2, r2, #8
 80019fa:	d532      	bpl.n	8001a62 <__aeabi_dadd+0x63a>
 80019fc:	464a      	mov	r2, r9
 80019fe:	1abd      	subs	r5, r7, r2
 8001a00:	42af      	cmp	r7, r5
 8001a02:	4189      	sbcs	r1, r1
 8001a04:	4662      	mov	r2, ip
 8001a06:	4249      	negs	r1, r1
 8001a08:	1ad3      	subs	r3, r2, r3
 8001a0a:	1a5b      	subs	r3, r3, r1
 8001a0c:	4698      	mov	r8, r3
 8001a0e:	0004      	movs	r4, r0
 8001a10:	e584      	b.n	800151c <__aeabi_dadd+0xf4>
 8001a12:	4663      	mov	r3, ip
 8001a14:	08f9      	lsrs	r1, r7, #3
 8001a16:	075a      	lsls	r2, r3, #29
 8001a18:	4311      	orrs	r1, r2
 8001a1a:	08db      	lsrs	r3, r3, #3
 8001a1c:	e64e      	b.n	80016bc <__aeabi_dadd+0x294>
 8001a1e:	08f9      	lsrs	r1, r7, #3
 8001a20:	0768      	lsls	r0, r5, #29
 8001a22:	4301      	orrs	r1, r0
 8001a24:	08eb      	lsrs	r3, r5, #3
 8001a26:	e624      	b.n	8001672 <__aeabi_dadd+0x24a>
 8001a28:	4662      	mov	r2, ip
 8001a2a:	433a      	orrs	r2, r7
 8001a2c:	d100      	bne.n	8001a30 <__aeabi_dadd+0x608>
 8001a2e:	e698      	b.n	8001762 <__aeabi_dadd+0x33a>
 8001a30:	464a      	mov	r2, r9
 8001a32:	08d1      	lsrs	r1, r2, #3
 8001a34:	075a      	lsls	r2, r3, #29
 8001a36:	4311      	orrs	r1, r2
 8001a38:	08da      	lsrs	r2, r3, #3
 8001a3a:	2380      	movs	r3, #128	; 0x80
 8001a3c:	031b      	lsls	r3, r3, #12
 8001a3e:	421a      	tst	r2, r3
 8001a40:	d008      	beq.n	8001a54 <__aeabi_dadd+0x62c>
 8001a42:	4660      	mov	r0, ip
 8001a44:	08c5      	lsrs	r5, r0, #3
 8001a46:	421d      	tst	r5, r3
 8001a48:	d104      	bne.n	8001a54 <__aeabi_dadd+0x62c>
 8001a4a:	4654      	mov	r4, sl
 8001a4c:	002a      	movs	r2, r5
 8001a4e:	08f9      	lsrs	r1, r7, #3
 8001a50:	0743      	lsls	r3, r0, #29
 8001a52:	4319      	orrs	r1, r3
 8001a54:	0f4b      	lsrs	r3, r1, #29
 8001a56:	00c9      	lsls	r1, r1, #3
 8001a58:	075b      	lsls	r3, r3, #29
 8001a5a:	08c9      	lsrs	r1, r1, #3
 8001a5c:	4319      	orrs	r1, r3
 8001a5e:	0013      	movs	r3, r2
 8001a60:	e62c      	b.n	80016bc <__aeabi_dadd+0x294>
 8001a62:	4641      	mov	r1, r8
 8001a64:	4329      	orrs	r1, r5
 8001a66:	d000      	beq.n	8001a6a <__aeabi_dadd+0x642>
 8001a68:	e5fa      	b.n	8001660 <__aeabi_dadd+0x238>
 8001a6a:	2300      	movs	r3, #0
 8001a6c:	000a      	movs	r2, r1
 8001a6e:	2400      	movs	r4, #0
 8001a70:	e602      	b.n	8001678 <__aeabi_dadd+0x250>
 8001a72:	076b      	lsls	r3, r5, #29
 8001a74:	08f9      	lsrs	r1, r7, #3
 8001a76:	4319      	orrs	r1, r3
 8001a78:	08eb      	lsrs	r3, r5, #3
 8001a7a:	e5fd      	b.n	8001678 <__aeabi_dadd+0x250>
 8001a7c:	4663      	mov	r3, ip
 8001a7e:	08f9      	lsrs	r1, r7, #3
 8001a80:	075b      	lsls	r3, r3, #29
 8001a82:	4319      	orrs	r1, r3
 8001a84:	4663      	mov	r3, ip
 8001a86:	0004      	movs	r4, r0
 8001a88:	08db      	lsrs	r3, r3, #3
 8001a8a:	e617      	b.n	80016bc <__aeabi_dadd+0x294>
 8001a8c:	003d      	movs	r5, r7
 8001a8e:	444d      	add	r5, r9
 8001a90:	4463      	add	r3, ip
 8001a92:	454d      	cmp	r5, r9
 8001a94:	4189      	sbcs	r1, r1
 8001a96:	4698      	mov	r8, r3
 8001a98:	4249      	negs	r1, r1
 8001a9a:	4488      	add	r8, r1
 8001a9c:	4643      	mov	r3, r8
 8001a9e:	021b      	lsls	r3, r3, #8
 8001aa0:	d400      	bmi.n	8001aa4 <__aeabi_dadd+0x67c>
 8001aa2:	e5dd      	b.n	8001660 <__aeabi_dadd+0x238>
 8001aa4:	4642      	mov	r2, r8
 8001aa6:	4b14      	ldr	r3, [pc, #80]	; (8001af8 <__aeabi_dadd+0x6d0>)
 8001aa8:	2601      	movs	r6, #1
 8001aaa:	401a      	ands	r2, r3
 8001aac:	4690      	mov	r8, r2
 8001aae:	e5d7      	b.n	8001660 <__aeabi_dadd+0x238>
 8001ab0:	0010      	movs	r0, r2
 8001ab2:	001e      	movs	r6, r3
 8001ab4:	3820      	subs	r0, #32
 8001ab6:	40c6      	lsrs	r6, r0
 8001ab8:	2a20      	cmp	r2, #32
 8001aba:	d005      	beq.n	8001ac8 <__aeabi_dadd+0x6a0>
 8001abc:	2040      	movs	r0, #64	; 0x40
 8001abe:	1a82      	subs	r2, r0, r2
 8001ac0:	4093      	lsls	r3, r2
 8001ac2:	464a      	mov	r2, r9
 8001ac4:	431a      	orrs	r2, r3
 8001ac6:	4691      	mov	r9, r2
 8001ac8:	464d      	mov	r5, r9
 8001aca:	1e6b      	subs	r3, r5, #1
 8001acc:	419d      	sbcs	r5, r3
 8001ace:	4335      	orrs	r5, r6
 8001ad0:	e621      	b.n	8001716 <__aeabi_dadd+0x2ee>
 8001ad2:	0002      	movs	r2, r0
 8001ad4:	2300      	movs	r3, #0
 8001ad6:	2100      	movs	r1, #0
 8001ad8:	e540      	b.n	800155c <__aeabi_dadd+0x134>
 8001ada:	464a      	mov	r2, r9
 8001adc:	19d5      	adds	r5, r2, r7
 8001ade:	42bd      	cmp	r5, r7
 8001ae0:	4189      	sbcs	r1, r1
 8001ae2:	4463      	add	r3, ip
 8001ae4:	4698      	mov	r8, r3
 8001ae6:	4249      	negs	r1, r1
 8001ae8:	4488      	add	r8, r1
 8001aea:	e5b3      	b.n	8001654 <__aeabi_dadd+0x22c>
 8001aec:	2100      	movs	r1, #0
 8001aee:	4a01      	ldr	r2, [pc, #4]	; (8001af4 <__aeabi_dadd+0x6cc>)
 8001af0:	000b      	movs	r3, r1
 8001af2:	e533      	b.n	800155c <__aeabi_dadd+0x134>
 8001af4:	000007ff 	.word	0x000007ff
 8001af8:	ff7fffff 	.word	0xff7fffff

08001afc <__aeabi_ddiv>:
 8001afc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001afe:	4657      	mov	r7, sl
 8001b00:	464e      	mov	r6, r9
 8001b02:	4645      	mov	r5, r8
 8001b04:	46de      	mov	lr, fp
 8001b06:	b5e0      	push	{r5, r6, r7, lr}
 8001b08:	4681      	mov	r9, r0
 8001b0a:	0005      	movs	r5, r0
 8001b0c:	030c      	lsls	r4, r1, #12
 8001b0e:	0048      	lsls	r0, r1, #1
 8001b10:	4692      	mov	sl, r2
 8001b12:	001f      	movs	r7, r3
 8001b14:	b085      	sub	sp, #20
 8001b16:	0b24      	lsrs	r4, r4, #12
 8001b18:	0d40      	lsrs	r0, r0, #21
 8001b1a:	0fce      	lsrs	r6, r1, #31
 8001b1c:	2800      	cmp	r0, #0
 8001b1e:	d059      	beq.n	8001bd4 <__aeabi_ddiv+0xd8>
 8001b20:	4b87      	ldr	r3, [pc, #540]	; (8001d40 <__aeabi_ddiv+0x244>)
 8001b22:	4298      	cmp	r0, r3
 8001b24:	d100      	bne.n	8001b28 <__aeabi_ddiv+0x2c>
 8001b26:	e098      	b.n	8001c5a <__aeabi_ddiv+0x15e>
 8001b28:	0f6b      	lsrs	r3, r5, #29
 8001b2a:	00e4      	lsls	r4, r4, #3
 8001b2c:	431c      	orrs	r4, r3
 8001b2e:	2380      	movs	r3, #128	; 0x80
 8001b30:	041b      	lsls	r3, r3, #16
 8001b32:	4323      	orrs	r3, r4
 8001b34:	4698      	mov	r8, r3
 8001b36:	4b83      	ldr	r3, [pc, #524]	; (8001d44 <__aeabi_ddiv+0x248>)
 8001b38:	00ed      	lsls	r5, r5, #3
 8001b3a:	469b      	mov	fp, r3
 8001b3c:	2300      	movs	r3, #0
 8001b3e:	4699      	mov	r9, r3
 8001b40:	4483      	add	fp, r0
 8001b42:	9300      	str	r3, [sp, #0]
 8001b44:	033c      	lsls	r4, r7, #12
 8001b46:	007b      	lsls	r3, r7, #1
 8001b48:	4650      	mov	r0, sl
 8001b4a:	0b24      	lsrs	r4, r4, #12
 8001b4c:	0d5b      	lsrs	r3, r3, #21
 8001b4e:	0fff      	lsrs	r7, r7, #31
 8001b50:	2b00      	cmp	r3, #0
 8001b52:	d067      	beq.n	8001c24 <__aeabi_ddiv+0x128>
 8001b54:	4a7a      	ldr	r2, [pc, #488]	; (8001d40 <__aeabi_ddiv+0x244>)
 8001b56:	4293      	cmp	r3, r2
 8001b58:	d018      	beq.n	8001b8c <__aeabi_ddiv+0x90>
 8001b5a:	497a      	ldr	r1, [pc, #488]	; (8001d44 <__aeabi_ddiv+0x248>)
 8001b5c:	0f42      	lsrs	r2, r0, #29
 8001b5e:	468c      	mov	ip, r1
 8001b60:	00e4      	lsls	r4, r4, #3
 8001b62:	4659      	mov	r1, fp
 8001b64:	4314      	orrs	r4, r2
 8001b66:	2280      	movs	r2, #128	; 0x80
 8001b68:	4463      	add	r3, ip
 8001b6a:	0412      	lsls	r2, r2, #16
 8001b6c:	1acb      	subs	r3, r1, r3
 8001b6e:	4314      	orrs	r4, r2
 8001b70:	469b      	mov	fp, r3
 8001b72:	00c2      	lsls	r2, r0, #3
 8001b74:	2000      	movs	r0, #0
 8001b76:	0033      	movs	r3, r6
 8001b78:	407b      	eors	r3, r7
 8001b7a:	469a      	mov	sl, r3
 8001b7c:	464b      	mov	r3, r9
 8001b7e:	2b0f      	cmp	r3, #15
 8001b80:	d900      	bls.n	8001b84 <__aeabi_ddiv+0x88>
 8001b82:	e0ef      	b.n	8001d64 <__aeabi_ddiv+0x268>
 8001b84:	4970      	ldr	r1, [pc, #448]	; (8001d48 <__aeabi_ddiv+0x24c>)
 8001b86:	009b      	lsls	r3, r3, #2
 8001b88:	58cb      	ldr	r3, [r1, r3]
 8001b8a:	469f      	mov	pc, r3
 8001b8c:	4b6f      	ldr	r3, [pc, #444]	; (8001d4c <__aeabi_ddiv+0x250>)
 8001b8e:	4652      	mov	r2, sl
 8001b90:	469c      	mov	ip, r3
 8001b92:	4322      	orrs	r2, r4
 8001b94:	44e3      	add	fp, ip
 8001b96:	2a00      	cmp	r2, #0
 8001b98:	d000      	beq.n	8001b9c <__aeabi_ddiv+0xa0>
 8001b9a:	e095      	b.n	8001cc8 <__aeabi_ddiv+0x1cc>
 8001b9c:	4649      	mov	r1, r9
 8001b9e:	2302      	movs	r3, #2
 8001ba0:	4319      	orrs	r1, r3
 8001ba2:	4689      	mov	r9, r1
 8001ba4:	2400      	movs	r4, #0
 8001ba6:	2002      	movs	r0, #2
 8001ba8:	e7e5      	b.n	8001b76 <__aeabi_ddiv+0x7a>
 8001baa:	2300      	movs	r3, #0
 8001bac:	2400      	movs	r4, #0
 8001bae:	2500      	movs	r5, #0
 8001bb0:	4652      	mov	r2, sl
 8001bb2:	051b      	lsls	r3, r3, #20
 8001bb4:	4323      	orrs	r3, r4
 8001bb6:	07d2      	lsls	r2, r2, #31
 8001bb8:	4313      	orrs	r3, r2
 8001bba:	0028      	movs	r0, r5
 8001bbc:	0019      	movs	r1, r3
 8001bbe:	b005      	add	sp, #20
 8001bc0:	bcf0      	pop	{r4, r5, r6, r7}
 8001bc2:	46bb      	mov	fp, r7
 8001bc4:	46b2      	mov	sl, r6
 8001bc6:	46a9      	mov	r9, r5
 8001bc8:	46a0      	mov	r8, r4
 8001bca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001bcc:	2400      	movs	r4, #0
 8001bce:	2500      	movs	r5, #0
 8001bd0:	4b5b      	ldr	r3, [pc, #364]	; (8001d40 <__aeabi_ddiv+0x244>)
 8001bd2:	e7ed      	b.n	8001bb0 <__aeabi_ddiv+0xb4>
 8001bd4:	464b      	mov	r3, r9
 8001bd6:	4323      	orrs	r3, r4
 8001bd8:	4698      	mov	r8, r3
 8001bda:	d100      	bne.n	8001bde <__aeabi_ddiv+0xe2>
 8001bdc:	e089      	b.n	8001cf2 <__aeabi_ddiv+0x1f6>
 8001bde:	2c00      	cmp	r4, #0
 8001be0:	d100      	bne.n	8001be4 <__aeabi_ddiv+0xe8>
 8001be2:	e1e0      	b.n	8001fa6 <__aeabi_ddiv+0x4aa>
 8001be4:	0020      	movs	r0, r4
 8001be6:	f001 fb07 	bl	80031f8 <__clzsi2>
 8001bea:	0001      	movs	r1, r0
 8001bec:	0002      	movs	r2, r0
 8001bee:	390b      	subs	r1, #11
 8001bf0:	231d      	movs	r3, #29
 8001bf2:	1a5b      	subs	r3, r3, r1
 8001bf4:	4649      	mov	r1, r9
 8001bf6:	0010      	movs	r0, r2
 8001bf8:	40d9      	lsrs	r1, r3
 8001bfa:	3808      	subs	r0, #8
 8001bfc:	4084      	lsls	r4, r0
 8001bfe:	000b      	movs	r3, r1
 8001c00:	464d      	mov	r5, r9
 8001c02:	4323      	orrs	r3, r4
 8001c04:	4698      	mov	r8, r3
 8001c06:	4085      	lsls	r5, r0
 8001c08:	4851      	ldr	r0, [pc, #324]	; (8001d50 <__aeabi_ddiv+0x254>)
 8001c0a:	033c      	lsls	r4, r7, #12
 8001c0c:	1a83      	subs	r3, r0, r2
 8001c0e:	469b      	mov	fp, r3
 8001c10:	2300      	movs	r3, #0
 8001c12:	4699      	mov	r9, r3
 8001c14:	9300      	str	r3, [sp, #0]
 8001c16:	007b      	lsls	r3, r7, #1
 8001c18:	4650      	mov	r0, sl
 8001c1a:	0b24      	lsrs	r4, r4, #12
 8001c1c:	0d5b      	lsrs	r3, r3, #21
 8001c1e:	0fff      	lsrs	r7, r7, #31
 8001c20:	2b00      	cmp	r3, #0
 8001c22:	d197      	bne.n	8001b54 <__aeabi_ddiv+0x58>
 8001c24:	4652      	mov	r2, sl
 8001c26:	4322      	orrs	r2, r4
 8001c28:	d055      	beq.n	8001cd6 <__aeabi_ddiv+0x1da>
 8001c2a:	2c00      	cmp	r4, #0
 8001c2c:	d100      	bne.n	8001c30 <__aeabi_ddiv+0x134>
 8001c2e:	e1ca      	b.n	8001fc6 <__aeabi_ddiv+0x4ca>
 8001c30:	0020      	movs	r0, r4
 8001c32:	f001 fae1 	bl	80031f8 <__clzsi2>
 8001c36:	0002      	movs	r2, r0
 8001c38:	3a0b      	subs	r2, #11
 8001c3a:	231d      	movs	r3, #29
 8001c3c:	0001      	movs	r1, r0
 8001c3e:	1a9b      	subs	r3, r3, r2
 8001c40:	4652      	mov	r2, sl
 8001c42:	3908      	subs	r1, #8
 8001c44:	40da      	lsrs	r2, r3
 8001c46:	408c      	lsls	r4, r1
 8001c48:	4314      	orrs	r4, r2
 8001c4a:	4652      	mov	r2, sl
 8001c4c:	408a      	lsls	r2, r1
 8001c4e:	4b41      	ldr	r3, [pc, #260]	; (8001d54 <__aeabi_ddiv+0x258>)
 8001c50:	4458      	add	r0, fp
 8001c52:	469b      	mov	fp, r3
 8001c54:	4483      	add	fp, r0
 8001c56:	2000      	movs	r0, #0
 8001c58:	e78d      	b.n	8001b76 <__aeabi_ddiv+0x7a>
 8001c5a:	464b      	mov	r3, r9
 8001c5c:	4323      	orrs	r3, r4
 8001c5e:	4698      	mov	r8, r3
 8001c60:	d140      	bne.n	8001ce4 <__aeabi_ddiv+0x1e8>
 8001c62:	2308      	movs	r3, #8
 8001c64:	4699      	mov	r9, r3
 8001c66:	3b06      	subs	r3, #6
 8001c68:	2500      	movs	r5, #0
 8001c6a:	4683      	mov	fp, r0
 8001c6c:	9300      	str	r3, [sp, #0]
 8001c6e:	e769      	b.n	8001b44 <__aeabi_ddiv+0x48>
 8001c70:	46b2      	mov	sl, r6
 8001c72:	9b00      	ldr	r3, [sp, #0]
 8001c74:	2b02      	cmp	r3, #2
 8001c76:	d0a9      	beq.n	8001bcc <__aeabi_ddiv+0xd0>
 8001c78:	2b03      	cmp	r3, #3
 8001c7a:	d100      	bne.n	8001c7e <__aeabi_ddiv+0x182>
 8001c7c:	e211      	b.n	80020a2 <__aeabi_ddiv+0x5a6>
 8001c7e:	2b01      	cmp	r3, #1
 8001c80:	d093      	beq.n	8001baa <__aeabi_ddiv+0xae>
 8001c82:	4a35      	ldr	r2, [pc, #212]	; (8001d58 <__aeabi_ddiv+0x25c>)
 8001c84:	445a      	add	r2, fp
 8001c86:	2a00      	cmp	r2, #0
 8001c88:	dc00      	bgt.n	8001c8c <__aeabi_ddiv+0x190>
 8001c8a:	e13c      	b.n	8001f06 <__aeabi_ddiv+0x40a>
 8001c8c:	076b      	lsls	r3, r5, #29
 8001c8e:	d000      	beq.n	8001c92 <__aeabi_ddiv+0x196>
 8001c90:	e1a7      	b.n	8001fe2 <__aeabi_ddiv+0x4e6>
 8001c92:	08ed      	lsrs	r5, r5, #3
 8001c94:	4643      	mov	r3, r8
 8001c96:	01db      	lsls	r3, r3, #7
 8001c98:	d506      	bpl.n	8001ca8 <__aeabi_ddiv+0x1ac>
 8001c9a:	4642      	mov	r2, r8
 8001c9c:	4b2f      	ldr	r3, [pc, #188]	; (8001d5c <__aeabi_ddiv+0x260>)
 8001c9e:	401a      	ands	r2, r3
 8001ca0:	4690      	mov	r8, r2
 8001ca2:	2280      	movs	r2, #128	; 0x80
 8001ca4:	00d2      	lsls	r2, r2, #3
 8001ca6:	445a      	add	r2, fp
 8001ca8:	4b2d      	ldr	r3, [pc, #180]	; (8001d60 <__aeabi_ddiv+0x264>)
 8001caa:	429a      	cmp	r2, r3
 8001cac:	dc8e      	bgt.n	8001bcc <__aeabi_ddiv+0xd0>
 8001cae:	4643      	mov	r3, r8
 8001cb0:	0552      	lsls	r2, r2, #21
 8001cb2:	0758      	lsls	r0, r3, #29
 8001cb4:	025c      	lsls	r4, r3, #9
 8001cb6:	4305      	orrs	r5, r0
 8001cb8:	0b24      	lsrs	r4, r4, #12
 8001cba:	0d53      	lsrs	r3, r2, #21
 8001cbc:	e778      	b.n	8001bb0 <__aeabi_ddiv+0xb4>
 8001cbe:	46ba      	mov	sl, r7
 8001cc0:	46a0      	mov	r8, r4
 8001cc2:	0015      	movs	r5, r2
 8001cc4:	9000      	str	r0, [sp, #0]
 8001cc6:	e7d4      	b.n	8001c72 <__aeabi_ddiv+0x176>
 8001cc8:	464a      	mov	r2, r9
 8001cca:	2303      	movs	r3, #3
 8001ccc:	431a      	orrs	r2, r3
 8001cce:	4691      	mov	r9, r2
 8001cd0:	2003      	movs	r0, #3
 8001cd2:	4652      	mov	r2, sl
 8001cd4:	e74f      	b.n	8001b76 <__aeabi_ddiv+0x7a>
 8001cd6:	4649      	mov	r1, r9
 8001cd8:	2301      	movs	r3, #1
 8001cda:	4319      	orrs	r1, r3
 8001cdc:	4689      	mov	r9, r1
 8001cde:	2400      	movs	r4, #0
 8001ce0:	2001      	movs	r0, #1
 8001ce2:	e748      	b.n	8001b76 <__aeabi_ddiv+0x7a>
 8001ce4:	230c      	movs	r3, #12
 8001ce6:	4699      	mov	r9, r3
 8001ce8:	3b09      	subs	r3, #9
 8001cea:	46a0      	mov	r8, r4
 8001cec:	4683      	mov	fp, r0
 8001cee:	9300      	str	r3, [sp, #0]
 8001cf0:	e728      	b.n	8001b44 <__aeabi_ddiv+0x48>
 8001cf2:	2304      	movs	r3, #4
 8001cf4:	4699      	mov	r9, r3
 8001cf6:	2300      	movs	r3, #0
 8001cf8:	469b      	mov	fp, r3
 8001cfa:	3301      	adds	r3, #1
 8001cfc:	2500      	movs	r5, #0
 8001cfe:	9300      	str	r3, [sp, #0]
 8001d00:	e720      	b.n	8001b44 <__aeabi_ddiv+0x48>
 8001d02:	2300      	movs	r3, #0
 8001d04:	2480      	movs	r4, #128	; 0x80
 8001d06:	469a      	mov	sl, r3
 8001d08:	2500      	movs	r5, #0
 8001d0a:	4b0d      	ldr	r3, [pc, #52]	; (8001d40 <__aeabi_ddiv+0x244>)
 8001d0c:	0324      	lsls	r4, r4, #12
 8001d0e:	e74f      	b.n	8001bb0 <__aeabi_ddiv+0xb4>
 8001d10:	2380      	movs	r3, #128	; 0x80
 8001d12:	4641      	mov	r1, r8
 8001d14:	031b      	lsls	r3, r3, #12
 8001d16:	4219      	tst	r1, r3
 8001d18:	d008      	beq.n	8001d2c <__aeabi_ddiv+0x230>
 8001d1a:	421c      	tst	r4, r3
 8001d1c:	d106      	bne.n	8001d2c <__aeabi_ddiv+0x230>
 8001d1e:	431c      	orrs	r4, r3
 8001d20:	0324      	lsls	r4, r4, #12
 8001d22:	46ba      	mov	sl, r7
 8001d24:	0015      	movs	r5, r2
 8001d26:	4b06      	ldr	r3, [pc, #24]	; (8001d40 <__aeabi_ddiv+0x244>)
 8001d28:	0b24      	lsrs	r4, r4, #12
 8001d2a:	e741      	b.n	8001bb0 <__aeabi_ddiv+0xb4>
 8001d2c:	2480      	movs	r4, #128	; 0x80
 8001d2e:	4643      	mov	r3, r8
 8001d30:	0324      	lsls	r4, r4, #12
 8001d32:	431c      	orrs	r4, r3
 8001d34:	0324      	lsls	r4, r4, #12
 8001d36:	46b2      	mov	sl, r6
 8001d38:	4b01      	ldr	r3, [pc, #4]	; (8001d40 <__aeabi_ddiv+0x244>)
 8001d3a:	0b24      	lsrs	r4, r4, #12
 8001d3c:	e738      	b.n	8001bb0 <__aeabi_ddiv+0xb4>
 8001d3e:	46c0      	nop			; (mov r8, r8)
 8001d40:	000007ff 	.word	0x000007ff
 8001d44:	fffffc01 	.word	0xfffffc01
 8001d48:	0800fb08 	.word	0x0800fb08
 8001d4c:	fffff801 	.word	0xfffff801
 8001d50:	fffffc0d 	.word	0xfffffc0d
 8001d54:	000003f3 	.word	0x000003f3
 8001d58:	000003ff 	.word	0x000003ff
 8001d5c:	feffffff 	.word	0xfeffffff
 8001d60:	000007fe 	.word	0x000007fe
 8001d64:	4544      	cmp	r4, r8
 8001d66:	d200      	bcs.n	8001d6a <__aeabi_ddiv+0x26e>
 8001d68:	e116      	b.n	8001f98 <__aeabi_ddiv+0x49c>
 8001d6a:	d100      	bne.n	8001d6e <__aeabi_ddiv+0x272>
 8001d6c:	e111      	b.n	8001f92 <__aeabi_ddiv+0x496>
 8001d6e:	2301      	movs	r3, #1
 8001d70:	425b      	negs	r3, r3
 8001d72:	469c      	mov	ip, r3
 8001d74:	002e      	movs	r6, r5
 8001d76:	4640      	mov	r0, r8
 8001d78:	2500      	movs	r5, #0
 8001d7a:	44e3      	add	fp, ip
 8001d7c:	0223      	lsls	r3, r4, #8
 8001d7e:	0e14      	lsrs	r4, r2, #24
 8001d80:	431c      	orrs	r4, r3
 8001d82:	0c1b      	lsrs	r3, r3, #16
 8001d84:	4699      	mov	r9, r3
 8001d86:	0423      	lsls	r3, r4, #16
 8001d88:	0c1f      	lsrs	r7, r3, #16
 8001d8a:	0212      	lsls	r2, r2, #8
 8001d8c:	4649      	mov	r1, r9
 8001d8e:	9200      	str	r2, [sp, #0]
 8001d90:	9701      	str	r7, [sp, #4]
 8001d92:	f7fe fa59 	bl	8000248 <__aeabi_uidivmod>
 8001d96:	0002      	movs	r2, r0
 8001d98:	437a      	muls	r2, r7
 8001d9a:	040b      	lsls	r3, r1, #16
 8001d9c:	0c31      	lsrs	r1, r6, #16
 8001d9e:	4680      	mov	r8, r0
 8001da0:	4319      	orrs	r1, r3
 8001da2:	428a      	cmp	r2, r1
 8001da4:	d90b      	bls.n	8001dbe <__aeabi_ddiv+0x2c2>
 8001da6:	2301      	movs	r3, #1
 8001da8:	425b      	negs	r3, r3
 8001daa:	469c      	mov	ip, r3
 8001dac:	1909      	adds	r1, r1, r4
 8001dae:	44e0      	add	r8, ip
 8001db0:	428c      	cmp	r4, r1
 8001db2:	d804      	bhi.n	8001dbe <__aeabi_ddiv+0x2c2>
 8001db4:	428a      	cmp	r2, r1
 8001db6:	d902      	bls.n	8001dbe <__aeabi_ddiv+0x2c2>
 8001db8:	1e83      	subs	r3, r0, #2
 8001dba:	4698      	mov	r8, r3
 8001dbc:	1909      	adds	r1, r1, r4
 8001dbe:	1a88      	subs	r0, r1, r2
 8001dc0:	4649      	mov	r1, r9
 8001dc2:	f7fe fa41 	bl	8000248 <__aeabi_uidivmod>
 8001dc6:	0409      	lsls	r1, r1, #16
 8001dc8:	468c      	mov	ip, r1
 8001dca:	0431      	lsls	r1, r6, #16
 8001dcc:	4666      	mov	r6, ip
 8001dce:	9a01      	ldr	r2, [sp, #4]
 8001dd0:	0c09      	lsrs	r1, r1, #16
 8001dd2:	4342      	muls	r2, r0
 8001dd4:	0003      	movs	r3, r0
 8001dd6:	4331      	orrs	r1, r6
 8001dd8:	428a      	cmp	r2, r1
 8001dda:	d904      	bls.n	8001de6 <__aeabi_ddiv+0x2ea>
 8001ddc:	1909      	adds	r1, r1, r4
 8001dde:	3b01      	subs	r3, #1
 8001de0:	428c      	cmp	r4, r1
 8001de2:	d800      	bhi.n	8001de6 <__aeabi_ddiv+0x2ea>
 8001de4:	e111      	b.n	800200a <__aeabi_ddiv+0x50e>
 8001de6:	1a89      	subs	r1, r1, r2
 8001de8:	4642      	mov	r2, r8
 8001dea:	9e00      	ldr	r6, [sp, #0]
 8001dec:	0412      	lsls	r2, r2, #16
 8001dee:	431a      	orrs	r2, r3
 8001df0:	0c33      	lsrs	r3, r6, #16
 8001df2:	001f      	movs	r7, r3
 8001df4:	0c10      	lsrs	r0, r2, #16
 8001df6:	4690      	mov	r8, r2
 8001df8:	9302      	str	r3, [sp, #8]
 8001dfa:	0413      	lsls	r3, r2, #16
 8001dfc:	0432      	lsls	r2, r6, #16
 8001dfe:	0c16      	lsrs	r6, r2, #16
 8001e00:	0032      	movs	r2, r6
 8001e02:	0c1b      	lsrs	r3, r3, #16
 8001e04:	435a      	muls	r2, r3
 8001e06:	9603      	str	r6, [sp, #12]
 8001e08:	437b      	muls	r3, r7
 8001e0a:	4346      	muls	r6, r0
 8001e0c:	4378      	muls	r0, r7
 8001e0e:	0c17      	lsrs	r7, r2, #16
 8001e10:	46bc      	mov	ip, r7
 8001e12:	199b      	adds	r3, r3, r6
 8001e14:	4463      	add	r3, ip
 8001e16:	429e      	cmp	r6, r3
 8001e18:	d903      	bls.n	8001e22 <__aeabi_ddiv+0x326>
 8001e1a:	2680      	movs	r6, #128	; 0x80
 8001e1c:	0276      	lsls	r6, r6, #9
 8001e1e:	46b4      	mov	ip, r6
 8001e20:	4460      	add	r0, ip
 8001e22:	0c1e      	lsrs	r6, r3, #16
 8001e24:	1830      	adds	r0, r6, r0
 8001e26:	0416      	lsls	r6, r2, #16
 8001e28:	041b      	lsls	r3, r3, #16
 8001e2a:	0c36      	lsrs	r6, r6, #16
 8001e2c:	199e      	adds	r6, r3, r6
 8001e2e:	4281      	cmp	r1, r0
 8001e30:	d200      	bcs.n	8001e34 <__aeabi_ddiv+0x338>
 8001e32:	e09c      	b.n	8001f6e <__aeabi_ddiv+0x472>
 8001e34:	d100      	bne.n	8001e38 <__aeabi_ddiv+0x33c>
 8001e36:	e097      	b.n	8001f68 <__aeabi_ddiv+0x46c>
 8001e38:	1bae      	subs	r6, r5, r6
 8001e3a:	1a09      	subs	r1, r1, r0
 8001e3c:	42b5      	cmp	r5, r6
 8001e3e:	4180      	sbcs	r0, r0
 8001e40:	4240      	negs	r0, r0
 8001e42:	1a08      	subs	r0, r1, r0
 8001e44:	4284      	cmp	r4, r0
 8001e46:	d100      	bne.n	8001e4a <__aeabi_ddiv+0x34e>
 8001e48:	e111      	b.n	800206e <__aeabi_ddiv+0x572>
 8001e4a:	4649      	mov	r1, r9
 8001e4c:	f7fe f9fc 	bl	8000248 <__aeabi_uidivmod>
 8001e50:	9a01      	ldr	r2, [sp, #4]
 8001e52:	040b      	lsls	r3, r1, #16
 8001e54:	4342      	muls	r2, r0
 8001e56:	0c31      	lsrs	r1, r6, #16
 8001e58:	0005      	movs	r5, r0
 8001e5a:	4319      	orrs	r1, r3
 8001e5c:	428a      	cmp	r2, r1
 8001e5e:	d907      	bls.n	8001e70 <__aeabi_ddiv+0x374>
 8001e60:	1909      	adds	r1, r1, r4
 8001e62:	3d01      	subs	r5, #1
 8001e64:	428c      	cmp	r4, r1
 8001e66:	d803      	bhi.n	8001e70 <__aeabi_ddiv+0x374>
 8001e68:	428a      	cmp	r2, r1
 8001e6a:	d901      	bls.n	8001e70 <__aeabi_ddiv+0x374>
 8001e6c:	1e85      	subs	r5, r0, #2
 8001e6e:	1909      	adds	r1, r1, r4
 8001e70:	1a88      	subs	r0, r1, r2
 8001e72:	4649      	mov	r1, r9
 8001e74:	f7fe f9e8 	bl	8000248 <__aeabi_uidivmod>
 8001e78:	0409      	lsls	r1, r1, #16
 8001e7a:	468c      	mov	ip, r1
 8001e7c:	0431      	lsls	r1, r6, #16
 8001e7e:	4666      	mov	r6, ip
 8001e80:	9a01      	ldr	r2, [sp, #4]
 8001e82:	0c09      	lsrs	r1, r1, #16
 8001e84:	4342      	muls	r2, r0
 8001e86:	0003      	movs	r3, r0
 8001e88:	4331      	orrs	r1, r6
 8001e8a:	428a      	cmp	r2, r1
 8001e8c:	d907      	bls.n	8001e9e <__aeabi_ddiv+0x3a2>
 8001e8e:	1909      	adds	r1, r1, r4
 8001e90:	3b01      	subs	r3, #1
 8001e92:	428c      	cmp	r4, r1
 8001e94:	d803      	bhi.n	8001e9e <__aeabi_ddiv+0x3a2>
 8001e96:	428a      	cmp	r2, r1
 8001e98:	d901      	bls.n	8001e9e <__aeabi_ddiv+0x3a2>
 8001e9a:	1e83      	subs	r3, r0, #2
 8001e9c:	1909      	adds	r1, r1, r4
 8001e9e:	9e03      	ldr	r6, [sp, #12]
 8001ea0:	1a89      	subs	r1, r1, r2
 8001ea2:	0032      	movs	r2, r6
 8001ea4:	042d      	lsls	r5, r5, #16
 8001ea6:	431d      	orrs	r5, r3
 8001ea8:	9f02      	ldr	r7, [sp, #8]
 8001eaa:	042b      	lsls	r3, r5, #16
 8001eac:	0c1b      	lsrs	r3, r3, #16
 8001eae:	435a      	muls	r2, r3
 8001eb0:	437b      	muls	r3, r7
 8001eb2:	469c      	mov	ip, r3
 8001eb4:	0c28      	lsrs	r0, r5, #16
 8001eb6:	4346      	muls	r6, r0
 8001eb8:	0c13      	lsrs	r3, r2, #16
 8001eba:	44b4      	add	ip, r6
 8001ebc:	4463      	add	r3, ip
 8001ebe:	4378      	muls	r0, r7
 8001ec0:	429e      	cmp	r6, r3
 8001ec2:	d903      	bls.n	8001ecc <__aeabi_ddiv+0x3d0>
 8001ec4:	2680      	movs	r6, #128	; 0x80
 8001ec6:	0276      	lsls	r6, r6, #9
 8001ec8:	46b4      	mov	ip, r6
 8001eca:	4460      	add	r0, ip
 8001ecc:	0c1e      	lsrs	r6, r3, #16
 8001ece:	0412      	lsls	r2, r2, #16
 8001ed0:	041b      	lsls	r3, r3, #16
 8001ed2:	0c12      	lsrs	r2, r2, #16
 8001ed4:	1830      	adds	r0, r6, r0
 8001ed6:	189b      	adds	r3, r3, r2
 8001ed8:	4281      	cmp	r1, r0
 8001eda:	d306      	bcc.n	8001eea <__aeabi_ddiv+0x3ee>
 8001edc:	d002      	beq.n	8001ee4 <__aeabi_ddiv+0x3e8>
 8001ede:	2301      	movs	r3, #1
 8001ee0:	431d      	orrs	r5, r3
 8001ee2:	e6ce      	b.n	8001c82 <__aeabi_ddiv+0x186>
 8001ee4:	2b00      	cmp	r3, #0
 8001ee6:	d100      	bne.n	8001eea <__aeabi_ddiv+0x3ee>
 8001ee8:	e6cb      	b.n	8001c82 <__aeabi_ddiv+0x186>
 8001eea:	1861      	adds	r1, r4, r1
 8001eec:	1e6e      	subs	r6, r5, #1
 8001eee:	42a1      	cmp	r1, r4
 8001ef0:	d200      	bcs.n	8001ef4 <__aeabi_ddiv+0x3f8>
 8001ef2:	e0a4      	b.n	800203e <__aeabi_ddiv+0x542>
 8001ef4:	4281      	cmp	r1, r0
 8001ef6:	d200      	bcs.n	8001efa <__aeabi_ddiv+0x3fe>
 8001ef8:	e0c9      	b.n	800208e <__aeabi_ddiv+0x592>
 8001efa:	d100      	bne.n	8001efe <__aeabi_ddiv+0x402>
 8001efc:	e0d9      	b.n	80020b2 <__aeabi_ddiv+0x5b6>
 8001efe:	0035      	movs	r5, r6
 8001f00:	e7ed      	b.n	8001ede <__aeabi_ddiv+0x3e2>
 8001f02:	2501      	movs	r5, #1
 8001f04:	426d      	negs	r5, r5
 8001f06:	2101      	movs	r1, #1
 8001f08:	1a89      	subs	r1, r1, r2
 8001f0a:	2938      	cmp	r1, #56	; 0x38
 8001f0c:	dd00      	ble.n	8001f10 <__aeabi_ddiv+0x414>
 8001f0e:	e64c      	b.n	8001baa <__aeabi_ddiv+0xae>
 8001f10:	291f      	cmp	r1, #31
 8001f12:	dc00      	bgt.n	8001f16 <__aeabi_ddiv+0x41a>
 8001f14:	e07f      	b.n	8002016 <__aeabi_ddiv+0x51a>
 8001f16:	231f      	movs	r3, #31
 8001f18:	425b      	negs	r3, r3
 8001f1a:	1a9a      	subs	r2, r3, r2
 8001f1c:	4643      	mov	r3, r8
 8001f1e:	40d3      	lsrs	r3, r2
 8001f20:	2920      	cmp	r1, #32
 8001f22:	d004      	beq.n	8001f2e <__aeabi_ddiv+0x432>
 8001f24:	4644      	mov	r4, r8
 8001f26:	4a65      	ldr	r2, [pc, #404]	; (80020bc <__aeabi_ddiv+0x5c0>)
 8001f28:	445a      	add	r2, fp
 8001f2a:	4094      	lsls	r4, r2
 8001f2c:	4325      	orrs	r5, r4
 8001f2e:	1e6a      	subs	r2, r5, #1
 8001f30:	4195      	sbcs	r5, r2
 8001f32:	2207      	movs	r2, #7
 8001f34:	432b      	orrs	r3, r5
 8001f36:	0015      	movs	r5, r2
 8001f38:	2400      	movs	r4, #0
 8001f3a:	401d      	ands	r5, r3
 8001f3c:	421a      	tst	r2, r3
 8001f3e:	d100      	bne.n	8001f42 <__aeabi_ddiv+0x446>
 8001f40:	e0a1      	b.n	8002086 <__aeabi_ddiv+0x58a>
 8001f42:	220f      	movs	r2, #15
 8001f44:	2400      	movs	r4, #0
 8001f46:	401a      	ands	r2, r3
 8001f48:	2a04      	cmp	r2, #4
 8001f4a:	d100      	bne.n	8001f4e <__aeabi_ddiv+0x452>
 8001f4c:	e098      	b.n	8002080 <__aeabi_ddiv+0x584>
 8001f4e:	1d1a      	adds	r2, r3, #4
 8001f50:	429a      	cmp	r2, r3
 8001f52:	419b      	sbcs	r3, r3
 8001f54:	425b      	negs	r3, r3
 8001f56:	18e4      	adds	r4, r4, r3
 8001f58:	0013      	movs	r3, r2
 8001f5a:	0222      	lsls	r2, r4, #8
 8001f5c:	d400      	bmi.n	8001f60 <__aeabi_ddiv+0x464>
 8001f5e:	e08f      	b.n	8002080 <__aeabi_ddiv+0x584>
 8001f60:	2301      	movs	r3, #1
 8001f62:	2400      	movs	r4, #0
 8001f64:	2500      	movs	r5, #0
 8001f66:	e623      	b.n	8001bb0 <__aeabi_ddiv+0xb4>
 8001f68:	42b5      	cmp	r5, r6
 8001f6a:	d300      	bcc.n	8001f6e <__aeabi_ddiv+0x472>
 8001f6c:	e764      	b.n	8001e38 <__aeabi_ddiv+0x33c>
 8001f6e:	4643      	mov	r3, r8
 8001f70:	1e5a      	subs	r2, r3, #1
 8001f72:	9b00      	ldr	r3, [sp, #0]
 8001f74:	469c      	mov	ip, r3
 8001f76:	4465      	add	r5, ip
 8001f78:	001f      	movs	r7, r3
 8001f7a:	429d      	cmp	r5, r3
 8001f7c:	419b      	sbcs	r3, r3
 8001f7e:	425b      	negs	r3, r3
 8001f80:	191b      	adds	r3, r3, r4
 8001f82:	18c9      	adds	r1, r1, r3
 8001f84:	428c      	cmp	r4, r1
 8001f86:	d23a      	bcs.n	8001ffe <__aeabi_ddiv+0x502>
 8001f88:	4288      	cmp	r0, r1
 8001f8a:	d863      	bhi.n	8002054 <__aeabi_ddiv+0x558>
 8001f8c:	d060      	beq.n	8002050 <__aeabi_ddiv+0x554>
 8001f8e:	4690      	mov	r8, r2
 8001f90:	e752      	b.n	8001e38 <__aeabi_ddiv+0x33c>
 8001f92:	42aa      	cmp	r2, r5
 8001f94:	d900      	bls.n	8001f98 <__aeabi_ddiv+0x49c>
 8001f96:	e6ea      	b.n	8001d6e <__aeabi_ddiv+0x272>
 8001f98:	4643      	mov	r3, r8
 8001f9a:	07de      	lsls	r6, r3, #31
 8001f9c:	0858      	lsrs	r0, r3, #1
 8001f9e:	086b      	lsrs	r3, r5, #1
 8001fa0:	431e      	orrs	r6, r3
 8001fa2:	07ed      	lsls	r5, r5, #31
 8001fa4:	e6ea      	b.n	8001d7c <__aeabi_ddiv+0x280>
 8001fa6:	4648      	mov	r0, r9
 8001fa8:	f001 f926 	bl	80031f8 <__clzsi2>
 8001fac:	0001      	movs	r1, r0
 8001fae:	0002      	movs	r2, r0
 8001fb0:	3115      	adds	r1, #21
 8001fb2:	3220      	adds	r2, #32
 8001fb4:	291c      	cmp	r1, #28
 8001fb6:	dc00      	bgt.n	8001fba <__aeabi_ddiv+0x4be>
 8001fb8:	e61a      	b.n	8001bf0 <__aeabi_ddiv+0xf4>
 8001fba:	464b      	mov	r3, r9
 8001fbc:	3808      	subs	r0, #8
 8001fbe:	4083      	lsls	r3, r0
 8001fc0:	2500      	movs	r5, #0
 8001fc2:	4698      	mov	r8, r3
 8001fc4:	e620      	b.n	8001c08 <__aeabi_ddiv+0x10c>
 8001fc6:	f001 f917 	bl	80031f8 <__clzsi2>
 8001fca:	0003      	movs	r3, r0
 8001fcc:	001a      	movs	r2, r3
 8001fce:	3215      	adds	r2, #21
 8001fd0:	3020      	adds	r0, #32
 8001fd2:	2a1c      	cmp	r2, #28
 8001fd4:	dc00      	bgt.n	8001fd8 <__aeabi_ddiv+0x4dc>
 8001fd6:	e630      	b.n	8001c3a <__aeabi_ddiv+0x13e>
 8001fd8:	4654      	mov	r4, sl
 8001fda:	3b08      	subs	r3, #8
 8001fdc:	2200      	movs	r2, #0
 8001fde:	409c      	lsls	r4, r3
 8001fe0:	e635      	b.n	8001c4e <__aeabi_ddiv+0x152>
 8001fe2:	230f      	movs	r3, #15
 8001fe4:	402b      	ands	r3, r5
 8001fe6:	2b04      	cmp	r3, #4
 8001fe8:	d100      	bne.n	8001fec <__aeabi_ddiv+0x4f0>
 8001fea:	e652      	b.n	8001c92 <__aeabi_ddiv+0x196>
 8001fec:	2305      	movs	r3, #5
 8001fee:	425b      	negs	r3, r3
 8001ff0:	42ab      	cmp	r3, r5
 8001ff2:	419b      	sbcs	r3, r3
 8001ff4:	3504      	adds	r5, #4
 8001ff6:	425b      	negs	r3, r3
 8001ff8:	08ed      	lsrs	r5, r5, #3
 8001ffa:	4498      	add	r8, r3
 8001ffc:	e64a      	b.n	8001c94 <__aeabi_ddiv+0x198>
 8001ffe:	428c      	cmp	r4, r1
 8002000:	d1c5      	bne.n	8001f8e <__aeabi_ddiv+0x492>
 8002002:	42af      	cmp	r7, r5
 8002004:	d9c0      	bls.n	8001f88 <__aeabi_ddiv+0x48c>
 8002006:	4690      	mov	r8, r2
 8002008:	e716      	b.n	8001e38 <__aeabi_ddiv+0x33c>
 800200a:	428a      	cmp	r2, r1
 800200c:	d800      	bhi.n	8002010 <__aeabi_ddiv+0x514>
 800200e:	e6ea      	b.n	8001de6 <__aeabi_ddiv+0x2ea>
 8002010:	1e83      	subs	r3, r0, #2
 8002012:	1909      	adds	r1, r1, r4
 8002014:	e6e7      	b.n	8001de6 <__aeabi_ddiv+0x2ea>
 8002016:	4a2a      	ldr	r2, [pc, #168]	; (80020c0 <__aeabi_ddiv+0x5c4>)
 8002018:	0028      	movs	r0, r5
 800201a:	445a      	add	r2, fp
 800201c:	4643      	mov	r3, r8
 800201e:	4095      	lsls	r5, r2
 8002020:	4093      	lsls	r3, r2
 8002022:	40c8      	lsrs	r0, r1
 8002024:	1e6a      	subs	r2, r5, #1
 8002026:	4195      	sbcs	r5, r2
 8002028:	4644      	mov	r4, r8
 800202a:	4303      	orrs	r3, r0
 800202c:	432b      	orrs	r3, r5
 800202e:	40cc      	lsrs	r4, r1
 8002030:	075a      	lsls	r2, r3, #29
 8002032:	d092      	beq.n	8001f5a <__aeabi_ddiv+0x45e>
 8002034:	220f      	movs	r2, #15
 8002036:	401a      	ands	r2, r3
 8002038:	2a04      	cmp	r2, #4
 800203a:	d188      	bne.n	8001f4e <__aeabi_ddiv+0x452>
 800203c:	e78d      	b.n	8001f5a <__aeabi_ddiv+0x45e>
 800203e:	0035      	movs	r5, r6
 8002040:	4281      	cmp	r1, r0
 8002042:	d000      	beq.n	8002046 <__aeabi_ddiv+0x54a>
 8002044:	e74b      	b.n	8001ede <__aeabi_ddiv+0x3e2>
 8002046:	9a00      	ldr	r2, [sp, #0]
 8002048:	4293      	cmp	r3, r2
 800204a:	d000      	beq.n	800204e <__aeabi_ddiv+0x552>
 800204c:	e747      	b.n	8001ede <__aeabi_ddiv+0x3e2>
 800204e:	e618      	b.n	8001c82 <__aeabi_ddiv+0x186>
 8002050:	42ae      	cmp	r6, r5
 8002052:	d99c      	bls.n	8001f8e <__aeabi_ddiv+0x492>
 8002054:	2302      	movs	r3, #2
 8002056:	425b      	negs	r3, r3
 8002058:	469c      	mov	ip, r3
 800205a:	9b00      	ldr	r3, [sp, #0]
 800205c:	44e0      	add	r8, ip
 800205e:	469c      	mov	ip, r3
 8002060:	4465      	add	r5, ip
 8002062:	429d      	cmp	r5, r3
 8002064:	419b      	sbcs	r3, r3
 8002066:	425b      	negs	r3, r3
 8002068:	191b      	adds	r3, r3, r4
 800206a:	18c9      	adds	r1, r1, r3
 800206c:	e6e4      	b.n	8001e38 <__aeabi_ddiv+0x33c>
 800206e:	4a15      	ldr	r2, [pc, #84]	; (80020c4 <__aeabi_ddiv+0x5c8>)
 8002070:	445a      	add	r2, fp
 8002072:	2a00      	cmp	r2, #0
 8002074:	dc00      	bgt.n	8002078 <__aeabi_ddiv+0x57c>
 8002076:	e744      	b.n	8001f02 <__aeabi_ddiv+0x406>
 8002078:	2301      	movs	r3, #1
 800207a:	2500      	movs	r5, #0
 800207c:	4498      	add	r8, r3
 800207e:	e609      	b.n	8001c94 <__aeabi_ddiv+0x198>
 8002080:	0765      	lsls	r5, r4, #29
 8002082:	0264      	lsls	r4, r4, #9
 8002084:	0b24      	lsrs	r4, r4, #12
 8002086:	08db      	lsrs	r3, r3, #3
 8002088:	431d      	orrs	r5, r3
 800208a:	2300      	movs	r3, #0
 800208c:	e590      	b.n	8001bb0 <__aeabi_ddiv+0xb4>
 800208e:	9e00      	ldr	r6, [sp, #0]
 8002090:	3d02      	subs	r5, #2
 8002092:	0072      	lsls	r2, r6, #1
 8002094:	42b2      	cmp	r2, r6
 8002096:	41bf      	sbcs	r7, r7
 8002098:	427f      	negs	r7, r7
 800209a:	193c      	adds	r4, r7, r4
 800209c:	1909      	adds	r1, r1, r4
 800209e:	9200      	str	r2, [sp, #0]
 80020a0:	e7ce      	b.n	8002040 <__aeabi_ddiv+0x544>
 80020a2:	2480      	movs	r4, #128	; 0x80
 80020a4:	4643      	mov	r3, r8
 80020a6:	0324      	lsls	r4, r4, #12
 80020a8:	431c      	orrs	r4, r3
 80020aa:	0324      	lsls	r4, r4, #12
 80020ac:	4b06      	ldr	r3, [pc, #24]	; (80020c8 <__aeabi_ddiv+0x5cc>)
 80020ae:	0b24      	lsrs	r4, r4, #12
 80020b0:	e57e      	b.n	8001bb0 <__aeabi_ddiv+0xb4>
 80020b2:	9a00      	ldr	r2, [sp, #0]
 80020b4:	429a      	cmp	r2, r3
 80020b6:	d3ea      	bcc.n	800208e <__aeabi_ddiv+0x592>
 80020b8:	0035      	movs	r5, r6
 80020ba:	e7c4      	b.n	8002046 <__aeabi_ddiv+0x54a>
 80020bc:	0000043e 	.word	0x0000043e
 80020c0:	0000041e 	.word	0x0000041e
 80020c4:	000003ff 	.word	0x000003ff
 80020c8:	000007ff 	.word	0x000007ff

080020cc <__eqdf2>:
 80020cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020ce:	464f      	mov	r7, r9
 80020d0:	4646      	mov	r6, r8
 80020d2:	46d6      	mov	lr, sl
 80020d4:	4694      	mov	ip, r2
 80020d6:	4691      	mov	r9, r2
 80020d8:	031a      	lsls	r2, r3, #12
 80020da:	0b12      	lsrs	r2, r2, #12
 80020dc:	4d18      	ldr	r5, [pc, #96]	; (8002140 <__eqdf2+0x74>)
 80020de:	b5c0      	push	{r6, r7, lr}
 80020e0:	004c      	lsls	r4, r1, #1
 80020e2:	030f      	lsls	r7, r1, #12
 80020e4:	4692      	mov	sl, r2
 80020e6:	005a      	lsls	r2, r3, #1
 80020e8:	0006      	movs	r6, r0
 80020ea:	4680      	mov	r8, r0
 80020ec:	0b3f      	lsrs	r7, r7, #12
 80020ee:	2001      	movs	r0, #1
 80020f0:	0d64      	lsrs	r4, r4, #21
 80020f2:	0fc9      	lsrs	r1, r1, #31
 80020f4:	0d52      	lsrs	r2, r2, #21
 80020f6:	0fdb      	lsrs	r3, r3, #31
 80020f8:	42ac      	cmp	r4, r5
 80020fa:	d00a      	beq.n	8002112 <__eqdf2+0x46>
 80020fc:	42aa      	cmp	r2, r5
 80020fe:	d003      	beq.n	8002108 <__eqdf2+0x3c>
 8002100:	4294      	cmp	r4, r2
 8002102:	d101      	bne.n	8002108 <__eqdf2+0x3c>
 8002104:	4557      	cmp	r7, sl
 8002106:	d00d      	beq.n	8002124 <__eqdf2+0x58>
 8002108:	bce0      	pop	{r5, r6, r7}
 800210a:	46ba      	mov	sl, r7
 800210c:	46b1      	mov	r9, r6
 800210e:	46a8      	mov	r8, r5
 8002110:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002112:	003d      	movs	r5, r7
 8002114:	4335      	orrs	r5, r6
 8002116:	d1f7      	bne.n	8002108 <__eqdf2+0x3c>
 8002118:	42a2      	cmp	r2, r4
 800211a:	d1f5      	bne.n	8002108 <__eqdf2+0x3c>
 800211c:	4652      	mov	r2, sl
 800211e:	4665      	mov	r5, ip
 8002120:	432a      	orrs	r2, r5
 8002122:	d1f1      	bne.n	8002108 <__eqdf2+0x3c>
 8002124:	2001      	movs	r0, #1
 8002126:	45c8      	cmp	r8, r9
 8002128:	d1ee      	bne.n	8002108 <__eqdf2+0x3c>
 800212a:	4299      	cmp	r1, r3
 800212c:	d006      	beq.n	800213c <__eqdf2+0x70>
 800212e:	2c00      	cmp	r4, #0
 8002130:	d1ea      	bne.n	8002108 <__eqdf2+0x3c>
 8002132:	433e      	orrs	r6, r7
 8002134:	0030      	movs	r0, r6
 8002136:	1e46      	subs	r6, r0, #1
 8002138:	41b0      	sbcs	r0, r6
 800213a:	e7e5      	b.n	8002108 <__eqdf2+0x3c>
 800213c:	2000      	movs	r0, #0
 800213e:	e7e3      	b.n	8002108 <__eqdf2+0x3c>
 8002140:	000007ff 	.word	0x000007ff

08002144 <__gedf2>:
 8002144:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002146:	464e      	mov	r6, r9
 8002148:	4645      	mov	r5, r8
 800214a:	4657      	mov	r7, sl
 800214c:	46de      	mov	lr, fp
 800214e:	0004      	movs	r4, r0
 8002150:	0018      	movs	r0, r3
 8002152:	b5e0      	push	{r5, r6, r7, lr}
 8002154:	0016      	movs	r6, r2
 8002156:	031b      	lsls	r3, r3, #12
 8002158:	0b1b      	lsrs	r3, r3, #12
 800215a:	4d32      	ldr	r5, [pc, #200]	; (8002224 <__gedf2+0xe0>)
 800215c:	030f      	lsls	r7, r1, #12
 800215e:	004a      	lsls	r2, r1, #1
 8002160:	4699      	mov	r9, r3
 8002162:	0043      	lsls	r3, r0, #1
 8002164:	46a4      	mov	ip, r4
 8002166:	46b0      	mov	r8, r6
 8002168:	0b3f      	lsrs	r7, r7, #12
 800216a:	0d52      	lsrs	r2, r2, #21
 800216c:	0fc9      	lsrs	r1, r1, #31
 800216e:	0d5b      	lsrs	r3, r3, #21
 8002170:	0fc0      	lsrs	r0, r0, #31
 8002172:	42aa      	cmp	r2, r5
 8002174:	d029      	beq.n	80021ca <__gedf2+0x86>
 8002176:	42ab      	cmp	r3, r5
 8002178:	d018      	beq.n	80021ac <__gedf2+0x68>
 800217a:	2a00      	cmp	r2, #0
 800217c:	d12a      	bne.n	80021d4 <__gedf2+0x90>
 800217e:	433c      	orrs	r4, r7
 8002180:	46a3      	mov	fp, r4
 8002182:	4265      	negs	r5, r4
 8002184:	4165      	adcs	r5, r4
 8002186:	2b00      	cmp	r3, #0
 8002188:	d102      	bne.n	8002190 <__gedf2+0x4c>
 800218a:	464c      	mov	r4, r9
 800218c:	4326      	orrs	r6, r4
 800218e:	d027      	beq.n	80021e0 <__gedf2+0x9c>
 8002190:	2d00      	cmp	r5, #0
 8002192:	d115      	bne.n	80021c0 <__gedf2+0x7c>
 8002194:	4281      	cmp	r1, r0
 8002196:	d028      	beq.n	80021ea <__gedf2+0xa6>
 8002198:	2002      	movs	r0, #2
 800219a:	3901      	subs	r1, #1
 800219c:	4008      	ands	r0, r1
 800219e:	3801      	subs	r0, #1
 80021a0:	bcf0      	pop	{r4, r5, r6, r7}
 80021a2:	46bb      	mov	fp, r7
 80021a4:	46b2      	mov	sl, r6
 80021a6:	46a9      	mov	r9, r5
 80021a8:	46a0      	mov	r8, r4
 80021aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021ac:	464d      	mov	r5, r9
 80021ae:	432e      	orrs	r6, r5
 80021b0:	d12f      	bne.n	8002212 <__gedf2+0xce>
 80021b2:	2a00      	cmp	r2, #0
 80021b4:	d1ee      	bne.n	8002194 <__gedf2+0x50>
 80021b6:	433c      	orrs	r4, r7
 80021b8:	4265      	negs	r5, r4
 80021ba:	4165      	adcs	r5, r4
 80021bc:	2d00      	cmp	r5, #0
 80021be:	d0e9      	beq.n	8002194 <__gedf2+0x50>
 80021c0:	2800      	cmp	r0, #0
 80021c2:	d1ed      	bne.n	80021a0 <__gedf2+0x5c>
 80021c4:	2001      	movs	r0, #1
 80021c6:	4240      	negs	r0, r0
 80021c8:	e7ea      	b.n	80021a0 <__gedf2+0x5c>
 80021ca:	003d      	movs	r5, r7
 80021cc:	4325      	orrs	r5, r4
 80021ce:	d120      	bne.n	8002212 <__gedf2+0xce>
 80021d0:	4293      	cmp	r3, r2
 80021d2:	d0eb      	beq.n	80021ac <__gedf2+0x68>
 80021d4:	2b00      	cmp	r3, #0
 80021d6:	d1dd      	bne.n	8002194 <__gedf2+0x50>
 80021d8:	464c      	mov	r4, r9
 80021da:	4326      	orrs	r6, r4
 80021dc:	d1da      	bne.n	8002194 <__gedf2+0x50>
 80021de:	e7db      	b.n	8002198 <__gedf2+0x54>
 80021e0:	465b      	mov	r3, fp
 80021e2:	2000      	movs	r0, #0
 80021e4:	2b00      	cmp	r3, #0
 80021e6:	d0db      	beq.n	80021a0 <__gedf2+0x5c>
 80021e8:	e7d6      	b.n	8002198 <__gedf2+0x54>
 80021ea:	429a      	cmp	r2, r3
 80021ec:	dc0a      	bgt.n	8002204 <__gedf2+0xc0>
 80021ee:	dbe7      	blt.n	80021c0 <__gedf2+0x7c>
 80021f0:	454f      	cmp	r7, r9
 80021f2:	d8d1      	bhi.n	8002198 <__gedf2+0x54>
 80021f4:	d010      	beq.n	8002218 <__gedf2+0xd4>
 80021f6:	2000      	movs	r0, #0
 80021f8:	454f      	cmp	r7, r9
 80021fa:	d2d1      	bcs.n	80021a0 <__gedf2+0x5c>
 80021fc:	2900      	cmp	r1, #0
 80021fe:	d0e1      	beq.n	80021c4 <__gedf2+0x80>
 8002200:	0008      	movs	r0, r1
 8002202:	e7cd      	b.n	80021a0 <__gedf2+0x5c>
 8002204:	4243      	negs	r3, r0
 8002206:	4158      	adcs	r0, r3
 8002208:	2302      	movs	r3, #2
 800220a:	4240      	negs	r0, r0
 800220c:	4018      	ands	r0, r3
 800220e:	3801      	subs	r0, #1
 8002210:	e7c6      	b.n	80021a0 <__gedf2+0x5c>
 8002212:	2002      	movs	r0, #2
 8002214:	4240      	negs	r0, r0
 8002216:	e7c3      	b.n	80021a0 <__gedf2+0x5c>
 8002218:	45c4      	cmp	ip, r8
 800221a:	d8bd      	bhi.n	8002198 <__gedf2+0x54>
 800221c:	2000      	movs	r0, #0
 800221e:	45c4      	cmp	ip, r8
 8002220:	d2be      	bcs.n	80021a0 <__gedf2+0x5c>
 8002222:	e7eb      	b.n	80021fc <__gedf2+0xb8>
 8002224:	000007ff 	.word	0x000007ff

08002228 <__ledf2>:
 8002228:	b5f0      	push	{r4, r5, r6, r7, lr}
 800222a:	464e      	mov	r6, r9
 800222c:	4645      	mov	r5, r8
 800222e:	4657      	mov	r7, sl
 8002230:	46de      	mov	lr, fp
 8002232:	0004      	movs	r4, r0
 8002234:	0018      	movs	r0, r3
 8002236:	b5e0      	push	{r5, r6, r7, lr}
 8002238:	0016      	movs	r6, r2
 800223a:	031b      	lsls	r3, r3, #12
 800223c:	0b1b      	lsrs	r3, r3, #12
 800223e:	4d31      	ldr	r5, [pc, #196]	; (8002304 <__ledf2+0xdc>)
 8002240:	030f      	lsls	r7, r1, #12
 8002242:	004a      	lsls	r2, r1, #1
 8002244:	4699      	mov	r9, r3
 8002246:	0043      	lsls	r3, r0, #1
 8002248:	46a4      	mov	ip, r4
 800224a:	46b0      	mov	r8, r6
 800224c:	0b3f      	lsrs	r7, r7, #12
 800224e:	0d52      	lsrs	r2, r2, #21
 8002250:	0fc9      	lsrs	r1, r1, #31
 8002252:	0d5b      	lsrs	r3, r3, #21
 8002254:	0fc0      	lsrs	r0, r0, #31
 8002256:	42aa      	cmp	r2, r5
 8002258:	d011      	beq.n	800227e <__ledf2+0x56>
 800225a:	42ab      	cmp	r3, r5
 800225c:	d014      	beq.n	8002288 <__ledf2+0x60>
 800225e:	2a00      	cmp	r2, #0
 8002260:	d12f      	bne.n	80022c2 <__ledf2+0x9a>
 8002262:	433c      	orrs	r4, r7
 8002264:	46a3      	mov	fp, r4
 8002266:	4265      	negs	r5, r4
 8002268:	4165      	adcs	r5, r4
 800226a:	2b00      	cmp	r3, #0
 800226c:	d114      	bne.n	8002298 <__ledf2+0x70>
 800226e:	464c      	mov	r4, r9
 8002270:	4326      	orrs	r6, r4
 8002272:	d111      	bne.n	8002298 <__ledf2+0x70>
 8002274:	465b      	mov	r3, fp
 8002276:	2000      	movs	r0, #0
 8002278:	2b00      	cmp	r3, #0
 800227a:	d017      	beq.n	80022ac <__ledf2+0x84>
 800227c:	e010      	b.n	80022a0 <__ledf2+0x78>
 800227e:	003d      	movs	r5, r7
 8002280:	4325      	orrs	r5, r4
 8002282:	d112      	bne.n	80022aa <__ledf2+0x82>
 8002284:	4293      	cmp	r3, r2
 8002286:	d11c      	bne.n	80022c2 <__ledf2+0x9a>
 8002288:	464d      	mov	r5, r9
 800228a:	432e      	orrs	r6, r5
 800228c:	d10d      	bne.n	80022aa <__ledf2+0x82>
 800228e:	2a00      	cmp	r2, #0
 8002290:	d104      	bne.n	800229c <__ledf2+0x74>
 8002292:	433c      	orrs	r4, r7
 8002294:	4265      	negs	r5, r4
 8002296:	4165      	adcs	r5, r4
 8002298:	2d00      	cmp	r5, #0
 800229a:	d10d      	bne.n	80022b8 <__ledf2+0x90>
 800229c:	4281      	cmp	r1, r0
 800229e:	d016      	beq.n	80022ce <__ledf2+0xa6>
 80022a0:	2002      	movs	r0, #2
 80022a2:	3901      	subs	r1, #1
 80022a4:	4008      	ands	r0, r1
 80022a6:	3801      	subs	r0, #1
 80022a8:	e000      	b.n	80022ac <__ledf2+0x84>
 80022aa:	2002      	movs	r0, #2
 80022ac:	bcf0      	pop	{r4, r5, r6, r7}
 80022ae:	46bb      	mov	fp, r7
 80022b0:	46b2      	mov	sl, r6
 80022b2:	46a9      	mov	r9, r5
 80022b4:	46a0      	mov	r8, r4
 80022b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022b8:	2800      	cmp	r0, #0
 80022ba:	d1f7      	bne.n	80022ac <__ledf2+0x84>
 80022bc:	2001      	movs	r0, #1
 80022be:	4240      	negs	r0, r0
 80022c0:	e7f4      	b.n	80022ac <__ledf2+0x84>
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	d1ea      	bne.n	800229c <__ledf2+0x74>
 80022c6:	464c      	mov	r4, r9
 80022c8:	4326      	orrs	r6, r4
 80022ca:	d1e7      	bne.n	800229c <__ledf2+0x74>
 80022cc:	e7e8      	b.n	80022a0 <__ledf2+0x78>
 80022ce:	429a      	cmp	r2, r3
 80022d0:	dd06      	ble.n	80022e0 <__ledf2+0xb8>
 80022d2:	4243      	negs	r3, r0
 80022d4:	4158      	adcs	r0, r3
 80022d6:	2302      	movs	r3, #2
 80022d8:	4240      	negs	r0, r0
 80022da:	4018      	ands	r0, r3
 80022dc:	3801      	subs	r0, #1
 80022de:	e7e5      	b.n	80022ac <__ledf2+0x84>
 80022e0:	429a      	cmp	r2, r3
 80022e2:	dbe9      	blt.n	80022b8 <__ledf2+0x90>
 80022e4:	454f      	cmp	r7, r9
 80022e6:	d8db      	bhi.n	80022a0 <__ledf2+0x78>
 80022e8:	d006      	beq.n	80022f8 <__ledf2+0xd0>
 80022ea:	2000      	movs	r0, #0
 80022ec:	454f      	cmp	r7, r9
 80022ee:	d2dd      	bcs.n	80022ac <__ledf2+0x84>
 80022f0:	2900      	cmp	r1, #0
 80022f2:	d0e3      	beq.n	80022bc <__ledf2+0x94>
 80022f4:	0008      	movs	r0, r1
 80022f6:	e7d9      	b.n	80022ac <__ledf2+0x84>
 80022f8:	45c4      	cmp	ip, r8
 80022fa:	d8d1      	bhi.n	80022a0 <__ledf2+0x78>
 80022fc:	2000      	movs	r0, #0
 80022fe:	45c4      	cmp	ip, r8
 8002300:	d2d4      	bcs.n	80022ac <__ledf2+0x84>
 8002302:	e7f5      	b.n	80022f0 <__ledf2+0xc8>
 8002304:	000007ff 	.word	0x000007ff

08002308 <__aeabi_dmul>:
 8002308:	b5f0      	push	{r4, r5, r6, r7, lr}
 800230a:	4657      	mov	r7, sl
 800230c:	464e      	mov	r6, r9
 800230e:	4645      	mov	r5, r8
 8002310:	46de      	mov	lr, fp
 8002312:	b5e0      	push	{r5, r6, r7, lr}
 8002314:	4698      	mov	r8, r3
 8002316:	030c      	lsls	r4, r1, #12
 8002318:	004b      	lsls	r3, r1, #1
 800231a:	0006      	movs	r6, r0
 800231c:	4692      	mov	sl, r2
 800231e:	b087      	sub	sp, #28
 8002320:	0b24      	lsrs	r4, r4, #12
 8002322:	0d5b      	lsrs	r3, r3, #21
 8002324:	0fcf      	lsrs	r7, r1, #31
 8002326:	2b00      	cmp	r3, #0
 8002328:	d06c      	beq.n	8002404 <__aeabi_dmul+0xfc>
 800232a:	4add      	ldr	r2, [pc, #884]	; (80026a0 <__aeabi_dmul+0x398>)
 800232c:	4293      	cmp	r3, r2
 800232e:	d100      	bne.n	8002332 <__aeabi_dmul+0x2a>
 8002330:	e086      	b.n	8002440 <__aeabi_dmul+0x138>
 8002332:	0f42      	lsrs	r2, r0, #29
 8002334:	00e4      	lsls	r4, r4, #3
 8002336:	4314      	orrs	r4, r2
 8002338:	2280      	movs	r2, #128	; 0x80
 800233a:	0412      	lsls	r2, r2, #16
 800233c:	4314      	orrs	r4, r2
 800233e:	4ad9      	ldr	r2, [pc, #868]	; (80026a4 <__aeabi_dmul+0x39c>)
 8002340:	00c5      	lsls	r5, r0, #3
 8002342:	4694      	mov	ip, r2
 8002344:	4463      	add	r3, ip
 8002346:	9300      	str	r3, [sp, #0]
 8002348:	2300      	movs	r3, #0
 800234a:	4699      	mov	r9, r3
 800234c:	469b      	mov	fp, r3
 800234e:	4643      	mov	r3, r8
 8002350:	4642      	mov	r2, r8
 8002352:	031e      	lsls	r6, r3, #12
 8002354:	0fd2      	lsrs	r2, r2, #31
 8002356:	005b      	lsls	r3, r3, #1
 8002358:	4650      	mov	r0, sl
 800235a:	4690      	mov	r8, r2
 800235c:	0b36      	lsrs	r6, r6, #12
 800235e:	0d5b      	lsrs	r3, r3, #21
 8002360:	d100      	bne.n	8002364 <__aeabi_dmul+0x5c>
 8002362:	e078      	b.n	8002456 <__aeabi_dmul+0x14e>
 8002364:	4ace      	ldr	r2, [pc, #824]	; (80026a0 <__aeabi_dmul+0x398>)
 8002366:	4293      	cmp	r3, r2
 8002368:	d01d      	beq.n	80023a6 <__aeabi_dmul+0x9e>
 800236a:	49ce      	ldr	r1, [pc, #824]	; (80026a4 <__aeabi_dmul+0x39c>)
 800236c:	0f42      	lsrs	r2, r0, #29
 800236e:	468c      	mov	ip, r1
 8002370:	9900      	ldr	r1, [sp, #0]
 8002372:	4463      	add	r3, ip
 8002374:	00f6      	lsls	r6, r6, #3
 8002376:	468c      	mov	ip, r1
 8002378:	4316      	orrs	r6, r2
 800237a:	2280      	movs	r2, #128	; 0x80
 800237c:	449c      	add	ip, r3
 800237e:	0412      	lsls	r2, r2, #16
 8002380:	4663      	mov	r3, ip
 8002382:	4316      	orrs	r6, r2
 8002384:	00c2      	lsls	r2, r0, #3
 8002386:	2000      	movs	r0, #0
 8002388:	9300      	str	r3, [sp, #0]
 800238a:	9900      	ldr	r1, [sp, #0]
 800238c:	4643      	mov	r3, r8
 800238e:	3101      	adds	r1, #1
 8002390:	468c      	mov	ip, r1
 8002392:	4649      	mov	r1, r9
 8002394:	407b      	eors	r3, r7
 8002396:	9301      	str	r3, [sp, #4]
 8002398:	290f      	cmp	r1, #15
 800239a:	d900      	bls.n	800239e <__aeabi_dmul+0x96>
 800239c:	e07e      	b.n	800249c <__aeabi_dmul+0x194>
 800239e:	4bc2      	ldr	r3, [pc, #776]	; (80026a8 <__aeabi_dmul+0x3a0>)
 80023a0:	0089      	lsls	r1, r1, #2
 80023a2:	5859      	ldr	r1, [r3, r1]
 80023a4:	468f      	mov	pc, r1
 80023a6:	4652      	mov	r2, sl
 80023a8:	9b00      	ldr	r3, [sp, #0]
 80023aa:	4332      	orrs	r2, r6
 80023ac:	d000      	beq.n	80023b0 <__aeabi_dmul+0xa8>
 80023ae:	e156      	b.n	800265e <__aeabi_dmul+0x356>
 80023b0:	49bb      	ldr	r1, [pc, #748]	; (80026a0 <__aeabi_dmul+0x398>)
 80023b2:	2600      	movs	r6, #0
 80023b4:	468c      	mov	ip, r1
 80023b6:	4463      	add	r3, ip
 80023b8:	4649      	mov	r1, r9
 80023ba:	9300      	str	r3, [sp, #0]
 80023bc:	2302      	movs	r3, #2
 80023be:	4319      	orrs	r1, r3
 80023c0:	4689      	mov	r9, r1
 80023c2:	2002      	movs	r0, #2
 80023c4:	e7e1      	b.n	800238a <__aeabi_dmul+0x82>
 80023c6:	4643      	mov	r3, r8
 80023c8:	9301      	str	r3, [sp, #4]
 80023ca:	0034      	movs	r4, r6
 80023cc:	0015      	movs	r5, r2
 80023ce:	4683      	mov	fp, r0
 80023d0:	465b      	mov	r3, fp
 80023d2:	2b02      	cmp	r3, #2
 80023d4:	d05e      	beq.n	8002494 <__aeabi_dmul+0x18c>
 80023d6:	2b03      	cmp	r3, #3
 80023d8:	d100      	bne.n	80023dc <__aeabi_dmul+0xd4>
 80023da:	e1f3      	b.n	80027c4 <__aeabi_dmul+0x4bc>
 80023dc:	2b01      	cmp	r3, #1
 80023de:	d000      	beq.n	80023e2 <__aeabi_dmul+0xda>
 80023e0:	e118      	b.n	8002614 <__aeabi_dmul+0x30c>
 80023e2:	2200      	movs	r2, #0
 80023e4:	2400      	movs	r4, #0
 80023e6:	2500      	movs	r5, #0
 80023e8:	9b01      	ldr	r3, [sp, #4]
 80023ea:	0512      	lsls	r2, r2, #20
 80023ec:	4322      	orrs	r2, r4
 80023ee:	07db      	lsls	r3, r3, #31
 80023f0:	431a      	orrs	r2, r3
 80023f2:	0028      	movs	r0, r5
 80023f4:	0011      	movs	r1, r2
 80023f6:	b007      	add	sp, #28
 80023f8:	bcf0      	pop	{r4, r5, r6, r7}
 80023fa:	46bb      	mov	fp, r7
 80023fc:	46b2      	mov	sl, r6
 80023fe:	46a9      	mov	r9, r5
 8002400:	46a0      	mov	r8, r4
 8002402:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002404:	0025      	movs	r5, r4
 8002406:	4305      	orrs	r5, r0
 8002408:	d100      	bne.n	800240c <__aeabi_dmul+0x104>
 800240a:	e141      	b.n	8002690 <__aeabi_dmul+0x388>
 800240c:	2c00      	cmp	r4, #0
 800240e:	d100      	bne.n	8002412 <__aeabi_dmul+0x10a>
 8002410:	e1ad      	b.n	800276e <__aeabi_dmul+0x466>
 8002412:	0020      	movs	r0, r4
 8002414:	f000 fef0 	bl	80031f8 <__clzsi2>
 8002418:	0001      	movs	r1, r0
 800241a:	0002      	movs	r2, r0
 800241c:	390b      	subs	r1, #11
 800241e:	231d      	movs	r3, #29
 8002420:	0010      	movs	r0, r2
 8002422:	1a5b      	subs	r3, r3, r1
 8002424:	0031      	movs	r1, r6
 8002426:	0035      	movs	r5, r6
 8002428:	3808      	subs	r0, #8
 800242a:	4084      	lsls	r4, r0
 800242c:	40d9      	lsrs	r1, r3
 800242e:	4085      	lsls	r5, r0
 8002430:	430c      	orrs	r4, r1
 8002432:	489e      	ldr	r0, [pc, #632]	; (80026ac <__aeabi_dmul+0x3a4>)
 8002434:	1a83      	subs	r3, r0, r2
 8002436:	9300      	str	r3, [sp, #0]
 8002438:	2300      	movs	r3, #0
 800243a:	4699      	mov	r9, r3
 800243c:	469b      	mov	fp, r3
 800243e:	e786      	b.n	800234e <__aeabi_dmul+0x46>
 8002440:	0005      	movs	r5, r0
 8002442:	4325      	orrs	r5, r4
 8002444:	d000      	beq.n	8002448 <__aeabi_dmul+0x140>
 8002446:	e11c      	b.n	8002682 <__aeabi_dmul+0x37a>
 8002448:	2208      	movs	r2, #8
 800244a:	9300      	str	r3, [sp, #0]
 800244c:	2302      	movs	r3, #2
 800244e:	2400      	movs	r4, #0
 8002450:	4691      	mov	r9, r2
 8002452:	469b      	mov	fp, r3
 8002454:	e77b      	b.n	800234e <__aeabi_dmul+0x46>
 8002456:	4652      	mov	r2, sl
 8002458:	4332      	orrs	r2, r6
 800245a:	d100      	bne.n	800245e <__aeabi_dmul+0x156>
 800245c:	e10a      	b.n	8002674 <__aeabi_dmul+0x36c>
 800245e:	2e00      	cmp	r6, #0
 8002460:	d100      	bne.n	8002464 <__aeabi_dmul+0x15c>
 8002462:	e176      	b.n	8002752 <__aeabi_dmul+0x44a>
 8002464:	0030      	movs	r0, r6
 8002466:	f000 fec7 	bl	80031f8 <__clzsi2>
 800246a:	0002      	movs	r2, r0
 800246c:	3a0b      	subs	r2, #11
 800246e:	231d      	movs	r3, #29
 8002470:	0001      	movs	r1, r0
 8002472:	1a9b      	subs	r3, r3, r2
 8002474:	4652      	mov	r2, sl
 8002476:	3908      	subs	r1, #8
 8002478:	40da      	lsrs	r2, r3
 800247a:	408e      	lsls	r6, r1
 800247c:	4316      	orrs	r6, r2
 800247e:	4652      	mov	r2, sl
 8002480:	408a      	lsls	r2, r1
 8002482:	9b00      	ldr	r3, [sp, #0]
 8002484:	4989      	ldr	r1, [pc, #548]	; (80026ac <__aeabi_dmul+0x3a4>)
 8002486:	1a18      	subs	r0, r3, r0
 8002488:	0003      	movs	r3, r0
 800248a:	468c      	mov	ip, r1
 800248c:	4463      	add	r3, ip
 800248e:	2000      	movs	r0, #0
 8002490:	9300      	str	r3, [sp, #0]
 8002492:	e77a      	b.n	800238a <__aeabi_dmul+0x82>
 8002494:	2400      	movs	r4, #0
 8002496:	2500      	movs	r5, #0
 8002498:	4a81      	ldr	r2, [pc, #516]	; (80026a0 <__aeabi_dmul+0x398>)
 800249a:	e7a5      	b.n	80023e8 <__aeabi_dmul+0xe0>
 800249c:	0c2f      	lsrs	r7, r5, #16
 800249e:	042d      	lsls	r5, r5, #16
 80024a0:	0c2d      	lsrs	r5, r5, #16
 80024a2:	002b      	movs	r3, r5
 80024a4:	0c11      	lsrs	r1, r2, #16
 80024a6:	0412      	lsls	r2, r2, #16
 80024a8:	0c12      	lsrs	r2, r2, #16
 80024aa:	4353      	muls	r3, r2
 80024ac:	4698      	mov	r8, r3
 80024ae:	0013      	movs	r3, r2
 80024b0:	0028      	movs	r0, r5
 80024b2:	437b      	muls	r3, r7
 80024b4:	4699      	mov	r9, r3
 80024b6:	4348      	muls	r0, r1
 80024b8:	4448      	add	r0, r9
 80024ba:	4683      	mov	fp, r0
 80024bc:	4640      	mov	r0, r8
 80024be:	000b      	movs	r3, r1
 80024c0:	0c00      	lsrs	r0, r0, #16
 80024c2:	4682      	mov	sl, r0
 80024c4:	4658      	mov	r0, fp
 80024c6:	437b      	muls	r3, r7
 80024c8:	4450      	add	r0, sl
 80024ca:	9302      	str	r3, [sp, #8]
 80024cc:	4581      	cmp	r9, r0
 80024ce:	d906      	bls.n	80024de <__aeabi_dmul+0x1d6>
 80024d0:	469a      	mov	sl, r3
 80024d2:	2380      	movs	r3, #128	; 0x80
 80024d4:	025b      	lsls	r3, r3, #9
 80024d6:	4699      	mov	r9, r3
 80024d8:	44ca      	add	sl, r9
 80024da:	4653      	mov	r3, sl
 80024dc:	9302      	str	r3, [sp, #8]
 80024de:	0c03      	lsrs	r3, r0, #16
 80024e0:	469b      	mov	fp, r3
 80024e2:	4643      	mov	r3, r8
 80024e4:	041b      	lsls	r3, r3, #16
 80024e6:	0400      	lsls	r0, r0, #16
 80024e8:	0c1b      	lsrs	r3, r3, #16
 80024ea:	4698      	mov	r8, r3
 80024ec:	0003      	movs	r3, r0
 80024ee:	4443      	add	r3, r8
 80024f0:	9304      	str	r3, [sp, #16]
 80024f2:	0c33      	lsrs	r3, r6, #16
 80024f4:	4699      	mov	r9, r3
 80024f6:	002b      	movs	r3, r5
 80024f8:	0436      	lsls	r6, r6, #16
 80024fa:	0c36      	lsrs	r6, r6, #16
 80024fc:	4373      	muls	r3, r6
 80024fe:	4698      	mov	r8, r3
 8002500:	0033      	movs	r3, r6
 8002502:	437b      	muls	r3, r7
 8002504:	469a      	mov	sl, r3
 8002506:	464b      	mov	r3, r9
 8002508:	435d      	muls	r5, r3
 800250a:	435f      	muls	r7, r3
 800250c:	4643      	mov	r3, r8
 800250e:	4455      	add	r5, sl
 8002510:	0c18      	lsrs	r0, r3, #16
 8002512:	1940      	adds	r0, r0, r5
 8002514:	4582      	cmp	sl, r0
 8002516:	d903      	bls.n	8002520 <__aeabi_dmul+0x218>
 8002518:	2380      	movs	r3, #128	; 0x80
 800251a:	025b      	lsls	r3, r3, #9
 800251c:	469a      	mov	sl, r3
 800251e:	4457      	add	r7, sl
 8002520:	0c05      	lsrs	r5, r0, #16
 8002522:	19eb      	adds	r3, r5, r7
 8002524:	9305      	str	r3, [sp, #20]
 8002526:	4643      	mov	r3, r8
 8002528:	041d      	lsls	r5, r3, #16
 800252a:	0c2d      	lsrs	r5, r5, #16
 800252c:	0400      	lsls	r0, r0, #16
 800252e:	1940      	adds	r0, r0, r5
 8002530:	0c25      	lsrs	r5, r4, #16
 8002532:	0424      	lsls	r4, r4, #16
 8002534:	0c24      	lsrs	r4, r4, #16
 8002536:	0027      	movs	r7, r4
 8002538:	4357      	muls	r7, r2
 800253a:	436a      	muls	r2, r5
 800253c:	4690      	mov	r8, r2
 800253e:	002a      	movs	r2, r5
 8002540:	0c3b      	lsrs	r3, r7, #16
 8002542:	469a      	mov	sl, r3
 8002544:	434a      	muls	r2, r1
 8002546:	4361      	muls	r1, r4
 8002548:	4441      	add	r1, r8
 800254a:	4451      	add	r1, sl
 800254c:	4483      	add	fp, r0
 800254e:	4588      	cmp	r8, r1
 8002550:	d903      	bls.n	800255a <__aeabi_dmul+0x252>
 8002552:	2380      	movs	r3, #128	; 0x80
 8002554:	025b      	lsls	r3, r3, #9
 8002556:	4698      	mov	r8, r3
 8002558:	4442      	add	r2, r8
 800255a:	043f      	lsls	r7, r7, #16
 800255c:	0c0b      	lsrs	r3, r1, #16
 800255e:	0c3f      	lsrs	r7, r7, #16
 8002560:	0409      	lsls	r1, r1, #16
 8002562:	19c9      	adds	r1, r1, r7
 8002564:	0027      	movs	r7, r4
 8002566:	4698      	mov	r8, r3
 8002568:	464b      	mov	r3, r9
 800256a:	4377      	muls	r7, r6
 800256c:	435c      	muls	r4, r3
 800256e:	436e      	muls	r6, r5
 8002570:	435d      	muls	r5, r3
 8002572:	0c3b      	lsrs	r3, r7, #16
 8002574:	4699      	mov	r9, r3
 8002576:	19a4      	adds	r4, r4, r6
 8002578:	444c      	add	r4, r9
 800257a:	4442      	add	r2, r8
 800257c:	9503      	str	r5, [sp, #12]
 800257e:	42a6      	cmp	r6, r4
 8002580:	d904      	bls.n	800258c <__aeabi_dmul+0x284>
 8002582:	2380      	movs	r3, #128	; 0x80
 8002584:	025b      	lsls	r3, r3, #9
 8002586:	4698      	mov	r8, r3
 8002588:	4445      	add	r5, r8
 800258a:	9503      	str	r5, [sp, #12]
 800258c:	9b02      	ldr	r3, [sp, #8]
 800258e:	043f      	lsls	r7, r7, #16
 8002590:	445b      	add	r3, fp
 8002592:	001e      	movs	r6, r3
 8002594:	4283      	cmp	r3, r0
 8002596:	4180      	sbcs	r0, r0
 8002598:	0423      	lsls	r3, r4, #16
 800259a:	4698      	mov	r8, r3
 800259c:	9b05      	ldr	r3, [sp, #20]
 800259e:	0c3f      	lsrs	r7, r7, #16
 80025a0:	4447      	add	r7, r8
 80025a2:	4698      	mov	r8, r3
 80025a4:	1876      	adds	r6, r6, r1
 80025a6:	428e      	cmp	r6, r1
 80025a8:	4189      	sbcs	r1, r1
 80025aa:	4447      	add	r7, r8
 80025ac:	4240      	negs	r0, r0
 80025ae:	183d      	adds	r5, r7, r0
 80025b0:	46a8      	mov	r8, r5
 80025b2:	4693      	mov	fp, r2
 80025b4:	4249      	negs	r1, r1
 80025b6:	468a      	mov	sl, r1
 80025b8:	44c3      	add	fp, r8
 80025ba:	429f      	cmp	r7, r3
 80025bc:	41bf      	sbcs	r7, r7
 80025be:	4580      	cmp	r8, r0
 80025c0:	4180      	sbcs	r0, r0
 80025c2:	9b03      	ldr	r3, [sp, #12]
 80025c4:	44da      	add	sl, fp
 80025c6:	4698      	mov	r8, r3
 80025c8:	4653      	mov	r3, sl
 80025ca:	4240      	negs	r0, r0
 80025cc:	427f      	negs	r7, r7
 80025ce:	4307      	orrs	r7, r0
 80025d0:	0c24      	lsrs	r4, r4, #16
 80025d2:	4593      	cmp	fp, r2
 80025d4:	4192      	sbcs	r2, r2
 80025d6:	458a      	cmp	sl, r1
 80025d8:	4189      	sbcs	r1, r1
 80025da:	193f      	adds	r7, r7, r4
 80025dc:	0ddc      	lsrs	r4, r3, #23
 80025de:	9b04      	ldr	r3, [sp, #16]
 80025e0:	0275      	lsls	r5, r6, #9
 80025e2:	431d      	orrs	r5, r3
 80025e4:	1e68      	subs	r0, r5, #1
 80025e6:	4185      	sbcs	r5, r0
 80025e8:	4653      	mov	r3, sl
 80025ea:	4252      	negs	r2, r2
 80025ec:	4249      	negs	r1, r1
 80025ee:	430a      	orrs	r2, r1
 80025f0:	18bf      	adds	r7, r7, r2
 80025f2:	4447      	add	r7, r8
 80025f4:	0df6      	lsrs	r6, r6, #23
 80025f6:	027f      	lsls	r7, r7, #9
 80025f8:	4335      	orrs	r5, r6
 80025fa:	025a      	lsls	r2, r3, #9
 80025fc:	433c      	orrs	r4, r7
 80025fe:	4315      	orrs	r5, r2
 8002600:	01fb      	lsls	r3, r7, #7
 8002602:	d400      	bmi.n	8002606 <__aeabi_dmul+0x2fe>
 8002604:	e0c1      	b.n	800278a <__aeabi_dmul+0x482>
 8002606:	2101      	movs	r1, #1
 8002608:	086a      	lsrs	r2, r5, #1
 800260a:	400d      	ands	r5, r1
 800260c:	4315      	orrs	r5, r2
 800260e:	07e2      	lsls	r2, r4, #31
 8002610:	4315      	orrs	r5, r2
 8002612:	0864      	lsrs	r4, r4, #1
 8002614:	4926      	ldr	r1, [pc, #152]	; (80026b0 <__aeabi_dmul+0x3a8>)
 8002616:	4461      	add	r1, ip
 8002618:	2900      	cmp	r1, #0
 800261a:	dd56      	ble.n	80026ca <__aeabi_dmul+0x3c2>
 800261c:	076b      	lsls	r3, r5, #29
 800261e:	d009      	beq.n	8002634 <__aeabi_dmul+0x32c>
 8002620:	220f      	movs	r2, #15
 8002622:	402a      	ands	r2, r5
 8002624:	2a04      	cmp	r2, #4
 8002626:	d005      	beq.n	8002634 <__aeabi_dmul+0x32c>
 8002628:	1d2a      	adds	r2, r5, #4
 800262a:	42aa      	cmp	r2, r5
 800262c:	41ad      	sbcs	r5, r5
 800262e:	426d      	negs	r5, r5
 8002630:	1964      	adds	r4, r4, r5
 8002632:	0015      	movs	r5, r2
 8002634:	01e3      	lsls	r3, r4, #7
 8002636:	d504      	bpl.n	8002642 <__aeabi_dmul+0x33a>
 8002638:	2180      	movs	r1, #128	; 0x80
 800263a:	4a1e      	ldr	r2, [pc, #120]	; (80026b4 <__aeabi_dmul+0x3ac>)
 800263c:	00c9      	lsls	r1, r1, #3
 800263e:	4014      	ands	r4, r2
 8002640:	4461      	add	r1, ip
 8002642:	4a1d      	ldr	r2, [pc, #116]	; (80026b8 <__aeabi_dmul+0x3b0>)
 8002644:	4291      	cmp	r1, r2
 8002646:	dd00      	ble.n	800264a <__aeabi_dmul+0x342>
 8002648:	e724      	b.n	8002494 <__aeabi_dmul+0x18c>
 800264a:	0762      	lsls	r2, r4, #29
 800264c:	08ed      	lsrs	r5, r5, #3
 800264e:	0264      	lsls	r4, r4, #9
 8002650:	0549      	lsls	r1, r1, #21
 8002652:	4315      	orrs	r5, r2
 8002654:	0b24      	lsrs	r4, r4, #12
 8002656:	0d4a      	lsrs	r2, r1, #21
 8002658:	e6c6      	b.n	80023e8 <__aeabi_dmul+0xe0>
 800265a:	9701      	str	r7, [sp, #4]
 800265c:	e6b8      	b.n	80023d0 <__aeabi_dmul+0xc8>
 800265e:	4a10      	ldr	r2, [pc, #64]	; (80026a0 <__aeabi_dmul+0x398>)
 8002660:	2003      	movs	r0, #3
 8002662:	4694      	mov	ip, r2
 8002664:	4463      	add	r3, ip
 8002666:	464a      	mov	r2, r9
 8002668:	9300      	str	r3, [sp, #0]
 800266a:	2303      	movs	r3, #3
 800266c:	431a      	orrs	r2, r3
 800266e:	4691      	mov	r9, r2
 8002670:	4652      	mov	r2, sl
 8002672:	e68a      	b.n	800238a <__aeabi_dmul+0x82>
 8002674:	4649      	mov	r1, r9
 8002676:	2301      	movs	r3, #1
 8002678:	4319      	orrs	r1, r3
 800267a:	4689      	mov	r9, r1
 800267c:	2600      	movs	r6, #0
 800267e:	2001      	movs	r0, #1
 8002680:	e683      	b.n	800238a <__aeabi_dmul+0x82>
 8002682:	220c      	movs	r2, #12
 8002684:	9300      	str	r3, [sp, #0]
 8002686:	2303      	movs	r3, #3
 8002688:	0005      	movs	r5, r0
 800268a:	4691      	mov	r9, r2
 800268c:	469b      	mov	fp, r3
 800268e:	e65e      	b.n	800234e <__aeabi_dmul+0x46>
 8002690:	2304      	movs	r3, #4
 8002692:	4699      	mov	r9, r3
 8002694:	2300      	movs	r3, #0
 8002696:	9300      	str	r3, [sp, #0]
 8002698:	3301      	adds	r3, #1
 800269a:	2400      	movs	r4, #0
 800269c:	469b      	mov	fp, r3
 800269e:	e656      	b.n	800234e <__aeabi_dmul+0x46>
 80026a0:	000007ff 	.word	0x000007ff
 80026a4:	fffffc01 	.word	0xfffffc01
 80026a8:	0800fb48 	.word	0x0800fb48
 80026ac:	fffffc0d 	.word	0xfffffc0d
 80026b0:	000003ff 	.word	0x000003ff
 80026b4:	feffffff 	.word	0xfeffffff
 80026b8:	000007fe 	.word	0x000007fe
 80026bc:	2300      	movs	r3, #0
 80026be:	2480      	movs	r4, #128	; 0x80
 80026c0:	2500      	movs	r5, #0
 80026c2:	4a44      	ldr	r2, [pc, #272]	; (80027d4 <__aeabi_dmul+0x4cc>)
 80026c4:	9301      	str	r3, [sp, #4]
 80026c6:	0324      	lsls	r4, r4, #12
 80026c8:	e68e      	b.n	80023e8 <__aeabi_dmul+0xe0>
 80026ca:	2001      	movs	r0, #1
 80026cc:	1a40      	subs	r0, r0, r1
 80026ce:	2838      	cmp	r0, #56	; 0x38
 80026d0:	dd00      	ble.n	80026d4 <__aeabi_dmul+0x3cc>
 80026d2:	e686      	b.n	80023e2 <__aeabi_dmul+0xda>
 80026d4:	281f      	cmp	r0, #31
 80026d6:	dd5b      	ble.n	8002790 <__aeabi_dmul+0x488>
 80026d8:	221f      	movs	r2, #31
 80026da:	0023      	movs	r3, r4
 80026dc:	4252      	negs	r2, r2
 80026de:	1a51      	subs	r1, r2, r1
 80026e0:	40cb      	lsrs	r3, r1
 80026e2:	0019      	movs	r1, r3
 80026e4:	2820      	cmp	r0, #32
 80026e6:	d003      	beq.n	80026f0 <__aeabi_dmul+0x3e8>
 80026e8:	4a3b      	ldr	r2, [pc, #236]	; (80027d8 <__aeabi_dmul+0x4d0>)
 80026ea:	4462      	add	r2, ip
 80026ec:	4094      	lsls	r4, r2
 80026ee:	4325      	orrs	r5, r4
 80026f0:	1e6a      	subs	r2, r5, #1
 80026f2:	4195      	sbcs	r5, r2
 80026f4:	002a      	movs	r2, r5
 80026f6:	430a      	orrs	r2, r1
 80026f8:	2107      	movs	r1, #7
 80026fa:	000d      	movs	r5, r1
 80026fc:	2400      	movs	r4, #0
 80026fe:	4015      	ands	r5, r2
 8002700:	4211      	tst	r1, r2
 8002702:	d05b      	beq.n	80027bc <__aeabi_dmul+0x4b4>
 8002704:	210f      	movs	r1, #15
 8002706:	2400      	movs	r4, #0
 8002708:	4011      	ands	r1, r2
 800270a:	2904      	cmp	r1, #4
 800270c:	d053      	beq.n	80027b6 <__aeabi_dmul+0x4ae>
 800270e:	1d11      	adds	r1, r2, #4
 8002710:	4291      	cmp	r1, r2
 8002712:	4192      	sbcs	r2, r2
 8002714:	4252      	negs	r2, r2
 8002716:	18a4      	adds	r4, r4, r2
 8002718:	000a      	movs	r2, r1
 800271a:	0223      	lsls	r3, r4, #8
 800271c:	d54b      	bpl.n	80027b6 <__aeabi_dmul+0x4ae>
 800271e:	2201      	movs	r2, #1
 8002720:	2400      	movs	r4, #0
 8002722:	2500      	movs	r5, #0
 8002724:	e660      	b.n	80023e8 <__aeabi_dmul+0xe0>
 8002726:	2380      	movs	r3, #128	; 0x80
 8002728:	031b      	lsls	r3, r3, #12
 800272a:	421c      	tst	r4, r3
 800272c:	d009      	beq.n	8002742 <__aeabi_dmul+0x43a>
 800272e:	421e      	tst	r6, r3
 8002730:	d107      	bne.n	8002742 <__aeabi_dmul+0x43a>
 8002732:	4333      	orrs	r3, r6
 8002734:	031c      	lsls	r4, r3, #12
 8002736:	4643      	mov	r3, r8
 8002738:	0015      	movs	r5, r2
 800273a:	0b24      	lsrs	r4, r4, #12
 800273c:	4a25      	ldr	r2, [pc, #148]	; (80027d4 <__aeabi_dmul+0x4cc>)
 800273e:	9301      	str	r3, [sp, #4]
 8002740:	e652      	b.n	80023e8 <__aeabi_dmul+0xe0>
 8002742:	2280      	movs	r2, #128	; 0x80
 8002744:	0312      	lsls	r2, r2, #12
 8002746:	4314      	orrs	r4, r2
 8002748:	0324      	lsls	r4, r4, #12
 800274a:	4a22      	ldr	r2, [pc, #136]	; (80027d4 <__aeabi_dmul+0x4cc>)
 800274c:	0b24      	lsrs	r4, r4, #12
 800274e:	9701      	str	r7, [sp, #4]
 8002750:	e64a      	b.n	80023e8 <__aeabi_dmul+0xe0>
 8002752:	f000 fd51 	bl	80031f8 <__clzsi2>
 8002756:	0003      	movs	r3, r0
 8002758:	001a      	movs	r2, r3
 800275a:	3215      	adds	r2, #21
 800275c:	3020      	adds	r0, #32
 800275e:	2a1c      	cmp	r2, #28
 8002760:	dc00      	bgt.n	8002764 <__aeabi_dmul+0x45c>
 8002762:	e684      	b.n	800246e <__aeabi_dmul+0x166>
 8002764:	4656      	mov	r6, sl
 8002766:	3b08      	subs	r3, #8
 8002768:	2200      	movs	r2, #0
 800276a:	409e      	lsls	r6, r3
 800276c:	e689      	b.n	8002482 <__aeabi_dmul+0x17a>
 800276e:	f000 fd43 	bl	80031f8 <__clzsi2>
 8002772:	0001      	movs	r1, r0
 8002774:	0002      	movs	r2, r0
 8002776:	3115      	adds	r1, #21
 8002778:	3220      	adds	r2, #32
 800277a:	291c      	cmp	r1, #28
 800277c:	dc00      	bgt.n	8002780 <__aeabi_dmul+0x478>
 800277e:	e64e      	b.n	800241e <__aeabi_dmul+0x116>
 8002780:	0034      	movs	r4, r6
 8002782:	3808      	subs	r0, #8
 8002784:	2500      	movs	r5, #0
 8002786:	4084      	lsls	r4, r0
 8002788:	e653      	b.n	8002432 <__aeabi_dmul+0x12a>
 800278a:	9b00      	ldr	r3, [sp, #0]
 800278c:	469c      	mov	ip, r3
 800278e:	e741      	b.n	8002614 <__aeabi_dmul+0x30c>
 8002790:	4912      	ldr	r1, [pc, #72]	; (80027dc <__aeabi_dmul+0x4d4>)
 8002792:	0022      	movs	r2, r4
 8002794:	4461      	add	r1, ip
 8002796:	002e      	movs	r6, r5
 8002798:	408d      	lsls	r5, r1
 800279a:	408a      	lsls	r2, r1
 800279c:	40c6      	lsrs	r6, r0
 800279e:	1e69      	subs	r1, r5, #1
 80027a0:	418d      	sbcs	r5, r1
 80027a2:	4332      	orrs	r2, r6
 80027a4:	432a      	orrs	r2, r5
 80027a6:	40c4      	lsrs	r4, r0
 80027a8:	0753      	lsls	r3, r2, #29
 80027aa:	d0b6      	beq.n	800271a <__aeabi_dmul+0x412>
 80027ac:	210f      	movs	r1, #15
 80027ae:	4011      	ands	r1, r2
 80027b0:	2904      	cmp	r1, #4
 80027b2:	d1ac      	bne.n	800270e <__aeabi_dmul+0x406>
 80027b4:	e7b1      	b.n	800271a <__aeabi_dmul+0x412>
 80027b6:	0765      	lsls	r5, r4, #29
 80027b8:	0264      	lsls	r4, r4, #9
 80027ba:	0b24      	lsrs	r4, r4, #12
 80027bc:	08d2      	lsrs	r2, r2, #3
 80027be:	4315      	orrs	r5, r2
 80027c0:	2200      	movs	r2, #0
 80027c2:	e611      	b.n	80023e8 <__aeabi_dmul+0xe0>
 80027c4:	2280      	movs	r2, #128	; 0x80
 80027c6:	0312      	lsls	r2, r2, #12
 80027c8:	4314      	orrs	r4, r2
 80027ca:	0324      	lsls	r4, r4, #12
 80027cc:	4a01      	ldr	r2, [pc, #4]	; (80027d4 <__aeabi_dmul+0x4cc>)
 80027ce:	0b24      	lsrs	r4, r4, #12
 80027d0:	e60a      	b.n	80023e8 <__aeabi_dmul+0xe0>
 80027d2:	46c0      	nop			; (mov r8, r8)
 80027d4:	000007ff 	.word	0x000007ff
 80027d8:	0000043e 	.word	0x0000043e
 80027dc:	0000041e 	.word	0x0000041e

080027e0 <__aeabi_dsub>:
 80027e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027e2:	4657      	mov	r7, sl
 80027e4:	464e      	mov	r6, r9
 80027e6:	4645      	mov	r5, r8
 80027e8:	46de      	mov	lr, fp
 80027ea:	0004      	movs	r4, r0
 80027ec:	b5e0      	push	{r5, r6, r7, lr}
 80027ee:	001f      	movs	r7, r3
 80027f0:	0010      	movs	r0, r2
 80027f2:	030b      	lsls	r3, r1, #12
 80027f4:	0f62      	lsrs	r2, r4, #29
 80027f6:	004e      	lsls	r6, r1, #1
 80027f8:	0fcd      	lsrs	r5, r1, #31
 80027fa:	0a5b      	lsrs	r3, r3, #9
 80027fc:	0339      	lsls	r1, r7, #12
 80027fe:	4313      	orrs	r3, r2
 8002800:	0a49      	lsrs	r1, r1, #9
 8002802:	00e2      	lsls	r2, r4, #3
 8002804:	0f44      	lsrs	r4, r0, #29
 8002806:	4321      	orrs	r1, r4
 8002808:	4cc2      	ldr	r4, [pc, #776]	; (8002b14 <__aeabi_dsub+0x334>)
 800280a:	4691      	mov	r9, r2
 800280c:	4692      	mov	sl, r2
 800280e:	00c0      	lsls	r0, r0, #3
 8002810:	007a      	lsls	r2, r7, #1
 8002812:	4680      	mov	r8, r0
 8002814:	0d76      	lsrs	r6, r6, #21
 8002816:	0d52      	lsrs	r2, r2, #21
 8002818:	0fff      	lsrs	r7, r7, #31
 800281a:	42a2      	cmp	r2, r4
 800281c:	d100      	bne.n	8002820 <__aeabi_dsub+0x40>
 800281e:	e0b4      	b.n	800298a <__aeabi_dsub+0x1aa>
 8002820:	2401      	movs	r4, #1
 8002822:	4067      	eors	r7, r4
 8002824:	46bb      	mov	fp, r7
 8002826:	42bd      	cmp	r5, r7
 8002828:	d100      	bne.n	800282c <__aeabi_dsub+0x4c>
 800282a:	e088      	b.n	800293e <__aeabi_dsub+0x15e>
 800282c:	1ab4      	subs	r4, r6, r2
 800282e:	46a4      	mov	ip, r4
 8002830:	2c00      	cmp	r4, #0
 8002832:	dc00      	bgt.n	8002836 <__aeabi_dsub+0x56>
 8002834:	e0b2      	b.n	800299c <__aeabi_dsub+0x1bc>
 8002836:	2a00      	cmp	r2, #0
 8002838:	d100      	bne.n	800283c <__aeabi_dsub+0x5c>
 800283a:	e0c5      	b.n	80029c8 <__aeabi_dsub+0x1e8>
 800283c:	4ab5      	ldr	r2, [pc, #724]	; (8002b14 <__aeabi_dsub+0x334>)
 800283e:	4296      	cmp	r6, r2
 8002840:	d100      	bne.n	8002844 <__aeabi_dsub+0x64>
 8002842:	e28b      	b.n	8002d5c <__aeabi_dsub+0x57c>
 8002844:	2280      	movs	r2, #128	; 0x80
 8002846:	0412      	lsls	r2, r2, #16
 8002848:	4311      	orrs	r1, r2
 800284a:	4662      	mov	r2, ip
 800284c:	2a38      	cmp	r2, #56	; 0x38
 800284e:	dd00      	ble.n	8002852 <__aeabi_dsub+0x72>
 8002850:	e1a1      	b.n	8002b96 <__aeabi_dsub+0x3b6>
 8002852:	2a1f      	cmp	r2, #31
 8002854:	dd00      	ble.n	8002858 <__aeabi_dsub+0x78>
 8002856:	e216      	b.n	8002c86 <__aeabi_dsub+0x4a6>
 8002858:	2720      	movs	r7, #32
 800285a:	000c      	movs	r4, r1
 800285c:	1abf      	subs	r7, r7, r2
 800285e:	40bc      	lsls	r4, r7
 8002860:	0002      	movs	r2, r0
 8002862:	46a0      	mov	r8, r4
 8002864:	4664      	mov	r4, ip
 8002866:	40b8      	lsls	r0, r7
 8002868:	40e2      	lsrs	r2, r4
 800286a:	4644      	mov	r4, r8
 800286c:	4314      	orrs	r4, r2
 800286e:	0002      	movs	r2, r0
 8002870:	1e50      	subs	r0, r2, #1
 8002872:	4182      	sbcs	r2, r0
 8002874:	4660      	mov	r0, ip
 8002876:	40c1      	lsrs	r1, r0
 8002878:	4322      	orrs	r2, r4
 800287a:	1a5b      	subs	r3, r3, r1
 800287c:	4649      	mov	r1, r9
 800287e:	1a8c      	subs	r4, r1, r2
 8002880:	45a1      	cmp	r9, r4
 8002882:	4192      	sbcs	r2, r2
 8002884:	4252      	negs	r2, r2
 8002886:	1a9b      	subs	r3, r3, r2
 8002888:	4698      	mov	r8, r3
 800288a:	4643      	mov	r3, r8
 800288c:	021b      	lsls	r3, r3, #8
 800288e:	d400      	bmi.n	8002892 <__aeabi_dsub+0xb2>
 8002890:	e117      	b.n	8002ac2 <__aeabi_dsub+0x2e2>
 8002892:	4643      	mov	r3, r8
 8002894:	025b      	lsls	r3, r3, #9
 8002896:	0a5b      	lsrs	r3, r3, #9
 8002898:	4698      	mov	r8, r3
 800289a:	4643      	mov	r3, r8
 800289c:	2b00      	cmp	r3, #0
 800289e:	d100      	bne.n	80028a2 <__aeabi_dsub+0xc2>
 80028a0:	e16c      	b.n	8002b7c <__aeabi_dsub+0x39c>
 80028a2:	4640      	mov	r0, r8
 80028a4:	f000 fca8 	bl	80031f8 <__clzsi2>
 80028a8:	0002      	movs	r2, r0
 80028aa:	3a08      	subs	r2, #8
 80028ac:	2120      	movs	r1, #32
 80028ae:	0020      	movs	r0, r4
 80028b0:	4643      	mov	r3, r8
 80028b2:	1a89      	subs	r1, r1, r2
 80028b4:	4093      	lsls	r3, r2
 80028b6:	40c8      	lsrs	r0, r1
 80028b8:	4094      	lsls	r4, r2
 80028ba:	4303      	orrs	r3, r0
 80028bc:	4296      	cmp	r6, r2
 80028be:	dd00      	ble.n	80028c2 <__aeabi_dsub+0xe2>
 80028c0:	e157      	b.n	8002b72 <__aeabi_dsub+0x392>
 80028c2:	1b96      	subs	r6, r2, r6
 80028c4:	1c71      	adds	r1, r6, #1
 80028c6:	291f      	cmp	r1, #31
 80028c8:	dd00      	ble.n	80028cc <__aeabi_dsub+0xec>
 80028ca:	e1cb      	b.n	8002c64 <__aeabi_dsub+0x484>
 80028cc:	2220      	movs	r2, #32
 80028ce:	0018      	movs	r0, r3
 80028d0:	0026      	movs	r6, r4
 80028d2:	1a52      	subs	r2, r2, r1
 80028d4:	4094      	lsls	r4, r2
 80028d6:	4090      	lsls	r0, r2
 80028d8:	40ce      	lsrs	r6, r1
 80028da:	40cb      	lsrs	r3, r1
 80028dc:	1e62      	subs	r2, r4, #1
 80028de:	4194      	sbcs	r4, r2
 80028e0:	4330      	orrs	r0, r6
 80028e2:	4698      	mov	r8, r3
 80028e4:	2600      	movs	r6, #0
 80028e6:	4304      	orrs	r4, r0
 80028e8:	0763      	lsls	r3, r4, #29
 80028ea:	d009      	beq.n	8002900 <__aeabi_dsub+0x120>
 80028ec:	230f      	movs	r3, #15
 80028ee:	4023      	ands	r3, r4
 80028f0:	2b04      	cmp	r3, #4
 80028f2:	d005      	beq.n	8002900 <__aeabi_dsub+0x120>
 80028f4:	1d23      	adds	r3, r4, #4
 80028f6:	42a3      	cmp	r3, r4
 80028f8:	41a4      	sbcs	r4, r4
 80028fa:	4264      	negs	r4, r4
 80028fc:	44a0      	add	r8, r4
 80028fe:	001c      	movs	r4, r3
 8002900:	4643      	mov	r3, r8
 8002902:	021b      	lsls	r3, r3, #8
 8002904:	d400      	bmi.n	8002908 <__aeabi_dsub+0x128>
 8002906:	e0df      	b.n	8002ac8 <__aeabi_dsub+0x2e8>
 8002908:	4b82      	ldr	r3, [pc, #520]	; (8002b14 <__aeabi_dsub+0x334>)
 800290a:	3601      	adds	r6, #1
 800290c:	429e      	cmp	r6, r3
 800290e:	d100      	bne.n	8002912 <__aeabi_dsub+0x132>
 8002910:	e0fb      	b.n	8002b0a <__aeabi_dsub+0x32a>
 8002912:	4642      	mov	r2, r8
 8002914:	4b80      	ldr	r3, [pc, #512]	; (8002b18 <__aeabi_dsub+0x338>)
 8002916:	08e4      	lsrs	r4, r4, #3
 8002918:	401a      	ands	r2, r3
 800291a:	0013      	movs	r3, r2
 800291c:	0571      	lsls	r1, r6, #21
 800291e:	0752      	lsls	r2, r2, #29
 8002920:	025b      	lsls	r3, r3, #9
 8002922:	4322      	orrs	r2, r4
 8002924:	0b1b      	lsrs	r3, r3, #12
 8002926:	0d49      	lsrs	r1, r1, #21
 8002928:	0509      	lsls	r1, r1, #20
 800292a:	07ed      	lsls	r5, r5, #31
 800292c:	4319      	orrs	r1, r3
 800292e:	4329      	orrs	r1, r5
 8002930:	0010      	movs	r0, r2
 8002932:	bcf0      	pop	{r4, r5, r6, r7}
 8002934:	46bb      	mov	fp, r7
 8002936:	46b2      	mov	sl, r6
 8002938:	46a9      	mov	r9, r5
 800293a:	46a0      	mov	r8, r4
 800293c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800293e:	1ab4      	subs	r4, r6, r2
 8002940:	46a4      	mov	ip, r4
 8002942:	2c00      	cmp	r4, #0
 8002944:	dd58      	ble.n	80029f8 <__aeabi_dsub+0x218>
 8002946:	2a00      	cmp	r2, #0
 8002948:	d100      	bne.n	800294c <__aeabi_dsub+0x16c>
 800294a:	e09e      	b.n	8002a8a <__aeabi_dsub+0x2aa>
 800294c:	4a71      	ldr	r2, [pc, #452]	; (8002b14 <__aeabi_dsub+0x334>)
 800294e:	4296      	cmp	r6, r2
 8002950:	d100      	bne.n	8002954 <__aeabi_dsub+0x174>
 8002952:	e13b      	b.n	8002bcc <__aeabi_dsub+0x3ec>
 8002954:	2280      	movs	r2, #128	; 0x80
 8002956:	0412      	lsls	r2, r2, #16
 8002958:	4311      	orrs	r1, r2
 800295a:	4662      	mov	r2, ip
 800295c:	2a38      	cmp	r2, #56	; 0x38
 800295e:	dd00      	ble.n	8002962 <__aeabi_dsub+0x182>
 8002960:	e0c1      	b.n	8002ae6 <__aeabi_dsub+0x306>
 8002962:	2a1f      	cmp	r2, #31
 8002964:	dc00      	bgt.n	8002968 <__aeabi_dsub+0x188>
 8002966:	e1bb      	b.n	8002ce0 <__aeabi_dsub+0x500>
 8002968:	000c      	movs	r4, r1
 800296a:	3a20      	subs	r2, #32
 800296c:	40d4      	lsrs	r4, r2
 800296e:	0022      	movs	r2, r4
 8002970:	4664      	mov	r4, ip
 8002972:	2c20      	cmp	r4, #32
 8002974:	d004      	beq.n	8002980 <__aeabi_dsub+0x1a0>
 8002976:	2740      	movs	r7, #64	; 0x40
 8002978:	1b3f      	subs	r7, r7, r4
 800297a:	40b9      	lsls	r1, r7
 800297c:	4308      	orrs	r0, r1
 800297e:	4680      	mov	r8, r0
 8002980:	4644      	mov	r4, r8
 8002982:	1e61      	subs	r1, r4, #1
 8002984:	418c      	sbcs	r4, r1
 8002986:	4314      	orrs	r4, r2
 8002988:	e0b1      	b.n	8002aee <__aeabi_dsub+0x30e>
 800298a:	000c      	movs	r4, r1
 800298c:	4304      	orrs	r4, r0
 800298e:	d02a      	beq.n	80029e6 <__aeabi_dsub+0x206>
 8002990:	46bb      	mov	fp, r7
 8002992:	42bd      	cmp	r5, r7
 8002994:	d02d      	beq.n	80029f2 <__aeabi_dsub+0x212>
 8002996:	4c61      	ldr	r4, [pc, #388]	; (8002b1c <__aeabi_dsub+0x33c>)
 8002998:	46a4      	mov	ip, r4
 800299a:	44b4      	add	ip, r6
 800299c:	4664      	mov	r4, ip
 800299e:	2c00      	cmp	r4, #0
 80029a0:	d05c      	beq.n	8002a5c <__aeabi_dsub+0x27c>
 80029a2:	1b94      	subs	r4, r2, r6
 80029a4:	46a4      	mov	ip, r4
 80029a6:	2e00      	cmp	r6, #0
 80029a8:	d000      	beq.n	80029ac <__aeabi_dsub+0x1cc>
 80029aa:	e115      	b.n	8002bd8 <__aeabi_dsub+0x3f8>
 80029ac:	464d      	mov	r5, r9
 80029ae:	431d      	orrs	r5, r3
 80029b0:	d100      	bne.n	80029b4 <__aeabi_dsub+0x1d4>
 80029b2:	e1c3      	b.n	8002d3c <__aeabi_dsub+0x55c>
 80029b4:	1e65      	subs	r5, r4, #1
 80029b6:	2c01      	cmp	r4, #1
 80029b8:	d100      	bne.n	80029bc <__aeabi_dsub+0x1dc>
 80029ba:	e20c      	b.n	8002dd6 <__aeabi_dsub+0x5f6>
 80029bc:	4e55      	ldr	r6, [pc, #340]	; (8002b14 <__aeabi_dsub+0x334>)
 80029be:	42b4      	cmp	r4, r6
 80029c0:	d100      	bne.n	80029c4 <__aeabi_dsub+0x1e4>
 80029c2:	e1f8      	b.n	8002db6 <__aeabi_dsub+0x5d6>
 80029c4:	46ac      	mov	ip, r5
 80029c6:	e10e      	b.n	8002be6 <__aeabi_dsub+0x406>
 80029c8:	000a      	movs	r2, r1
 80029ca:	4302      	orrs	r2, r0
 80029cc:	d100      	bne.n	80029d0 <__aeabi_dsub+0x1f0>
 80029ce:	e136      	b.n	8002c3e <__aeabi_dsub+0x45e>
 80029d0:	0022      	movs	r2, r4
 80029d2:	3a01      	subs	r2, #1
 80029d4:	2c01      	cmp	r4, #1
 80029d6:	d100      	bne.n	80029da <__aeabi_dsub+0x1fa>
 80029d8:	e1c6      	b.n	8002d68 <__aeabi_dsub+0x588>
 80029da:	4c4e      	ldr	r4, [pc, #312]	; (8002b14 <__aeabi_dsub+0x334>)
 80029dc:	45a4      	cmp	ip, r4
 80029de:	d100      	bne.n	80029e2 <__aeabi_dsub+0x202>
 80029e0:	e0f4      	b.n	8002bcc <__aeabi_dsub+0x3ec>
 80029e2:	4694      	mov	ip, r2
 80029e4:	e731      	b.n	800284a <__aeabi_dsub+0x6a>
 80029e6:	2401      	movs	r4, #1
 80029e8:	4067      	eors	r7, r4
 80029ea:	46bb      	mov	fp, r7
 80029ec:	42bd      	cmp	r5, r7
 80029ee:	d000      	beq.n	80029f2 <__aeabi_dsub+0x212>
 80029f0:	e71c      	b.n	800282c <__aeabi_dsub+0x4c>
 80029f2:	4c4a      	ldr	r4, [pc, #296]	; (8002b1c <__aeabi_dsub+0x33c>)
 80029f4:	46a4      	mov	ip, r4
 80029f6:	44b4      	add	ip, r6
 80029f8:	4664      	mov	r4, ip
 80029fa:	2c00      	cmp	r4, #0
 80029fc:	d100      	bne.n	8002a00 <__aeabi_dsub+0x220>
 80029fe:	e0cf      	b.n	8002ba0 <__aeabi_dsub+0x3c0>
 8002a00:	1b94      	subs	r4, r2, r6
 8002a02:	46a4      	mov	ip, r4
 8002a04:	2e00      	cmp	r6, #0
 8002a06:	d100      	bne.n	8002a0a <__aeabi_dsub+0x22a>
 8002a08:	e15c      	b.n	8002cc4 <__aeabi_dsub+0x4e4>
 8002a0a:	4e42      	ldr	r6, [pc, #264]	; (8002b14 <__aeabi_dsub+0x334>)
 8002a0c:	42b2      	cmp	r2, r6
 8002a0e:	d100      	bne.n	8002a12 <__aeabi_dsub+0x232>
 8002a10:	e1ec      	b.n	8002dec <__aeabi_dsub+0x60c>
 8002a12:	2680      	movs	r6, #128	; 0x80
 8002a14:	0436      	lsls	r6, r6, #16
 8002a16:	4333      	orrs	r3, r6
 8002a18:	4664      	mov	r4, ip
 8002a1a:	2c38      	cmp	r4, #56	; 0x38
 8002a1c:	dd00      	ble.n	8002a20 <__aeabi_dsub+0x240>
 8002a1e:	e1b3      	b.n	8002d88 <__aeabi_dsub+0x5a8>
 8002a20:	2c1f      	cmp	r4, #31
 8002a22:	dd00      	ble.n	8002a26 <__aeabi_dsub+0x246>
 8002a24:	e238      	b.n	8002e98 <__aeabi_dsub+0x6b8>
 8002a26:	2620      	movs	r6, #32
 8002a28:	1b36      	subs	r6, r6, r4
 8002a2a:	001c      	movs	r4, r3
 8002a2c:	40b4      	lsls	r4, r6
 8002a2e:	464f      	mov	r7, r9
 8002a30:	46a0      	mov	r8, r4
 8002a32:	4664      	mov	r4, ip
 8002a34:	40e7      	lsrs	r7, r4
 8002a36:	4644      	mov	r4, r8
 8002a38:	433c      	orrs	r4, r7
 8002a3a:	464f      	mov	r7, r9
 8002a3c:	40b7      	lsls	r7, r6
 8002a3e:	003e      	movs	r6, r7
 8002a40:	1e77      	subs	r7, r6, #1
 8002a42:	41be      	sbcs	r6, r7
 8002a44:	4334      	orrs	r4, r6
 8002a46:	4666      	mov	r6, ip
 8002a48:	40f3      	lsrs	r3, r6
 8002a4a:	18c9      	adds	r1, r1, r3
 8002a4c:	1824      	adds	r4, r4, r0
 8002a4e:	4284      	cmp	r4, r0
 8002a50:	419b      	sbcs	r3, r3
 8002a52:	425b      	negs	r3, r3
 8002a54:	4698      	mov	r8, r3
 8002a56:	0016      	movs	r6, r2
 8002a58:	4488      	add	r8, r1
 8002a5a:	e04e      	b.n	8002afa <__aeabi_dsub+0x31a>
 8002a5c:	4a30      	ldr	r2, [pc, #192]	; (8002b20 <__aeabi_dsub+0x340>)
 8002a5e:	1c74      	adds	r4, r6, #1
 8002a60:	4214      	tst	r4, r2
 8002a62:	d000      	beq.n	8002a66 <__aeabi_dsub+0x286>
 8002a64:	e0d6      	b.n	8002c14 <__aeabi_dsub+0x434>
 8002a66:	464a      	mov	r2, r9
 8002a68:	431a      	orrs	r2, r3
 8002a6a:	2e00      	cmp	r6, #0
 8002a6c:	d000      	beq.n	8002a70 <__aeabi_dsub+0x290>
 8002a6e:	e15b      	b.n	8002d28 <__aeabi_dsub+0x548>
 8002a70:	2a00      	cmp	r2, #0
 8002a72:	d100      	bne.n	8002a76 <__aeabi_dsub+0x296>
 8002a74:	e1a5      	b.n	8002dc2 <__aeabi_dsub+0x5e2>
 8002a76:	000a      	movs	r2, r1
 8002a78:	4302      	orrs	r2, r0
 8002a7a:	d000      	beq.n	8002a7e <__aeabi_dsub+0x29e>
 8002a7c:	e1bb      	b.n	8002df6 <__aeabi_dsub+0x616>
 8002a7e:	464a      	mov	r2, r9
 8002a80:	0759      	lsls	r1, r3, #29
 8002a82:	08d2      	lsrs	r2, r2, #3
 8002a84:	430a      	orrs	r2, r1
 8002a86:	08db      	lsrs	r3, r3, #3
 8002a88:	e027      	b.n	8002ada <__aeabi_dsub+0x2fa>
 8002a8a:	000a      	movs	r2, r1
 8002a8c:	4302      	orrs	r2, r0
 8002a8e:	d100      	bne.n	8002a92 <__aeabi_dsub+0x2b2>
 8002a90:	e174      	b.n	8002d7c <__aeabi_dsub+0x59c>
 8002a92:	0022      	movs	r2, r4
 8002a94:	3a01      	subs	r2, #1
 8002a96:	2c01      	cmp	r4, #1
 8002a98:	d005      	beq.n	8002aa6 <__aeabi_dsub+0x2c6>
 8002a9a:	4c1e      	ldr	r4, [pc, #120]	; (8002b14 <__aeabi_dsub+0x334>)
 8002a9c:	45a4      	cmp	ip, r4
 8002a9e:	d100      	bne.n	8002aa2 <__aeabi_dsub+0x2c2>
 8002aa0:	e094      	b.n	8002bcc <__aeabi_dsub+0x3ec>
 8002aa2:	4694      	mov	ip, r2
 8002aa4:	e759      	b.n	800295a <__aeabi_dsub+0x17a>
 8002aa6:	4448      	add	r0, r9
 8002aa8:	4548      	cmp	r0, r9
 8002aaa:	4192      	sbcs	r2, r2
 8002aac:	185b      	adds	r3, r3, r1
 8002aae:	4698      	mov	r8, r3
 8002ab0:	0004      	movs	r4, r0
 8002ab2:	4252      	negs	r2, r2
 8002ab4:	4490      	add	r8, r2
 8002ab6:	4643      	mov	r3, r8
 8002ab8:	2602      	movs	r6, #2
 8002aba:	021b      	lsls	r3, r3, #8
 8002abc:	d500      	bpl.n	8002ac0 <__aeabi_dsub+0x2e0>
 8002abe:	e0c4      	b.n	8002c4a <__aeabi_dsub+0x46a>
 8002ac0:	3e01      	subs	r6, #1
 8002ac2:	0763      	lsls	r3, r4, #29
 8002ac4:	d000      	beq.n	8002ac8 <__aeabi_dsub+0x2e8>
 8002ac6:	e711      	b.n	80028ec <__aeabi_dsub+0x10c>
 8002ac8:	4643      	mov	r3, r8
 8002aca:	46b4      	mov	ip, r6
 8002acc:	0759      	lsls	r1, r3, #29
 8002ace:	08e2      	lsrs	r2, r4, #3
 8002ad0:	430a      	orrs	r2, r1
 8002ad2:	08db      	lsrs	r3, r3, #3
 8002ad4:	490f      	ldr	r1, [pc, #60]	; (8002b14 <__aeabi_dsub+0x334>)
 8002ad6:	458c      	cmp	ip, r1
 8002ad8:	d040      	beq.n	8002b5c <__aeabi_dsub+0x37c>
 8002ada:	4661      	mov	r1, ip
 8002adc:	031b      	lsls	r3, r3, #12
 8002ade:	0549      	lsls	r1, r1, #21
 8002ae0:	0b1b      	lsrs	r3, r3, #12
 8002ae2:	0d49      	lsrs	r1, r1, #21
 8002ae4:	e720      	b.n	8002928 <__aeabi_dsub+0x148>
 8002ae6:	4301      	orrs	r1, r0
 8002ae8:	000c      	movs	r4, r1
 8002aea:	1e61      	subs	r1, r4, #1
 8002aec:	418c      	sbcs	r4, r1
 8002aee:	444c      	add	r4, r9
 8002af0:	454c      	cmp	r4, r9
 8002af2:	4192      	sbcs	r2, r2
 8002af4:	4252      	negs	r2, r2
 8002af6:	4690      	mov	r8, r2
 8002af8:	4498      	add	r8, r3
 8002afa:	4643      	mov	r3, r8
 8002afc:	021b      	lsls	r3, r3, #8
 8002afe:	d5e0      	bpl.n	8002ac2 <__aeabi_dsub+0x2e2>
 8002b00:	4b04      	ldr	r3, [pc, #16]	; (8002b14 <__aeabi_dsub+0x334>)
 8002b02:	3601      	adds	r6, #1
 8002b04:	429e      	cmp	r6, r3
 8002b06:	d000      	beq.n	8002b0a <__aeabi_dsub+0x32a>
 8002b08:	e09f      	b.n	8002c4a <__aeabi_dsub+0x46a>
 8002b0a:	0031      	movs	r1, r6
 8002b0c:	2300      	movs	r3, #0
 8002b0e:	2200      	movs	r2, #0
 8002b10:	e70a      	b.n	8002928 <__aeabi_dsub+0x148>
 8002b12:	46c0      	nop			; (mov r8, r8)
 8002b14:	000007ff 	.word	0x000007ff
 8002b18:	ff7fffff 	.word	0xff7fffff
 8002b1c:	fffff801 	.word	0xfffff801
 8002b20:	000007fe 	.word	0x000007fe
 8002b24:	2a00      	cmp	r2, #0
 8002b26:	d100      	bne.n	8002b2a <__aeabi_dsub+0x34a>
 8002b28:	e160      	b.n	8002dec <__aeabi_dsub+0x60c>
 8002b2a:	000a      	movs	r2, r1
 8002b2c:	4302      	orrs	r2, r0
 8002b2e:	d04d      	beq.n	8002bcc <__aeabi_dsub+0x3ec>
 8002b30:	464a      	mov	r2, r9
 8002b32:	075c      	lsls	r4, r3, #29
 8002b34:	08d2      	lsrs	r2, r2, #3
 8002b36:	4322      	orrs	r2, r4
 8002b38:	2480      	movs	r4, #128	; 0x80
 8002b3a:	08db      	lsrs	r3, r3, #3
 8002b3c:	0324      	lsls	r4, r4, #12
 8002b3e:	4223      	tst	r3, r4
 8002b40:	d007      	beq.n	8002b52 <__aeabi_dsub+0x372>
 8002b42:	08ce      	lsrs	r6, r1, #3
 8002b44:	4226      	tst	r6, r4
 8002b46:	d104      	bne.n	8002b52 <__aeabi_dsub+0x372>
 8002b48:	465d      	mov	r5, fp
 8002b4a:	0033      	movs	r3, r6
 8002b4c:	08c2      	lsrs	r2, r0, #3
 8002b4e:	0749      	lsls	r1, r1, #29
 8002b50:	430a      	orrs	r2, r1
 8002b52:	0f51      	lsrs	r1, r2, #29
 8002b54:	00d2      	lsls	r2, r2, #3
 8002b56:	08d2      	lsrs	r2, r2, #3
 8002b58:	0749      	lsls	r1, r1, #29
 8002b5a:	430a      	orrs	r2, r1
 8002b5c:	0011      	movs	r1, r2
 8002b5e:	4319      	orrs	r1, r3
 8002b60:	d100      	bne.n	8002b64 <__aeabi_dsub+0x384>
 8002b62:	e1c8      	b.n	8002ef6 <__aeabi_dsub+0x716>
 8002b64:	2180      	movs	r1, #128	; 0x80
 8002b66:	0309      	lsls	r1, r1, #12
 8002b68:	430b      	orrs	r3, r1
 8002b6a:	031b      	lsls	r3, r3, #12
 8002b6c:	49d5      	ldr	r1, [pc, #852]	; (8002ec4 <__aeabi_dsub+0x6e4>)
 8002b6e:	0b1b      	lsrs	r3, r3, #12
 8002b70:	e6da      	b.n	8002928 <__aeabi_dsub+0x148>
 8002b72:	49d5      	ldr	r1, [pc, #852]	; (8002ec8 <__aeabi_dsub+0x6e8>)
 8002b74:	1ab6      	subs	r6, r6, r2
 8002b76:	400b      	ands	r3, r1
 8002b78:	4698      	mov	r8, r3
 8002b7a:	e6b5      	b.n	80028e8 <__aeabi_dsub+0x108>
 8002b7c:	0020      	movs	r0, r4
 8002b7e:	f000 fb3b 	bl	80031f8 <__clzsi2>
 8002b82:	0002      	movs	r2, r0
 8002b84:	3218      	adds	r2, #24
 8002b86:	2a1f      	cmp	r2, #31
 8002b88:	dc00      	bgt.n	8002b8c <__aeabi_dsub+0x3ac>
 8002b8a:	e68f      	b.n	80028ac <__aeabi_dsub+0xcc>
 8002b8c:	0023      	movs	r3, r4
 8002b8e:	3808      	subs	r0, #8
 8002b90:	4083      	lsls	r3, r0
 8002b92:	2400      	movs	r4, #0
 8002b94:	e692      	b.n	80028bc <__aeabi_dsub+0xdc>
 8002b96:	4308      	orrs	r0, r1
 8002b98:	0002      	movs	r2, r0
 8002b9a:	1e50      	subs	r0, r2, #1
 8002b9c:	4182      	sbcs	r2, r0
 8002b9e:	e66d      	b.n	800287c <__aeabi_dsub+0x9c>
 8002ba0:	4cca      	ldr	r4, [pc, #808]	; (8002ecc <__aeabi_dsub+0x6ec>)
 8002ba2:	1c72      	adds	r2, r6, #1
 8002ba4:	4222      	tst	r2, r4
 8002ba6:	d000      	beq.n	8002baa <__aeabi_dsub+0x3ca>
 8002ba8:	e0ad      	b.n	8002d06 <__aeabi_dsub+0x526>
 8002baa:	464a      	mov	r2, r9
 8002bac:	431a      	orrs	r2, r3
 8002bae:	2e00      	cmp	r6, #0
 8002bb0:	d1b8      	bne.n	8002b24 <__aeabi_dsub+0x344>
 8002bb2:	2a00      	cmp	r2, #0
 8002bb4:	d100      	bne.n	8002bb8 <__aeabi_dsub+0x3d8>
 8002bb6:	e158      	b.n	8002e6a <__aeabi_dsub+0x68a>
 8002bb8:	000a      	movs	r2, r1
 8002bba:	4302      	orrs	r2, r0
 8002bbc:	d000      	beq.n	8002bc0 <__aeabi_dsub+0x3e0>
 8002bbe:	e159      	b.n	8002e74 <__aeabi_dsub+0x694>
 8002bc0:	464a      	mov	r2, r9
 8002bc2:	0759      	lsls	r1, r3, #29
 8002bc4:	08d2      	lsrs	r2, r2, #3
 8002bc6:	430a      	orrs	r2, r1
 8002bc8:	08db      	lsrs	r3, r3, #3
 8002bca:	e786      	b.n	8002ada <__aeabi_dsub+0x2fa>
 8002bcc:	464a      	mov	r2, r9
 8002bce:	0759      	lsls	r1, r3, #29
 8002bd0:	08d2      	lsrs	r2, r2, #3
 8002bd2:	430a      	orrs	r2, r1
 8002bd4:	08db      	lsrs	r3, r3, #3
 8002bd6:	e7c1      	b.n	8002b5c <__aeabi_dsub+0x37c>
 8002bd8:	4dba      	ldr	r5, [pc, #744]	; (8002ec4 <__aeabi_dsub+0x6e4>)
 8002bda:	42aa      	cmp	r2, r5
 8002bdc:	d100      	bne.n	8002be0 <__aeabi_dsub+0x400>
 8002bde:	e11e      	b.n	8002e1e <__aeabi_dsub+0x63e>
 8002be0:	2580      	movs	r5, #128	; 0x80
 8002be2:	042d      	lsls	r5, r5, #16
 8002be4:	432b      	orrs	r3, r5
 8002be6:	4664      	mov	r4, ip
 8002be8:	2c38      	cmp	r4, #56	; 0x38
 8002bea:	dc5d      	bgt.n	8002ca8 <__aeabi_dsub+0x4c8>
 8002bec:	2c1f      	cmp	r4, #31
 8002bee:	dd00      	ble.n	8002bf2 <__aeabi_dsub+0x412>
 8002bf0:	e0d0      	b.n	8002d94 <__aeabi_dsub+0x5b4>
 8002bf2:	2520      	movs	r5, #32
 8002bf4:	4667      	mov	r7, ip
 8002bf6:	1b2d      	subs	r5, r5, r4
 8002bf8:	464e      	mov	r6, r9
 8002bfa:	001c      	movs	r4, r3
 8002bfc:	40fe      	lsrs	r6, r7
 8002bfe:	40ac      	lsls	r4, r5
 8002c00:	4334      	orrs	r4, r6
 8002c02:	464e      	mov	r6, r9
 8002c04:	40ae      	lsls	r6, r5
 8002c06:	0035      	movs	r5, r6
 8002c08:	40fb      	lsrs	r3, r7
 8002c0a:	1e6e      	subs	r6, r5, #1
 8002c0c:	41b5      	sbcs	r5, r6
 8002c0e:	1ac9      	subs	r1, r1, r3
 8002c10:	432c      	orrs	r4, r5
 8002c12:	e04e      	b.n	8002cb2 <__aeabi_dsub+0x4d2>
 8002c14:	464a      	mov	r2, r9
 8002c16:	1a14      	subs	r4, r2, r0
 8002c18:	45a1      	cmp	r9, r4
 8002c1a:	4192      	sbcs	r2, r2
 8002c1c:	4252      	negs	r2, r2
 8002c1e:	4690      	mov	r8, r2
 8002c20:	1a5f      	subs	r7, r3, r1
 8002c22:	003a      	movs	r2, r7
 8002c24:	4647      	mov	r7, r8
 8002c26:	1bd2      	subs	r2, r2, r7
 8002c28:	4690      	mov	r8, r2
 8002c2a:	0212      	lsls	r2, r2, #8
 8002c2c:	d500      	bpl.n	8002c30 <__aeabi_dsub+0x450>
 8002c2e:	e08b      	b.n	8002d48 <__aeabi_dsub+0x568>
 8002c30:	4642      	mov	r2, r8
 8002c32:	4322      	orrs	r2, r4
 8002c34:	d000      	beq.n	8002c38 <__aeabi_dsub+0x458>
 8002c36:	e630      	b.n	800289a <__aeabi_dsub+0xba>
 8002c38:	2300      	movs	r3, #0
 8002c3a:	2500      	movs	r5, #0
 8002c3c:	e74d      	b.n	8002ada <__aeabi_dsub+0x2fa>
 8002c3e:	464a      	mov	r2, r9
 8002c40:	0759      	lsls	r1, r3, #29
 8002c42:	08d2      	lsrs	r2, r2, #3
 8002c44:	430a      	orrs	r2, r1
 8002c46:	08db      	lsrs	r3, r3, #3
 8002c48:	e744      	b.n	8002ad4 <__aeabi_dsub+0x2f4>
 8002c4a:	4642      	mov	r2, r8
 8002c4c:	4b9e      	ldr	r3, [pc, #632]	; (8002ec8 <__aeabi_dsub+0x6e8>)
 8002c4e:	0861      	lsrs	r1, r4, #1
 8002c50:	401a      	ands	r2, r3
 8002c52:	0013      	movs	r3, r2
 8002c54:	2201      	movs	r2, #1
 8002c56:	4014      	ands	r4, r2
 8002c58:	430c      	orrs	r4, r1
 8002c5a:	07da      	lsls	r2, r3, #31
 8002c5c:	085b      	lsrs	r3, r3, #1
 8002c5e:	4698      	mov	r8, r3
 8002c60:	4314      	orrs	r4, r2
 8002c62:	e641      	b.n	80028e8 <__aeabi_dsub+0x108>
 8002c64:	001a      	movs	r2, r3
 8002c66:	3e1f      	subs	r6, #31
 8002c68:	40f2      	lsrs	r2, r6
 8002c6a:	0016      	movs	r6, r2
 8002c6c:	2920      	cmp	r1, #32
 8002c6e:	d003      	beq.n	8002c78 <__aeabi_dsub+0x498>
 8002c70:	2240      	movs	r2, #64	; 0x40
 8002c72:	1a51      	subs	r1, r2, r1
 8002c74:	408b      	lsls	r3, r1
 8002c76:	431c      	orrs	r4, r3
 8002c78:	1e62      	subs	r2, r4, #1
 8002c7a:	4194      	sbcs	r4, r2
 8002c7c:	2300      	movs	r3, #0
 8002c7e:	4334      	orrs	r4, r6
 8002c80:	4698      	mov	r8, r3
 8002c82:	2600      	movs	r6, #0
 8002c84:	e71d      	b.n	8002ac2 <__aeabi_dsub+0x2e2>
 8002c86:	000c      	movs	r4, r1
 8002c88:	3a20      	subs	r2, #32
 8002c8a:	40d4      	lsrs	r4, r2
 8002c8c:	0022      	movs	r2, r4
 8002c8e:	4664      	mov	r4, ip
 8002c90:	2c20      	cmp	r4, #32
 8002c92:	d004      	beq.n	8002c9e <__aeabi_dsub+0x4be>
 8002c94:	2740      	movs	r7, #64	; 0x40
 8002c96:	1b3f      	subs	r7, r7, r4
 8002c98:	40b9      	lsls	r1, r7
 8002c9a:	4308      	orrs	r0, r1
 8002c9c:	4680      	mov	r8, r0
 8002c9e:	4644      	mov	r4, r8
 8002ca0:	1e61      	subs	r1, r4, #1
 8002ca2:	418c      	sbcs	r4, r1
 8002ca4:	4322      	orrs	r2, r4
 8002ca6:	e5e9      	b.n	800287c <__aeabi_dsub+0x9c>
 8002ca8:	464c      	mov	r4, r9
 8002caa:	4323      	orrs	r3, r4
 8002cac:	001c      	movs	r4, r3
 8002cae:	1e63      	subs	r3, r4, #1
 8002cb0:	419c      	sbcs	r4, r3
 8002cb2:	1b04      	subs	r4, r0, r4
 8002cb4:	42a0      	cmp	r0, r4
 8002cb6:	419b      	sbcs	r3, r3
 8002cb8:	425b      	negs	r3, r3
 8002cba:	1acb      	subs	r3, r1, r3
 8002cbc:	4698      	mov	r8, r3
 8002cbe:	465d      	mov	r5, fp
 8002cc0:	0016      	movs	r6, r2
 8002cc2:	e5e2      	b.n	800288a <__aeabi_dsub+0xaa>
 8002cc4:	464e      	mov	r6, r9
 8002cc6:	431e      	orrs	r6, r3
 8002cc8:	d100      	bne.n	8002ccc <__aeabi_dsub+0x4ec>
 8002cca:	e0ae      	b.n	8002e2a <__aeabi_dsub+0x64a>
 8002ccc:	1e66      	subs	r6, r4, #1
 8002cce:	2c01      	cmp	r4, #1
 8002cd0:	d100      	bne.n	8002cd4 <__aeabi_dsub+0x4f4>
 8002cd2:	e0fd      	b.n	8002ed0 <__aeabi_dsub+0x6f0>
 8002cd4:	4f7b      	ldr	r7, [pc, #492]	; (8002ec4 <__aeabi_dsub+0x6e4>)
 8002cd6:	42bc      	cmp	r4, r7
 8002cd8:	d100      	bne.n	8002cdc <__aeabi_dsub+0x4fc>
 8002cda:	e107      	b.n	8002eec <__aeabi_dsub+0x70c>
 8002cdc:	46b4      	mov	ip, r6
 8002cde:	e69b      	b.n	8002a18 <__aeabi_dsub+0x238>
 8002ce0:	4664      	mov	r4, ip
 8002ce2:	2220      	movs	r2, #32
 8002ce4:	1b12      	subs	r2, r2, r4
 8002ce6:	000c      	movs	r4, r1
 8002ce8:	4094      	lsls	r4, r2
 8002cea:	0007      	movs	r7, r0
 8002cec:	4090      	lsls	r0, r2
 8002cee:	46a0      	mov	r8, r4
 8002cf0:	4664      	mov	r4, ip
 8002cf2:	1e42      	subs	r2, r0, #1
 8002cf4:	4190      	sbcs	r0, r2
 8002cf6:	4662      	mov	r2, ip
 8002cf8:	40e7      	lsrs	r7, r4
 8002cfa:	4644      	mov	r4, r8
 8002cfc:	40d1      	lsrs	r1, r2
 8002cfe:	433c      	orrs	r4, r7
 8002d00:	4304      	orrs	r4, r0
 8002d02:	185b      	adds	r3, r3, r1
 8002d04:	e6f3      	b.n	8002aee <__aeabi_dsub+0x30e>
 8002d06:	4c6f      	ldr	r4, [pc, #444]	; (8002ec4 <__aeabi_dsub+0x6e4>)
 8002d08:	42a2      	cmp	r2, r4
 8002d0a:	d100      	bne.n	8002d0e <__aeabi_dsub+0x52e>
 8002d0c:	e0d5      	b.n	8002eba <__aeabi_dsub+0x6da>
 8002d0e:	4448      	add	r0, r9
 8002d10:	185b      	adds	r3, r3, r1
 8002d12:	4548      	cmp	r0, r9
 8002d14:	4189      	sbcs	r1, r1
 8002d16:	4249      	negs	r1, r1
 8002d18:	185b      	adds	r3, r3, r1
 8002d1a:	07dc      	lsls	r4, r3, #31
 8002d1c:	0840      	lsrs	r0, r0, #1
 8002d1e:	085b      	lsrs	r3, r3, #1
 8002d20:	4698      	mov	r8, r3
 8002d22:	0016      	movs	r6, r2
 8002d24:	4304      	orrs	r4, r0
 8002d26:	e6cc      	b.n	8002ac2 <__aeabi_dsub+0x2e2>
 8002d28:	2a00      	cmp	r2, #0
 8002d2a:	d000      	beq.n	8002d2e <__aeabi_dsub+0x54e>
 8002d2c:	e082      	b.n	8002e34 <__aeabi_dsub+0x654>
 8002d2e:	000a      	movs	r2, r1
 8002d30:	4302      	orrs	r2, r0
 8002d32:	d140      	bne.n	8002db6 <__aeabi_dsub+0x5d6>
 8002d34:	2380      	movs	r3, #128	; 0x80
 8002d36:	2500      	movs	r5, #0
 8002d38:	031b      	lsls	r3, r3, #12
 8002d3a:	e713      	b.n	8002b64 <__aeabi_dsub+0x384>
 8002d3c:	074b      	lsls	r3, r1, #29
 8002d3e:	08c2      	lsrs	r2, r0, #3
 8002d40:	431a      	orrs	r2, r3
 8002d42:	465d      	mov	r5, fp
 8002d44:	08cb      	lsrs	r3, r1, #3
 8002d46:	e6c5      	b.n	8002ad4 <__aeabi_dsub+0x2f4>
 8002d48:	464a      	mov	r2, r9
 8002d4a:	1a84      	subs	r4, r0, r2
 8002d4c:	42a0      	cmp	r0, r4
 8002d4e:	4192      	sbcs	r2, r2
 8002d50:	1acb      	subs	r3, r1, r3
 8002d52:	4252      	negs	r2, r2
 8002d54:	1a9b      	subs	r3, r3, r2
 8002d56:	4698      	mov	r8, r3
 8002d58:	465d      	mov	r5, fp
 8002d5a:	e59e      	b.n	800289a <__aeabi_dsub+0xba>
 8002d5c:	464a      	mov	r2, r9
 8002d5e:	0759      	lsls	r1, r3, #29
 8002d60:	08d2      	lsrs	r2, r2, #3
 8002d62:	430a      	orrs	r2, r1
 8002d64:	08db      	lsrs	r3, r3, #3
 8002d66:	e6f9      	b.n	8002b5c <__aeabi_dsub+0x37c>
 8002d68:	464a      	mov	r2, r9
 8002d6a:	1a14      	subs	r4, r2, r0
 8002d6c:	45a1      	cmp	r9, r4
 8002d6e:	4192      	sbcs	r2, r2
 8002d70:	1a5b      	subs	r3, r3, r1
 8002d72:	4252      	negs	r2, r2
 8002d74:	1a9b      	subs	r3, r3, r2
 8002d76:	4698      	mov	r8, r3
 8002d78:	2601      	movs	r6, #1
 8002d7a:	e586      	b.n	800288a <__aeabi_dsub+0xaa>
 8002d7c:	464a      	mov	r2, r9
 8002d7e:	0759      	lsls	r1, r3, #29
 8002d80:	08d2      	lsrs	r2, r2, #3
 8002d82:	430a      	orrs	r2, r1
 8002d84:	08db      	lsrs	r3, r3, #3
 8002d86:	e6a5      	b.n	8002ad4 <__aeabi_dsub+0x2f4>
 8002d88:	464c      	mov	r4, r9
 8002d8a:	4323      	orrs	r3, r4
 8002d8c:	001c      	movs	r4, r3
 8002d8e:	1e63      	subs	r3, r4, #1
 8002d90:	419c      	sbcs	r4, r3
 8002d92:	e65b      	b.n	8002a4c <__aeabi_dsub+0x26c>
 8002d94:	4665      	mov	r5, ip
 8002d96:	001e      	movs	r6, r3
 8002d98:	3d20      	subs	r5, #32
 8002d9a:	40ee      	lsrs	r6, r5
 8002d9c:	2c20      	cmp	r4, #32
 8002d9e:	d005      	beq.n	8002dac <__aeabi_dsub+0x5cc>
 8002da0:	2540      	movs	r5, #64	; 0x40
 8002da2:	1b2d      	subs	r5, r5, r4
 8002da4:	40ab      	lsls	r3, r5
 8002da6:	464c      	mov	r4, r9
 8002da8:	431c      	orrs	r4, r3
 8002daa:	46a2      	mov	sl, r4
 8002dac:	4654      	mov	r4, sl
 8002dae:	1e63      	subs	r3, r4, #1
 8002db0:	419c      	sbcs	r4, r3
 8002db2:	4334      	orrs	r4, r6
 8002db4:	e77d      	b.n	8002cb2 <__aeabi_dsub+0x4d2>
 8002db6:	074b      	lsls	r3, r1, #29
 8002db8:	08c2      	lsrs	r2, r0, #3
 8002dba:	431a      	orrs	r2, r3
 8002dbc:	465d      	mov	r5, fp
 8002dbe:	08cb      	lsrs	r3, r1, #3
 8002dc0:	e6cc      	b.n	8002b5c <__aeabi_dsub+0x37c>
 8002dc2:	000a      	movs	r2, r1
 8002dc4:	4302      	orrs	r2, r0
 8002dc6:	d100      	bne.n	8002dca <__aeabi_dsub+0x5ea>
 8002dc8:	e736      	b.n	8002c38 <__aeabi_dsub+0x458>
 8002dca:	074b      	lsls	r3, r1, #29
 8002dcc:	08c2      	lsrs	r2, r0, #3
 8002dce:	431a      	orrs	r2, r3
 8002dd0:	465d      	mov	r5, fp
 8002dd2:	08cb      	lsrs	r3, r1, #3
 8002dd4:	e681      	b.n	8002ada <__aeabi_dsub+0x2fa>
 8002dd6:	464a      	mov	r2, r9
 8002dd8:	1a84      	subs	r4, r0, r2
 8002dda:	42a0      	cmp	r0, r4
 8002ddc:	4192      	sbcs	r2, r2
 8002dde:	1acb      	subs	r3, r1, r3
 8002de0:	4252      	negs	r2, r2
 8002de2:	1a9b      	subs	r3, r3, r2
 8002de4:	4698      	mov	r8, r3
 8002de6:	465d      	mov	r5, fp
 8002de8:	2601      	movs	r6, #1
 8002dea:	e54e      	b.n	800288a <__aeabi_dsub+0xaa>
 8002dec:	074b      	lsls	r3, r1, #29
 8002dee:	08c2      	lsrs	r2, r0, #3
 8002df0:	431a      	orrs	r2, r3
 8002df2:	08cb      	lsrs	r3, r1, #3
 8002df4:	e6b2      	b.n	8002b5c <__aeabi_dsub+0x37c>
 8002df6:	464a      	mov	r2, r9
 8002df8:	1a14      	subs	r4, r2, r0
 8002dfa:	45a1      	cmp	r9, r4
 8002dfc:	4192      	sbcs	r2, r2
 8002dfe:	1a5f      	subs	r7, r3, r1
 8002e00:	4252      	negs	r2, r2
 8002e02:	1aba      	subs	r2, r7, r2
 8002e04:	4690      	mov	r8, r2
 8002e06:	0212      	lsls	r2, r2, #8
 8002e08:	d56b      	bpl.n	8002ee2 <__aeabi_dsub+0x702>
 8002e0a:	464a      	mov	r2, r9
 8002e0c:	1a84      	subs	r4, r0, r2
 8002e0e:	42a0      	cmp	r0, r4
 8002e10:	4192      	sbcs	r2, r2
 8002e12:	1acb      	subs	r3, r1, r3
 8002e14:	4252      	negs	r2, r2
 8002e16:	1a9b      	subs	r3, r3, r2
 8002e18:	4698      	mov	r8, r3
 8002e1a:	465d      	mov	r5, fp
 8002e1c:	e564      	b.n	80028e8 <__aeabi_dsub+0x108>
 8002e1e:	074b      	lsls	r3, r1, #29
 8002e20:	08c2      	lsrs	r2, r0, #3
 8002e22:	431a      	orrs	r2, r3
 8002e24:	465d      	mov	r5, fp
 8002e26:	08cb      	lsrs	r3, r1, #3
 8002e28:	e698      	b.n	8002b5c <__aeabi_dsub+0x37c>
 8002e2a:	074b      	lsls	r3, r1, #29
 8002e2c:	08c2      	lsrs	r2, r0, #3
 8002e2e:	431a      	orrs	r2, r3
 8002e30:	08cb      	lsrs	r3, r1, #3
 8002e32:	e64f      	b.n	8002ad4 <__aeabi_dsub+0x2f4>
 8002e34:	000a      	movs	r2, r1
 8002e36:	4302      	orrs	r2, r0
 8002e38:	d090      	beq.n	8002d5c <__aeabi_dsub+0x57c>
 8002e3a:	464a      	mov	r2, r9
 8002e3c:	075c      	lsls	r4, r3, #29
 8002e3e:	08d2      	lsrs	r2, r2, #3
 8002e40:	4314      	orrs	r4, r2
 8002e42:	2280      	movs	r2, #128	; 0x80
 8002e44:	08db      	lsrs	r3, r3, #3
 8002e46:	0312      	lsls	r2, r2, #12
 8002e48:	4213      	tst	r3, r2
 8002e4a:	d008      	beq.n	8002e5e <__aeabi_dsub+0x67e>
 8002e4c:	08ce      	lsrs	r6, r1, #3
 8002e4e:	4216      	tst	r6, r2
 8002e50:	d105      	bne.n	8002e5e <__aeabi_dsub+0x67e>
 8002e52:	08c0      	lsrs	r0, r0, #3
 8002e54:	0749      	lsls	r1, r1, #29
 8002e56:	4308      	orrs	r0, r1
 8002e58:	0004      	movs	r4, r0
 8002e5a:	465d      	mov	r5, fp
 8002e5c:	0033      	movs	r3, r6
 8002e5e:	0f61      	lsrs	r1, r4, #29
 8002e60:	00e2      	lsls	r2, r4, #3
 8002e62:	0749      	lsls	r1, r1, #29
 8002e64:	08d2      	lsrs	r2, r2, #3
 8002e66:	430a      	orrs	r2, r1
 8002e68:	e678      	b.n	8002b5c <__aeabi_dsub+0x37c>
 8002e6a:	074b      	lsls	r3, r1, #29
 8002e6c:	08c2      	lsrs	r2, r0, #3
 8002e6e:	431a      	orrs	r2, r3
 8002e70:	08cb      	lsrs	r3, r1, #3
 8002e72:	e632      	b.n	8002ada <__aeabi_dsub+0x2fa>
 8002e74:	4448      	add	r0, r9
 8002e76:	185b      	adds	r3, r3, r1
 8002e78:	4548      	cmp	r0, r9
 8002e7a:	4192      	sbcs	r2, r2
 8002e7c:	4698      	mov	r8, r3
 8002e7e:	4252      	negs	r2, r2
 8002e80:	4490      	add	r8, r2
 8002e82:	4643      	mov	r3, r8
 8002e84:	0004      	movs	r4, r0
 8002e86:	021b      	lsls	r3, r3, #8
 8002e88:	d400      	bmi.n	8002e8c <__aeabi_dsub+0x6ac>
 8002e8a:	e61a      	b.n	8002ac2 <__aeabi_dsub+0x2e2>
 8002e8c:	4642      	mov	r2, r8
 8002e8e:	4b0e      	ldr	r3, [pc, #56]	; (8002ec8 <__aeabi_dsub+0x6e8>)
 8002e90:	2601      	movs	r6, #1
 8002e92:	401a      	ands	r2, r3
 8002e94:	4690      	mov	r8, r2
 8002e96:	e614      	b.n	8002ac2 <__aeabi_dsub+0x2e2>
 8002e98:	4666      	mov	r6, ip
 8002e9a:	001f      	movs	r7, r3
 8002e9c:	3e20      	subs	r6, #32
 8002e9e:	40f7      	lsrs	r7, r6
 8002ea0:	2c20      	cmp	r4, #32
 8002ea2:	d005      	beq.n	8002eb0 <__aeabi_dsub+0x6d0>
 8002ea4:	2640      	movs	r6, #64	; 0x40
 8002ea6:	1b36      	subs	r6, r6, r4
 8002ea8:	40b3      	lsls	r3, r6
 8002eaa:	464c      	mov	r4, r9
 8002eac:	431c      	orrs	r4, r3
 8002eae:	46a2      	mov	sl, r4
 8002eb0:	4654      	mov	r4, sl
 8002eb2:	1e63      	subs	r3, r4, #1
 8002eb4:	419c      	sbcs	r4, r3
 8002eb6:	433c      	orrs	r4, r7
 8002eb8:	e5c8      	b.n	8002a4c <__aeabi_dsub+0x26c>
 8002eba:	0011      	movs	r1, r2
 8002ebc:	2300      	movs	r3, #0
 8002ebe:	2200      	movs	r2, #0
 8002ec0:	e532      	b.n	8002928 <__aeabi_dsub+0x148>
 8002ec2:	46c0      	nop			; (mov r8, r8)
 8002ec4:	000007ff 	.word	0x000007ff
 8002ec8:	ff7fffff 	.word	0xff7fffff
 8002ecc:	000007fe 	.word	0x000007fe
 8002ed0:	464a      	mov	r2, r9
 8002ed2:	1814      	adds	r4, r2, r0
 8002ed4:	4284      	cmp	r4, r0
 8002ed6:	4192      	sbcs	r2, r2
 8002ed8:	185b      	adds	r3, r3, r1
 8002eda:	4698      	mov	r8, r3
 8002edc:	4252      	negs	r2, r2
 8002ede:	4490      	add	r8, r2
 8002ee0:	e5e9      	b.n	8002ab6 <__aeabi_dsub+0x2d6>
 8002ee2:	4642      	mov	r2, r8
 8002ee4:	4322      	orrs	r2, r4
 8002ee6:	d100      	bne.n	8002eea <__aeabi_dsub+0x70a>
 8002ee8:	e6a6      	b.n	8002c38 <__aeabi_dsub+0x458>
 8002eea:	e5ea      	b.n	8002ac2 <__aeabi_dsub+0x2e2>
 8002eec:	074b      	lsls	r3, r1, #29
 8002eee:	08c2      	lsrs	r2, r0, #3
 8002ef0:	431a      	orrs	r2, r3
 8002ef2:	08cb      	lsrs	r3, r1, #3
 8002ef4:	e632      	b.n	8002b5c <__aeabi_dsub+0x37c>
 8002ef6:	2200      	movs	r2, #0
 8002ef8:	4901      	ldr	r1, [pc, #4]	; (8002f00 <__aeabi_dsub+0x720>)
 8002efa:	0013      	movs	r3, r2
 8002efc:	e514      	b.n	8002928 <__aeabi_dsub+0x148>
 8002efe:	46c0      	nop			; (mov r8, r8)
 8002f00:	000007ff 	.word	0x000007ff

08002f04 <__aeabi_dcmpun>:
 8002f04:	b570      	push	{r4, r5, r6, lr}
 8002f06:	0005      	movs	r5, r0
 8002f08:	480c      	ldr	r0, [pc, #48]	; (8002f3c <__aeabi_dcmpun+0x38>)
 8002f0a:	030c      	lsls	r4, r1, #12
 8002f0c:	0016      	movs	r6, r2
 8002f0e:	0049      	lsls	r1, r1, #1
 8002f10:	031a      	lsls	r2, r3, #12
 8002f12:	005b      	lsls	r3, r3, #1
 8002f14:	0b24      	lsrs	r4, r4, #12
 8002f16:	0d49      	lsrs	r1, r1, #21
 8002f18:	0b12      	lsrs	r2, r2, #12
 8002f1a:	0d5b      	lsrs	r3, r3, #21
 8002f1c:	4281      	cmp	r1, r0
 8002f1e:	d008      	beq.n	8002f32 <__aeabi_dcmpun+0x2e>
 8002f20:	4906      	ldr	r1, [pc, #24]	; (8002f3c <__aeabi_dcmpun+0x38>)
 8002f22:	2000      	movs	r0, #0
 8002f24:	428b      	cmp	r3, r1
 8002f26:	d103      	bne.n	8002f30 <__aeabi_dcmpun+0x2c>
 8002f28:	4332      	orrs	r2, r6
 8002f2a:	0010      	movs	r0, r2
 8002f2c:	1e42      	subs	r2, r0, #1
 8002f2e:	4190      	sbcs	r0, r2
 8002f30:	bd70      	pop	{r4, r5, r6, pc}
 8002f32:	2001      	movs	r0, #1
 8002f34:	432c      	orrs	r4, r5
 8002f36:	d1fb      	bne.n	8002f30 <__aeabi_dcmpun+0x2c>
 8002f38:	e7f2      	b.n	8002f20 <__aeabi_dcmpun+0x1c>
 8002f3a:	46c0      	nop			; (mov r8, r8)
 8002f3c:	000007ff 	.word	0x000007ff

08002f40 <__aeabi_d2iz>:
 8002f40:	000a      	movs	r2, r1
 8002f42:	b530      	push	{r4, r5, lr}
 8002f44:	4c13      	ldr	r4, [pc, #76]	; (8002f94 <__aeabi_d2iz+0x54>)
 8002f46:	0053      	lsls	r3, r2, #1
 8002f48:	0309      	lsls	r1, r1, #12
 8002f4a:	0005      	movs	r5, r0
 8002f4c:	0b09      	lsrs	r1, r1, #12
 8002f4e:	2000      	movs	r0, #0
 8002f50:	0d5b      	lsrs	r3, r3, #21
 8002f52:	0fd2      	lsrs	r2, r2, #31
 8002f54:	42a3      	cmp	r3, r4
 8002f56:	dd04      	ble.n	8002f62 <__aeabi_d2iz+0x22>
 8002f58:	480f      	ldr	r0, [pc, #60]	; (8002f98 <__aeabi_d2iz+0x58>)
 8002f5a:	4283      	cmp	r3, r0
 8002f5c:	dd02      	ble.n	8002f64 <__aeabi_d2iz+0x24>
 8002f5e:	4b0f      	ldr	r3, [pc, #60]	; (8002f9c <__aeabi_d2iz+0x5c>)
 8002f60:	18d0      	adds	r0, r2, r3
 8002f62:	bd30      	pop	{r4, r5, pc}
 8002f64:	2080      	movs	r0, #128	; 0x80
 8002f66:	0340      	lsls	r0, r0, #13
 8002f68:	4301      	orrs	r1, r0
 8002f6a:	480d      	ldr	r0, [pc, #52]	; (8002fa0 <__aeabi_d2iz+0x60>)
 8002f6c:	1ac0      	subs	r0, r0, r3
 8002f6e:	281f      	cmp	r0, #31
 8002f70:	dd08      	ble.n	8002f84 <__aeabi_d2iz+0x44>
 8002f72:	480c      	ldr	r0, [pc, #48]	; (8002fa4 <__aeabi_d2iz+0x64>)
 8002f74:	1ac3      	subs	r3, r0, r3
 8002f76:	40d9      	lsrs	r1, r3
 8002f78:	000b      	movs	r3, r1
 8002f7a:	4258      	negs	r0, r3
 8002f7c:	2a00      	cmp	r2, #0
 8002f7e:	d1f0      	bne.n	8002f62 <__aeabi_d2iz+0x22>
 8002f80:	0018      	movs	r0, r3
 8002f82:	e7ee      	b.n	8002f62 <__aeabi_d2iz+0x22>
 8002f84:	4c08      	ldr	r4, [pc, #32]	; (8002fa8 <__aeabi_d2iz+0x68>)
 8002f86:	40c5      	lsrs	r5, r0
 8002f88:	46a4      	mov	ip, r4
 8002f8a:	4463      	add	r3, ip
 8002f8c:	4099      	lsls	r1, r3
 8002f8e:	000b      	movs	r3, r1
 8002f90:	432b      	orrs	r3, r5
 8002f92:	e7f2      	b.n	8002f7a <__aeabi_d2iz+0x3a>
 8002f94:	000003fe 	.word	0x000003fe
 8002f98:	0000041d 	.word	0x0000041d
 8002f9c:	7fffffff 	.word	0x7fffffff
 8002fa0:	00000433 	.word	0x00000433
 8002fa4:	00000413 	.word	0x00000413
 8002fa8:	fffffbed 	.word	0xfffffbed

08002fac <__aeabi_i2d>:
 8002fac:	b570      	push	{r4, r5, r6, lr}
 8002fae:	2800      	cmp	r0, #0
 8002fb0:	d016      	beq.n	8002fe0 <__aeabi_i2d+0x34>
 8002fb2:	17c3      	asrs	r3, r0, #31
 8002fb4:	18c5      	adds	r5, r0, r3
 8002fb6:	405d      	eors	r5, r3
 8002fb8:	0fc4      	lsrs	r4, r0, #31
 8002fba:	0028      	movs	r0, r5
 8002fbc:	f000 f91c 	bl	80031f8 <__clzsi2>
 8002fc0:	4a11      	ldr	r2, [pc, #68]	; (8003008 <__aeabi_i2d+0x5c>)
 8002fc2:	1a12      	subs	r2, r2, r0
 8002fc4:	280a      	cmp	r0, #10
 8002fc6:	dc16      	bgt.n	8002ff6 <__aeabi_i2d+0x4a>
 8002fc8:	0003      	movs	r3, r0
 8002fca:	002e      	movs	r6, r5
 8002fcc:	3315      	adds	r3, #21
 8002fce:	409e      	lsls	r6, r3
 8002fd0:	230b      	movs	r3, #11
 8002fd2:	1a18      	subs	r0, r3, r0
 8002fd4:	40c5      	lsrs	r5, r0
 8002fd6:	0553      	lsls	r3, r2, #21
 8002fd8:	032d      	lsls	r5, r5, #12
 8002fda:	0b2d      	lsrs	r5, r5, #12
 8002fdc:	0d5b      	lsrs	r3, r3, #21
 8002fde:	e003      	b.n	8002fe8 <__aeabi_i2d+0x3c>
 8002fe0:	2400      	movs	r4, #0
 8002fe2:	2300      	movs	r3, #0
 8002fe4:	2500      	movs	r5, #0
 8002fe6:	2600      	movs	r6, #0
 8002fe8:	051b      	lsls	r3, r3, #20
 8002fea:	432b      	orrs	r3, r5
 8002fec:	07e4      	lsls	r4, r4, #31
 8002fee:	4323      	orrs	r3, r4
 8002ff0:	0030      	movs	r0, r6
 8002ff2:	0019      	movs	r1, r3
 8002ff4:	bd70      	pop	{r4, r5, r6, pc}
 8002ff6:	380b      	subs	r0, #11
 8002ff8:	4085      	lsls	r5, r0
 8002ffa:	0553      	lsls	r3, r2, #21
 8002ffc:	032d      	lsls	r5, r5, #12
 8002ffe:	2600      	movs	r6, #0
 8003000:	0b2d      	lsrs	r5, r5, #12
 8003002:	0d5b      	lsrs	r3, r3, #21
 8003004:	e7f0      	b.n	8002fe8 <__aeabi_i2d+0x3c>
 8003006:	46c0      	nop			; (mov r8, r8)
 8003008:	0000041e 	.word	0x0000041e

0800300c <__aeabi_ui2d>:
 800300c:	b510      	push	{r4, lr}
 800300e:	1e04      	subs	r4, r0, #0
 8003010:	d010      	beq.n	8003034 <__aeabi_ui2d+0x28>
 8003012:	f000 f8f1 	bl	80031f8 <__clzsi2>
 8003016:	4b0f      	ldr	r3, [pc, #60]	; (8003054 <__aeabi_ui2d+0x48>)
 8003018:	1a1b      	subs	r3, r3, r0
 800301a:	280a      	cmp	r0, #10
 800301c:	dc11      	bgt.n	8003042 <__aeabi_ui2d+0x36>
 800301e:	220b      	movs	r2, #11
 8003020:	0021      	movs	r1, r4
 8003022:	1a12      	subs	r2, r2, r0
 8003024:	40d1      	lsrs	r1, r2
 8003026:	3015      	adds	r0, #21
 8003028:	030a      	lsls	r2, r1, #12
 800302a:	055b      	lsls	r3, r3, #21
 800302c:	4084      	lsls	r4, r0
 800302e:	0b12      	lsrs	r2, r2, #12
 8003030:	0d5b      	lsrs	r3, r3, #21
 8003032:	e001      	b.n	8003038 <__aeabi_ui2d+0x2c>
 8003034:	2300      	movs	r3, #0
 8003036:	2200      	movs	r2, #0
 8003038:	051b      	lsls	r3, r3, #20
 800303a:	4313      	orrs	r3, r2
 800303c:	0020      	movs	r0, r4
 800303e:	0019      	movs	r1, r3
 8003040:	bd10      	pop	{r4, pc}
 8003042:	0022      	movs	r2, r4
 8003044:	380b      	subs	r0, #11
 8003046:	4082      	lsls	r2, r0
 8003048:	055b      	lsls	r3, r3, #21
 800304a:	0312      	lsls	r2, r2, #12
 800304c:	2400      	movs	r4, #0
 800304e:	0b12      	lsrs	r2, r2, #12
 8003050:	0d5b      	lsrs	r3, r3, #21
 8003052:	e7f1      	b.n	8003038 <__aeabi_ui2d+0x2c>
 8003054:	0000041e 	.word	0x0000041e

08003058 <__aeabi_f2d>:
 8003058:	b570      	push	{r4, r5, r6, lr}
 800305a:	0043      	lsls	r3, r0, #1
 800305c:	0246      	lsls	r6, r0, #9
 800305e:	0fc4      	lsrs	r4, r0, #31
 8003060:	20fe      	movs	r0, #254	; 0xfe
 8003062:	0e1b      	lsrs	r3, r3, #24
 8003064:	1c59      	adds	r1, r3, #1
 8003066:	0a75      	lsrs	r5, r6, #9
 8003068:	4208      	tst	r0, r1
 800306a:	d00c      	beq.n	8003086 <__aeabi_f2d+0x2e>
 800306c:	22e0      	movs	r2, #224	; 0xe0
 800306e:	0092      	lsls	r2, r2, #2
 8003070:	4694      	mov	ip, r2
 8003072:	076d      	lsls	r5, r5, #29
 8003074:	0b36      	lsrs	r6, r6, #12
 8003076:	4463      	add	r3, ip
 8003078:	051b      	lsls	r3, r3, #20
 800307a:	4333      	orrs	r3, r6
 800307c:	07e4      	lsls	r4, r4, #31
 800307e:	4323      	orrs	r3, r4
 8003080:	0028      	movs	r0, r5
 8003082:	0019      	movs	r1, r3
 8003084:	bd70      	pop	{r4, r5, r6, pc}
 8003086:	2b00      	cmp	r3, #0
 8003088:	d114      	bne.n	80030b4 <__aeabi_f2d+0x5c>
 800308a:	2d00      	cmp	r5, #0
 800308c:	d01b      	beq.n	80030c6 <__aeabi_f2d+0x6e>
 800308e:	0028      	movs	r0, r5
 8003090:	f000 f8b2 	bl	80031f8 <__clzsi2>
 8003094:	280a      	cmp	r0, #10
 8003096:	dc1c      	bgt.n	80030d2 <__aeabi_f2d+0x7a>
 8003098:	230b      	movs	r3, #11
 800309a:	002a      	movs	r2, r5
 800309c:	1a1b      	subs	r3, r3, r0
 800309e:	40da      	lsrs	r2, r3
 80030a0:	0003      	movs	r3, r0
 80030a2:	3315      	adds	r3, #21
 80030a4:	409d      	lsls	r5, r3
 80030a6:	4b0e      	ldr	r3, [pc, #56]	; (80030e0 <__aeabi_f2d+0x88>)
 80030a8:	0312      	lsls	r2, r2, #12
 80030aa:	1a1b      	subs	r3, r3, r0
 80030ac:	055b      	lsls	r3, r3, #21
 80030ae:	0b16      	lsrs	r6, r2, #12
 80030b0:	0d5b      	lsrs	r3, r3, #21
 80030b2:	e7e1      	b.n	8003078 <__aeabi_f2d+0x20>
 80030b4:	2d00      	cmp	r5, #0
 80030b6:	d009      	beq.n	80030cc <__aeabi_f2d+0x74>
 80030b8:	0b32      	lsrs	r2, r6, #12
 80030ba:	2680      	movs	r6, #128	; 0x80
 80030bc:	0336      	lsls	r6, r6, #12
 80030be:	4b09      	ldr	r3, [pc, #36]	; (80030e4 <__aeabi_f2d+0x8c>)
 80030c0:	076d      	lsls	r5, r5, #29
 80030c2:	4316      	orrs	r6, r2
 80030c4:	e7d8      	b.n	8003078 <__aeabi_f2d+0x20>
 80030c6:	2300      	movs	r3, #0
 80030c8:	2600      	movs	r6, #0
 80030ca:	e7d5      	b.n	8003078 <__aeabi_f2d+0x20>
 80030cc:	2600      	movs	r6, #0
 80030ce:	4b05      	ldr	r3, [pc, #20]	; (80030e4 <__aeabi_f2d+0x8c>)
 80030d0:	e7d2      	b.n	8003078 <__aeabi_f2d+0x20>
 80030d2:	0003      	movs	r3, r0
 80030d4:	002a      	movs	r2, r5
 80030d6:	3b0b      	subs	r3, #11
 80030d8:	409a      	lsls	r2, r3
 80030da:	2500      	movs	r5, #0
 80030dc:	e7e3      	b.n	80030a6 <__aeabi_f2d+0x4e>
 80030de:	46c0      	nop			; (mov r8, r8)
 80030e0:	00000389 	.word	0x00000389
 80030e4:	000007ff 	.word	0x000007ff

080030e8 <__aeabi_d2f>:
 80030e8:	0002      	movs	r2, r0
 80030ea:	004b      	lsls	r3, r1, #1
 80030ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80030ee:	0308      	lsls	r0, r1, #12
 80030f0:	0d5b      	lsrs	r3, r3, #21
 80030f2:	4e3d      	ldr	r6, [pc, #244]	; (80031e8 <__aeabi_d2f+0x100>)
 80030f4:	0fcc      	lsrs	r4, r1, #31
 80030f6:	0a40      	lsrs	r0, r0, #9
 80030f8:	0f51      	lsrs	r1, r2, #29
 80030fa:	1c5f      	adds	r7, r3, #1
 80030fc:	4308      	orrs	r0, r1
 80030fe:	00d5      	lsls	r5, r2, #3
 8003100:	4237      	tst	r7, r6
 8003102:	d00a      	beq.n	800311a <__aeabi_d2f+0x32>
 8003104:	4939      	ldr	r1, [pc, #228]	; (80031ec <__aeabi_d2f+0x104>)
 8003106:	185e      	adds	r6, r3, r1
 8003108:	2efe      	cmp	r6, #254	; 0xfe
 800310a:	dd16      	ble.n	800313a <__aeabi_d2f+0x52>
 800310c:	23ff      	movs	r3, #255	; 0xff
 800310e:	2100      	movs	r1, #0
 8003110:	05db      	lsls	r3, r3, #23
 8003112:	430b      	orrs	r3, r1
 8003114:	07e0      	lsls	r0, r4, #31
 8003116:	4318      	orrs	r0, r3
 8003118:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800311a:	2b00      	cmp	r3, #0
 800311c:	d106      	bne.n	800312c <__aeabi_d2f+0x44>
 800311e:	4328      	orrs	r0, r5
 8003120:	d027      	beq.n	8003172 <__aeabi_d2f+0x8a>
 8003122:	2105      	movs	r1, #5
 8003124:	0189      	lsls	r1, r1, #6
 8003126:	0a49      	lsrs	r1, r1, #9
 8003128:	b2db      	uxtb	r3, r3
 800312a:	e7f1      	b.n	8003110 <__aeabi_d2f+0x28>
 800312c:	4305      	orrs	r5, r0
 800312e:	d0ed      	beq.n	800310c <__aeabi_d2f+0x24>
 8003130:	2180      	movs	r1, #128	; 0x80
 8003132:	03c9      	lsls	r1, r1, #15
 8003134:	23ff      	movs	r3, #255	; 0xff
 8003136:	4301      	orrs	r1, r0
 8003138:	e7ea      	b.n	8003110 <__aeabi_d2f+0x28>
 800313a:	2e00      	cmp	r6, #0
 800313c:	dd1c      	ble.n	8003178 <__aeabi_d2f+0x90>
 800313e:	0192      	lsls	r2, r2, #6
 8003140:	0011      	movs	r1, r2
 8003142:	1e4a      	subs	r2, r1, #1
 8003144:	4191      	sbcs	r1, r2
 8003146:	00c0      	lsls	r0, r0, #3
 8003148:	0f6d      	lsrs	r5, r5, #29
 800314a:	4301      	orrs	r1, r0
 800314c:	4329      	orrs	r1, r5
 800314e:	074b      	lsls	r3, r1, #29
 8003150:	d048      	beq.n	80031e4 <__aeabi_d2f+0xfc>
 8003152:	230f      	movs	r3, #15
 8003154:	400b      	ands	r3, r1
 8003156:	2b04      	cmp	r3, #4
 8003158:	d000      	beq.n	800315c <__aeabi_d2f+0x74>
 800315a:	3104      	adds	r1, #4
 800315c:	2380      	movs	r3, #128	; 0x80
 800315e:	04db      	lsls	r3, r3, #19
 8003160:	400b      	ands	r3, r1
 8003162:	d03f      	beq.n	80031e4 <__aeabi_d2f+0xfc>
 8003164:	1c72      	adds	r2, r6, #1
 8003166:	2efe      	cmp	r6, #254	; 0xfe
 8003168:	d0d0      	beq.n	800310c <__aeabi_d2f+0x24>
 800316a:	0189      	lsls	r1, r1, #6
 800316c:	0a49      	lsrs	r1, r1, #9
 800316e:	b2d3      	uxtb	r3, r2
 8003170:	e7ce      	b.n	8003110 <__aeabi_d2f+0x28>
 8003172:	2300      	movs	r3, #0
 8003174:	2100      	movs	r1, #0
 8003176:	e7cb      	b.n	8003110 <__aeabi_d2f+0x28>
 8003178:	0032      	movs	r2, r6
 800317a:	3217      	adds	r2, #23
 800317c:	db22      	blt.n	80031c4 <__aeabi_d2f+0xdc>
 800317e:	2180      	movs	r1, #128	; 0x80
 8003180:	221e      	movs	r2, #30
 8003182:	0409      	lsls	r1, r1, #16
 8003184:	4308      	orrs	r0, r1
 8003186:	1b92      	subs	r2, r2, r6
 8003188:	2a1f      	cmp	r2, #31
 800318a:	dd1d      	ble.n	80031c8 <__aeabi_d2f+0xe0>
 800318c:	2102      	movs	r1, #2
 800318e:	4249      	negs	r1, r1
 8003190:	1b8e      	subs	r6, r1, r6
 8003192:	0001      	movs	r1, r0
 8003194:	40f1      	lsrs	r1, r6
 8003196:	000e      	movs	r6, r1
 8003198:	2a20      	cmp	r2, #32
 800319a:	d004      	beq.n	80031a6 <__aeabi_d2f+0xbe>
 800319c:	4a14      	ldr	r2, [pc, #80]	; (80031f0 <__aeabi_d2f+0x108>)
 800319e:	4694      	mov	ip, r2
 80031a0:	4463      	add	r3, ip
 80031a2:	4098      	lsls	r0, r3
 80031a4:	4305      	orrs	r5, r0
 80031a6:	0029      	movs	r1, r5
 80031a8:	1e4d      	subs	r5, r1, #1
 80031aa:	41a9      	sbcs	r1, r5
 80031ac:	4331      	orrs	r1, r6
 80031ae:	2600      	movs	r6, #0
 80031b0:	074b      	lsls	r3, r1, #29
 80031b2:	d1ce      	bne.n	8003152 <__aeabi_d2f+0x6a>
 80031b4:	2080      	movs	r0, #128	; 0x80
 80031b6:	000b      	movs	r3, r1
 80031b8:	04c0      	lsls	r0, r0, #19
 80031ba:	2201      	movs	r2, #1
 80031bc:	4003      	ands	r3, r0
 80031be:	4201      	tst	r1, r0
 80031c0:	d1d3      	bne.n	800316a <__aeabi_d2f+0x82>
 80031c2:	e7af      	b.n	8003124 <__aeabi_d2f+0x3c>
 80031c4:	2300      	movs	r3, #0
 80031c6:	e7ac      	b.n	8003122 <__aeabi_d2f+0x3a>
 80031c8:	490a      	ldr	r1, [pc, #40]	; (80031f4 <__aeabi_d2f+0x10c>)
 80031ca:	468c      	mov	ip, r1
 80031cc:	0029      	movs	r1, r5
 80031ce:	4463      	add	r3, ip
 80031d0:	40d1      	lsrs	r1, r2
 80031d2:	409d      	lsls	r5, r3
 80031d4:	000a      	movs	r2, r1
 80031d6:	0029      	movs	r1, r5
 80031d8:	4098      	lsls	r0, r3
 80031da:	1e4d      	subs	r5, r1, #1
 80031dc:	41a9      	sbcs	r1, r5
 80031de:	4301      	orrs	r1, r0
 80031e0:	4311      	orrs	r1, r2
 80031e2:	e7e4      	b.n	80031ae <__aeabi_d2f+0xc6>
 80031e4:	0033      	movs	r3, r6
 80031e6:	e79d      	b.n	8003124 <__aeabi_d2f+0x3c>
 80031e8:	000007fe 	.word	0x000007fe
 80031ec:	fffffc80 	.word	0xfffffc80
 80031f0:	fffffca2 	.word	0xfffffca2
 80031f4:	fffffc82 	.word	0xfffffc82

080031f8 <__clzsi2>:
 80031f8:	211c      	movs	r1, #28
 80031fa:	2301      	movs	r3, #1
 80031fc:	041b      	lsls	r3, r3, #16
 80031fe:	4298      	cmp	r0, r3
 8003200:	d301      	bcc.n	8003206 <__clzsi2+0xe>
 8003202:	0c00      	lsrs	r0, r0, #16
 8003204:	3910      	subs	r1, #16
 8003206:	0a1b      	lsrs	r3, r3, #8
 8003208:	4298      	cmp	r0, r3
 800320a:	d301      	bcc.n	8003210 <__clzsi2+0x18>
 800320c:	0a00      	lsrs	r0, r0, #8
 800320e:	3908      	subs	r1, #8
 8003210:	091b      	lsrs	r3, r3, #4
 8003212:	4298      	cmp	r0, r3
 8003214:	d301      	bcc.n	800321a <__clzsi2+0x22>
 8003216:	0900      	lsrs	r0, r0, #4
 8003218:	3904      	subs	r1, #4
 800321a:	a202      	add	r2, pc, #8	; (adr r2, 8003224 <__clzsi2+0x2c>)
 800321c:	5c10      	ldrb	r0, [r2, r0]
 800321e:	1840      	adds	r0, r0, r1
 8003220:	4770      	bx	lr
 8003222:	46c0      	nop			; (mov r8, r8)
 8003224:	02020304 	.word	0x02020304
 8003228:	01010101 	.word	0x01010101
	...

08003234 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8003234:	b510      	push	{r4, lr}
 8003236:	b08a      	sub	sp, #40	; 0x28

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003238:	2214      	movs	r2, #20
 800323a:	2100      	movs	r1, #0
 800323c:	a804      	add	r0, sp, #16
 800323e:	f007 fef5 	bl	800b02c <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003242:	2080      	movs	r0, #128	; 0x80
 8003244:	0304      	lsls	r4, r0, #12
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8003246:	2080      	movs	r0, #128	; 0x80
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003248:	4b24      	ldr	r3, [pc, #144]	; (80032dc <MX_GPIO_Init+0xa8>)
 800324a:	6959      	ldr	r1, [r3, #20]
 800324c:	4321      	orrs	r1, r4
 800324e:	6159      	str	r1, [r3, #20]
 8003250:	695a      	ldr	r2, [r3, #20]
 8003252:	4022      	ands	r2, r4
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8003254:	03c4      	lsls	r4, r0, #15
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003256:	2080      	movs	r0, #128	; 0x80
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003258:	9200      	str	r2, [sp, #0]
 800325a:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800325c:	6959      	ldr	r1, [r3, #20]
 800325e:	4321      	orrs	r1, r4
 8003260:	6159      	str	r1, [r3, #20]
 8003262:	695a      	ldr	r2, [r3, #20]
 8003264:	4022      	ands	r2, r4
 8003266:	9201      	str	r2, [sp, #4]
 8003268:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800326a:	6959      	ldr	r1, [r3, #20]
 800326c:	0284      	lsls	r4, r0, #10
 800326e:	4321      	orrs	r1, r4
 8003270:	6159      	str	r1, [r3, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8003272:	2180      	movs	r1, #128	; 0x80
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003274:	695a      	ldr	r2, [r3, #20]
 8003276:	4022      	ands	r2, r4
 8003278:	9202      	str	r2, [sp, #8]
 800327a:	9a02      	ldr	r2, [sp, #8]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 800327c:	2290      	movs	r2, #144	; 0x90
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800327e:	6958      	ldr	r0, [r3, #20]
 8003280:	02cc      	lsls	r4, r1, #11
 8003282:	4320      	orrs	r0, r4
 8003284:	6158      	str	r0, [r3, #20]
 8003286:	695b      	ldr	r3, [r3, #20]
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8003288:	2120      	movs	r1, #32
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800328a:	4023      	ands	r3, r4
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 800328c:	05d4      	lsls	r4, r2, #23
 800328e:	0020      	movs	r0, r4
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8003290:	9303      	str	r3, [sp, #12]
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8003292:	2200      	movs	r2, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8003294:	9b03      	ldr	r3, [sp, #12]
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8003296:	f004 fc6d 	bl	8007b74 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = B1_Pin;
 800329a:	2080      	movs	r0, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800329c:	2102      	movs	r1, #2
  GPIO_InitStruct.Pin = B1_Pin;
 800329e:	4b10      	ldr	r3, [pc, #64]	; (80032e0 <MX_GPIO_Init+0xac>)
 80032a0:	0182      	lsls	r2, r0, #6
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80032a2:	9106      	str	r1, [sp, #24]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80032a4:	480f      	ldr	r0, [pc, #60]	; (80032e4 <MX_GPIO_Init+0xb0>)
 80032a6:	a904      	add	r1, sp, #16
  GPIO_InitStruct.Pin = B1_Pin;
 80032a8:	9204      	str	r2, [sp, #16]
 80032aa:	9305      	str	r3, [sp, #20]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80032ac:	f004 fb70 	bl	8007990 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LD2_Pin;
 80032b0:	2220      	movs	r2, #32
 80032b2:	2301      	movs	r3, #1
 80032b4:	9204      	str	r2, [sp, #16]
 80032b6:	9305      	str	r3, [sp, #20]
 80032b8:	2303      	movs	r3, #3
 80032ba:	2200      	movs	r2, #0
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 80032bc:	0020      	movs	r0, r4
 80032be:	a904      	add	r1, sp, #16
  GPIO_InitStruct.Pin = LD2_Pin;
 80032c0:	9206      	str	r2, [sp, #24]
 80032c2:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 80032c4:	f004 fb64 	bl	8007990 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 80032c8:	2200      	movs	r2, #0
 80032ca:	2100      	movs	r1, #0
 80032cc:	2007      	movs	r0, #7
 80032ce:	f004 fac3 	bl	8007858 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 80032d2:	2007      	movs	r0, #7
 80032d4:	f004 faf2 	bl	80078bc <HAL_NVIC_EnableIRQ>

}
 80032d8:	b00a      	add	sp, #40	; 0x28
 80032da:	bd10      	pop	{r4, pc}
 80032dc:	40021000 	.word	0x40021000
 80032e0:	10210000 	.word	0x10210000
 80032e4:	48000800 	.word	0x48000800

080032e8 <MX_I2C1_Init>:
  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
  hi2c1.Init.Timing = 0x2010091A;
  hi2c1.Init.OwnAddress1 = 0;
 80032e8:	2100      	movs	r1, #0
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80032ea:	2201      	movs	r2, #1
{
 80032ec:	b510      	push	{r4, lr}
  hi2c1.Init.Timing = 0x2010091A;
 80032ee:	4818      	ldr	r0, [pc, #96]	; (8003350 <MX_I2C1_Init+0x68>)
  hi2c1.Instance = I2C1;
 80032f0:	4c18      	ldr	r4, [pc, #96]	; (8003354 <MX_I2C1_Init+0x6c>)
 80032f2:	4b19      	ldr	r3, [pc, #100]	; (8003358 <MX_I2C1_Init+0x70>)
  hi2c1.Init.Timing = 0x2010091A;
 80032f4:	6060      	str	r0, [r4, #4]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c1.Init.OwnAddress2 = 0;
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80032f6:	0020      	movs	r0, r4
  hi2c1.Instance = I2C1;
 80032f8:	6023      	str	r3, [r4, #0]
  hi2c1.Init.OwnAddress1 = 0;
 80032fa:	60a1      	str	r1, [r4, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80032fc:	60e2      	str	r2, [r4, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80032fe:	6121      	str	r1, [r4, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8003300:	6161      	str	r1, [r4, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8003302:	61a1      	str	r1, [r4, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003304:	61e1      	str	r1, [r4, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003306:	6221      	str	r1, [r4, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8003308:	f004 fd1a 	bl	8007d40 <HAL_I2C_Init>
 800330c:	2800      	cmp	r0, #0
 800330e:	d10c      	bne.n	800332a <MX_I2C1_Init+0x42>
  {
    Error_Handler();
  }
  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8003310:	2100      	movs	r1, #0
 8003312:	0020      	movs	r0, r4
 8003314:	f004 ffe8 	bl	80082e8 <HAL_I2CEx_ConfigAnalogFilter>
 8003318:	2800      	cmp	r0, #0
 800331a:	d10e      	bne.n	800333a <MX_I2C1_Init+0x52>
  {
    Error_Handler();
  }
  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 800331c:	2100      	movs	r1, #0
 800331e:	0020      	movs	r0, r4
 8003320:	f005 f80a 	bl	8008338 <HAL_I2CEx_ConfigDigitalFilter>
 8003324:	2800      	cmp	r0, #0
 8003326:	d110      	bne.n	800334a <MX_I2C1_Init+0x62>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8003328:	bd10      	pop	{r4, pc}
    Error_Handler();
 800332a:	f003 ff49 	bl	80071c0 <Error_Handler>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800332e:	2100      	movs	r1, #0
 8003330:	0020      	movs	r0, r4
 8003332:	f004 ffd9 	bl	80082e8 <HAL_I2CEx_ConfigAnalogFilter>
 8003336:	2800      	cmp	r0, #0
 8003338:	d0f0      	beq.n	800331c <MX_I2C1_Init+0x34>
    Error_Handler();
 800333a:	f003 ff41 	bl	80071c0 <Error_Handler>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 800333e:	2100      	movs	r1, #0
 8003340:	0020      	movs	r0, r4
 8003342:	f004 fff9 	bl	8008338 <HAL_I2CEx_ConfigDigitalFilter>
 8003346:	2800      	cmp	r0, #0
 8003348:	d0ee      	beq.n	8003328 <MX_I2C1_Init+0x40>
    Error_Handler();
 800334a:	f003 ff39 	bl	80071c0 <Error_Handler>
}
 800334e:	e7eb      	b.n	8003328 <MX_I2C1_Init+0x40>
 8003350:	2010091a 	.word	0x2010091a
 8003354:	200004bc 	.word	0x200004bc
 8003358:	40005400 	.word	0x40005400

0800335c <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 800335c:	b510      	push	{r4, lr}
 800335e:	0004      	movs	r4, r0
 8003360:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003362:	2214      	movs	r2, #20
 8003364:	2100      	movs	r1, #0
 8003366:	a802      	add	r0, sp, #8
 8003368:	f007 fe60 	bl	800b02c <memset>
  if(i2cHandle->Instance==I2C1)
 800336c:	4b14      	ldr	r3, [pc, #80]	; (80033c0 <HAL_I2C_MspInit+0x64>)
 800336e:	6822      	ldr	r2, [r4, #0]
 8003370:	429a      	cmp	r2, r3
 8003372:	d001      	beq.n	8003378 <HAL_I2C_MspInit+0x1c>
    __HAL_RCC_I2C1_CLK_ENABLE();
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8003374:	b008      	add	sp, #32
 8003376:	bd10      	pop	{r4, pc}
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003378:	2180      	movs	r1, #128	; 0x80
 800337a:	4c12      	ldr	r4, [pc, #72]	; (80033c4 <HAL_I2C_MspInit+0x68>)
 800337c:	02ca      	lsls	r2, r1, #11
 800337e:	6960      	ldr	r0, [r4, #20]
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 8003380:	2101      	movs	r1, #1
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003382:	4310      	orrs	r0, r2
 8003384:	6160      	str	r0, [r4, #20]
 8003386:	6963      	ldr	r3, [r4, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8003388:	20c0      	movs	r0, #192	; 0xc0
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800338a:	4013      	ands	r3, r2
 800338c:	9300      	str	r3, [sp, #0]
 800338e:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8003390:	2312      	movs	r3, #18
 8003392:	0082      	lsls	r2, r0, #2
 8003394:	9202      	str	r2, [sp, #8]
 8003396:	9303      	str	r3, [sp, #12]
 8003398:	2201      	movs	r2, #1
 800339a:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800339c:	480a      	ldr	r0, [pc, #40]	; (80033c8 <HAL_I2C_MspInit+0x6c>)
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 800339e:	9106      	str	r1, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80033a0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80033a2:	9204      	str	r2, [sp, #16]
 80033a4:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80033a6:	f004 faf3 	bl	8007990 <HAL_GPIO_Init>
    __HAL_RCC_I2C1_CLK_ENABLE();
 80033aa:	2380      	movs	r3, #128	; 0x80
 80033ac:	69e2      	ldr	r2, [r4, #28]
 80033ae:	0398      	lsls	r0, r3, #14
 80033b0:	4302      	orrs	r2, r0
 80033b2:	61e2      	str	r2, [r4, #28]
 80033b4:	69e4      	ldr	r4, [r4, #28]
 80033b6:	4004      	ands	r4, r0
 80033b8:	9401      	str	r4, [sp, #4]
 80033ba:	9b01      	ldr	r3, [sp, #4]
}
 80033bc:	e7da      	b.n	8003374 <HAL_I2C_MspInit+0x18>
 80033be:	46c0      	nop			; (mov r8, r8)
 80033c0:	40005400 	.word	0x40005400
 80033c4:	40021000 	.word	0x40021000
 80033c8:	48000400 	.word	0x48000400

080033cc <MX_IWDG_Init>:

  /* USER CODE BEGIN IWDG_Init 1 */

  /* USER CODE END IWDG_Init 1 */
  hiwdg.Instance = IWDG;
  hiwdg.Init.Prescaler = IWDG_PRESCALER_16;
 80033cc:	2102      	movs	r1, #2
  hiwdg.Instance = IWDG;
 80033ce:	4808      	ldr	r0, [pc, #32]	; (80033f0 <MX_IWDG_Init+0x24>)
 80033d0:	4b08      	ldr	r3, [pc, #32]	; (80033f4 <MX_IWDG_Init+0x28>)
{
 80033d2:	b510      	push	{r4, lr}
  hiwdg.Init.Window = 4095;
 80033d4:	4a08      	ldr	r2, [pc, #32]	; (80033f8 <MX_IWDG_Init+0x2c>)
  hiwdg.Instance = IWDG;
 80033d6:	6003      	str	r3, [r0, #0]
  hiwdg.Init.Reload = 2500;
 80033d8:	4b08      	ldr	r3, [pc, #32]	; (80033fc <MX_IWDG_Init+0x30>)
  hiwdg.Init.Prescaler = IWDG_PRESCALER_16;
 80033da:	6041      	str	r1, [r0, #4]
  hiwdg.Init.Window = 4095;
 80033dc:	60c2      	str	r2, [r0, #12]
  hiwdg.Init.Reload = 2500;
 80033de:	6083      	str	r3, [r0, #8]
  if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 80033e0:	f004 ffd0 	bl	8008384 <HAL_IWDG_Init>
 80033e4:	2800      	cmp	r0, #0
 80033e6:	d100      	bne.n	80033ea <MX_IWDG_Init+0x1e>
  }
  /* USER CODE BEGIN IWDG_Init 2 */

  /* USER CODE END IWDG_Init 2 */

}
 80033e8:	bd10      	pop	{r4, pc}
    Error_Handler();
 80033ea:	f003 fee9 	bl	80071c0 <Error_Handler>
}
 80033ee:	e7fb      	b.n	80033e8 <MX_IWDG_Init+0x1c>
 80033f0:	20000508 	.word	0x20000508
 80033f4:	40003000 	.word	0x40003000
 80033f8:	00000fff 	.word	0x00000fff
 80033fc:	000009c4 	.word	0x000009c4

08003400 <_ZL13Reset_Filtersv>:
			P[k] = 1.0e-8;
		}
		P[2 + 2 * 6] = 1.0e-16;
	}
	void reset_orientation() {
		q[0] = 1.0;
 8003400:	23fe      	movs	r3, #254	; 0xfe
	}
}

/* USER CODE BEGIN 4 */

static void Reset_Filters(void) {
 8003402:	b570      	push	{r4, r5, r6, lr}
 8003404:	4c2b      	ldr	r4, [pc, #172]	; (80034b4 <_ZL13Reset_Filtersv+0xb4>)
 8003406:	0598      	lsls	r0, r3, #22
		q[1] = 0.0;
 8003408:	2100      	movs	r1, #0
		q[0] = 1.0;
 800340a:	6020      	str	r0, [r4, #0]
		q[1] = 0.0;
 800340c:	0020      	movs	r0, r4
 800340e:	6061      	str	r1, [r4, #4]
		q[2] = 0.0;
 8003410:	60a1      	str	r1, [r4, #8]
		q[3] = 0.0;
 8003412:	60e1      	str	r1, [r4, #12]
		w[0] = 0.0;
 8003414:	6121      	str	r1, [r4, #16]
		w[1] = 0.0;
 8003416:	6161      	str	r1, [r4, #20]
		w[2] = 0.0;
 8003418:	61a1      	str	r1, [r4, #24]
		for (int k = 0; k < 36; k++) {
 800341a:	2288      	movs	r2, #136	; 0x88
 800341c:	2100      	movs	r1, #0
 800341e:	3020      	adds	r0, #32
 8003420:	f007 fe04 	bl	800b02c <memset>
			P[k] = 0.0;
		}
		for (int k = 0; k < 36; k += 7) {
			P[k] = 1.0e2;
 8003424:	228c      	movs	r2, #140	; 0x8c
 8003426:	4d24      	ldr	r5, [pc, #144]	; (80034b8 <_ZL13Reset_Filtersv+0xb8>)
	/* Initialize Kalman filter */
	kal.reset_orientation();
	kal.set_Qa(KAL_Qa);
 8003428:	4824      	ldr	r0, [pc, #144]	; (80034bc <_ZL13Reset_Filtersv+0xbc>)
 800342a:	50a5      	str	r5, [r4, r2]
 800342c:	321c      	adds	r2, #28
 800342e:	50a5      	str	r5, [r4, r2]
 8003430:	61e5      	str	r5, [r4, #28]
 8003432:	63a5      	str	r5, [r4, #56]	; 0x38
 8003434:	6725      	str	r5, [r4, #112]	; 0x70
 8003436:	6805      	ldr	r5, [r0, #0]
 8003438:	0020      	movs	r0, r4
		}
		P[2 + 2 * 6] = 1.0e-16;
 800343a:	4b21      	ldr	r3, [pc, #132]	; (80034c0 <_ZL13Reset_Filtersv+0xc0>)
 800343c:	2100      	movs	r1, #0
 800343e:	3a8c      	subs	r2, #140	; 0x8c
 8003440:	30d4      	adds	r0, #212	; 0xd4
 8003442:	6563      	str	r3, [r4, #84]	; 0x54
		for (int k = 0; k < 9; k += 4) {
			Qw[k] = QwIn;
		}
	}
	void set_Qa(float QaIn) {
		for (int k = 0; k < 9; k++) {
 8003444:	f007 fdf2 	bl	800b02c <memset>
			Qa[k] = 0.0;
		}
		for (int k = 0; k < 9; k += 4) {
			Qa[k] = QaIn;
 8003448:	22d0      	movs	r2, #208	; 0xd0
 800344a:	0020      	movs	r0, r4
 800344c:	50a5      	str	r5, [r4, r2]
	kal.set_Qw(KAL_Qw);
 800344e:	491d      	ldr	r1, [pc, #116]	; (80034c4 <_ZL13Reset_Filtersv+0xc4>)
 8003450:	3210      	adds	r2, #16
 8003452:	50a5      	str	r5, [r4, r2]
 8003454:	3210      	adds	r2, #16
 8003456:	50a5      	str	r5, [r4, r2]
 8003458:	30b0      	adds	r0, #176	; 0xb0
 800345a:	680d      	ldr	r5, [r1, #0]
		for (int k = 0; k < 9; k++) {
 800345c:	221c      	movs	r2, #28
 800345e:	2100      	movs	r1, #0
 8003460:	f007 fde4 	bl	800b02c <memset>
			Qw[k] = QwIn;
 8003464:	23ac      	movs	r3, #172	; 0xac
	kal.set_Ra(KAL_Ra);
 8003466:	4818      	ldr	r0, [pc, #96]	; (80034c8 <_ZL13Reset_Filtersv+0xc8>)
 8003468:	50e5      	str	r5, [r4, r3]
 800346a:	3310      	adds	r3, #16
 800346c:	50e5      	str	r5, [r4, r3]
 800346e:	3310      	adds	r3, #16
 8003470:	50e5      	str	r5, [r4, r3]
 8003472:	6805      	ldr	r5, [r0, #0]
		for (int k = 0; k < 9; k += 4) {
			Rw[k] = RwIn;
		}
	}
	void set_Ra(float RaIn) {
		for (int k = 0; k < 9; k++) {
 8003474:	0020      	movs	r0, r4
 8003476:	301d      	adds	r0, #29
 8003478:	221c      	movs	r2, #28
 800347a:	2100      	movs	r1, #0
 800347c:	30ff      	adds	r0, #255	; 0xff
 800347e:	f007 fdd5 	bl	800b02c <memset>
			Ra[k] = 0.0;
		}
		for (int k = 0; k < 9; k += 4) {
			Ra[k] = RaIn;
 8003482:	228c      	movs	r2, #140	; 0x8c
 8003484:	0020      	movs	r0, r4
 8003486:	0051      	lsls	r1, r2, #1
 8003488:	5065      	str	r5, [r4, r1]
 800348a:	3110      	adds	r1, #16
 800348c:	5065      	str	r5, [r4, r1]
	kal.set_Rw(KAL_Rw);
 800348e:	4b0f      	ldr	r3, [pc, #60]	; (80034cc <_ZL13Reset_Filtersv+0xcc>)
 8003490:	3110      	adds	r1, #16
 8003492:	5065      	str	r5, [r4, r1]
 8003494:	221c      	movs	r2, #28
 8003496:	2100      	movs	r1, #0
 8003498:	30f8      	adds	r0, #248	; 0xf8
 800349a:	681d      	ldr	r5, [r3, #0]
		for (int k = 0; k < 9; k++) {
 800349c:	f007 fdc6 	bl	800b02c <memset>
			Rw[k] = RwIn;
 80034a0:	20f4      	movs	r0, #244	; 0xf4
 80034a2:	5025      	str	r5, [r4, r0]
 80034a4:	3010      	adds	r0, #16
 80034a6:	5025      	str	r5, [r4, r0]
	void set_chartUpdate(bool chartUpdateIn) {
		assert(chartUpdateIn);
//		chartUpdate = chartUpdateIn;
	}
	void set_W0(float W0In) {
		W0 = W0In;
 80034a8:	4a09      	ldr	r2, [pc, #36]	; (80034d0 <_ZL13Reset_Filtersv+0xd0>)
			Rw[k] = RwIn;
 80034aa:	3010      	adds	r0, #16
 80034ac:	5025      	str	r5, [r4, r0]
		W0 = W0In;
 80034ae:	302c      	adds	r0, #44	; 0x2c
 80034b0:	5022      	str	r2, [r4, r0]
	kal.set_W0(0.04);
	kal.set_chartUpdate(true);
}
 80034b2:	bd70      	pop	{r4, r5, r6, pc}
 80034b4:	2000029c 	.word	0x2000029c
 80034b8:	42c80000 	.word	0x42c80000
 80034bc:	20000000 	.word	0x20000000
 80034c0:	24e69595 	.word	0x24e69595
 80034c4:	20000004 	.word	0x20000004
 80034c8:	20000008 	.word	0x20000008
 80034cc:	2000000c 	.word	0x2000000c
 80034d0:	3d23d70a 	.word	0x3d23d70a

080034d4 <_ZN7MEKFcRPC1Ev>:
	MEKFcRP() {
 80034d4:	239e      	movs	r3, #158	; 0x9e
 80034d6:	2201      	movs	r2, #1
 80034d8:	0059      	lsls	r1, r3, #1
 80034da:	4b22      	ldr	r3, [pc, #136]	; (8003564 <_ZN7MEKFcRPC1Ev+0x90>)
 80034dc:	b510      	push	{r4, lr}
 80034de:	5442      	strb	r2, [r0, r1]
 80034e0:	3104      	adds	r1, #4
 80034e2:	5043      	str	r3, [r0, r1]
		q[0] = 1.0;
 80034e4:	21fe      	movs	r1, #254	; 0xfe
		q[1] = 0.0;
 80034e6:	2300      	movs	r3, #0
		q[0] = 1.0;
 80034e8:	058a      	lsls	r2, r1, #22
		w[0] = 1.0e-10;
 80034ea:	491f      	ldr	r1, [pc, #124]	; (8003568 <_ZN7MEKFcRPC1Ev+0x94>)
	MEKFcRP() {
 80034ec:	0004      	movs	r4, r0
		q[0] = 1.0;
 80034ee:	6002      	str	r2, [r0, #0]
		q[1] = 0.0;
 80034f0:	6043      	str	r3, [r0, #4]
		q[2] = 0.0;
 80034f2:	6083      	str	r3, [r0, #8]
		q[3] = 0.0;
 80034f4:	60c3      	str	r3, [r0, #12]
		w[0] = 1.0e-10;
 80034f6:	6101      	str	r1, [r0, #16]
		w[1] = 1.0e-10;
 80034f8:	6141      	str	r1, [r0, #20]
		w[2] = 1.0e-10;
 80034fa:	6181      	str	r1, [r0, #24]
		for (int k = 0; k < 36; k++) {
 80034fc:	228c      	movs	r2, #140	; 0x8c
 80034fe:	2100      	movs	r1, #0
 8003500:	3020      	adds	r0, #32
 8003502:	f007 fd93 	bl	800b02c <memset>
			P[k] = 1.0e2;
 8003506:	228c      	movs	r2, #140	; 0x8c
 8003508:	4818      	ldr	r0, [pc, #96]	; (800356c <_ZN7MEKFcRPC1Ev+0x98>)
		P[2 + 2 * 6] = 1.0e-16;
 800350a:	4b19      	ldr	r3, [pc, #100]	; (8003570 <_ZN7MEKFcRPC1Ev+0x9c>)
			P[k] = 1.0e2;
 800350c:	61e0      	str	r0, [r4, #28]
 800350e:	63a0      	str	r0, [r4, #56]	; 0x38
 8003510:	6720      	str	r0, [r4, #112]	; 0x70
 8003512:	50a0      	str	r0, [r4, r2]
 8003514:	321c      	adds	r2, #28
 8003516:	50a0      	str	r0, [r4, r2]
		P[2 + 2 * 6] = 1.0e-16;
 8003518:	0020      	movs	r0, r4
 800351a:	6563      	str	r3, [r4, #84]	; 0x54
		for (int k = 0; k < 9; k++) {
 800351c:	2100      	movs	r1, #0
 800351e:	3a1c      	subs	r2, #28
 8003520:	30b0      	adds	r0, #176	; 0xb0
 8003522:	f007 fd83 	bl	800b02c <memset>
			Qw[k] = 1.0e1;
 8003526:	20ac      	movs	r0, #172	; 0xac
 8003528:	4912      	ldr	r1, [pc, #72]	; (8003574 <_ZN7MEKFcRPC1Ev+0xa0>)
			Qa[k] = 1.0e-2;
 800352a:	4a13      	ldr	r2, [pc, #76]	; (8003578 <_ZN7MEKFcRPC1Ev+0xa4>)
			Qw[k] = 1.0e1;
 800352c:	5021      	str	r1, [r4, r0]
			Qa[k] = 1.0e-2;
 800352e:	3024      	adds	r0, #36	; 0x24
 8003530:	5022      	str	r2, [r4, r0]
			Rw[k] = 1.0e-3;
 8003532:	20f4      	movs	r0, #244	; 0xf4
 8003534:	4b11      	ldr	r3, [pc, #68]	; (800357c <_ZN7MEKFcRPC1Ev+0xa8>)
 8003536:	5023      	str	r3, [r4, r0]
			Ra[k] = 1.0e-3;
 8003538:	3024      	adds	r0, #36	; 0x24
 800353a:	5023      	str	r3, [r4, r0]
			Qw[k] = 1.0e1;
 800353c:	385c      	subs	r0, #92	; 0x5c
 800353e:	5021      	str	r1, [r4, r0]
			Qa[k] = 1.0e-2;
 8003540:	3024      	adds	r0, #36	; 0x24
 8003542:	5022      	str	r2, [r4, r0]
			Rw[k] = 1.0e-3;
 8003544:	3024      	adds	r0, #36	; 0x24
 8003546:	5023      	str	r3, [r4, r0]
			Ra[k] = 1.0e-3;
 8003548:	3024      	adds	r0, #36	; 0x24
 800354a:	5023      	str	r3, [r4, r0]
			Qw[k] = 1.0e1;
 800354c:	385c      	subs	r0, #92	; 0x5c
 800354e:	5021      	str	r1, [r4, r0]
			Qa[k] = 1.0e-2;
 8003550:	21f0      	movs	r1, #240	; 0xf0
 8003552:	5062      	str	r2, [r4, r1]
			Rw[k] = 1.0e-3;
 8003554:	228a      	movs	r2, #138	; 0x8a
 8003556:	0050      	lsls	r0, r2, #1
 8003558:	5023      	str	r3, [r4, r0]
			Ra[k] = 1.0e-3;
 800355a:	3024      	adds	r0, #36	; 0x24
 800355c:	5023      	str	r3, [r4, r0]
	}
 800355e:	0020      	movs	r0, r4
 8003560:	bd10      	pop	{r4, pc}
 8003562:	46c0      	nop			; (mov r8, r8)
 8003564:	3d23d70a 	.word	0x3d23d70a
 8003568:	2edbe6ff 	.word	0x2edbe6ff
 800356c:	42c80000 	.word	0x42c80000
 8003570:	24e69595 	.word	0x24e69595
 8003574:	41200000 	.word	0x41200000
 8003578:	3c23d70a 	.word	0x3c23d70a
 800357c:	3a83126f 	.word	0x3a83126f

08003580 <_ZN7MEKFcRP9updateIMUEPfS0_f>:
	// inputs:
	//  am: measured acceleration (g)
	//  wm: measured angular velocity (rad/s)
	//  dt: time step from the last update (s)
	// outputs:
	void updateIMU(float am[], float wm[], float dt) {
 8003580:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003582:	46de      	mov	lr, fp
 8003584:	4645      	mov	r5, r8
 8003586:	4657      	mov	r7, sl
 8003588:	464e      	mov	r6, r9
 800358a:	b5e0      	push	{r5, r6, r7, lr}
 800358c:	4cf6      	ldr	r4, [pc, #984]	; (8003968 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x3e8>)

		// we compute the state prediction
		float wnorm = std::sqrt(w[0] * w[0] + w[1] * w[1] + w[2] * w[2]);
 800358e:	6945      	ldr	r5, [r0, #20]
	void updateIMU(float am[], float wm[], float dt) {
 8003590:	44a5      	add	sp, r4
 8003592:	9158      	str	r1, [sp, #352]	; 0x160
		float wnorm = std::sqrt(w[0] * w[0] + w[1] * w[1] + w[2] * w[2]);
 8003594:	6901      	ldr	r1, [r0, #16]
 8003596:	6986      	ldr	r6, [r0, #24]
	void updateIMU(float am[], float wm[], float dt) {
 8003598:	4680      	mov	r8, r0
		float wnorm = std::sqrt(w[0] * w[0] + w[1] * w[1] + w[2] * w[2]);
 800359a:	1c08      	adds	r0, r1, #0
	void updateIMU(float am[], float wm[], float dt) {
 800359c:	469b      	mov	fp, r3
 800359e:	9259      	str	r2, [sp, #356]	; 0x164
		float wnorm = std::sqrt(w[0] * w[0] + w[1] * w[1] + w[2] * w[2]);
 80035a0:	9155      	str	r1, [sp, #340]	; 0x154
 80035a2:	9556      	str	r5, [sp, #344]	; 0x158
 80035a4:	9657      	str	r6, [sp, #348]	; 0x15c
 80035a6:	f7fd fba5 	bl	8000cf4 <__aeabi_fmul>
 80035aa:	1c29      	adds	r1, r5, #0
 80035ac:	1c07      	adds	r7, r0, #0
 80035ae:	1c28      	adds	r0, r5, #0
 80035b0:	f7fd fba0 	bl	8000cf4 <__aeabi_fmul>
 80035b4:	1c01      	adds	r1, r0, #0
 80035b6:	1c38      	adds	r0, r7, #0
 80035b8:	f7fd f836 	bl	8000628 <__aeabi_fadd>
 80035bc:	1c31      	adds	r1, r6, #0
 80035be:	1c04      	adds	r4, r0, #0
 80035c0:	1c30      	adds	r0, r6, #0
 80035c2:	f7fd fb97 	bl	8000cf4 <__aeabi_fmul>
 80035c6:	1c01      	adds	r1, r0, #0
 80035c8:	1c20      	adds	r0, r4, #0
 80035ca:	f7fd f82d 	bl	8000628 <__aeabi_fadd>
		float qw[4];

		if (wnorm != 0.0) {
 80035ce:	2100      	movs	r1, #0
		float wnorm = std::sqrt(w[0] * w[0] + w[1] * w[1] + w[2] * w[2]);
 80035d0:	1c04      	adds	r4, r0, #0
		if (wnorm != 0.0) {
 80035d2:	f7fc ff73 	bl	80004bc <__aeabi_fcmpeq>
 80035d6:	2800      	cmp	r0, #0
 80035d8:	d101      	bne.n	80035de <_ZN7MEKFcRP9updateIMUEPfS0_f+0x5e>
 80035da:	f002 fe3f 	bl	800625c <_ZN7MEKFcRP9updateIMUEPfS0_f+0x2cdc>
 80035de:	4658      	mov	r0, fp
 80035e0:	f7ff fd3a 	bl	8003058 <__aeabi_f2d>
 80035e4:	9012      	str	r0, [sp, #72]	; 0x48
 80035e6:	9113      	str	r1, [sp, #76]	; 0x4c
 80035e8:	20fe      	movs	r0, #254	; 0xfe
			qw[2] = w[1] * swdt;
			qw[3] = w[2] * swdt;
		} else {
			qw[0] = 1.0;
			qw[1] = 0.0;
			qw[2] = 0.0;
 80035ea:	46a2      	mov	sl, r4
		if (wnorm != 0.0) {
 80035ec:	0586      	lsls	r6, r0, #22
 80035ee:	9418      	str	r4, [sp, #96]	; 0x60
 80035f0:	940c      	str	r4, [sp, #48]	; 0x30
 80035f2:	940b      	str	r4, [sp, #44]	; 0x2c
 80035f4:	9409      	str	r4, [sp, #36]	; 0x24
 80035f6:	9406      	str	r4, [sp, #24]
 80035f8:	9404      	str	r4, [sp, #16]
			qw[3] = 0.0;
 80035fa:	1c25      	adds	r5, r4, #0
		if (wnorm != 0.0) {
 80035fc:	961a      	str	r6, [sp, #104]	; 0x68
 80035fe:	960a      	str	r6, [sp, #40]	; 0x28
 8003600:	9602      	str	r6, [sp, #8]
		}

		float qp[4];
		qp[0] = q[0] * qw[0] - q[1] * qw[1] - q[2] * qw[2] - q[3] * qw[3];
 8003602:	4640      	mov	r0, r8
 8003604:	6803      	ldr	r3, [r0, #0]
 8003606:	6842      	ldr	r2, [r0, #4]
 8003608:	6880      	ldr	r0, [r0, #8]
 800360a:	1c31      	adds	r1, r6, #0
 800360c:	900e      	str	r0, [sp, #56]	; 0x38
 800360e:	1c18      	adds	r0, r3, #0
 8003610:	9200      	str	r2, [sp, #0]
 8003612:	9310      	str	r3, [sp, #64]	; 0x40
 8003614:	f7fd fb6e 	bl	8000cf4 <__aeabi_fmul>
 8003618:	1c21      	adds	r1, r4, #0
 800361a:	4681      	mov	r9, r0
 800361c:	9800      	ldr	r0, [sp, #0]
 800361e:	f7fd fb69 	bl	8000cf4 <__aeabi_fmul>
 8003622:	4651      	mov	r1, sl
 8003624:	9014      	str	r0, [sp, #80]	; 0x50
 8003626:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003628:	f7fd fb64 	bl	8000cf4 <__aeabi_fmul>
 800362c:	1c01      	adds	r1, r0, #0
 800362e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003630:	f7fc fffa 	bl	8000628 <__aeabi_fadd>
 8003634:	4647      	mov	r7, r8
 8003636:	1c01      	adds	r1, r0, #0
 8003638:	4648      	mov	r0, r9
 800363a:	f7fd fc75 	bl	8000f28 <__aeabi_fsub>
 800363e:	68ff      	ldr	r7, [r7, #12]
 8003640:	4681      	mov	r9, r0
 8003642:	1c29      	adds	r1, r5, #0
 8003644:	1c38      	adds	r0, r7, #0
 8003646:	f7fd fb55 	bl	8000cf4 <__aeabi_fmul>
 800364a:	1c01      	adds	r1, r0, #0
 800364c:	4648      	mov	r0, r9
 800364e:	f7fd fc6b 	bl	8000f28 <__aeabi_fsub>
		qp[1] = q[0] * qw[1] + qw[0] * q[1] + q[2] * qw[3] - q[3] * qw[2];
 8003652:	1c21      	adds	r1, r4, #0
		qp[0] = q[0] * qw[0] - q[1] * qw[1] - q[2] * qw[2] - q[3] * qw[3];
 8003654:	9051      	str	r0, [sp, #324]	; 0x144
		qp[1] = q[0] * qw[1] + qw[0] * q[1] + q[2] * qw[3] - q[3] * qw[2];
 8003656:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003658:	f7fd fb4c 	bl	8000cf4 <__aeabi_fmul>
 800365c:	1c31      	adds	r1, r6, #0
 800365e:	4681      	mov	r9, r0
 8003660:	9800      	ldr	r0, [sp, #0]
 8003662:	f7fd fb47 	bl	8000cf4 <__aeabi_fmul>
 8003666:	1c01      	adds	r1, r0, #0
 8003668:	4648      	mov	r0, r9
 800366a:	f7fc ffdd 	bl	8000628 <__aeabi_fadd>
 800366e:	1c29      	adds	r1, r5, #0
 8003670:	4681      	mov	r9, r0
 8003672:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003674:	f7fd fb3e 	bl	8000cf4 <__aeabi_fmul>
 8003678:	1c01      	adds	r1, r0, #0
 800367a:	4648      	mov	r0, r9
 800367c:	f7fc ffd4 	bl	8000628 <__aeabi_fadd>
 8003680:	4651      	mov	r1, sl
 8003682:	4681      	mov	r9, r0
 8003684:	903e      	str	r0, [sp, #248]	; 0xf8
 8003686:	1c38      	adds	r0, r7, #0
 8003688:	f7fd fb34 	bl	8000cf4 <__aeabi_fmul>
 800368c:	1c01      	adds	r1, r0, #0
 800368e:	903c      	str	r0, [sp, #240]	; 0xf0
 8003690:	4648      	mov	r0, r9
 8003692:	f7fd fc49 	bl	8000f28 <__aeabi_fsub>
		qp[2] = q[0] * qw[2] + qw[0] * q[2] + q[3] * qw[1] - q[1] * qw[3];
 8003696:	4651      	mov	r1, sl
		qp[1] = q[0] * qw[1] + qw[0] * q[1] + q[2] * qw[3] - q[3] * qw[2];
 8003698:	9052      	str	r0, [sp, #328]	; 0x148
		qp[2] = q[0] * qw[2] + qw[0] * q[2] + q[3] * qw[1] - q[1] * qw[3];
 800369a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800369c:	f7fd fb2a 	bl	8000cf4 <__aeabi_fmul>
 80036a0:	1c31      	adds	r1, r6, #0
 80036a2:	4681      	mov	r9, r0
 80036a4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80036a6:	f7fd fb25 	bl	8000cf4 <__aeabi_fmul>
 80036aa:	1c01      	adds	r1, r0, #0
 80036ac:	4648      	mov	r0, r9
 80036ae:	f7fc ffbb 	bl	8000628 <__aeabi_fadd>
 80036b2:	1c21      	adds	r1, r4, #0
 80036b4:	4681      	mov	r9, r0
 80036b6:	1c38      	adds	r0, r7, #0
 80036b8:	f7fd fb1c 	bl	8000cf4 <__aeabi_fmul>
 80036bc:	1c01      	adds	r1, r0, #0
 80036be:	4648      	mov	r0, r9
 80036c0:	f7fc ffb2 	bl	8000628 <__aeabi_fadd>
 80036c4:	1c29      	adds	r1, r5, #0
 80036c6:	4681      	mov	r9, r0
 80036c8:	9800      	ldr	r0, [sp, #0]
 80036ca:	f7fd fb13 	bl	8000cf4 <__aeabi_fmul>
 80036ce:	1c01      	adds	r1, r0, #0
 80036d0:	4648      	mov	r0, r9
 80036d2:	f7fd fc29 	bl	8000f28 <__aeabi_fsub>
		qp[3] = q[0] * qw[3] + qw[0] * q[3] + q[1] * qw[2] - q[2] * qw[1];
 80036d6:	1c29      	adds	r1, r5, #0
		qp[2] = q[0] * qw[2] + qw[0] * q[2] + q[3] * qw[1] - q[1] * qw[3];
 80036d8:	9053      	str	r0, [sp, #332]	; 0x14c
		qp[3] = q[0] * qw[3] + qw[0] * q[3] + q[1] * qw[2] - q[2] * qw[1];
 80036da:	9810      	ldr	r0, [sp, #64]	; 0x40
 80036dc:	f7fd fb0a 	bl	8000cf4 <__aeabi_fmul>
 80036e0:	1c31      	adds	r1, r6, #0
 80036e2:	1c05      	adds	r5, r0, #0
 80036e4:	1c38      	adds	r0, r7, #0
 80036e6:	f7fd fb05 	bl	8000cf4 <__aeabi_fmul>
 80036ea:	1c01      	adds	r1, r0, #0
 80036ec:	1c28      	adds	r0, r5, #0
 80036ee:	f7fc ff9b 	bl	8000628 <__aeabi_fadd>
 80036f2:	4651      	mov	r1, sl
 80036f4:	1c06      	adds	r6, r0, #0
 80036f6:	9800      	ldr	r0, [sp, #0]
 80036f8:	f7fd fafc 	bl	8000cf4 <__aeabi_fmul>
 80036fc:	1c01      	adds	r1, r0, #0
 80036fe:	1c30      	adds	r0, r6, #0
 8003700:	f7fc ff92 	bl	8000628 <__aeabi_fadd>
 8003704:	1c21      	adds	r1, r4, #0
 8003706:	1c07      	adds	r7, r0, #0
 8003708:	980e      	ldr	r0, [sp, #56]	; 0x38
 800370a:	f7fd faf3 	bl	8000cf4 <__aeabi_fmul>
 800370e:	1c01      	adds	r1, r0, #0
 8003710:	1c38      	adds	r0, r7, #0
 8003712:	f7fd fc09 	bl	8000f28 <__aeabi_fsub>
 8003716:	9054      	str	r0, [sp, #336]	; 0x150

		// we compute the covariance matrix for the state prediction
		double dtdt2 = 0.5*dt*dt;
 8003718:	9812      	ldr	r0, [sp, #72]	; 0x48
 800371a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800371c:	0002      	movs	r2, r0
 800371e:	000b      	movs	r3, r1
 8003720:	f7fe fdf2 	bl	8002308 <__aeabi_dmul>
 8003724:	2200      	movs	r2, #0
 8003726:	4b91      	ldr	r3, [pc, #580]	; (800396c <_ZN7MEKFcRP9updateIMUEPfS0_f+0x3ec>)
 8003728:	f7fe fdee 	bl	8002308 <__aeabi_dmul>
 800372c:	0006      	movs	r6, r0
 800372e:	000f      	movs	r7, r1
		double dtdtdt3 = dt*dt*dt/3.0;
 8003730:	4658      	mov	r0, fp
 8003732:	4659      	mov	r1, fp
 8003734:	f7fd fade 	bl	8000cf4 <__aeabi_fmul>
 8003738:	4659      	mov	r1, fp
 800373a:	f7fd fadb 	bl	8000cf4 <__aeabi_fmul>
 800373e:	f7ff fc8b 	bl	8003058 <__aeabi_f2d>
 8003742:	4b8b      	ldr	r3, [pc, #556]	; (8003970 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x3f0>)
 8003744:	4a8b      	ldr	r2, [pc, #556]	; (8003974 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x3f4>)
 8003746:	f7fe fddf 	bl	8002308 <__aeabi_dmul>

		for (int j = 0; j < 3; j++) {
			for (int i = 0; i < 3; i++){
				P[i + j * 6] += Qw[i + j * 3] * dtdtdt3;
 800374a:	22ac      	movs	r2, #172	; 0xac
		double dtdtdt3 = dt*dt*dt/3.0;
 800374c:	000d      	movs	r5, r1
				P[i + j * 6] += Qw[i + j * 3] * dtdtdt3;
 800374e:	4641      	mov	r1, r8
		double dtdtdt3 = dt*dt*dt/3.0;
 8003750:	0004      	movs	r4, r0
				P[i + j * 6] += Qw[i + j * 3] * dtdtdt3;
 8003752:	5888      	ldr	r0, [r1, r2]
 8003754:	4692      	mov	sl, r2
 8003756:	f7ff fc7f 	bl	8003058 <__aeabi_f2d>
 800375a:	0002      	movs	r2, r0
 800375c:	000b      	movs	r3, r1
 800375e:	9012      	str	r0, [sp, #72]	; 0x48
 8003760:	9113      	str	r1, [sp, #76]	; 0x4c
 8003762:	0020      	movs	r0, r4
 8003764:	0029      	movs	r1, r5
 8003766:	9400      	str	r4, [sp, #0]
 8003768:	9501      	str	r5, [sp, #4]
 800376a:	f7fe fdcd 	bl	8002308 <__aeabi_dmul>
 800376e:	4643      	mov	r3, r8
 8003770:	0004      	movs	r4, r0
 8003772:	69d8      	ldr	r0, [r3, #28]
 8003774:	000d      	movs	r5, r1
 8003776:	f7ff fc6f 	bl	8003058 <__aeabi_f2d>
 800377a:	000b      	movs	r3, r1
 800377c:	0002      	movs	r2, r0
 800377e:	0029      	movs	r1, r5
 8003780:	0020      	movs	r0, r4
 8003782:	f7fd fe51 	bl	8001428 <__aeabi_dadd>
 8003786:	f7ff fcaf 	bl	80030e8 <__aeabi_d2f>
 800378a:	4642      	mov	r2, r8
 800378c:	21b0      	movs	r1, #176	; 0xb0
 800378e:	61d0      	str	r0, [r2, #28]
 8003790:	5850      	ldr	r0, [r2, r1]
 8003792:	4689      	mov	r9, r1
 8003794:	4645      	mov	r5, r8
 8003796:	f7ff fc5f 	bl	8003058 <__aeabi_f2d>
 800379a:	900e      	str	r0, [sp, #56]	; 0x38
 800379c:	910f      	str	r1, [sp, #60]	; 0x3c
 800379e:	6a28      	ldr	r0, [r5, #32]
 80037a0:	f7ff fc5a 	bl	8003058 <__aeabi_f2d>
 80037a4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80037a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80037a8:	0004      	movs	r4, r0
 80037aa:	000d      	movs	r5, r1
 80037ac:	9800      	ldr	r0, [sp, #0]
 80037ae:	9901      	ldr	r1, [sp, #4]
 80037b0:	f7fe fdaa 	bl	8002308 <__aeabi_dmul>
 80037b4:	0002      	movs	r2, r0
 80037b6:	000b      	movs	r3, r1
 80037b8:	0020      	movs	r0, r4
 80037ba:	0029      	movs	r1, r5
 80037bc:	f7fd fe34 	bl	8001428 <__aeabi_dadd>
 80037c0:	f7ff fc92 	bl	80030e8 <__aeabi_d2f>
 80037c4:	4643      	mov	r3, r8
 80037c6:	21b4      	movs	r1, #180	; 0xb4
 80037c8:	6218      	str	r0, [r3, #32]
 80037ca:	5858      	ldr	r0, [r3, r1]
 80037cc:	f7ff fc44 	bl	8003058 <__aeabi_f2d>
 80037d0:	9010      	str	r0, [sp, #64]	; 0x40
 80037d2:	9111      	str	r1, [sp, #68]	; 0x44
 80037d4:	4640      	mov	r0, r8
 80037d6:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80037d8:	f7ff fc3e 	bl	8003058 <__aeabi_f2d>
 80037dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80037de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80037e0:	0004      	movs	r4, r0
 80037e2:	000d      	movs	r5, r1
 80037e4:	9800      	ldr	r0, [sp, #0]
 80037e6:	9901      	ldr	r1, [sp, #4]
 80037e8:	f7fe fd8e 	bl	8002308 <__aeabi_dmul>
 80037ec:	0002      	movs	r2, r0
 80037ee:	000b      	movs	r3, r1
 80037f0:	0020      	movs	r0, r4
 80037f2:	0029      	movs	r1, r5
 80037f4:	f7fd fe18 	bl	8001428 <__aeabi_dadd>
 80037f8:	f7ff fc76 	bl	80030e8 <__aeabi_d2f>
 80037fc:	4643      	mov	r3, r8
 80037fe:	6258      	str	r0, [r3, #36]	; 0x24
			}
			for (int i = 3; i < 6; i++){
				P[i + j * 6] -= Qw[i - 3 + j * 3] * dtdt2;
 8003800:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8003802:	f7ff fc29 	bl	8003058 <__aeabi_f2d>
 8003806:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003808:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800380a:	0004      	movs	r4, r0
 800380c:	000d      	movs	r5, r1
 800380e:	0030      	movs	r0, r6
 8003810:	0039      	movs	r1, r7
 8003812:	f7fe fd79 	bl	8002308 <__aeabi_dmul>
 8003816:	000b      	movs	r3, r1
 8003818:	0002      	movs	r2, r0
 800381a:	0029      	movs	r1, r5
 800381c:	0020      	movs	r0, r4
 800381e:	f7fe ffdf 	bl	80027e0 <__aeabi_dsub>
 8003822:	f7ff fc61 	bl	80030e8 <__aeabi_d2f>
 8003826:	4642      	mov	r2, r8
 8003828:	6290      	str	r0, [r2, #40]	; 0x28
 800382a:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 800382c:	f7ff fc14 	bl	8003058 <__aeabi_f2d>
 8003830:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003832:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003834:	0004      	movs	r4, r0
 8003836:	000d      	movs	r5, r1
 8003838:	0030      	movs	r0, r6
 800383a:	0039      	movs	r1, r7
 800383c:	f7fe fd64 	bl	8002308 <__aeabi_dmul>
 8003840:	0002      	movs	r2, r0
 8003842:	000b      	movs	r3, r1
 8003844:	0020      	movs	r0, r4
 8003846:	0029      	movs	r1, r5
 8003848:	f7fe ffca 	bl	80027e0 <__aeabi_dsub>
 800384c:	f7ff fc4c 	bl	80030e8 <__aeabi_d2f>
 8003850:	4641      	mov	r1, r8
 8003852:	62c8      	str	r0, [r1, #44]	; 0x2c
 8003854:	6b08      	ldr	r0, [r1, #48]	; 0x30
 8003856:	f7ff fbff 	bl	8003058 <__aeabi_f2d>
 800385a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800385c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800385e:	0004      	movs	r4, r0
 8003860:	000d      	movs	r5, r1
 8003862:	0030      	movs	r0, r6
 8003864:	0039      	movs	r1, r7
 8003866:	f7fe fd4f 	bl	8002308 <__aeabi_dmul>
 800386a:	0002      	movs	r2, r0
 800386c:	000b      	movs	r3, r1
 800386e:	0020      	movs	r0, r4
 8003870:	0029      	movs	r1, r5
 8003872:	f7fe ffb5 	bl	80027e0 <__aeabi_dsub>
 8003876:	f7ff fc37 	bl	80030e8 <__aeabi_d2f>
 800387a:	4643      	mov	r3, r8
				P[i + j * 6] += Qw[i + j * 3] * dtdtdt3;
 800387c:	22b8      	movs	r2, #184	; 0xb8
				P[i + j * 6] -= Qw[i - 3 + j * 3] * dtdt2;
 800387e:	6318      	str	r0, [r3, #48]	; 0x30
				P[i + j * 6] += Qw[i + j * 3] * dtdtdt3;
 8003880:	5898      	ldr	r0, [r3, r2]
 8003882:	f7ff fbe9 	bl	8003058 <__aeabi_f2d>
 8003886:	900e      	str	r0, [sp, #56]	; 0x38
 8003888:	910f      	str	r1, [sp, #60]	; 0x3c
 800388a:	4641      	mov	r1, r8
 800388c:	6b48      	ldr	r0, [r1, #52]	; 0x34
 800388e:	f7ff fbe3 	bl	8003058 <__aeabi_f2d>
 8003892:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003894:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003896:	0004      	movs	r4, r0
 8003898:	000d      	movs	r5, r1
 800389a:	9800      	ldr	r0, [sp, #0]
 800389c:	9901      	ldr	r1, [sp, #4]
 800389e:	f7fe fd33 	bl	8002308 <__aeabi_dmul>
 80038a2:	0002      	movs	r2, r0
 80038a4:	000b      	movs	r3, r1
 80038a6:	0020      	movs	r0, r4
 80038a8:	0029      	movs	r1, r5
 80038aa:	f7fd fdbd 	bl	8001428 <__aeabi_dadd>
 80038ae:	f7ff fc1b 	bl	80030e8 <__aeabi_d2f>
 80038b2:	4643      	mov	r3, r8
 80038b4:	22bc      	movs	r2, #188	; 0xbc
 80038b6:	6358      	str	r0, [r3, #52]	; 0x34
 80038b8:	5898      	ldr	r0, [r3, r2]
 80038ba:	f7ff fbcd 	bl	8003058 <__aeabi_f2d>
 80038be:	9010      	str	r0, [sp, #64]	; 0x40
 80038c0:	9111      	str	r1, [sp, #68]	; 0x44
 80038c2:	4641      	mov	r1, r8
 80038c4:	6b88      	ldr	r0, [r1, #56]	; 0x38
 80038c6:	f7ff fbc7 	bl	8003058 <__aeabi_f2d>
 80038ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80038cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80038ce:	0004      	movs	r4, r0
 80038d0:	000d      	movs	r5, r1
 80038d2:	9800      	ldr	r0, [sp, #0]
 80038d4:	9901      	ldr	r1, [sp, #4]
 80038d6:	f7fe fd17 	bl	8002308 <__aeabi_dmul>
 80038da:	0002      	movs	r2, r0
 80038dc:	000b      	movs	r3, r1
 80038de:	0020      	movs	r0, r4
 80038e0:	0029      	movs	r1, r5
 80038e2:	f7fd fda1 	bl	8001428 <__aeabi_dadd>
 80038e6:	f7ff fbff 	bl	80030e8 <__aeabi_d2f>
 80038ea:	4644      	mov	r4, r8
 80038ec:	23c0      	movs	r3, #192	; 0xc0
 80038ee:	63a0      	str	r0, [r4, #56]	; 0x38
 80038f0:	58e0      	ldr	r0, [r4, r3]
 80038f2:	f7ff fbb1 	bl	8003058 <__aeabi_f2d>
 80038f6:	9012      	str	r0, [sp, #72]	; 0x48
 80038f8:	9113      	str	r1, [sp, #76]	; 0x4c
 80038fa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80038fc:	f7ff fbac 	bl	8003058 <__aeabi_f2d>
 8003900:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003902:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003904:	0004      	movs	r4, r0
 8003906:	000d      	movs	r5, r1
 8003908:	9800      	ldr	r0, [sp, #0]
 800390a:	9901      	ldr	r1, [sp, #4]
 800390c:	f7fe fcfc 	bl	8002308 <__aeabi_dmul>
 8003910:	000b      	movs	r3, r1
 8003912:	0002      	movs	r2, r0
 8003914:	0029      	movs	r1, r5
 8003916:	0020      	movs	r0, r4
 8003918:	f7fd fd86 	bl	8001428 <__aeabi_dadd>
 800391c:	f7ff fbe4 	bl	80030e8 <__aeabi_d2f>
 8003920:	4642      	mov	r2, r8
 8003922:	63d0      	str	r0, [r2, #60]	; 0x3c
				P[i + j * 6] -= Qw[i - 3 + j * 3] * dtdt2;
 8003924:	6c10      	ldr	r0, [r2, #64]	; 0x40
 8003926:	f7ff fb97 	bl	8003058 <__aeabi_f2d>
 800392a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800392c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800392e:	0004      	movs	r4, r0
 8003930:	000d      	movs	r5, r1
 8003932:	0030      	movs	r0, r6
 8003934:	0039      	movs	r1, r7
 8003936:	f7fe fce7 	bl	8002308 <__aeabi_dmul>
 800393a:	0002      	movs	r2, r0
 800393c:	000b      	movs	r3, r1
 800393e:	0020      	movs	r0, r4
 8003940:	0029      	movs	r1, r5
 8003942:	f7fe ff4d 	bl	80027e0 <__aeabi_dsub>
 8003946:	f7ff fbcf 	bl	80030e8 <__aeabi_d2f>
 800394a:	4641      	mov	r1, r8
 800394c:	6408      	str	r0, [r1, #64]	; 0x40
 800394e:	6c48      	ldr	r0, [r1, #68]	; 0x44
 8003950:	f7ff fb82 	bl	8003058 <__aeabi_f2d>
 8003954:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003956:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003958:	0004      	movs	r4, r0
 800395a:	000d      	movs	r5, r1
 800395c:	0030      	movs	r0, r6
 800395e:	0039      	movs	r1, r7
 8003960:	f7fe fcd2 	bl	8002308 <__aeabi_dmul>
 8003964:	e008      	b.n	8003978 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x3f8>
 8003966:	46c0      	nop			; (mov r8, r8)
 8003968:	fffffd5c 	.word	0xfffffd5c
 800396c:	3fe00000 	.word	0x3fe00000
 8003970:	3fd55555 	.word	0x3fd55555
 8003974:	55555555 	.word	0x55555555
 8003978:	0002      	movs	r2, r0
 800397a:	000b      	movs	r3, r1
 800397c:	0020      	movs	r0, r4
 800397e:	0029      	movs	r1, r5
 8003980:	f7fe ff2e 	bl	80027e0 <__aeabi_dsub>
 8003984:	f7ff fbb0 	bl	80030e8 <__aeabi_d2f>
 8003988:	4643      	mov	r3, r8
 800398a:	6458      	str	r0, [r3, #68]	; 0x44
 800398c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800398e:	f7ff fb63 	bl	8003058 <__aeabi_f2d>
 8003992:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003994:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003996:	0004      	movs	r4, r0
 8003998:	000d      	movs	r5, r1
 800399a:	0030      	movs	r0, r6
 800399c:	0039      	movs	r1, r7
 800399e:	f7fe fcb3 	bl	8002308 <__aeabi_dmul>
 80039a2:	000b      	movs	r3, r1
 80039a4:	0002      	movs	r2, r0
 80039a6:	0029      	movs	r1, r5
 80039a8:	0020      	movs	r0, r4
 80039aa:	f7fe ff19 	bl	80027e0 <__aeabi_dsub>
 80039ae:	f7ff fb9b 	bl	80030e8 <__aeabi_d2f>
 80039b2:	4642      	mov	r2, r8
 80039b4:	6490      	str	r0, [r2, #72]	; 0x48
				P[i + j * 6] += Qw[i + j * 3] * dtdtdt3;
 80039b6:	20c4      	movs	r0, #196	; 0xc4
 80039b8:	5810      	ldr	r0, [r2, r0]
 80039ba:	f7ff fb4d 	bl	8003058 <__aeabi_f2d>
 80039be:	4644      	mov	r4, r8
 80039c0:	900e      	str	r0, [sp, #56]	; 0x38
 80039c2:	910f      	str	r1, [sp, #60]	; 0x3c
 80039c4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80039c6:	f7ff fb47 	bl	8003058 <__aeabi_f2d>
 80039ca:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80039cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80039ce:	0004      	movs	r4, r0
 80039d0:	000d      	movs	r5, r1
 80039d2:	9800      	ldr	r0, [sp, #0]
 80039d4:	9901      	ldr	r1, [sp, #4]
 80039d6:	f7fe fc97 	bl	8002308 <__aeabi_dmul>
 80039da:	000b      	movs	r3, r1
 80039dc:	0002      	movs	r2, r0
 80039de:	0029      	movs	r1, r5
 80039e0:	0020      	movs	r0, r4
 80039e2:	f7fd fd21 	bl	8001428 <__aeabi_dadd>
 80039e6:	f7ff fb7f 	bl	80030e8 <__aeabi_d2f>
 80039ea:	4641      	mov	r1, r8
 80039ec:	22c8      	movs	r2, #200	; 0xc8
 80039ee:	64c8      	str	r0, [r1, #76]	; 0x4c
 80039f0:	5888      	ldr	r0, [r1, r2]
 80039f2:	f7ff fb31 	bl	8003058 <__aeabi_f2d>
 80039f6:	9010      	str	r0, [sp, #64]	; 0x40
 80039f8:	9111      	str	r1, [sp, #68]	; 0x44
 80039fa:	4640      	mov	r0, r8
 80039fc:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80039fe:	f7ff fb2b 	bl	8003058 <__aeabi_f2d>
 8003a02:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003a04:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003a06:	0004      	movs	r4, r0
 8003a08:	000d      	movs	r5, r1
 8003a0a:	9800      	ldr	r0, [sp, #0]
 8003a0c:	9901      	ldr	r1, [sp, #4]
 8003a0e:	f7fe fc7b 	bl	8002308 <__aeabi_dmul>
 8003a12:	0002      	movs	r2, r0
 8003a14:	000b      	movs	r3, r1
 8003a16:	0020      	movs	r0, r4
 8003a18:	0029      	movs	r1, r5
 8003a1a:	f7fd fd05 	bl	8001428 <__aeabi_dadd>
 8003a1e:	f7ff fb63 	bl	80030e8 <__aeabi_d2f>
 8003a22:	4641      	mov	r1, r8
 8003a24:	23cc      	movs	r3, #204	; 0xcc
 8003a26:	6508      	str	r0, [r1, #80]	; 0x50
 8003a28:	58c8      	ldr	r0, [r1, r3]
 8003a2a:	f7ff fb15 	bl	8003058 <__aeabi_f2d>
 8003a2e:	4645      	mov	r5, r8
 8003a30:	9012      	str	r0, [sp, #72]	; 0x48
 8003a32:	9113      	str	r1, [sp, #76]	; 0x4c
 8003a34:	6d68      	ldr	r0, [r5, #84]	; 0x54
 8003a36:	f7ff fb0f 	bl	8003058 <__aeabi_f2d>
 8003a3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003a3c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003a3e:	0004      	movs	r4, r0
 8003a40:	000d      	movs	r5, r1
 8003a42:	9800      	ldr	r0, [sp, #0]
 8003a44:	9901      	ldr	r1, [sp, #4]
 8003a46:	f7fe fc5f 	bl	8002308 <__aeabi_dmul>
 8003a4a:	000b      	movs	r3, r1
 8003a4c:	0002      	movs	r2, r0
 8003a4e:	0029      	movs	r1, r5
 8003a50:	0020      	movs	r0, r4
 8003a52:	f7fd fce9 	bl	8001428 <__aeabi_dadd>
 8003a56:	f7ff fb47 	bl	80030e8 <__aeabi_d2f>
 8003a5a:	4642      	mov	r2, r8
 8003a5c:	6550      	str	r0, [r2, #84]	; 0x54
				P[i + j * 6] -= Qw[i - 3 + j * 3] * dtdt2;
 8003a5e:	6d90      	ldr	r0, [r2, #88]	; 0x58
 8003a60:	f7ff fafa 	bl	8003058 <__aeabi_f2d>
 8003a64:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003a66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003a68:	0004      	movs	r4, r0
 8003a6a:	000d      	movs	r5, r1
 8003a6c:	0030      	movs	r0, r6
 8003a6e:	0039      	movs	r1, r7
 8003a70:	f7fe fc4a 	bl	8002308 <__aeabi_dmul>
 8003a74:	0002      	movs	r2, r0
 8003a76:	000b      	movs	r3, r1
 8003a78:	0020      	movs	r0, r4
 8003a7a:	0029      	movs	r1, r5
 8003a7c:	f7fe feb0 	bl	80027e0 <__aeabi_dsub>
 8003a80:	f7ff fb32 	bl	80030e8 <__aeabi_d2f>
 8003a84:	4641      	mov	r1, r8
 8003a86:	6588      	str	r0, [r1, #88]	; 0x58
 8003a88:	6dc8      	ldr	r0, [r1, #92]	; 0x5c
 8003a8a:	f7ff fae5 	bl	8003058 <__aeabi_f2d>
 8003a8e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003a90:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003a92:	0004      	movs	r4, r0
 8003a94:	000d      	movs	r5, r1
 8003a96:	0030      	movs	r0, r6
 8003a98:	0039      	movs	r1, r7
 8003a9a:	f7fe fc35 	bl	8002308 <__aeabi_dmul>
 8003a9e:	0002      	movs	r2, r0
 8003aa0:	000b      	movs	r3, r1
 8003aa2:	0020      	movs	r0, r4
 8003aa4:	0029      	movs	r1, r5
 8003aa6:	f7fe fe9b 	bl	80027e0 <__aeabi_dsub>
 8003aaa:	f7ff fb1d 	bl	80030e8 <__aeabi_d2f>
 8003aae:	4643      	mov	r3, r8
 8003ab0:	65d8      	str	r0, [r3, #92]	; 0x5c
 8003ab2:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8003ab4:	f7ff fad0 	bl	8003058 <__aeabi_f2d>
 8003ab8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003aba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003abc:	0004      	movs	r4, r0
 8003abe:	000d      	movs	r5, r1
 8003ac0:	0030      	movs	r0, r6
 8003ac2:	0039      	movs	r1, r7
 8003ac4:	f7fe fc20 	bl	8002308 <__aeabi_dmul>
 8003ac8:	000b      	movs	r3, r1
 8003aca:	0002      	movs	r2, r0
 8003acc:	0029      	movs	r1, r5
 8003ace:	0020      	movs	r0, r4
 8003ad0:	f7fe fe86 	bl	80027e0 <__aeabi_dsub>
 8003ad4:	f7ff fb08 	bl	80030e8 <__aeabi_d2f>
 8003ad8:	4642      	mov	r2, r8
 8003ada:	6610      	str	r0, [r2, #96]	; 0x60
			}
		}

		for (int j = 3; j < 6; j++) {
			for (int i = 0; i < 3; i++){
				P[i + j * 6] -= Qw[i + (j - 3) * 3] * dtdt2;
 8003adc:	4650      	mov	r0, sl
 8003ade:	5811      	ldr	r1, [r2, r0]
 8003ae0:	6e50      	ldr	r0, [r2, #100]	; 0x64
 8003ae2:	468a      	mov	sl, r1
 8003ae4:	f7ff fab8 	bl	8003058 <__aeabi_f2d>
 8003ae8:	0004      	movs	r4, r0
 8003aea:	4650      	mov	r0, sl
 8003aec:	000d      	movs	r5, r1
 8003aee:	f7ff fab3 	bl	8003058 <__aeabi_f2d>
 8003af2:	0032      	movs	r2, r6
 8003af4:	003b      	movs	r3, r7
 8003af6:	f7fe fc07 	bl	8002308 <__aeabi_dmul>
 8003afa:	000b      	movs	r3, r1
 8003afc:	0002      	movs	r2, r0
 8003afe:	0029      	movs	r1, r5
 8003b00:	0020      	movs	r0, r4
 8003b02:	f7fe fe6d 	bl	80027e0 <__aeabi_dsub>
 8003b06:	f7ff faef 	bl	80030e8 <__aeabi_d2f>
 8003b0a:	4642      	mov	r2, r8
 8003b0c:	6650      	str	r0, [r2, #100]	; 0x64
 8003b0e:	4648      	mov	r0, r9
 8003b10:	5811      	ldr	r1, [r2, r0]
 8003b12:	6e90      	ldr	r0, [r2, #104]	; 0x68
 8003b14:	4689      	mov	r9, r1
 8003b16:	f7ff fa9f 	bl	8003058 <__aeabi_f2d>
 8003b1a:	0004      	movs	r4, r0
 8003b1c:	4648      	mov	r0, r9
 8003b1e:	000d      	movs	r5, r1
 8003b20:	f7ff fa9a 	bl	8003058 <__aeabi_f2d>
 8003b24:	0032      	movs	r2, r6
 8003b26:	003b      	movs	r3, r7
 8003b28:	f7fe fbee 	bl	8002308 <__aeabi_dmul>
 8003b2c:	000b      	movs	r3, r1
 8003b2e:	0002      	movs	r2, r0
 8003b30:	0029      	movs	r1, r5
 8003b32:	0020      	movs	r0, r4
 8003b34:	f7fe fe54 	bl	80027e0 <__aeabi_dsub>
 8003b38:	f7ff fad6 	bl	80030e8 <__aeabi_d2f>
 8003b3c:	4642      	mov	r2, r8
 8003b3e:	6690      	str	r0, [r2, #104]	; 0x68
 8003b40:	20b4      	movs	r0, #180	; 0xb4
 8003b42:	5811      	ldr	r1, [r2, r0]
 8003b44:	6ed0      	ldr	r0, [r2, #108]	; 0x6c
 8003b46:	9100      	str	r1, [sp, #0]
 8003b48:	f7ff fa86 	bl	8003058 <__aeabi_f2d>
 8003b4c:	0004      	movs	r4, r0
 8003b4e:	9800      	ldr	r0, [sp, #0]
 8003b50:	000d      	movs	r5, r1
 8003b52:	f7ff fa81 	bl	8003058 <__aeabi_f2d>
 8003b56:	0032      	movs	r2, r6
 8003b58:	003b      	movs	r3, r7
 8003b5a:	f7fe fbd5 	bl	8002308 <__aeabi_dmul>
 8003b5e:	000b      	movs	r3, r1
 8003b60:	0002      	movs	r2, r0
 8003b62:	0029      	movs	r1, r5
 8003b64:	0020      	movs	r0, r4
 8003b66:	f7fe fe3b 	bl	80027e0 <__aeabi_dsub>
 8003b6a:	f7ff fabd 	bl	80030e8 <__aeabi_d2f>
 8003b6e:	4642      	mov	r2, r8
			}
			for (int i = 3; i < 6; i++){
				P[i + j * 6] += Qw[i - 3 + (j - 3) * 3] * dt;
 8003b70:	4659      	mov	r1, fp
				P[i + j * 6] -= Qw[i + (j - 3) * 3] * dtdt2;
 8003b72:	66d0      	str	r0, [r2, #108]	; 0x6c
				P[i + j * 6] += Qw[i - 3 + (j - 3) * 3] * dt;
 8003b74:	4650      	mov	r0, sl
 8003b76:	f7fd f8bd 	bl	8000cf4 <__aeabi_fmul>
 8003b7a:	1c01      	adds	r1, r0, #0
 8003b7c:	4640      	mov	r0, r8
 8003b7e:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8003b80:	f7fc fd52 	bl	8000628 <__aeabi_fadd>
 8003b84:	4641      	mov	r1, r8
 8003b86:	6708      	str	r0, [r1, #112]	; 0x70
 8003b88:	4659      	mov	r1, fp
 8003b8a:	4648      	mov	r0, r9
 8003b8c:	f7fd f8b2 	bl	8000cf4 <__aeabi_fmul>
 8003b90:	4643      	mov	r3, r8
 8003b92:	1c01      	adds	r1, r0, #0
 8003b94:	6f58      	ldr	r0, [r3, #116]	; 0x74
 8003b96:	f7fc fd47 	bl	8000628 <__aeabi_fadd>
 8003b9a:	4644      	mov	r4, r8
 8003b9c:	4659      	mov	r1, fp
 8003b9e:	6760      	str	r0, [r4, #116]	; 0x74
 8003ba0:	9800      	ldr	r0, [sp, #0]
 8003ba2:	f7fd f8a7 	bl	8000cf4 <__aeabi_fmul>
 8003ba6:	1c01      	adds	r1, r0, #0
 8003ba8:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8003baa:	f7fc fd3d 	bl	8000628 <__aeabi_fadd>
				P[i + j * 6] -= Qw[i + (j - 3) * 3] * dtdt2;
 8003bae:	22b8      	movs	r2, #184	; 0xb8
				P[i + j * 6] += Qw[i - 3 + (j - 3) * 3] * dt;
 8003bb0:	67a0      	str	r0, [r4, #120]	; 0x78
				P[i + j * 6] -= Qw[i + (j - 3) * 3] * dtdt2;
 8003bb2:	58a0      	ldr	r0, [r4, r2]
 8003bb4:	4682      	mov	sl, r0
 8003bb6:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 8003bb8:	f7ff fa4e 	bl	8003058 <__aeabi_f2d>
 8003bbc:	0004      	movs	r4, r0
 8003bbe:	4650      	mov	r0, sl
 8003bc0:	000d      	movs	r5, r1
 8003bc2:	f7ff fa49 	bl	8003058 <__aeabi_f2d>
 8003bc6:	0032      	movs	r2, r6
 8003bc8:	003b      	movs	r3, r7
 8003bca:	f7fe fb9d 	bl	8002308 <__aeabi_dmul>
 8003bce:	0002      	movs	r2, r0
 8003bd0:	000b      	movs	r3, r1
 8003bd2:	0020      	movs	r0, r4
 8003bd4:	0029      	movs	r1, r5
 8003bd6:	f7fe fe03 	bl	80027e0 <__aeabi_dsub>
 8003bda:	f7ff fa85 	bl	80030e8 <__aeabi_d2f>
 8003bde:	4642      	mov	r2, r8
 8003be0:	21bc      	movs	r1, #188	; 0xbc
 8003be2:	2380      	movs	r3, #128	; 0x80
 8003be4:	67d0      	str	r0, [r2, #124]	; 0x7c
 8003be6:	5850      	ldr	r0, [r2, r1]
 8003be8:	4681      	mov	r9, r0
 8003bea:	58d0      	ldr	r0, [r2, r3]
 8003bec:	f7ff fa34 	bl	8003058 <__aeabi_f2d>
 8003bf0:	0004      	movs	r4, r0
 8003bf2:	4648      	mov	r0, r9
 8003bf4:	000d      	movs	r5, r1
 8003bf6:	f7ff fa2f 	bl	8003058 <__aeabi_f2d>
 8003bfa:	0032      	movs	r2, r6
 8003bfc:	003b      	movs	r3, r7
 8003bfe:	f7fe fb83 	bl	8002308 <__aeabi_dmul>
 8003c02:	0002      	movs	r2, r0
 8003c04:	000b      	movs	r3, r1
 8003c06:	0020      	movs	r0, r4
 8003c08:	0029      	movs	r1, r5
 8003c0a:	f7fe fde9 	bl	80027e0 <__aeabi_dsub>
 8003c0e:	f7ff fa6b 	bl	80030e8 <__aeabi_d2f>
 8003c12:	4642      	mov	r2, r8
 8003c14:	2180      	movs	r1, #128	; 0x80
 8003c16:	5050      	str	r0, [r2, r1]
 8003c18:	20c0      	movs	r0, #192	; 0xc0
 8003c1a:	2584      	movs	r5, #132	; 0x84
 8003c1c:	5813      	ldr	r3, [r2, r0]
 8003c1e:	5950      	ldr	r0, [r2, r5]
 8003c20:	9300      	str	r3, [sp, #0]
 8003c22:	f7ff fa19 	bl	8003058 <__aeabi_f2d>
 8003c26:	0004      	movs	r4, r0
 8003c28:	9800      	ldr	r0, [sp, #0]
 8003c2a:	000d      	movs	r5, r1
 8003c2c:	f7ff fa14 	bl	8003058 <__aeabi_f2d>
 8003c30:	0032      	movs	r2, r6
 8003c32:	003b      	movs	r3, r7
 8003c34:	f7fe fb68 	bl	8002308 <__aeabi_dmul>
 8003c38:	000b      	movs	r3, r1
 8003c3a:	0002      	movs	r2, r0
 8003c3c:	0029      	movs	r1, r5
 8003c3e:	0020      	movs	r0, r4
 8003c40:	f7fe fdce 	bl	80027e0 <__aeabi_dsub>
 8003c44:	f7ff fa50 	bl	80030e8 <__aeabi_d2f>
 8003c48:	4642      	mov	r2, r8
 8003c4a:	2184      	movs	r1, #132	; 0x84
 8003c4c:	5050      	str	r0, [r2, r1]
				P[i + j * 6] += Qw[i - 3 + (j - 3) * 3] * dt;
 8003c4e:	4659      	mov	r1, fp
 8003c50:	4650      	mov	r0, sl
 8003c52:	f7fd f84f 	bl	8000cf4 <__aeabi_fmul>
 8003c56:	2488      	movs	r4, #136	; 0x88
 8003c58:	1c01      	adds	r1, r0, #0
 8003c5a:	4640      	mov	r0, r8
 8003c5c:	5900      	ldr	r0, [r0, r4]
 8003c5e:	f7fc fce3 	bl	8000628 <__aeabi_fadd>
 8003c62:	4645      	mov	r5, r8
 8003c64:	4649      	mov	r1, r9
 8003c66:	5128      	str	r0, [r5, r4]
 8003c68:	4658      	mov	r0, fp
 8003c6a:	f7fd f843 	bl	8000cf4 <__aeabi_fmul>
 8003c6e:	3404      	adds	r4, #4
 8003c70:	1c01      	adds	r1, r0, #0
 8003c72:	5928      	ldr	r0, [r5, r4]
 8003c74:	f7fc fcd8 	bl	8000628 <__aeabi_fadd>
 8003c78:	4659      	mov	r1, fp
 8003c7a:	5128      	str	r0, [r5, r4]
 8003c7c:	9800      	ldr	r0, [sp, #0]
 8003c7e:	f7fd f839 	bl	8000cf4 <__aeabi_fmul>
 8003c82:	2490      	movs	r4, #144	; 0x90
 8003c84:	1c01      	adds	r1, r0, #0
 8003c86:	5928      	ldr	r0, [r5, r4]
 8003c88:	f7fc fcce 	bl	8000628 <__aeabi_fadd>
				P[i + j * 6] -= Qw[i + (j - 3) * 3] * dtdt2;
 8003c8c:	21c4      	movs	r1, #196	; 0xc4
				P[i + j * 6] += Qw[i - 3 + (j - 3) * 3] * dt;
 8003c8e:	5128      	str	r0, [r5, r4]
				P[i + j * 6] -= Qw[i + (j - 3) * 3] * dtdt2;
 8003c90:	5868      	ldr	r0, [r5, r1]
 8003c92:	3930      	subs	r1, #48	; 0x30
 8003c94:	4682      	mov	sl, r0
 8003c96:	5868      	ldr	r0, [r5, r1]
 8003c98:	f7ff f9de 	bl	8003058 <__aeabi_f2d>
 8003c9c:	0004      	movs	r4, r0
 8003c9e:	4650      	mov	r0, sl
 8003ca0:	000d      	movs	r5, r1
 8003ca2:	f7ff f9d9 	bl	8003058 <__aeabi_f2d>
 8003ca6:	0032      	movs	r2, r6
 8003ca8:	003b      	movs	r3, r7
 8003caa:	f7fe fb2d 	bl	8002308 <__aeabi_dmul>
 8003cae:	0002      	movs	r2, r0
 8003cb0:	000b      	movs	r3, r1
 8003cb2:	0020      	movs	r0, r4
 8003cb4:	0029      	movs	r1, r5
 8003cb6:	f7fe fd93 	bl	80027e0 <__aeabi_dsub>
 8003cba:	f7ff fa15 	bl	80030e8 <__aeabi_d2f>
 8003cbe:	4643      	mov	r3, r8
 8003cc0:	2294      	movs	r2, #148	; 0x94
 8003cc2:	21c8      	movs	r1, #200	; 0xc8
 8003cc4:	2598      	movs	r5, #152	; 0x98
 8003cc6:	5098      	str	r0, [r3, r2]
 8003cc8:	5858      	ldr	r0, [r3, r1]
 8003cca:	4681      	mov	r9, r0
 8003ccc:	5958      	ldr	r0, [r3, r5]
 8003cce:	f7ff f9c3 	bl	8003058 <__aeabi_f2d>
 8003cd2:	0004      	movs	r4, r0
 8003cd4:	4648      	mov	r0, r9
 8003cd6:	000d      	movs	r5, r1
 8003cd8:	f7ff f9be 	bl	8003058 <__aeabi_f2d>
 8003cdc:	0032      	movs	r2, r6
 8003cde:	003b      	movs	r3, r7
 8003ce0:	f7fe fb12 	bl	8002308 <__aeabi_dmul>
 8003ce4:	0002      	movs	r2, r0
 8003ce6:	000b      	movs	r3, r1
 8003ce8:	0020      	movs	r0, r4
 8003cea:	0029      	movs	r1, r5
 8003cec:	f7fe fd78 	bl	80027e0 <__aeabi_dsub>
 8003cf0:	f7ff f9fa 	bl	80030e8 <__aeabi_d2f>
 8003cf4:	4643      	mov	r3, r8
 8003cf6:	2298      	movs	r2, #152	; 0x98
 8003cf8:	21cc      	movs	r1, #204	; 0xcc
 8003cfa:	249c      	movs	r4, #156	; 0x9c
 8003cfc:	5098      	str	r0, [r3, r2]
 8003cfe:	5858      	ldr	r0, [r3, r1]
 8003d00:	9000      	str	r0, [sp, #0]
 8003d02:	5918      	ldr	r0, [r3, r4]
 8003d04:	f7ff f9a8 	bl	8003058 <__aeabi_f2d>
 8003d08:	0004      	movs	r4, r0
 8003d0a:	9800      	ldr	r0, [sp, #0]
 8003d0c:	000d      	movs	r5, r1
 8003d0e:	f7ff f9a3 	bl	8003058 <__aeabi_f2d>
 8003d12:	0032      	movs	r2, r6
 8003d14:	003b      	movs	r3, r7
 8003d16:	f7fe faf7 	bl	8002308 <__aeabi_dmul>
 8003d1a:	000b      	movs	r3, r1
 8003d1c:	0002      	movs	r2, r0
 8003d1e:	0029      	movs	r1, r5
 8003d20:	0020      	movs	r0, r4
 8003d22:	f7fe fd5d 	bl	80027e0 <__aeabi_dsub>
 8003d26:	f7ff f9df 	bl	80030e8 <__aeabi_d2f>
 8003d2a:	4647      	mov	r7, r8
 8003d2c:	269c      	movs	r6, #156	; 0x9c
				P[i + j * 6] += Qw[i - 3 + (j - 3) * 3] * dt;
 8003d2e:	4651      	mov	r1, sl
				P[i + j * 6] -= Qw[i + (j - 3) * 3] * dtdt2;
 8003d30:	51b8      	str	r0, [r7, r6]
				P[i + j * 6] += Qw[i - 3 + (j - 3) * 3] * dt;
 8003d32:	4658      	mov	r0, fp
 8003d34:	f7fc ffde 	bl	8000cf4 <__aeabi_fmul>
 8003d38:	3604      	adds	r6, #4
 8003d3a:	1c01      	adds	r1, r0, #0
 8003d3c:	59b8      	ldr	r0, [r7, r6]
 8003d3e:	f7fc fc73 	bl	8000628 <__aeabi_fadd>
 8003d42:	21a4      	movs	r1, #164	; 0xa4
 8003d44:	468a      	mov	sl, r1
 8003d46:	51b8      	str	r0, [r7, r6]
 8003d48:	4649      	mov	r1, r9
 8003d4a:	4658      	mov	r0, fp
 8003d4c:	f7fc ffd2 	bl	8000cf4 <__aeabi_fmul>
 8003d50:	4654      	mov	r4, sl
 8003d52:	1c01      	adds	r1, r0, #0
 8003d54:	5938      	ldr	r0, [r7, r4]
 8003d56:	f7fc fc67 	bl	8000628 <__aeabi_fadd>
 8003d5a:	9900      	ldr	r1, [sp, #0]
 8003d5c:	5138      	str	r0, [r7, r4]
 8003d5e:	4658      	mov	r0, fp
 8003d60:	f7fc ffc8 	bl	8000cf4 <__aeabi_fmul>
 8003d64:	26a8      	movs	r6, #168	; 0xa8
 8003d66:	1c01      	adds	r1, r0, #0
 8003d68:	59b8      	ldr	r0, [r7, r6]
 8003d6a:	f7fc fc5d 	bl	8000628 <__aeabi_fadd>
		F[5] += F[5];
		F[6] += F[6];
		F[7] += F[7];
		F[8] += F[8] + 1.0;

		float M[36] = {0};
 8003d6e:	2280      	movs	r2, #128	; 0x80
				P[i + j * 6] += Qw[i - 3 + (j - 3) * 3] * dt;
 8003d70:	51b8      	str	r0, [r7, r6]
		float M[36] = {0};
 8003d72:	2100      	movs	r1, #0
 8003d74:	a863      	add	r0, sp, #396	; 0x18c
 8003d76:	f007 f959 	bl	800b02c <memset>
		M[0] = F[0];
		M[1] = F[1];
 8003d7a:	9f04      	ldr	r7, [sp, #16]
				P[i + j * 6] += Qw[i - 3 + (j - 3) * 3] * dt;
 8003d7c:	46b1      	mov	r9, r6
		M[2] = F[2];
//		M[3] = 0.0;
//		M[4] = 0.0;
//		M[5] = 0.0;
		M[6] = F[3];
 8003d7e:	9e09      	ldr	r6, [sp, #36]	; 0x24
		M[1] = F[1];
 8003d80:	9761      	str	r7, [sp, #388]	; 0x184
//		M[9] = 0.0;
//		M[10] = 0.0;
//		M[11] = 0.0;
		M[12] = F[6];
		M[13] = F[7];
		M[14] = F[8];
 8003d82:	9f1a      	ldr	r7, [sp, #104]	; 0x68
		M[6] = F[3];
 8003d84:	9666      	str	r6, [sp, #408]	; 0x198
//		M[16] = 0.0;
//		M[17] = 0.0;
		M[18] = dt;
//		M[19] = 0.0;
//		M[20] = 0.0;
		M[21] = 1.0;
 8003d86:	26fe      	movs	r6, #254	; 0xfe
		M[14] = F[8];
 8003d88:	976e      	str	r7, [sp, #440]	; 0x1b8
//		M[30] = 0.0;
//		M[31] = 0.0;
		M[32] = dt;
//		M[33] = 0.0;
//		M[34] = 0.0;
		M[35] = 1.0;
 8003d8a:	278c      	movs	r7, #140	; 0x8c
		M[8] = F[5];
 8003d8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		M[13] = F[7];
 8003d8e:	9918      	ldr	r1, [sp, #96]	; 0x60
		M[2] = F[2];
 8003d90:	9d06      	ldr	r5, [sp, #24]
		M[7] = F[4];
 8003d92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
		M[8] = F[5];
 8003d94:	9368      	str	r3, [sp, #416]	; 0x1a0
		M[13] = F[7];
 8003d96:	916d      	str	r1, [sp, #436]	; 0x1b4
		M[21] = 1.0;
 8003d98:	05b3      	lsls	r3, r6, #22
		M[32] = dt;
 8003d9a:	a960      	add	r1, sp, #384	; 0x180
		M[35] = 1.0;
 8003d9c:	51cb      	str	r3, [r1, r7]
		M[21] = 1.0;
 8003d9e:	9375      	str	r3, [sp, #468]	; 0x1d4
		M[28] = 1.0;
 8003da0:	937c      	str	r3, [sp, #496]	; 0x1f0
		float S[36];
		for (int i = 0; i < 6; i++) {
			for (int j = 0; j < 6; j++) {
				float sum = 0.0;
				for (int k = 0; k < 6; k++) {
					sum += P[i + k * 6] * M[j + k * 6];
 8003da2:	4643      	mov	r3, r8
		M[2] = F[2];
 8003da4:	9562      	str	r5, [sp, #392]	; 0x188
		M[7] = F[4];
 8003da6:	9267      	str	r2, [sp, #412]	; 0x19c
		M[18] = dt;
 8003da8:	465d      	mov	r5, fp
		M[32] = dt;
 8003daa:	2280      	movs	r2, #128	; 0x80
					sum += P[i + k * 6] * M[j + k * 6];
 8003dac:	69de      	ldr	r6, [r3, #28]
		M[32] = dt;
 8003dae:	508d      	str	r5, [r1, r2]
		M[0] = F[0];
 8003db0:	9802      	ldr	r0, [sp, #8]
					sum += P[i + k * 6] * M[j + k * 6];
 8003db2:	6e5a      	ldr	r2, [r3, #100]	; 0x64
		M[12] = F[6];
 8003db4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
					sum += P[i + k * 6] * M[j + k * 6];
 8003db6:	1c31      	adds	r1, r6, #0
 8003db8:	9214      	str	r2, [sp, #80]	; 0x50
		M[12] = F[6];
 8003dba:	946c      	str	r4, [sp, #432]	; 0x1b0
		M[18] = dt;
 8003dbc:	9572      	str	r5, [sp, #456]	; 0x1c8
					sum += P[i + k * 6] * M[j + k * 6];
 8003dbe:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
		M[25] = dt;
 8003dc0:	9579      	str	r5, [sp, #484]	; 0x1e4
		M[0] = F[0];
 8003dc2:	9060      	str	r0, [sp, #384]	; 0x180
					sum += P[i + k * 6] * M[j + k * 6];
 8003dc4:	6b5d      	ldr	r5, [r3, #52]	; 0x34
 8003dc6:	f7fc ff95 	bl	8000cf4 <__aeabi_fmul>
 8003dca:	1c29      	adds	r1, r5, #0
 8003dcc:	1c07      	adds	r7, r0, #0
 8003dce:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003dd0:	f7fc ff90 	bl	8000cf4 <__aeabi_fmul>
 8003dd4:	1c01      	adds	r1, r0, #0
 8003dd6:	1c38      	adds	r0, r7, #0
 8003dd8:	f7fc fc26 	bl	8000628 <__aeabi_fadd>
 8003ddc:	9914      	ldr	r1, [sp, #80]	; 0x50
 8003dde:	1c07      	adds	r7, r0, #0
 8003de0:	4658      	mov	r0, fp
 8003de2:	f7fc ff87 	bl	8000cf4 <__aeabi_fmul>
 8003de6:	1c01      	adds	r1, r0, #0
 8003de8:	1c38      	adds	r0, r7, #0
 8003dea:	f7fc fc1d 	bl	8000628 <__aeabi_fadd>
 8003dee:	1c21      	adds	r1, r4, #0
 8003df0:	1c07      	adds	r7, r0, #0
 8003df2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003df4:	f7fc ff7e 	bl	8000cf4 <__aeabi_fmul>
 8003df8:	1c01      	adds	r1, r0, #0
 8003dfa:	1c38      	adds	r0, r7, #0
 8003dfc:	f7fc fc14 	bl	8000628 <__aeabi_fadd>
 8003e00:	2294      	movs	r2, #148	; 0x94
 8003e02:	902d      	str	r0, [sp, #180]	; 0xb4
 8003e04:	4640      	mov	r0, r8
 8003e06:	5887      	ldr	r7, [r0, r2]
 8003e08:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
 8003e0a:	1c31      	adds	r1, r6, #0
 8003e0c:	9804      	ldr	r0, [sp, #16]
 8003e0e:	9316      	str	r3, [sp, #88]	; 0x58
 8003e10:	9719      	str	r7, [sp, #100]	; 0x64
 8003e12:	f7fc ff6f 	bl	8000cf4 <__aeabi_fmul>
 8003e16:	1c29      	adds	r1, r5, #0
 8003e18:	1c07      	adds	r7, r0, #0
 8003e1a:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003e1c:	f7fc ff6a 	bl	8000cf4 <__aeabi_fmul>
 8003e20:	1c01      	adds	r1, r0, #0
 8003e22:	1c38      	adds	r0, r7, #0
 8003e24:	f7fc fc00 	bl	8000628 <__aeabi_fadd>
 8003e28:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003e2a:	1c07      	adds	r7, r0, #0
 8003e2c:	4658      	mov	r0, fp
 8003e2e:	f7fc ff61 	bl	8000cf4 <__aeabi_fmul>
 8003e32:	1c01      	adds	r1, r0, #0
 8003e34:	1c38      	adds	r0, r7, #0
 8003e36:	f7fc fbf7 	bl	8000628 <__aeabi_fadd>
 8003e3a:	1c21      	adds	r1, r4, #0
 8003e3c:	1c07      	adds	r7, r0, #0
 8003e3e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003e40:	f7fc ff58 	bl	8000cf4 <__aeabi_fmul>
 8003e44:	1c01      	adds	r1, r0, #0
 8003e46:	1c38      	adds	r0, r7, #0
 8003e48:	f7fc fbee 	bl	8000628 <__aeabi_fadd>
 8003e4c:	1c31      	adds	r1, r6, #0
 8003e4e:	902e      	str	r0, [sp, #184]	; 0xb8
 8003e50:	9806      	ldr	r0, [sp, #24]
 8003e52:	f7fc ff4f 	bl	8000cf4 <__aeabi_fmul>
 8003e56:	1c29      	adds	r1, r5, #0
 8003e58:	1c06      	adds	r6, r0, #0
 8003e5a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003e5c:	f7fc ff4a 	bl	8000cf4 <__aeabi_fmul>
 8003e60:	1c01      	adds	r1, r0, #0
 8003e62:	1c30      	adds	r0, r6, #0
 8003e64:	f7fc fbe0 	bl	8000628 <__aeabi_fadd>
 8003e68:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003e6a:	1c05      	adds	r5, r0, #0
 8003e6c:	4658      	mov	r0, fp
 8003e6e:	f7fc ff41 	bl	8000cf4 <__aeabi_fmul>
 8003e72:	1c01      	adds	r1, r0, #0
 8003e74:	1c28      	adds	r0, r5, #0
 8003e76:	f7fc fbd7 	bl	8000628 <__aeabi_fadd>
 8003e7a:	1c21      	adds	r1, r4, #0
 8003e7c:	1c07      	adds	r7, r0, #0
 8003e7e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003e80:	f7fc ff38 	bl	8000cf4 <__aeabi_fmul>
 8003e84:	1c01      	adds	r1, r0, #0
 8003e86:	1c38      	adds	r0, r7, #0
 8003e88:	f7fc fbce 	bl	8000628 <__aeabi_fadd>
 8003e8c:	4644      	mov	r4, r8
 8003e8e:	9030      	str	r0, [sp, #192]	; 0xc0
 8003e90:	4640      	mov	r0, r8
 8003e92:	6a26      	ldr	r6, [r4, #32]
 8003e94:	6e83      	ldr	r3, [r0, #104]	; 0x68
 8003e96:	1c31      	adds	r1, r6, #0
 8003e98:	9802      	ldr	r0, [sp, #8]
 8003e9a:	931b      	str	r3, [sp, #108]	; 0x6c
 8003e9c:	f7fc ff2a 	bl	8000cf4 <__aeabi_fmul>
 8003ea0:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8003ea2:	1c07      	adds	r7, r0, #0
 8003ea4:	1c29      	adds	r1, r5, #0
 8003ea6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003ea8:	f7fc ff24 	bl	8000cf4 <__aeabi_fmul>
 8003eac:	1c01      	adds	r1, r0, #0
 8003eae:	1c38      	adds	r0, r7, #0
 8003eb0:	f7fc fbba 	bl	8000628 <__aeabi_fadd>
 8003eb4:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003eb6:	1c07      	adds	r7, r0, #0
 8003eb8:	4658      	mov	r0, fp
 8003eba:	f7fc ff1b 	bl	8000cf4 <__aeabi_fmul>
 8003ebe:	1c01      	adds	r1, r0, #0
 8003ec0:	1c38      	adds	r0, r7, #0
 8003ec2:	f7fc fbb1 	bl	8000628 <__aeabi_fadd>
 8003ec6:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8003ec8:	1c07      	adds	r7, r0, #0
 8003eca:	1c21      	adds	r1, r4, #0
 8003ecc:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003ece:	f7fc ff11 	bl	8000cf4 <__aeabi_fmul>
 8003ed2:	1c01      	adds	r1, r0, #0
 8003ed4:	1c38      	adds	r0, r7, #0
 8003ed6:	f7fc fba7 	bl	8000628 <__aeabi_fadd>
 8003eda:	2280      	movs	r2, #128	; 0x80
 8003edc:	4641      	mov	r1, r8
 8003ede:	2798      	movs	r7, #152	; 0x98
 8003ee0:	9034      	str	r0, [sp, #208]	; 0xd0
 8003ee2:	5888      	ldr	r0, [r1, r2]
 8003ee4:	901c      	str	r0, [sp, #112]	; 0x70
 8003ee6:	59c9      	ldr	r1, [r1, r7]
 8003ee8:	9804      	ldr	r0, [sp, #16]
 8003eea:	911d      	str	r1, [sp, #116]	; 0x74
 8003eec:	1c31      	adds	r1, r6, #0
 8003eee:	f7fc ff01 	bl	8000cf4 <__aeabi_fmul>
 8003ef2:	1c29      	adds	r1, r5, #0
 8003ef4:	1c07      	adds	r7, r0, #0
 8003ef6:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003ef8:	f7fc fefc 	bl	8000cf4 <__aeabi_fmul>
 8003efc:	1c01      	adds	r1, r0, #0
 8003efe:	1c38      	adds	r0, r7, #0
 8003f00:	f7fc fb92 	bl	8000628 <__aeabi_fadd>
 8003f04:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003f06:	1c07      	adds	r7, r0, #0
 8003f08:	4658      	mov	r0, fp
 8003f0a:	f7fc fef3 	bl	8000cf4 <__aeabi_fmul>
 8003f0e:	1c01      	adds	r1, r0, #0
 8003f10:	1c38      	adds	r0, r7, #0
 8003f12:	f7fc fb89 	bl	8000628 <__aeabi_fadd>
 8003f16:	1c21      	adds	r1, r4, #0
 8003f18:	1c07      	adds	r7, r0, #0
 8003f1a:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003f1c:	f7fc feea 	bl	8000cf4 <__aeabi_fmul>
 8003f20:	1c01      	adds	r1, r0, #0
 8003f22:	1c38      	adds	r0, r7, #0
 8003f24:	f7fc fb80 	bl	8000628 <__aeabi_fadd>
 8003f28:	1c31      	adds	r1, r6, #0
 8003f2a:	9032      	str	r0, [sp, #200]	; 0xc8
 8003f2c:	9806      	ldr	r0, [sp, #24]
 8003f2e:	f7fc fee1 	bl	8000cf4 <__aeabi_fmul>
 8003f32:	1c29      	adds	r1, r5, #0
 8003f34:	1c06      	adds	r6, r0, #0
 8003f36:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003f38:	f7fc fedc 	bl	8000cf4 <__aeabi_fmul>
 8003f3c:	1c01      	adds	r1, r0, #0
 8003f3e:	1c30      	adds	r0, r6, #0
 8003f40:	f7fc fb72 	bl	8000628 <__aeabi_fadd>
 8003f44:	991d      	ldr	r1, [sp, #116]	; 0x74
 8003f46:	1c05      	adds	r5, r0, #0
 8003f48:	4658      	mov	r0, fp
 8003f4a:	f7fc fed3 	bl	8000cf4 <__aeabi_fmul>
 8003f4e:	1c01      	adds	r1, r0, #0
 8003f50:	1c28      	adds	r0, r5, #0
 8003f52:	f7fc fb69 	bl	8000628 <__aeabi_fadd>
 8003f56:	1c21      	adds	r1, r4, #0
 8003f58:	1c07      	adds	r7, r0, #0
 8003f5a:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003f5c:	f7fc feca 	bl	8000cf4 <__aeabi_fmul>
 8003f60:	1c01      	adds	r1, r0, #0
 8003f62:	1c38      	adds	r0, r7, #0
 8003f64:	f7fc fb60 	bl	8000628 <__aeabi_fadd>
 8003f68:	4642      	mov	r2, r8
 8003f6a:	9035      	str	r0, [sp, #212]	; 0xd4
 8003f6c:	6a56      	ldr	r6, [r2, #36]	; 0x24
 8003f6e:	6ed0      	ldr	r0, [r2, #108]	; 0x6c
 8003f70:	1c31      	adds	r1, r6, #0
 8003f72:	901e      	str	r0, [sp, #120]	; 0x78
 8003f74:	9802      	ldr	r0, [sp, #8]
 8003f76:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8003f78:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8003f7a:	f7fc febb 	bl	8000cf4 <__aeabi_fmul>
 8003f7e:	1c29      	adds	r1, r5, #0
 8003f80:	1c07      	adds	r7, r0, #0
 8003f82:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003f84:	f7fc feb6 	bl	8000cf4 <__aeabi_fmul>
 8003f88:	1c01      	adds	r1, r0, #0
 8003f8a:	1c38      	adds	r0, r7, #0
 8003f8c:	f7fc fb4c 	bl	8000628 <__aeabi_fadd>
 8003f90:	991e      	ldr	r1, [sp, #120]	; 0x78
 8003f92:	1c07      	adds	r7, r0, #0
 8003f94:	4658      	mov	r0, fp
 8003f96:	f7fc fead 	bl	8000cf4 <__aeabi_fmul>
 8003f9a:	1c01      	adds	r1, r0, #0
 8003f9c:	1c38      	adds	r0, r7, #0
 8003f9e:	f7fc fb43 	bl	8000628 <__aeabi_fadd>
 8003fa2:	1c21      	adds	r1, r4, #0
 8003fa4:	1c07      	adds	r7, r0, #0
 8003fa6:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003fa8:	f7fc fea4 	bl	8000cf4 <__aeabi_fmul>
 8003fac:	1c01      	adds	r1, r0, #0
 8003fae:	1c38      	adds	r0, r7, #0
 8003fb0:	f7fc fb3a 	bl	8000628 <__aeabi_fadd>
 8003fb4:	279c      	movs	r7, #156	; 0x9c
 8003fb6:	4643      	mov	r3, r8
 8003fb8:	2184      	movs	r1, #132	; 0x84
 8003fba:	585a      	ldr	r2, [r3, r1]
 8003fbc:	59db      	ldr	r3, [r3, r7]
 8003fbe:	1c31      	adds	r1, r6, #0
 8003fc0:	9036      	str	r0, [sp, #216]	; 0xd8
 8003fc2:	9804      	ldr	r0, [sp, #16]
 8003fc4:	9320      	str	r3, [sp, #128]	; 0x80
 8003fc6:	921f      	str	r2, [sp, #124]	; 0x7c
 8003fc8:	f7fc fe94 	bl	8000cf4 <__aeabi_fmul>
 8003fcc:	1c29      	adds	r1, r5, #0
 8003fce:	1c07      	adds	r7, r0, #0
 8003fd0:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003fd2:	f7fc fe8f 	bl	8000cf4 <__aeabi_fmul>
 8003fd6:	1c01      	adds	r1, r0, #0
 8003fd8:	1c38      	adds	r0, r7, #0
 8003fda:	f7fc fb25 	bl	8000628 <__aeabi_fadd>
 8003fde:	991f      	ldr	r1, [sp, #124]	; 0x7c
 8003fe0:	1c07      	adds	r7, r0, #0
 8003fe2:	4658      	mov	r0, fp
 8003fe4:	f7fc fe86 	bl	8000cf4 <__aeabi_fmul>
 8003fe8:	1c01      	adds	r1, r0, #0
 8003fea:	1c38      	adds	r0, r7, #0
 8003fec:	f7fc fb1c 	bl	8000628 <__aeabi_fadd>
 8003ff0:	1c21      	adds	r1, r4, #0
 8003ff2:	1c07      	adds	r7, r0, #0
 8003ff4:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003ff6:	f7fc fe7d 	bl	8000cf4 <__aeabi_fmul>
 8003ffa:	1c01      	adds	r1, r0, #0
 8003ffc:	1c38      	adds	r0, r7, #0
 8003ffe:	f7fc fb13 	bl	8000628 <__aeabi_fadd>
 8004002:	1c31      	adds	r1, r6, #0
 8004004:	903a      	str	r0, [sp, #232]	; 0xe8
 8004006:	9806      	ldr	r0, [sp, #24]
 8004008:	f7fc fe74 	bl	8000cf4 <__aeabi_fmul>
 800400c:	1c29      	adds	r1, r5, #0
 800400e:	1c06      	adds	r6, r0, #0
 8004010:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004012:	f7fc fe6f 	bl	8000cf4 <__aeabi_fmul>
 8004016:	1c01      	adds	r1, r0, #0
 8004018:	1c30      	adds	r0, r6, #0
 800401a:	f7fc fb05 	bl	8000628 <__aeabi_fadd>
 800401e:	9920      	ldr	r1, [sp, #128]	; 0x80
 8004020:	1c05      	adds	r5, r0, #0
 8004022:	4658      	mov	r0, fp
 8004024:	f7fc fe66 	bl	8000cf4 <__aeabi_fmul>
 8004028:	1c01      	adds	r1, r0, #0
 800402a:	1c28      	adds	r0, r5, #0
 800402c:	f7fc fafc 	bl	8000628 <__aeabi_fadd>
 8004030:	1c21      	adds	r1, r4, #0
 8004032:	1c07      	adds	r7, r0, #0
 8004034:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004036:	f7fc fe5d 	bl	8000cf4 <__aeabi_fmul>
 800403a:	1c01      	adds	r1, r0, #0
 800403c:	1c38      	adds	r0, r7, #0
 800403e:	f7fc faf3 	bl	8000628 <__aeabi_fadd>
 8004042:	4641      	mov	r1, r8
 8004044:	6a8e      	ldr	r6, [r1, #40]	; 0x28
 8004046:	9038      	str	r0, [sp, #224]	; 0xe0
 8004048:	6c0d      	ldr	r5, [r1, #64]	; 0x40
 800404a:	6f0a      	ldr	r2, [r1, #112]	; 0x70
 800404c:	6d8c      	ldr	r4, [r1, #88]	; 0x58
 800404e:	9802      	ldr	r0, [sp, #8]
 8004050:	1c31      	adds	r1, r6, #0
 8004052:	9221      	str	r2, [sp, #132]	; 0x84
 8004054:	f7fc fe4e 	bl	8000cf4 <__aeabi_fmul>
 8004058:	1c29      	adds	r1, r5, #0
 800405a:	1c07      	adds	r7, r0, #0
 800405c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800405e:	f7fc fe49 	bl	8000cf4 <__aeabi_fmul>
 8004062:	1c01      	adds	r1, r0, #0
 8004064:	1c38      	adds	r0, r7, #0
 8004066:	f7fc fadf 	bl	8000628 <__aeabi_fadd>
 800406a:	9921      	ldr	r1, [sp, #132]	; 0x84
 800406c:	1c07      	adds	r7, r0, #0
 800406e:	4658      	mov	r0, fp
 8004070:	f7fc fe40 	bl	8000cf4 <__aeabi_fmul>
 8004074:	1c01      	adds	r1, r0, #0
 8004076:	1c38      	adds	r0, r7, #0
 8004078:	f7fc fad6 	bl	8000628 <__aeabi_fadd>
 800407c:	1c21      	adds	r1, r4, #0
 800407e:	1c07      	adds	r7, r0, #0
 8004080:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004082:	f7fc fe37 	bl	8000cf4 <__aeabi_fmul>
 8004086:	1c01      	adds	r1, r0, #0
 8004088:	1c38      	adds	r0, r7, #0
 800408a:	f7fc facd 	bl	8000628 <__aeabi_fadd>
 800408e:	2388      	movs	r3, #136	; 0x88
 8004090:	903b      	str	r0, [sp, #236]	; 0xec
 8004092:	4640      	mov	r0, r8
 8004094:	58c1      	ldr	r1, [r0, r3]
 8004096:	3318      	adds	r3, #24
 8004098:	58c7      	ldr	r7, [r0, r3]
 800409a:	9122      	str	r1, [sp, #136]	; 0x88
 800409c:	9804      	ldr	r0, [sp, #16]
 800409e:	1c31      	adds	r1, r6, #0
 80040a0:	9728      	str	r7, [sp, #160]	; 0xa0
 80040a2:	f7fc fe27 	bl	8000cf4 <__aeabi_fmul>
 80040a6:	1c29      	adds	r1, r5, #0
 80040a8:	1c07      	adds	r7, r0, #0
 80040aa:	980a      	ldr	r0, [sp, #40]	; 0x28
 80040ac:	f7fc fe22 	bl	8000cf4 <__aeabi_fmul>
 80040b0:	1c01      	adds	r1, r0, #0
 80040b2:	1c38      	adds	r0, r7, #0
 80040b4:	f7fc fab8 	bl	8000628 <__aeabi_fadd>
 80040b8:	9922      	ldr	r1, [sp, #136]	; 0x88
 80040ba:	1c07      	adds	r7, r0, #0
 80040bc:	4658      	mov	r0, fp
 80040be:	f7fc fe19 	bl	8000cf4 <__aeabi_fmul>
 80040c2:	1c01      	adds	r1, r0, #0
 80040c4:	1c38      	adds	r0, r7, #0
 80040c6:	f7fc faaf 	bl	8000628 <__aeabi_fadd>
 80040ca:	1c21      	adds	r1, r4, #0
 80040cc:	1c07      	adds	r7, r0, #0
 80040ce:	9818      	ldr	r0, [sp, #96]	; 0x60
 80040d0:	f7fc fe10 	bl	8000cf4 <__aeabi_fmul>
 80040d4:	1c01      	adds	r1, r0, #0
 80040d6:	1c38      	adds	r0, r7, #0
 80040d8:	f7fc faa6 	bl	8000628 <__aeabi_fadd>
 80040dc:	1c31      	adds	r1, r6, #0
 80040de:	902c      	str	r0, [sp, #176]	; 0xb0
 80040e0:	9806      	ldr	r0, [sp, #24]
 80040e2:	f7fc fe07 	bl	8000cf4 <__aeabi_fmul>
 80040e6:	1c29      	adds	r1, r5, #0
 80040e8:	1c06      	adds	r6, r0, #0
 80040ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80040ec:	f7fc fe02 	bl	8000cf4 <__aeabi_fmul>
 80040f0:	1c01      	adds	r1, r0, #0
 80040f2:	1c30      	adds	r0, r6, #0
 80040f4:	f7fc fa98 	bl	8000628 <__aeabi_fadd>
 80040f8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80040fa:	1c05      	adds	r5, r0, #0
 80040fc:	4658      	mov	r0, fp
 80040fe:	f7fc fdf9 	bl	8000cf4 <__aeabi_fmul>
 8004102:	1c01      	adds	r1, r0, #0
 8004104:	1c28      	adds	r0, r5, #0
 8004106:	f7fc fa8f 	bl	8000628 <__aeabi_fadd>
 800410a:	1c21      	adds	r1, r4, #0
 800410c:	1c07      	adds	r7, r0, #0
 800410e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004110:	f7fc fdf0 	bl	8000cf4 <__aeabi_fmul>
 8004114:	1c01      	adds	r1, r0, #0
 8004116:	1c38      	adds	r0, r7, #0
 8004118:	f7fc fa86 	bl	8000628 <__aeabi_fadd>
 800411c:	902a      	str	r0, [sp, #168]	; 0xa8
 800411e:	4640      	mov	r0, r8
 8004120:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
 8004122:	6f43      	ldr	r3, [r0, #116]	; 0x74
 8004124:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8004126:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 8004128:	9902      	ldr	r1, [sp, #8]
 800412a:	1c30      	adds	r0, r6, #0
 800412c:	9310      	str	r3, [sp, #64]	; 0x40
 800412e:	f7fc fde1 	bl	8000cf4 <__aeabi_fmul>
 8004132:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004134:	1c07      	adds	r7, r0, #0
 8004136:	1c28      	adds	r0, r5, #0
 8004138:	f7fc fddc 	bl	8000cf4 <__aeabi_fmul>
 800413c:	1c01      	adds	r1, r0, #0
 800413e:	1c38      	adds	r0, r7, #0
 8004140:	f7fc fa72 	bl	8000628 <__aeabi_fadd>
 8004144:	4659      	mov	r1, fp
 8004146:	1c07      	adds	r7, r0, #0
 8004148:	9810      	ldr	r0, [sp, #64]	; 0x40
 800414a:	f7fc fdd3 	bl	8000cf4 <__aeabi_fmul>
 800414e:	1c01      	adds	r1, r0, #0
 8004150:	1c38      	adds	r0, r7, #0
 8004152:	f7fc fa69 	bl	8000628 <__aeabi_fadd>
 8004156:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004158:	1c07      	adds	r7, r0, #0
 800415a:	1c20      	adds	r0, r4, #0
 800415c:	f7fc fdca 	bl	8000cf4 <__aeabi_fmul>
 8004160:	1c01      	adds	r1, r0, #0
 8004162:	1c38      	adds	r0, r7, #0
 8004164:	f7fc fa60 	bl	8000628 <__aeabi_fadd>
 8004168:	4657      	mov	r7, sl
 800416a:	228c      	movs	r2, #140	; 0x8c
 800416c:	4641      	mov	r1, r8
 800416e:	9029      	str	r0, [sp, #164]	; 0xa4
 8004170:	5888      	ldr	r0, [r1, r2]
 8004172:	59c9      	ldr	r1, [r1, r7]
 8004174:	9012      	str	r0, [sp, #72]	; 0x48
 8004176:	910e      	str	r1, [sp, #56]	; 0x38
 8004178:	1c30      	adds	r0, r6, #0
 800417a:	9904      	ldr	r1, [sp, #16]
 800417c:	f7fc fdba 	bl	8000cf4 <__aeabi_fmul>
 8004180:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004182:	1c07      	adds	r7, r0, #0
 8004184:	1c28      	adds	r0, r5, #0
 8004186:	f7fc fdb5 	bl	8000cf4 <__aeabi_fmul>
 800418a:	1c01      	adds	r1, r0, #0
 800418c:	1c38      	adds	r0, r7, #0
 800418e:	f7fc fa4b 	bl	8000628 <__aeabi_fadd>
 8004192:	9912      	ldr	r1, [sp, #72]	; 0x48
 8004194:	1c07      	adds	r7, r0, #0
 8004196:	4658      	mov	r0, fp
 8004198:	f7fc fdac 	bl	8000cf4 <__aeabi_fmul>
 800419c:	1c01      	adds	r1, r0, #0
 800419e:	1c38      	adds	r0, r7, #0
 80041a0:	f7fc fa42 	bl	8000628 <__aeabi_fadd>
 80041a4:	9918      	ldr	r1, [sp, #96]	; 0x60
 80041a6:	1c07      	adds	r7, r0, #0
 80041a8:	1c20      	adds	r0, r4, #0
 80041aa:	f7fc fda3 	bl	8000cf4 <__aeabi_fmul>
 80041ae:	1c01      	adds	r1, r0, #0
 80041b0:	1c38      	adds	r0, r7, #0
 80041b2:	f7fc fa39 	bl	8000628 <__aeabi_fadd>
 80041b6:	9906      	ldr	r1, [sp, #24]
 80041b8:	9026      	str	r0, [sp, #152]	; 0x98
 80041ba:	1c30      	adds	r0, r6, #0
 80041bc:	f7fc fd9a 	bl	8000cf4 <__aeabi_fmul>
 80041c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80041c2:	1c06      	adds	r6, r0, #0
 80041c4:	1c28      	adds	r0, r5, #0
 80041c6:	f7fc fd95 	bl	8000cf4 <__aeabi_fmul>
 80041ca:	1c01      	adds	r1, r0, #0
 80041cc:	1c30      	adds	r0, r6, #0
 80041ce:	f7fc fa2b 	bl	8000628 <__aeabi_fadd>
 80041d2:	4659      	mov	r1, fp
 80041d4:	1c05      	adds	r5, r0, #0
 80041d6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80041d8:	f7fc fd8c 	bl	8000cf4 <__aeabi_fmul>
 80041dc:	1c01      	adds	r1, r0, #0
 80041de:	1c28      	adds	r0, r5, #0
 80041e0:	f7fc fa22 	bl	8000628 <__aeabi_fadd>
 80041e4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80041e6:	1c07      	adds	r7, r0, #0
 80041e8:	1c11      	adds	r1, r2, #0
 80041ea:	1c20      	adds	r0, r4, #0
 80041ec:	4692      	mov	sl, r2
 80041ee:	f7fc fd81 	bl	8000cf4 <__aeabi_fmul>
 80041f2:	1c01      	adds	r1, r0, #0
 80041f4:	1c38      	adds	r0, r7, #0
 80041f6:	f7fc fa17 	bl	8000628 <__aeabi_fadd>
 80041fa:	9024      	str	r0, [sp, #144]	; 0x90
 80041fc:	4640      	mov	r0, r8
 80041fe:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8004200:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8004202:	6c85      	ldr	r5, [r0, #72]	; 0x48
 8004204:	6e04      	ldr	r4, [r0, #96]	; 0x60
 8004206:	1c31      	adds	r1, r6, #0
 8004208:	9802      	ldr	r0, [sp, #8]
 800420a:	931a      	str	r3, [sp, #104]	; 0x68
 800420c:	f7fc fd72 	bl	8000cf4 <__aeabi_fmul>
 8004210:	1c29      	adds	r1, r5, #0
 8004212:	1c07      	adds	r7, r0, #0
 8004214:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004216:	f7fc fd6d 	bl	8000cf4 <__aeabi_fmul>
 800421a:	1c01      	adds	r1, r0, #0
 800421c:	1c38      	adds	r0, r7, #0
 800421e:	f7fc fa03 	bl	8000628 <__aeabi_fadd>
 8004222:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004224:	1c07      	adds	r7, r0, #0
 8004226:	4658      	mov	r0, fp
 8004228:	f7fc fd64 	bl	8000cf4 <__aeabi_fmul>
 800422c:	1c01      	adds	r1, r0, #0
 800422e:	1c38      	adds	r0, r7, #0
 8004230:	f7fc f9fa 	bl	8000628 <__aeabi_fadd>
 8004234:	1c21      	adds	r1, r4, #0
 8004236:	1c07      	adds	r7, r0, #0
 8004238:	980c      	ldr	r0, [sp, #48]	; 0x30
 800423a:	f7fc fd5b 	bl	8000cf4 <__aeabi_fmul>
 800423e:	1c01      	adds	r1, r0, #0
 8004240:	1c38      	adds	r0, r7, #0
 8004242:	f7fc f9f1 	bl	8000628 <__aeabi_fadd>
 8004246:	2290      	movs	r2, #144	; 0x90
 8004248:	464b      	mov	r3, r9
 800424a:	4641      	mov	r1, r8
 800424c:	900c      	str	r0, [sp, #48]	; 0x30
 800424e:	58cf      	ldr	r7, [r1, r3]
 8004250:	5888      	ldr	r0, [r1, r2]
 8004252:	1c31      	adds	r1, r6, #0
 8004254:	9002      	str	r0, [sp, #8]
 8004256:	9709      	str	r7, [sp, #36]	; 0x24
 8004258:	9804      	ldr	r0, [sp, #16]
 800425a:	f7fc fd4b 	bl	8000cf4 <__aeabi_fmul>
 800425e:	1c29      	adds	r1, r5, #0
 8004260:	1c07      	adds	r7, r0, #0
 8004262:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004264:	f7fc fd46 	bl	8000cf4 <__aeabi_fmul>
 8004268:	1c01      	adds	r1, r0, #0
 800426a:	1c38      	adds	r0, r7, #0
 800426c:	f7fc f9dc 	bl	8000628 <__aeabi_fadd>
 8004270:	9902      	ldr	r1, [sp, #8]
 8004272:	1c07      	adds	r7, r0, #0
 8004274:	4658      	mov	r0, fp
 8004276:	f7fc fd3d 	bl	8000cf4 <__aeabi_fmul>
 800427a:	1c01      	adds	r1, r0, #0
 800427c:	1c38      	adds	r0, r7, #0
 800427e:	f7fc f9d3 	bl	8000628 <__aeabi_fadd>
 8004282:	1c21      	adds	r1, r4, #0
 8004284:	1c07      	adds	r7, r0, #0
 8004286:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004288:	f7fc fd34 	bl	8000cf4 <__aeabi_fmul>
 800428c:	1c01      	adds	r1, r0, #0
 800428e:	1c38      	adds	r0, r7, #0
 8004290:	f7fc f9ca 	bl	8000628 <__aeabi_fadd>
 8004294:	1c31      	adds	r1, r6, #0
 8004296:	900a      	str	r0, [sp, #40]	; 0x28
 8004298:	9806      	ldr	r0, [sp, #24]
 800429a:	f7fc fd2b 	bl	8000cf4 <__aeabi_fmul>
 800429e:	1c29      	adds	r1, r5, #0
 80042a0:	1c06      	adds	r6, r0, #0
 80042a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80042a4:	f7fc fd26 	bl	8000cf4 <__aeabi_fmul>
 80042a8:	1c01      	adds	r1, r0, #0
 80042aa:	1c30      	adds	r0, r6, #0
 80042ac:	f7fc f9bc 	bl	8000628 <__aeabi_fadd>
 80042b0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80042b2:	1c05      	adds	r5, r0, #0
 80042b4:	4658      	mov	r0, fp
 80042b6:	f7fc fd1d 	bl	8000cf4 <__aeabi_fmul>
 80042ba:	1c01      	adds	r1, r0, #0
 80042bc:	1c28      	adds	r0, r5, #0
 80042be:	f7fc f9b3 	bl	8000628 <__aeabi_fadd>
 80042c2:	1c21      	adds	r1, r4, #0
 80042c4:	1c07      	adds	r7, r0, #0
 80042c6:	4650      	mov	r0, sl
 80042c8:	f7fc fd14 	bl	8000cf4 <__aeabi_fmul>
 80042cc:	ac60      	add	r4, sp, #384	; 0x180
 80042ce:	1c01      	adds	r1, r0, #0
 80042d0:	1c38      	adds	r0, r7, #0
 80042d2:	f7fc f9a9 	bl	8000628 <__aeabi_fadd>
 80042d6:	46a3      	mov	fp, r4
 80042d8:	2134      	movs	r1, #52	; 0x34
 80042da:	4642      	mov	r2, r8
 80042dc:	9006      	str	r0, [sp, #24]
		for (int i = 0; i < 6; i++) {
 80042de:	945d      	str	r4, [sp, #372]	; 0x174
					sum += P[i + k * 6] * M[j + k * 6];
 80042e0:	4658      	mov	r0, fp
 80042e2:	4644      	mov	r4, r8
 80042e4:	4441      	add	r1, r8
 80042e6:	46d8      	mov	r8, fp
 80042e8:	341c      	adds	r4, #28
 80042ea:	9104      	str	r1, [sp, #16]
 80042ec:	920b      	str	r2, [sp, #44]	; 0x2c
 80042ee:	9018      	str	r0, [sp, #96]	; 0x60
		}
		for (int i = 0; i < 6; i++) {
			for (int j = 0; j < 6; j++) {
				float sum = 0.0;
				for (int k = 0; k < 6; k++) {
					sum += M[i + k * 6] * S[k * 6 + j];
 80042f0:	4643      	mov	r3, r8
 80042f2:	681e      	ldr	r6, [r3, #0]
 80042f4:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80042f6:	46b2      	mov	sl, r6
 80042f8:	4650      	mov	r0, sl
 80042fa:	699f      	ldr	r7, [r3, #24]
 80042fc:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 80042fe:	f7fc fcf9 	bl	8000cf4 <__aeabi_fmul>
 8004302:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8004304:	1c05      	adds	r5, r0, #0
 8004306:	1c38      	adds	r0, r7, #0
 8004308:	f7fc fcf4 	bl	8000cf4 <__aeabi_fmul>
 800430c:	1c01      	adds	r1, r0, #0
 800430e:	1c28      	adds	r0, r5, #0
 8004310:	f7fc f98a 	bl	8000628 <__aeabi_fadd>
 8004314:	46b9      	mov	r9, r7
 8004316:	9936      	ldr	r1, [sp, #216]	; 0xd8
 8004318:	1c07      	adds	r7, r0, #0
 800431a:	1c30      	adds	r0, r6, #0
 800431c:	9600      	str	r6, [sp, #0]
 800431e:	f7fc fce9 	bl	8000cf4 <__aeabi_fmul>
 8004322:	1c01      	adds	r1, r0, #0
 8004324:	1c38      	adds	r0, r7, #0
 8004326:	f7fc f97f 	bl	8000628 <__aeabi_fadd>
 800432a:	4642      	mov	r2, r8
 800432c:	6c97      	ldr	r7, [r2, #72]	; 0x48
 800432e:	993b      	ldr	r1, [sp, #236]	; 0xec
 8004330:	1c06      	adds	r6, r0, #0
 8004332:	1c38      	adds	r0, r7, #0
 8004334:	f7fc fcde 	bl	8000cf4 <__aeabi_fmul>
 8004338:	1c31      	adds	r1, r6, #0
 800433a:	f7fc f975 	bl	8000628 <__aeabi_fadd>
 800433e:	1c05      	adds	r5, r0, #0
 8004340:	4640      	mov	r0, r8
 8004342:	6e06      	ldr	r6, [r0, #96]	; 0x60
 8004344:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8004346:	1c31      	adds	r1, r6, #0
 8004348:	f7fc fcd4 	bl	8000cf4 <__aeabi_fmul>
 800434c:	1c29      	adds	r1, r5, #0
 800434e:	f7fc f96b 	bl	8000628 <__aeabi_fadd>
 8004352:	4643      	mov	r3, r8
 8004354:	4683      	mov	fp, r0
 8004356:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8004358:	990c      	ldr	r1, [sp, #48]	; 0x30
 800435a:	1c28      	adds	r0, r5, #0
 800435c:	f7fc fcca 	bl	8000cf4 <__aeabi_fmul>
 8004360:	4659      	mov	r1, fp
 8004362:	f7fc f961 	bl	8000628 <__aeabi_fadd>
 8004366:	992e      	ldr	r1, [sp, #184]	; 0xb8
				}
				P[i + j * 6] = sum;
 8004368:	6020      	str	r0, [r4, #0]
					sum += M[i + k * 6] * S[k * 6 + j];
 800436a:	4650      	mov	r0, sl
 800436c:	f7fc fcc2 	bl	8000cf4 <__aeabi_fmul>
 8004370:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8004372:	4683      	mov	fp, r0
 8004374:	4648      	mov	r0, r9
 8004376:	f7fc fcbd 	bl	8000cf4 <__aeabi_fmul>
 800437a:	1c01      	adds	r1, r0, #0
 800437c:	4658      	mov	r0, fp
 800437e:	f7fc f953 	bl	8000628 <__aeabi_fadd>
 8004382:	993a      	ldr	r1, [sp, #232]	; 0xe8
 8004384:	4683      	mov	fp, r0
 8004386:	9800      	ldr	r0, [sp, #0]
 8004388:	f7fc fcb4 	bl	8000cf4 <__aeabi_fmul>
 800438c:	1c01      	adds	r1, r0, #0
 800438e:	4658      	mov	r0, fp
 8004390:	f7fc f94a 	bl	8000628 <__aeabi_fadd>
 8004394:	4683      	mov	fp, r0
 8004396:	1c39      	adds	r1, r7, #0
 8004398:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800439a:	f7fc fcab 	bl	8000cf4 <__aeabi_fmul>
 800439e:	4659      	mov	r1, fp
 80043a0:	f7fc f942 	bl	8000628 <__aeabi_fadd>
 80043a4:	4683      	mov	fp, r0
 80043a6:	1c31      	adds	r1, r6, #0
 80043a8:	9826      	ldr	r0, [sp, #152]	; 0x98
 80043aa:	f7fc fca3 	bl	8000cf4 <__aeabi_fmul>
 80043ae:	4659      	mov	r1, fp
 80043b0:	f7fc f93a 	bl	8000628 <__aeabi_fadd>
 80043b4:	4683      	mov	fp, r0
 80043b6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80043b8:	1c28      	adds	r0, r5, #0
 80043ba:	f7fc fc9b 	bl	8000cf4 <__aeabi_fmul>
 80043be:	4659      	mov	r1, fp
 80043c0:	f7fc f932 	bl	8000628 <__aeabi_fadd>
 80043c4:	9930      	ldr	r1, [sp, #192]	; 0xc0
				P[i + j * 6] = sum;
 80043c6:	61a0      	str	r0, [r4, #24]
					sum += M[i + k * 6] * S[k * 6 + j];
 80043c8:	4650      	mov	r0, sl
 80043ca:	f7fc fc93 	bl	8000cf4 <__aeabi_fmul>
 80043ce:	9935      	ldr	r1, [sp, #212]	; 0xd4
 80043d0:	4683      	mov	fp, r0
 80043d2:	4648      	mov	r0, r9
 80043d4:	f7fc fc8e 	bl	8000cf4 <__aeabi_fmul>
 80043d8:	1c01      	adds	r1, r0, #0
 80043da:	4658      	mov	r0, fp
 80043dc:	f7fc f924 	bl	8000628 <__aeabi_fadd>
 80043e0:	9938      	ldr	r1, [sp, #224]	; 0xe0
 80043e2:	4683      	mov	fp, r0
 80043e4:	9800      	ldr	r0, [sp, #0]
 80043e6:	f7fc fc85 	bl	8000cf4 <__aeabi_fmul>
 80043ea:	1c01      	adds	r1, r0, #0
 80043ec:	4658      	mov	r0, fp
 80043ee:	f7fc f91b 	bl	8000628 <__aeabi_fadd>
 80043f2:	4683      	mov	fp, r0
 80043f4:	1c39      	adds	r1, r7, #0
 80043f6:	982a      	ldr	r0, [sp, #168]	; 0xa8
 80043f8:	f7fc fc7c 	bl	8000cf4 <__aeabi_fmul>
 80043fc:	4659      	mov	r1, fp
 80043fe:	f7fc f913 	bl	8000628 <__aeabi_fadd>
 8004402:	4683      	mov	fp, r0
 8004404:	1c31      	adds	r1, r6, #0
 8004406:	9824      	ldr	r0, [sp, #144]	; 0x90
 8004408:	f7fc fc74 	bl	8000cf4 <__aeabi_fmul>
 800440c:	4659      	mov	r1, fp
 800440e:	f7fc f90b 	bl	8000628 <__aeabi_fadd>
 8004412:	4683      	mov	fp, r0
 8004414:	9906      	ldr	r1, [sp, #24]
 8004416:	1c28      	adds	r0, r5, #0
 8004418:	f7fc fc6c 	bl	8000cf4 <__aeabi_fmul>
 800441c:	4659      	mov	r1, fp
 800441e:	f7fc f903 	bl	8000628 <__aeabi_fadd>
 8004422:	9914      	ldr	r1, [sp, #80]	; 0x50
				P[i + j * 6] = sum;
 8004424:	6320      	str	r0, [r4, #48]	; 0x30
					sum += M[i + k * 6] * S[k * 6 + j];
 8004426:	4650      	mov	r0, sl
 8004428:	f7fc fc64 	bl	8000cf4 <__aeabi_fmul>
 800442c:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800442e:	4683      	mov	fp, r0
 8004430:	4648      	mov	r0, r9
 8004432:	f7fc fc5f 	bl	8000cf4 <__aeabi_fmul>
 8004436:	1c01      	adds	r1, r0, #0
 8004438:	4658      	mov	r0, fp
 800443a:	f7fc f8f5 	bl	8000628 <__aeabi_fadd>
 800443e:	991e      	ldr	r1, [sp, #120]	; 0x78
 8004440:	4683      	mov	fp, r0
 8004442:	9800      	ldr	r0, [sp, #0]
 8004444:	f7fc fc56 	bl	8000cf4 <__aeabi_fmul>
 8004448:	1c01      	adds	r1, r0, #0
 800444a:	4658      	mov	r0, fp
 800444c:	f7fc f8ec 	bl	8000628 <__aeabi_fadd>
 8004450:	4683      	mov	fp, r0
 8004452:	9921      	ldr	r1, [sp, #132]	; 0x84
 8004454:	1c38      	adds	r0, r7, #0
 8004456:	f7fc fc4d 	bl	8000cf4 <__aeabi_fmul>
 800445a:	4659      	mov	r1, fp
 800445c:	f7fc f8e4 	bl	8000628 <__aeabi_fadd>
 8004460:	4683      	mov	fp, r0
 8004462:	1c31      	adds	r1, r6, #0
 8004464:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004466:	f7fc fc45 	bl	8000cf4 <__aeabi_fmul>
 800446a:	4659      	mov	r1, fp
 800446c:	f7fc f8dc 	bl	8000628 <__aeabi_fadd>
 8004470:	4683      	mov	fp, r0
 8004472:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004474:	1c28      	adds	r0, r5, #0
 8004476:	f7fc fc3d 	bl	8000cf4 <__aeabi_fmul>
 800447a:	4659      	mov	r1, fp
 800447c:	f7fc f8d4 	bl	8000628 <__aeabi_fadd>
 8004480:	9916      	ldr	r1, [sp, #88]	; 0x58
				P[i + j * 6] = sum;
 8004482:	64a0      	str	r0, [r4, #72]	; 0x48
					sum += M[i + k * 6] * S[k * 6 + j];
 8004484:	4650      	mov	r0, sl
 8004486:	f7fc fc35 	bl	8000cf4 <__aeabi_fmul>
 800448a:	991c      	ldr	r1, [sp, #112]	; 0x70
 800448c:	4683      	mov	fp, r0
 800448e:	4648      	mov	r0, r9
 8004490:	f7fc fc30 	bl	8000cf4 <__aeabi_fmul>
 8004494:	1c01      	adds	r1, r0, #0
 8004496:	4658      	mov	r0, fp
 8004498:	f7fc f8c6 	bl	8000628 <__aeabi_fadd>
 800449c:	991f      	ldr	r1, [sp, #124]	; 0x7c
 800449e:	4683      	mov	fp, r0
 80044a0:	9800      	ldr	r0, [sp, #0]
 80044a2:	f7fc fc27 	bl	8000cf4 <__aeabi_fmul>
 80044a6:	1c01      	adds	r1, r0, #0
 80044a8:	4658      	mov	r0, fp
 80044aa:	f7fc f8bd 	bl	8000628 <__aeabi_fadd>
 80044ae:	4683      	mov	fp, r0
 80044b0:	9922      	ldr	r1, [sp, #136]	; 0x88
 80044b2:	1c38      	adds	r0, r7, #0
 80044b4:	f7fc fc1e 	bl	8000cf4 <__aeabi_fmul>
 80044b8:	4659      	mov	r1, fp
 80044ba:	f7fc f8b5 	bl	8000628 <__aeabi_fadd>
 80044be:	4683      	mov	fp, r0
 80044c0:	1c31      	adds	r1, r6, #0
 80044c2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80044c4:	f7fc fc16 	bl	8000cf4 <__aeabi_fmul>
 80044c8:	4659      	mov	r1, fp
 80044ca:	f7fc f8ad 	bl	8000628 <__aeabi_fadd>
 80044ce:	4683      	mov	fp, r0
 80044d0:	9902      	ldr	r1, [sp, #8]
 80044d2:	1c28      	adds	r0, r5, #0
 80044d4:	f7fc fc0e 	bl	8000cf4 <__aeabi_fmul>
 80044d8:	4659      	mov	r1, fp
 80044da:	f7fc f8a5 	bl	8000628 <__aeabi_fadd>
				P[i + j * 6] = sum;
 80044de:	6620      	str	r0, [r4, #96]	; 0x60
					sum += M[i + k * 6] * S[k * 6 + j];
 80044e0:	4650      	mov	r0, sl
 80044e2:	9919      	ldr	r1, [sp, #100]	; 0x64
 80044e4:	f7fc fc06 	bl	8000cf4 <__aeabi_fmul>
 80044e8:	991d      	ldr	r1, [sp, #116]	; 0x74
 80044ea:	4682      	mov	sl, r0
 80044ec:	4648      	mov	r0, r9
 80044ee:	f7fc fc01 	bl	8000cf4 <__aeabi_fmul>
 80044f2:	1c01      	adds	r1, r0, #0
 80044f4:	4650      	mov	r0, sl
 80044f6:	f7fc f897 	bl	8000628 <__aeabi_fadd>
 80044fa:	9920      	ldr	r1, [sp, #128]	; 0x80
 80044fc:	4681      	mov	r9, r0
 80044fe:	9800      	ldr	r0, [sp, #0]
 8004500:	f7fc fbf8 	bl	8000cf4 <__aeabi_fmul>
 8004504:	1c01      	adds	r1, r0, #0
 8004506:	4648      	mov	r0, r9
 8004508:	f7fc f88e 	bl	8000628 <__aeabi_fadd>
 800450c:	4683      	mov	fp, r0
 800450e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8004510:	1c38      	adds	r0, r7, #0
 8004512:	f7fc fbef 	bl	8000cf4 <__aeabi_fmul>
 8004516:	4659      	mov	r1, fp
 8004518:	f7fc f886 	bl	8000628 <__aeabi_fadd>
 800451c:	1c31      	adds	r1, r6, #0
 800451e:	1c07      	adds	r7, r0, #0
 8004520:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004522:	f7fc fbe7 	bl	8000cf4 <__aeabi_fmul>
 8004526:	1c39      	adds	r1, r7, #0
 8004528:	f7fc f87e 	bl	8000628 <__aeabi_fadd>
 800452c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800452e:	1c06      	adds	r6, r0, #0
 8004530:	1c28      	adds	r0, r5, #0
 8004532:	f7fc fbdf 	bl	8000cf4 <__aeabi_fmul>
 8004536:	1c31      	adds	r1, r6, #0
 8004538:	f7fc f876 	bl	8000628 <__aeabi_fadd>
 800453c:	2104      	movs	r1, #4
 800453e:	468c      	mov	ip, r1
		for (int i = 0; i < 6; i++) {
 8004540:	9a04      	ldr	r2, [sp, #16]
				P[i + j * 6] = sum;
 8004542:	67a0      	str	r0, [r4, #120]	; 0x78
		for (int i = 0; i < 6; i++) {
 8004544:	3404      	adds	r4, #4
 8004546:	44e0      	add	r8, ip
 8004548:	42a2      	cmp	r2, r4
 800454a:	d000      	beq.n	800454e <_ZN7MEKFcRP9updateIMUEPfS0_f+0xfce>
 800454c:	e6d0      	b.n	80042f0 <_ZN7MEKFcRP9updateIMUEPfS0_f+0xd70>
			}
		}

		float ap[3];
		ap[0] = qp[1] * qp[3] - qp[2] * qp[0];
 800454e:	9b54      	ldr	r3, [sp, #336]	; 0x150
 8004550:	9f52      	ldr	r7, [sp, #328]	; 0x148
 8004552:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004554:	1c19      	adds	r1, r3, #0
 8004556:	4681      	mov	r9, r0
 8004558:	1c38      	adds	r0, r7, #0
 800455a:	469a      	mov	sl, r3
 800455c:	f7fc fbca 	bl	8000cf4 <__aeabi_fmul>
 8004560:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8004562:	9d53      	ldr	r5, [sp, #332]	; 0x14c
 8004564:	9e51      	ldr	r6, [sp, #324]	; 0x144
 8004566:	46a0      	mov	r8, r4
 8004568:	1c29      	adds	r1, r5, #0
 800456a:	1c04      	adds	r4, r0, #0
 800456c:	1c30      	adds	r0, r6, #0
 800456e:	f7fc fbc1 	bl	8000cf4 <__aeabi_fmul>
 8004572:	1c01      	adds	r1, r0, #0
 8004574:	1c20      	adds	r0, r4, #0
 8004576:	f7fc fcd7 	bl	8000f28 <__aeabi_fsub>
		ap[1] = qp[2] * qp[3] + qp[1] * qp[0];
		ap[2] = -qp[1] * qp[1] - qp[2] * qp[2];

		ap[0] += ap[0];
 800457a:	1c01      	adds	r1, r0, #0
 800457c:	f7fc f854 	bl	8000628 <__aeabi_fadd>
		ap[1] = qp[2] * qp[3] + qp[1] * qp[0];
 8004580:	4651      	mov	r1, sl
		ap[0] += ap[0];
 8004582:	4683      	mov	fp, r0
		ap[1] = qp[2] * qp[3] + qp[1] * qp[0];
 8004584:	1c28      	adds	r0, r5, #0
 8004586:	f7fc fbb5 	bl	8000cf4 <__aeabi_fmul>
 800458a:	1c39      	adds	r1, r7, #0
 800458c:	1c04      	adds	r4, r0, #0
 800458e:	1c30      	adds	r0, r6, #0
 8004590:	f7fc fbb0 	bl	8000cf4 <__aeabi_fmul>
 8004594:	1c01      	adds	r1, r0, #0
 8004596:	1c20      	adds	r0, r4, #0
 8004598:	f7fc f846 	bl	8000628 <__aeabi_fadd>
		ap[1] += ap[1];
 800459c:	1c01      	adds	r1, r0, #0
 800459e:	f7fc f843 	bl	8000628 <__aeabi_fadd>
		ap[2] = -qp[1] * qp[1] - qp[2] * qp[2];
 80045a2:	993e      	ldr	r1, [sp, #248]	; 0xf8
		ap[1] += ap[1];
 80045a4:	1c06      	adds	r6, r0, #0
		ap[2] = -qp[1] * qp[1] - qp[2] * qp[2];
 80045a6:	983c      	ldr	r0, [sp, #240]	; 0xf0
 80045a8:	f7fc fcbe 	bl	8000f28 <__aeabi_fsub>
 80045ac:	1c39      	adds	r1, r7, #0
 80045ae:	f7fc fba1 	bl	8000cf4 <__aeabi_fmul>
 80045b2:	1c29      	adds	r1, r5, #0
 80045b4:	1c07      	adds	r7, r0, #0
 80045b6:	1c28      	adds	r0, r5, #0
 80045b8:	f7fc fb9c 	bl	8000cf4 <__aeabi_fmul>
 80045bc:	1c01      	adds	r1, r0, #0
 80045be:	1c38      	adds	r0, r7, #0
 80045c0:	f7fc fcb2 	bl	8000f28 <__aeabi_fsub>
		ap[2] += ap[2] + 1.0;
 80045c4:	f7fe fd48 	bl	8003058 <__aeabi_f2d>
 80045c8:	0002      	movs	r2, r0
 80045ca:	000b      	movs	r3, r1
 80045cc:	f7fc ff2c 	bl	8001428 <__aeabi_dadd>
 80045d0:	2200      	movs	r2, #0
 80045d2:	4bfe      	ldr	r3, [pc, #1016]	; (80049cc <_ZN7MEKFcRP9updateIMUEPfS0_f+0x144c>)
 80045d4:	f7fc ff28 	bl	8001428 <__aeabi_dadd>
 80045d8:	f7fe fd86 	bl	80030e8 <__aeabi_d2f>

		F[0] = 0.0;
		F[1] = ap[2];
		F[2] = -ap[1];
 80045dc:	2280      	movs	r2, #128	; 0x80
		ap[2] += ap[2] + 1.0;
 80045de:	4682      	mov	sl, r0

		for (int i = 0; i < 6; i++) {
			for (int j = 0; j < 6; j++) {
				float sum = 0.0;
				for (int k = 0; k < 6; k++) {
					sum += P[i + k * 6] * H[j + k * 6];
 80045e0:	4645      	mov	r5, r8
		F[2] = -ap[1];
 80045e2:	0610      	lsls	r0, r2, #24
 80045e4:	4684      	mov	ip, r0
 80045e6:	0031      	movs	r1, r6
		F[3] = -ap[2];
 80045e8:	4650      	mov	r0, sl
		F[7] = -ap[0];
 80045ea:	465b      	mov	r3, fp
					sum += P[i + k * 6] * H[j + k * 6];
 80045ec:	6b6a      	ldr	r2, [r5, #52]	; 0x34
		F[2] = -ap[1];
 80045ee:	4461      	add	r1, ip
					sum += P[i + k * 6] * H[j + k * 6];
 80045f0:	69ec      	ldr	r4, [r5, #28]
		F[7] = -ap[0];
 80045f2:	4463      	add	r3, ip
		F[3] = -ap[2];
 80045f4:	4460      	add	r0, ip
		F[2] = -ap[1];
 80045f6:	9109      	str	r1, [sp, #36]	; 0x24
					sum += P[i + k * 6] * H[j + k * 6];
 80045f8:	1c11      	adds	r1, r2, #0
 80045fa:	6ced      	ldr	r5, [r5, #76]	; 0x4c
		F[7] = -ap[0];
 80045fc:	930a      	str	r3, [sp, #40]	; 0x28
					sum += P[i + k * 6] * H[j + k * 6];
 80045fe:	921f      	str	r2, [sp, #124]	; 0x7c
 8004600:	941a      	str	r4, [sp, #104]	; 0x68
 8004602:	900b      	str	r0, [sp, #44]	; 0x2c
 8004604:	f7fc fb76 	bl	8000cf4 <__aeabi_fmul>
 8004608:	1c29      	adds	r1, r5, #0
 800460a:	1c04      	adds	r4, r0, #0
 800460c:	1c30      	adds	r0, r6, #0
 800460e:	9520      	str	r5, [sp, #128]	; 0x80
 8004610:	9618      	str	r6, [sp, #96]	; 0x60
 8004612:	f7fc fb6f 	bl	8000cf4 <__aeabi_fmul>
 8004616:	1c01      	adds	r1, r0, #0
 8004618:	1c20      	adds	r0, r4, #0
 800461a:	f7fc f805 	bl	8000628 <__aeabi_fadd>
 800461e:	4647      	mov	r7, r8
 8004620:	2394      	movs	r3, #148	; 0x94
 8004622:	4652      	mov	r2, sl
 8004624:	991a      	ldr	r1, [sp, #104]	; 0x68
				}
				M[i * 6 + j] = sum;
 8004626:	9024      	str	r0, [sp, #144]	; 0x90
 8004628:	9060      	str	r0, [sp, #384]	; 0x180
					sum += P[i + k * 6] * H[j + k * 6];
 800462a:	4650      	mov	r0, sl
 800462c:	9219      	str	r2, [sp, #100]	; 0x64
 800462e:	6e7d      	ldr	r5, [r7, #100]	; 0x64
 8004630:	6ffe      	ldr	r6, [r7, #124]	; 0x7c
 8004632:	58ff      	ldr	r7, [r7, r3]
 8004634:	f7fc fb5e 	bl	8000cf4 <__aeabi_fmul>
 8004638:	9920      	ldr	r1, [sp, #128]	; 0x80
 800463a:	1c04      	adds	r4, r0, #0
 800463c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800463e:	f7fc fb59 	bl	8000cf4 <__aeabi_fmul>
 8004642:	1c01      	adds	r1, r0, #0
 8004644:	1c20      	adds	r0, r4, #0
 8004646:	f7fb ffef 	bl	8000628 <__aeabi_fadd>
 800464a:	1c01      	adds	r1, r0, #0
				M[i * 6 + j] = sum;
 800464c:	4648      	mov	r0, r9
 800464e:	9126      	str	r1, [sp, #152]	; 0x98
 8004650:	6041      	str	r1, [r0, #4]
					sum += P[i + k * 6] * H[j + k * 6];
 8004652:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004654:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004656:	f7fc fb4d 	bl	8000cf4 <__aeabi_fmul>
 800465a:	991f      	ldr	r1, [sp, #124]	; 0x7c
 800465c:	1c04      	adds	r4, r0, #0
 800465e:	4658      	mov	r0, fp
 8004660:	f7fc fb48 	bl	8000cf4 <__aeabi_fmul>
 8004664:	1c01      	adds	r1, r0, #0
 8004666:	1c20      	adds	r0, r4, #0
 8004668:	f7fb ffde 	bl	8000628 <__aeabi_fadd>
				M[i * 6 + j] = sum;
 800466c:	464a      	mov	r2, r9
 800466e:	971d      	str	r7, [sp, #116]	; 0x74
 8004670:	6157      	str	r7, [r2, #20]
					sum += P[i + k * 6] * H[j + k * 6];
 8004672:	4647      	mov	r7, r8
				M[i * 6 + j] = sum;
 8004674:	60d5      	str	r5, [r2, #12]
 8004676:	951b      	str	r5, [sp, #108]	; 0x6c
					sum += P[i + k * 6] * H[j + k * 6];
 8004678:	6bbd      	ldr	r5, [r7, #56]	; 0x38
				M[i * 6 + j] = sum;
 800467a:	6090      	str	r0, [r2, #8]
 800467c:	6116      	str	r6, [r2, #16]
					sum += P[i + k * 6] * H[j + k * 6];
 800467e:	1c29      	adds	r1, r5, #0
				M[i * 6 + j] = sum;
 8004680:	9029      	str	r0, [sp, #164]	; 0xa4
					sum += P[i + k * 6] * H[j + k * 6];
 8004682:	980b      	ldr	r0, [sp, #44]	; 0x2c
				M[i * 6 + j] = sum;
 8004684:	961c      	str	r6, [sp, #112]	; 0x70
					sum += P[i + k * 6] * H[j + k * 6];
 8004686:	f7fc fb35 	bl	8000cf4 <__aeabi_fmul>
 800468a:	6a3e      	ldr	r6, [r7, #32]
 800468c:	6d3f      	ldr	r7, [r7, #80]	; 0x50
 800468e:	1c04      	adds	r4, r0, #0
 8004690:	1c39      	adds	r1, r7, #0
 8004692:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004694:	f7fc fb2e 	bl	8000cf4 <__aeabi_fmul>
 8004698:	1c01      	adds	r1, r0, #0
 800469a:	1c20      	adds	r0, r4, #0
 800469c:	f7fb ffc4 	bl	8000628 <__aeabi_fadd>
 80046a0:	4641      	mov	r1, r8
 80046a2:	2380      	movs	r3, #128	; 0x80
 80046a4:	4684      	mov	ip, r0
 80046a6:	6e88      	ldr	r0, [r1, #104]	; 0x68
 80046a8:	58cc      	ldr	r4, [r1, r3]
 80046aa:	3318      	adds	r3, #24
				M[i * 6 + j] = sum;
 80046ac:	4662      	mov	r2, ip
					sum += P[i + k * 6] * H[j + k * 6];
 80046ae:	4682      	mov	sl, r0
 80046b0:	58c8      	ldr	r0, [r1, r3]
				M[i * 6 + j] = sum;
 80046b2:	464b      	mov	r3, r9
 80046b4:	922c      	str	r2, [sp, #176]	; 0xb0
					sum += P[i + k * 6] * H[j + k * 6];
 80046b6:	1c31      	adds	r1, r6, #0
 80046b8:	9400      	str	r4, [sp, #0]
 80046ba:	9002      	str	r0, [sp, #8]
				M[i * 6 + j] = sum;
 80046bc:	619a      	str	r2, [r3, #24]
					sum += P[i + k * 6] * H[j + k * 6];
 80046be:	9819      	ldr	r0, [sp, #100]	; 0x64
 80046c0:	f7fc fb18 	bl	8000cf4 <__aeabi_fmul>
 80046c4:	1c39      	adds	r1, r7, #0
 80046c6:	1c04      	adds	r4, r0, #0
 80046c8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80046ca:	f7fc fb13 	bl	8000cf4 <__aeabi_fmul>
 80046ce:	1c01      	adds	r1, r0, #0
 80046d0:	1c20      	adds	r0, r4, #0
 80046d2:	f7fb ffa9 	bl	8000628 <__aeabi_fadd>
				M[i * 6 + j] = sum;
 80046d6:	464f      	mov	r7, r9
					sum += P[i + k * 6] * H[j + k * 6];
 80046d8:	1c31      	adds	r1, r6, #0
				M[i * 6 + j] = sum;
 80046da:	61f8      	str	r0, [r7, #28]
 80046dc:	902a      	str	r0, [sp, #168]	; 0xa8
					sum += P[i + k * 6] * H[j + k * 6];
 80046de:	9809      	ldr	r0, [sp, #36]	; 0x24
 80046e0:	f7fc fb08 	bl	8000cf4 <__aeabi_fmul>
 80046e4:	1c29      	adds	r1, r5, #0
 80046e6:	465d      	mov	r5, fp
 80046e8:	1c06      	adds	r6, r0, #0
 80046ea:	4658      	mov	r0, fp
 80046ec:	951e      	str	r5, [sp, #120]	; 0x78
 80046ee:	f7fc fb01 	bl	8000cf4 <__aeabi_fmul>
 80046f2:	1c01      	adds	r1, r0, #0
 80046f4:	1c30      	adds	r0, r6, #0
 80046f6:	f7fb ff97 	bl	8000628 <__aeabi_fadd>
 80046fa:	4683      	mov	fp, r0
				M[i * 6 + j] = sum;
 80046fc:	4652      	mov	r2, sl
 80046fe:	465b      	mov	r3, fp
					sum += P[i + k * 6] * H[j + k * 6];
 8004700:	4641      	mov	r1, r8
				M[i * 6 + j] = sum;
 8004702:	4648      	mov	r0, r9
 8004704:	9c00      	ldr	r4, [sp, #0]
 8004706:	623b      	str	r3, [r7, #32]
 8004708:	627a      	str	r2, [r7, #36]	; 0x24
					sum += P[i + k * 6] * H[j + k * 6];
 800470a:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
				M[i * 6 + j] = sum;
 800470c:	62bc      	str	r4, [r7, #40]	; 0x28
 800470e:	9f02      	ldr	r7, [sp, #8]
					sum += P[i + k * 6] * H[j + k * 6];
 8004710:	6a4e      	ldr	r6, [r1, #36]	; 0x24
				M[i * 6 + j] = sum;
 8004712:	62c7      	str	r7, [r0, #44]	; 0x2c
					sum += P[i + k * 6] * H[j + k * 6];
 8004714:	6d4f      	ldr	r7, [r1, #84]	; 0x54
 8004716:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004718:	1c29      	adds	r1, r5, #0
				M[i * 6 + j] = sum;
 800471a:	932d      	str	r3, [sp, #180]	; 0xb4
					sum += P[i + k * 6] * H[j + k * 6];
 800471c:	f7fc faea 	bl	8000cf4 <__aeabi_fmul>
 8004720:	1c39      	adds	r1, r7, #0
 8004722:	1c04      	adds	r4, r0, #0
 8004724:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004726:	f7fc fae5 	bl	8000cf4 <__aeabi_fmul>
 800472a:	1c01      	adds	r1, r0, #0
 800472c:	1c20      	adds	r0, r4, #0
 800472e:	f7fb ff7b 	bl	8000628 <__aeabi_fadd>
 8004732:	4643      	mov	r3, r8
 8004734:	4684      	mov	ip, r0
 8004736:	2084      	movs	r0, #132	; 0x84
 8004738:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 800473a:	581c      	ldr	r4, [r3, r0]
 800473c:	4641      	mov	r1, r8
 800473e:	239c      	movs	r3, #156	; 0x9c
 8004740:	46a3      	mov	fp, r4
				M[i * 6 + j] = sum;
 8004742:	4648      	mov	r0, r9
 8004744:	4664      	mov	r4, ip
					sum += P[i + k * 6] * H[j + k * 6];
 8004746:	58c9      	ldr	r1, [r1, r3]
				M[i * 6 + j] = sum;
 8004748:	6304      	str	r4, [r0, #48]	; 0x30
					sum += P[i + k * 6] * H[j + k * 6];
 800474a:	9106      	str	r1, [sp, #24]
 800474c:	9819      	ldr	r0, [sp, #100]	; 0x64
 800474e:	1c31      	adds	r1, r6, #0
 8004750:	9204      	str	r2, [sp, #16]
				M[i * 6 + j] = sum;
 8004752:	942e      	str	r4, [sp, #184]	; 0xb8
					sum += P[i + k * 6] * H[j + k * 6];
 8004754:	f7fc face 	bl	8000cf4 <__aeabi_fmul>
 8004758:	1c39      	adds	r1, r7, #0
 800475a:	1c04      	adds	r4, r0, #0
 800475c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800475e:	f7fc fac9 	bl	8000cf4 <__aeabi_fmul>
 8004762:	1c01      	adds	r1, r0, #0
 8004764:	1c20      	adds	r0, r4, #0
 8004766:	f7fb ff5f 	bl	8000628 <__aeabi_fadd>
				M[i * 6 + j] = sum;
 800476a:	464a      	mov	r2, r9
					sum += P[i + k * 6] * H[j + k * 6];
 800476c:	1c31      	adds	r1, r6, #0
				M[i * 6 + j] = sum;
 800476e:	6350      	str	r0, [r2, #52]	; 0x34
 8004770:	9030      	str	r0, [sp, #192]	; 0xc0
					sum += P[i + k * 6] * H[j + k * 6];
 8004772:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004774:	f7fc fabe 	bl	8000cf4 <__aeabi_fmul>
 8004778:	1c29      	adds	r1, r5, #0
 800477a:	1c06      	adds	r6, r0, #0
 800477c:	981e      	ldr	r0, [sp, #120]	; 0x78
 800477e:	f7fc fab9 	bl	8000cf4 <__aeabi_fmul>
 8004782:	1c01      	adds	r1, r0, #0
 8004784:	1c30      	adds	r0, r6, #0
 8004786:	f7fb ff4f 	bl	8000628 <__aeabi_fadd>
 800478a:	4684      	mov	ip, r0
 800478c:	4642      	mov	r2, r8
				M[i * 6 + j] = sum;
 800478e:	4665      	mov	r5, ip
 8004790:	4648      	mov	r0, r9
 8004792:	465b      	mov	r3, fp
 8004794:	9534      	str	r5, [sp, #208]	; 0xd0
 8004796:	9904      	ldr	r1, [sp, #16]
 8004798:	9c06      	ldr	r4, [sp, #24]
 800479a:	6385      	str	r5, [r0, #56]	; 0x38
					sum += P[i + k * 6] * H[j + k * 6];
 800479c:	6c15      	ldr	r5, [r2, #64]	; 0x40
				M[i * 6 + j] = sum;
 800479e:	6403      	str	r3, [r0, #64]	; 0x40
 80047a0:	63c1      	str	r1, [r0, #60]	; 0x3c
 80047a2:	6444      	str	r4, [r0, #68]	; 0x44
					sum += P[i + k * 6] * H[j + k * 6];
 80047a4:	1c29      	adds	r1, r5, #0
 80047a6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80047a8:	6a96      	ldr	r6, [r2, #40]	; 0x28
 80047aa:	6d97      	ldr	r7, [r2, #88]	; 0x58
 80047ac:	f7fc faa2 	bl	8000cf4 <__aeabi_fmul>
 80047b0:	1c39      	adds	r1, r7, #0
 80047b2:	1c04      	adds	r4, r0, #0
 80047b4:	9818      	ldr	r0, [sp, #96]	; 0x60
 80047b6:	f7fc fa9d 	bl	8000cf4 <__aeabi_fmul>
 80047ba:	1c01      	adds	r1, r0, #0
 80047bc:	1c20      	adds	r0, r4, #0
 80047be:	f7fb ff33 	bl	8000628 <__aeabi_fadd>
 80047c2:	2388      	movs	r3, #136	; 0x88
 80047c4:	4684      	mov	ip, r0
 80047c6:	4640      	mov	r0, r8
 80047c8:	4644      	mov	r4, r8
 80047ca:	58c2      	ldr	r2, [r0, r3]
 80047cc:	6f01      	ldr	r1, [r0, #112]	; 0x70
 80047ce:	20a0      	movs	r0, #160	; 0xa0
				M[i * 6 + j] = sum;
 80047d0:	464b      	mov	r3, r9
					sum += P[i + k * 6] * H[j + k * 6];
 80047d2:	9112      	str	r1, [sp, #72]	; 0x48
 80047d4:	5821      	ldr	r1, [r4, r0]
				M[i * 6 + j] = sum;
 80047d6:	4664      	mov	r4, ip
					sum += P[i + k * 6] * H[j + k * 6];
 80047d8:	9819      	ldr	r0, [sp, #100]	; 0x64
				M[i * 6 + j] = sum;
 80047da:	649c      	str	r4, [r3, #72]	; 0x48
					sum += P[i + k * 6] * H[j + k * 6];
 80047dc:	9116      	str	r1, [sp, #88]	; 0x58
 80047de:	1c31      	adds	r1, r6, #0
 80047e0:	9214      	str	r2, [sp, #80]	; 0x50
				M[i * 6 + j] = sum;
 80047e2:	9432      	str	r4, [sp, #200]	; 0xc8
					sum += P[i + k * 6] * H[j + k * 6];
 80047e4:	f7fc fa86 	bl	8000cf4 <__aeabi_fmul>
 80047e8:	1c39      	adds	r1, r7, #0
 80047ea:	1c04      	adds	r4, r0, #0
 80047ec:	980a      	ldr	r0, [sp, #40]	; 0x28
 80047ee:	f7fc fa81 	bl	8000cf4 <__aeabi_fmul>
 80047f2:	1c01      	adds	r1, r0, #0
 80047f4:	1c20      	adds	r0, r4, #0
 80047f6:	f7fb ff17 	bl	8000628 <__aeabi_fadd>
 80047fa:	4684      	mov	ip, r0
				M[i * 6 + j] = sum;
 80047fc:	4648      	mov	r0, r9
 80047fe:	4667      	mov	r7, ip
					sum += P[i + k * 6] * H[j + k * 6];
 8004800:	1c31      	adds	r1, r6, #0
				M[i * 6 + j] = sum;
 8004802:	64c7      	str	r7, [r0, #76]	; 0x4c
					sum += P[i + k * 6] * H[j + k * 6];
 8004804:	9809      	ldr	r0, [sp, #36]	; 0x24
				M[i * 6 + j] = sum;
 8004806:	9735      	str	r7, [sp, #212]	; 0xd4
					sum += P[i + k * 6] * H[j + k * 6];
 8004808:	f7fc fa74 	bl	8000cf4 <__aeabi_fmul>
 800480c:	1c29      	adds	r1, r5, #0
 800480e:	1c06      	adds	r6, r0, #0
 8004810:	981e      	ldr	r0, [sp, #120]	; 0x78
 8004812:	f7fc fa6f 	bl	8000cf4 <__aeabi_fmul>
 8004816:	1c01      	adds	r1, r0, #0
 8004818:	1c30      	adds	r0, r6, #0
 800481a:	f7fb ff05 	bl	8000628 <__aeabi_fadd>
				M[i * 6 + j] = sum;
 800481e:	464d      	mov	r5, r9
 8004820:	9036      	str	r0, [sp, #216]	; 0xd8
 8004822:	6528      	str	r0, [r5, #80]	; 0x50
					sum += P[i + k * 6] * H[j + k * 6];
 8004824:	4640      	mov	r0, r8
				M[i * 6 + j] = sum;
 8004826:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004828:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800482a:	9c16      	ldr	r4, [sp, #88]	; 0x58
					sum += P[i + k * 6] * H[j + k * 6];
 800482c:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
				M[i * 6 + j] = sum;
 800482e:	656b      	str	r3, [r5, #84]	; 0x54
 8004830:	65aa      	str	r2, [r5, #88]	; 0x58
 8004832:	65ec      	str	r4, [r5, #92]	; 0x5c
					sum += P[i + k * 6] * H[j + k * 6];
 8004834:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8004836:	6dc7      	ldr	r7, [r0, #92]	; 0x5c
 8004838:	1c29      	adds	r1, r5, #0
 800483a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800483c:	f7fc fa5a 	bl	8000cf4 <__aeabi_fmul>
 8004840:	1c39      	adds	r1, r7, #0
 8004842:	1c04      	adds	r4, r0, #0
 8004844:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004846:	f7fc fa55 	bl	8000cf4 <__aeabi_fmul>
 800484a:	1c01      	adds	r1, r0, #0
 800484c:	1c20      	adds	r0, r4, #0
 800484e:	f7fb feeb 	bl	8000628 <__aeabi_fadd>
 8004852:	4641      	mov	r1, r8
 8004854:	4684      	mov	ip, r0
 8004856:	208c      	movs	r0, #140	; 0x8c
 8004858:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 800485a:	580c      	ldr	r4, [r1, r0]
 800485c:	9321      	str	r3, [sp, #132]	; 0x84
 800485e:	23a4      	movs	r3, #164	; 0xa4
				M[i * 6 + j] = sum;
 8004860:	4660      	mov	r0, ip
					sum += P[i + k * 6] * H[j + k * 6];
 8004862:	9422      	str	r4, [sp, #136]	; 0x88
				M[i * 6 + j] = sum;
 8004864:	464c      	mov	r4, r9
					sum += P[i + k * 6] * H[j + k * 6];
 8004866:	58ca      	ldr	r2, [r1, r3]
				M[i * 6 + j] = sum;
 8004868:	6620      	str	r0, [r4, #96]	; 0x60
					sum += P[i + k * 6] * H[j + k * 6];
 800486a:	1c31      	adds	r1, r6, #0
				M[i * 6 + j] = sum;
 800486c:	903a      	str	r0, [sp, #232]	; 0xe8
					sum += P[i + k * 6] * H[j + k * 6];
 800486e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004870:	9228      	str	r2, [sp, #160]	; 0xa0
 8004872:	f7fc fa3f 	bl	8000cf4 <__aeabi_fmul>
 8004876:	1c39      	adds	r1, r7, #0
 8004878:	1c04      	adds	r4, r0, #0
 800487a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800487c:	f7fc fa3a 	bl	8000cf4 <__aeabi_fmul>
 8004880:	1c01      	adds	r1, r0, #0
 8004882:	1c20      	adds	r0, r4, #0
 8004884:	f7fb fed0 	bl	8000628 <__aeabi_fadd>
				M[i * 6 + j] = sum;
 8004888:	4649      	mov	r1, r9
 800488a:	9038      	str	r0, [sp, #224]	; 0xe0
 800488c:	6648      	str	r0, [r1, #100]	; 0x64
					sum += P[i + k * 6] * H[j + k * 6];
 800488e:	1c31      	adds	r1, r6, #0
 8004890:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004892:	f7fc fa2f 	bl	8000cf4 <__aeabi_fmul>
 8004896:	1c29      	adds	r1, r5, #0
 8004898:	1c06      	adds	r6, r0, #0
 800489a:	981e      	ldr	r0, [sp, #120]	; 0x78
 800489c:	f7fc fa2a 	bl	8000cf4 <__aeabi_fmul>
 80048a0:	1c01      	adds	r1, r0, #0
 80048a2:	1c30      	adds	r0, r6, #0
 80048a4:	f7fb fec0 	bl	8000628 <__aeabi_fadd>
 80048a8:	4684      	mov	ip, r0
 80048aa:	4642      	mov	r2, r8
				M[i * 6 + j] = sum;
 80048ac:	4665      	mov	r5, ip
 80048ae:	4648      	mov	r0, r9
					sum += P[i + k * 6] * H[j + k * 6];
 80048b0:	6c96      	ldr	r6, [r2, #72]	; 0x48
				M[i * 6 + j] = sum;
 80048b2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80048b4:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80048b6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80048b8:	66c3      	str	r3, [r0, #108]	; 0x6c
 80048ba:	6685      	str	r5, [r0, #104]	; 0x68
 80048bc:	6704      	str	r4, [r0, #112]	; 0x70
 80048be:	6741      	str	r1, [r0, #116]	; 0x74
					sum += P[i + k * 6] * H[j + k * 6];
 80048c0:	1c31      	adds	r1, r6, #0
 80048c2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80048c4:	6b17      	ldr	r7, [r2, #48]	; 0x30
				M[i * 6 + j] = sum;
 80048c6:	953b      	str	r5, [sp, #236]	; 0xec
					sum += P[i + k * 6] * H[j + k * 6];
 80048c8:	6e15      	ldr	r5, [r2, #96]	; 0x60
 80048ca:	f7fc fa13 	bl	8000cf4 <__aeabi_fmul>
 80048ce:	1c29      	adds	r1, r5, #0
 80048d0:	1c04      	adds	r4, r0, #0
 80048d2:	9818      	ldr	r0, [sp, #96]	; 0x60
 80048d4:	f7fc fa0e 	bl	8000cf4 <__aeabi_fmul>
 80048d8:	1c01      	adds	r1, r0, #0
 80048da:	1c20      	adds	r0, r4, #0
 80048dc:	f7fb fea4 	bl	8000628 <__aeabi_fadd>
 80048e0:	4643      	mov	r3, r8
 80048e2:	2290      	movs	r2, #144	; 0x90
 80048e4:	1c04      	adds	r4, r0, #0
 80048e6:	4640      	mov	r0, r8
 80048e8:	6f99      	ldr	r1, [r3, #120]	; 0x78
 80048ea:	589b      	ldr	r3, [r3, r2]
 80048ec:	3218      	adds	r2, #24
 80048ee:	5882      	ldr	r2, [r0, r2]
				M[i * 6 + j] = sum;
 80048f0:	4648      	mov	r0, r9
					sum += P[i + k * 6] * H[j + k * 6];
 80048f2:	910c      	str	r1, [sp, #48]	; 0x30
				M[i * 6 + j] = sum;
 80048f4:	6784      	str	r4, [r0, #120]	; 0x78
					sum += P[i + k * 6] * H[j + k * 6];
 80048f6:	1c39      	adds	r1, r7, #0
 80048f8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80048fa:	9210      	str	r2, [sp, #64]	; 0x40
 80048fc:	930e      	str	r3, [sp, #56]	; 0x38
 80048fe:	f7fc f9f9 	bl	8000cf4 <__aeabi_fmul>
 8004902:	1c29      	adds	r1, r5, #0
 8004904:	903e      	str	r0, [sp, #248]	; 0xf8
 8004906:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004908:	f7fc f9f4 	bl	8000cf4 <__aeabi_fmul>
 800490c:	1c01      	adds	r1, r0, #0
 800490e:	983e      	ldr	r0, [sp, #248]	; 0xf8
 8004910:	f7fb fe8a 	bl	8000628 <__aeabi_fadd>
				M[i * 6 + j] = sum;
 8004914:	464b      	mov	r3, r9
					sum += P[i + k * 6] * H[j + k * 6];
 8004916:	1c05      	adds	r5, r0, #0
				M[i * 6 + j] = sum;
 8004918:	67d8      	str	r0, [r3, #124]	; 0x7c
					sum += P[i + k * 6] * H[j + k * 6];
 800491a:	1c39      	adds	r1, r7, #0
 800491c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800491e:	f7fc f9e9 	bl	8000cf4 <__aeabi_fmul>
 8004922:	1c31      	adds	r1, r6, #0
 8004924:	1c07      	adds	r7, r0, #0
 8004926:	981e      	ldr	r0, [sp, #120]	; 0x78
 8004928:	f7fc f9e4 	bl	8000cf4 <__aeabi_fmul>
 800492c:	1c01      	adds	r1, r0, #0
 800492e:	1c38      	adds	r0, r7, #0
 8004930:	f7fb fe7a 	bl	8000628 <__aeabi_fadd>
				M[i * 6 + j] = sum;
 8004934:	4649      	mov	r1, r9
 8004936:	2380      	movs	r3, #128	; 0x80
 8004938:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800493a:	50c8      	str	r0, [r1, r3]
 800493c:	001e      	movs	r6, r3
 800493e:	3304      	adds	r3, #4
 8004940:	50ca      	str	r2, [r1, r3]
 8004942:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8004944:	001f      	movs	r7, r3
 8004946:	3304      	adds	r3, #4
 8004948:	50ca      	str	r2, [r1, r3]
 800494a:	228c      	movs	r2, #140	; 0x8c
 800494c:	9b10      	ldr	r3, [sp, #64]	; 0x40
			for (int i = 0; i < 6; i++) {
				float sum = 0.0;
				for (int k = 0; k < 6; k++) {
					sum += H[i + k * 6] * M[k * 6 + j];
				}
				S[i + j * 6] = sum;
 800494e:	9489      	str	r4, [sp, #548]	; 0x224
				M[i * 6 + j] = sum;
 8004950:	508b      	str	r3, [r1, r2]
				S[i + j * 6] = sum;
 8004952:	9c35      	ldr	r4, [sp, #212]	; 0xd4
 8004954:	9a3a      	ldr	r2, [sp, #232]	; 0xe8
 8004956:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8004958:	9288      	str	r2, [sp, #544]	; 0x220
 800495a:	9187      	str	r1, [sp, #540]	; 0x21c
 800495c:	948d      	str	r4, [sp, #564]	; 0x234
 800495e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8004960:	993b      	ldr	r1, [sp, #236]	; 0xec
 8004962:	958f      	str	r5, [sp, #572]	; 0x23c
 8004964:	9d36      	ldr	r5, [sp, #216]	; 0xd8
 8004966:	9194      	str	r1, [sp, #592]	; 0x250
 8004968:	9095      	str	r0, [sp, #596]	; 0x254
					sum += H[i + k * 6] * M[k * 6 + j];
 800496a:	4651      	mov	r1, sl
 800496c:	980b      	ldr	r0, [sp, #44]	; 0x2c
				S[i + j * 6] = sum;
 800496e:	938e      	str	r3, [sp, #568]	; 0x238
 8004970:	9593      	str	r5, [sp, #588]	; 0x24c
					sum += H[i + k * 6] * M[k * 6 + j];
 8004972:	f7fc f9bf 	bl	8000cf4 <__aeabi_fmul>
 8004976:	9904      	ldr	r1, [sp, #16]
 8004978:	1c04      	adds	r4, r0, #0
 800497a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800497c:	f7fc f9ba 	bl	8000cf4 <__aeabi_fmul>
 8004980:	1c01      	adds	r1, r0, #0
 8004982:	1c20      	adds	r0, r4, #0
 8004984:	f7fb fe50 	bl	8000628 <__aeabi_fadd>
 8004988:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800498a:	991b      	ldr	r1, [sp, #108]	; 0x6c
				S[i + j * 6] = sum;
 800498c:	9096      	str	r0, [sp, #600]	; 0x258
					sum += H[i + k * 6] * M[k * 6 + j];
 800498e:	1c28      	adds	r0, r5, #0
 8004990:	f7fc f9b0 	bl	8000cf4 <__aeabi_fmul>
 8004994:	9904      	ldr	r1, [sp, #16]
 8004996:	1c04      	adds	r4, r0, #0
 8004998:	980a      	ldr	r0, [sp, #40]	; 0x28
 800499a:	f7fc f9ab 	bl	8000cf4 <__aeabi_fmul>
 800499e:	1c01      	adds	r1, r0, #0
 80049a0:	1c20      	adds	r0, r4, #0
 80049a2:	f7fb fe41 	bl	8000628 <__aeabi_fadd>
 80049a6:	991b      	ldr	r1, [sp, #108]	; 0x6c
				S[i + j * 6] = sum;
 80049a8:	9097      	str	r0, [sp, #604]	; 0x25c
					sum += H[i + k * 6] * M[k * 6 + j];
 80049aa:	9809      	ldr	r0, [sp, #36]	; 0x24
 80049ac:	f7fc f9a2 	bl	8000cf4 <__aeabi_fmul>
 80049b0:	1c04      	adds	r4, r0, #0
 80049b2:	981e      	ldr	r0, [sp, #120]	; 0x78
 80049b4:	4651      	mov	r1, sl
 80049b6:	4682      	mov	sl, r0
 80049b8:	f7fc f99c 	bl	8000cf4 <__aeabi_fmul>
 80049bc:	1c01      	adds	r1, r0, #0
 80049be:	1c20      	adds	r0, r4, #0
 80049c0:	f7fb fe32 	bl	8000628 <__aeabi_fadd>
 80049c4:	9900      	ldr	r1, [sp, #0]
				S[i + j * 6] = sum;
 80049c6:	9098      	str	r0, [sp, #608]	; 0x260
					sum += H[i + k * 6] * M[k * 6 + j];
 80049c8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80049ca:	e001      	b.n	80049d0 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1450>
 80049cc:	3ff00000 	.word	0x3ff00000
 80049d0:	f7fc f990 	bl	8000cf4 <__aeabi_fmul>
 80049d4:	4659      	mov	r1, fp
 80049d6:	1c04      	adds	r4, r0, #0
 80049d8:	9818      	ldr	r0, [sp, #96]	; 0x60
 80049da:	f7fc f98b 	bl	8000cf4 <__aeabi_fmul>
 80049de:	1c01      	adds	r1, r0, #0
 80049e0:	1c20      	adds	r0, r4, #0
 80049e2:	f7fb fe21 	bl	8000628 <__aeabi_fadd>
 80049e6:	991c      	ldr	r1, [sp, #112]	; 0x70
				S[i + j * 6] = sum;
 80049e8:	909c      	str	r0, [sp, #624]	; 0x270
					sum += H[i + k * 6] * M[k * 6 + j];
 80049ea:	1c28      	adds	r0, r5, #0
 80049ec:	f7fc f982 	bl	8000cf4 <__aeabi_fmul>
 80049f0:	4659      	mov	r1, fp
 80049f2:	1c04      	adds	r4, r0, #0
 80049f4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80049f6:	f7fc f97d 	bl	8000cf4 <__aeabi_fmul>
 80049fa:	1c01      	adds	r1, r0, #0
 80049fc:	1c20      	adds	r0, r4, #0
 80049fe:	f7fb fe13 	bl	8000628 <__aeabi_fadd>
 8004a02:	991c      	ldr	r1, [sp, #112]	; 0x70
				S[i + j * 6] = sum;
 8004a04:	909d      	str	r0, [sp, #628]	; 0x274
					sum += H[i + k * 6] * M[k * 6 + j];
 8004a06:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004a08:	f7fc f974 	bl	8000cf4 <__aeabi_fmul>
 8004a0c:	9900      	ldr	r1, [sp, #0]
 8004a0e:	1c04      	adds	r4, r0, #0
 8004a10:	4650      	mov	r0, sl
 8004a12:	f7fc f96f 	bl	8000cf4 <__aeabi_fmul>
 8004a16:	1c01      	adds	r1, r0, #0
 8004a18:	1c20      	adds	r0, r4, #0
 8004a1a:	f7fb fe05 	bl	8000628 <__aeabi_fadd>
 8004a1e:	9902      	ldr	r1, [sp, #8]
				S[i + j * 6] = sum;
 8004a20:	909e      	str	r0, [sp, #632]	; 0x278
					sum += H[i + k * 6] * M[k * 6 + j];
 8004a22:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004a24:	f7fc f966 	bl	8000cf4 <__aeabi_fmul>
 8004a28:	9906      	ldr	r1, [sp, #24]
 8004a2a:	1c04      	adds	r4, r0, #0
 8004a2c:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004a2e:	f7fc f961 	bl	8000cf4 <__aeabi_fmul>
 8004a32:	1c01      	adds	r1, r0, #0
 8004a34:	1c20      	adds	r0, r4, #0
 8004a36:	f7fb fdf7 	bl	8000628 <__aeabi_fadd>
 8004a3a:	991d      	ldr	r1, [sp, #116]	; 0x74
				S[i + j * 6] = sum;
 8004a3c:	90a2      	str	r0, [sp, #648]	; 0x288
					sum += H[i + k * 6] * M[k * 6 + j];
 8004a3e:	1c28      	adds	r0, r5, #0
 8004a40:	f7fc f958 	bl	8000cf4 <__aeabi_fmul>
 8004a44:	46ab      	mov	fp, r5
 8004a46:	9906      	ldr	r1, [sp, #24]
 8004a48:	1c05      	adds	r5, r0, #0
 8004a4a:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004a4c:	f7fc f952 	bl	8000cf4 <__aeabi_fmul>
 8004a50:	1c01      	adds	r1, r0, #0
 8004a52:	1c28      	adds	r0, r5, #0
 8004a54:	f7fb fde8 	bl	8000628 <__aeabi_fadd>
 8004a58:	991d      	ldr	r1, [sp, #116]	; 0x74
				S[i + j * 6] = sum;
 8004a5a:	90a3      	str	r0, [sp, #652]	; 0x28c
					sum += H[i + k * 6] * M[k * 6 + j];
 8004a5c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004a5e:	f7fc f949 	bl	8000cf4 <__aeabi_fmul>
 8004a62:	9902      	ldr	r1, [sp, #8]
 8004a64:	1c04      	adds	r4, r0, #0
 8004a66:	4650      	mov	r0, sl
 8004a68:	f7fc f944 	bl	8000cf4 <__aeabi_fmul>
 8004a6c:	1c01      	adds	r1, r0, #0
 8004a6e:	1c20      	adds	r0, r4, #0
 8004a70:	f7fb fdda 	bl	8000628 <__aeabi_fadd>
				S[i + j * 6] = sum;
 8004a74:	0033      	movs	r3, r6
 8004a76:	aa60      	add	r2, sp, #384	; 0x180
 8004a78:	3610      	adds	r6, #16
 8004a7a:	1991      	adds	r1, r2, r6
 8004a7c:	50c8      	str	r0, [r1, r3]
			}
		}
		for (int j = 0; j < 3; j++) {
			for (int i = 0; i < 3; i++) {
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004a7e:	4640      	mov	r0, r8
 8004a80:	3398      	adds	r3, #152	; 0x98
 8004a82:	58c1      	ldr	r1, [r0, r3]
 8004a84:	3b48      	subs	r3, #72	; 0x48
 8004a86:	58c0      	ldr	r0, [r0, r3]
 8004a88:	f7fb fdce 	bl	8000628 <__aeabi_fadd>
					sum += H[i + k * 6] * M[k * 6 + j];
 8004a8c:	992c      	ldr	r1, [sp, #176]	; 0xb0
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004a8e:	1c04      	adds	r4, r0, #0
					sum += H[i + k * 6] * M[k * 6 + j];
 8004a90:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004a92:	f7fc f92f 	bl	8000cf4 <__aeabi_fmul>
 8004a96:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8004a98:	1c05      	adds	r5, r0, #0
 8004a9a:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004a9c:	f7fc f92a 	bl	8000cf4 <__aeabi_fmul>
 8004aa0:	1c01      	adds	r1, r0, #0
 8004aa2:	1c28      	adds	r0, r5, #0
 8004aa4:	f7fb fdc0 	bl	8000628 <__aeabi_fadd>
 8004aa8:	1c01      	adds	r1, r0, #0
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004aaa:	1c20      	adds	r0, r4, #0
 8004aac:	f7fb fdbc 	bl	8000628 <__aeabi_fadd>
 8004ab0:	228e      	movs	r2, #142	; 0x8e
 8004ab2:	9084      	str	r0, [sp, #528]	; 0x210
 8004ab4:	4640      	mov	r0, r8
 8004ab6:	0053      	lsls	r3, r2, #1
 8004ab8:	58c1      	ldr	r1, [r0, r3]
 8004aba:	3b48      	subs	r3, #72	; 0x48
 8004abc:	58c0      	ldr	r0, [r0, r3]
 8004abe:	f7fb fdb3 	bl	8000628 <__aeabi_fadd>
					sum += H[i + k * 6] * M[k * 6 + j];
 8004ac2:	9924      	ldr	r1, [sp, #144]	; 0x90
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004ac4:	1c04      	adds	r4, r0, #0
					sum += H[i + k * 6] * M[k * 6 + j];
 8004ac6:	4658      	mov	r0, fp
 8004ac8:	f7fc f914 	bl	8000cf4 <__aeabi_fmul>
 8004acc:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8004ace:	1c05      	adds	r5, r0, #0
 8004ad0:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004ad2:	f7fc f90f 	bl	8000cf4 <__aeabi_fmul>
 8004ad6:	1c01      	adds	r1, r0, #0
 8004ad8:	1c28      	adds	r0, r5, #0
 8004ada:	f7fb fda5 	bl	8000628 <__aeabi_fadd>
 8004ade:	1c01      	adds	r1, r0, #0
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004ae0:	1c20      	adds	r0, r4, #0
 8004ae2:	f7fb fda1 	bl	8000628 <__aeabi_fadd>
 8004ae6:	2190      	movs	r1, #144	; 0x90
 8004ae8:	4643      	mov	r3, r8
 8004aea:	004a      	lsls	r2, r1, #1
 8004aec:	5899      	ldr	r1, [r3, r2]
 8004aee:	3a48      	subs	r2, #72	; 0x48
 8004af0:	9085      	str	r0, [sp, #532]	; 0x214
 8004af2:	5898      	ldr	r0, [r3, r2]
 8004af4:	f7fb fd98 	bl	8000628 <__aeabi_fadd>
					sum += H[i + k * 6] * M[k * 6 + j];
 8004af8:	9924      	ldr	r1, [sp, #144]	; 0x90
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004afa:	1c04      	adds	r4, r0, #0
					sum += H[i + k * 6] * M[k * 6 + j];
 8004afc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004afe:	f7fc f8f9 	bl	8000cf4 <__aeabi_fmul>
 8004b02:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8004b04:	1c05      	adds	r5, r0, #0
 8004b06:	4650      	mov	r0, sl
 8004b08:	f7fc f8f4 	bl	8000cf4 <__aeabi_fmul>
 8004b0c:	1c01      	adds	r1, r0, #0
 8004b0e:	1c28      	adds	r0, r5, #0
 8004b10:	f7fb fd8a 	bl	8000628 <__aeabi_fadd>
 8004b14:	1c01      	adds	r1, r0, #0
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004b16:	1c20      	adds	r0, r4, #0
 8004b18:	f7fb fd86 	bl	8000628 <__aeabi_fadd>
 8004b1c:	9086      	str	r0, [sp, #536]	; 0x218
 8004b1e:	2092      	movs	r0, #146	; 0x92
 8004b20:	4643      	mov	r3, r8
 8004b22:	0042      	lsls	r2, r0, #1
 8004b24:	5899      	ldr	r1, [r3, r2]
 8004b26:	3a48      	subs	r2, #72	; 0x48
 8004b28:	5898      	ldr	r0, [r3, r2]
 8004b2a:	f7fb fd7d 	bl	8000628 <__aeabi_fadd>
					sum += H[i + k * 6] * M[k * 6 + j];
 8004b2e:	992a      	ldr	r1, [sp, #168]	; 0xa8
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004b30:	1c04      	adds	r4, r0, #0
					sum += H[i + k * 6] * M[k * 6 + j];
 8004b32:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004b34:	f7fc f8de 	bl	8000cf4 <__aeabi_fmul>
 8004b38:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8004b3a:	1c05      	adds	r5, r0, #0
 8004b3c:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004b3e:	f7fc f8d9 	bl	8000cf4 <__aeabi_fmul>
 8004b42:	1c01      	adds	r1, r0, #0
 8004b44:	1c28      	adds	r0, r5, #0
 8004b46:	f7fb fd6f 	bl	8000628 <__aeabi_fadd>
 8004b4a:	1c01      	adds	r1, r0, #0
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004b4c:	1c20      	adds	r0, r4, #0
 8004b4e:	f7fb fd6b 	bl	8000628 <__aeabi_fadd>
 8004b52:	2194      	movs	r1, #148	; 0x94
 8004b54:	4642      	mov	r2, r8
 8004b56:	908a      	str	r0, [sp, #552]	; 0x228
 8004b58:	0048      	lsls	r0, r1, #1
 8004b5a:	5811      	ldr	r1, [r2, r0]
 8004b5c:	3848      	subs	r0, #72	; 0x48
 8004b5e:	5810      	ldr	r0, [r2, r0]
 8004b60:	f7fb fd62 	bl	8000628 <__aeabi_fadd>
					sum += H[i + k * 6] * M[k * 6 + j];
 8004b64:	9926      	ldr	r1, [sp, #152]	; 0x98
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004b66:	1c04      	adds	r4, r0, #0
					sum += H[i + k * 6] * M[k * 6 + j];
 8004b68:	4658      	mov	r0, fp
 8004b6a:	f7fc f8c3 	bl	8000cf4 <__aeabi_fmul>
 8004b6e:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8004b70:	1c05      	adds	r5, r0, #0
 8004b72:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004b74:	f7fc f8be 	bl	8000cf4 <__aeabi_fmul>
 8004b78:	1c01      	adds	r1, r0, #0
 8004b7a:	1c28      	adds	r0, r5, #0
 8004b7c:	f7fb fd54 	bl	8000628 <__aeabi_fadd>
 8004b80:	1c01      	adds	r1, r0, #0
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004b82:	1c20      	adds	r0, r4, #0
 8004b84:	f7fb fd50 	bl	8000628 <__aeabi_fadd>
 8004b88:	2396      	movs	r3, #150	; 0x96
 8004b8a:	4642      	mov	r2, r8
 8004b8c:	908b      	str	r0, [sp, #556]	; 0x22c
 8004b8e:	0058      	lsls	r0, r3, #1
 8004b90:	5811      	ldr	r1, [r2, r0]
 8004b92:	3848      	subs	r0, #72	; 0x48
 8004b94:	5810      	ldr	r0, [r2, r0]
 8004b96:	f7fb fd47 	bl	8000628 <__aeabi_fadd>
					sum += H[i + k * 6] * M[k * 6 + j];
 8004b9a:	9926      	ldr	r1, [sp, #152]	; 0x98
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004b9c:	1c04      	adds	r4, r0, #0
					sum += H[i + k * 6] * M[k * 6 + j];
 8004b9e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004ba0:	f7fc f8a8 	bl	8000cf4 <__aeabi_fmul>
 8004ba4:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8004ba6:	1c05      	adds	r5, r0, #0
 8004ba8:	4650      	mov	r0, sl
 8004baa:	f7fc f8a3 	bl	8000cf4 <__aeabi_fmul>
 8004bae:	1c01      	adds	r1, r0, #0
 8004bb0:	1c28      	adds	r0, r5, #0
 8004bb2:	f7fb fd39 	bl	8000628 <__aeabi_fadd>
 8004bb6:	1c01      	adds	r1, r0, #0
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004bb8:	1c20      	adds	r0, r4, #0
 8004bba:	f7fb fd35 	bl	8000628 <__aeabi_fadd>
 8004bbe:	2198      	movs	r1, #152	; 0x98
 8004bc0:	908c      	str	r0, [sp, #560]	; 0x230
 8004bc2:	4640      	mov	r0, r8
 8004bc4:	004b      	lsls	r3, r1, #1
 8004bc6:	58c1      	ldr	r1, [r0, r3]
 8004bc8:	3b48      	subs	r3, #72	; 0x48
 8004bca:	58c0      	ldr	r0, [r0, r3]
 8004bcc:	f7fb fd2c 	bl	8000628 <__aeabi_fadd>
					sum += H[i + k * 6] * M[k * 6 + j];
 8004bd0:	992d      	ldr	r1, [sp, #180]	; 0xb4
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004bd2:	1c04      	adds	r4, r0, #0
					sum += H[i + k * 6] * M[k * 6 + j];
 8004bd4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004bd6:	f7fc f88d 	bl	8000cf4 <__aeabi_fmul>
 8004bda:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8004bdc:	1c05      	adds	r5, r0, #0
 8004bde:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004be0:	f7fc f888 	bl	8000cf4 <__aeabi_fmul>
 8004be4:	1c01      	adds	r1, r0, #0
 8004be6:	1c28      	adds	r0, r5, #0
 8004be8:	f7fb fd1e 	bl	8000628 <__aeabi_fadd>
 8004bec:	1c01      	adds	r1, r0, #0
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004bee:	1c20      	adds	r0, r4, #0
 8004bf0:	f7fb fd1a 	bl	8000628 <__aeabi_fadd>
 8004bf4:	229a      	movs	r2, #154	; 0x9a
 8004bf6:	9090      	str	r0, [sp, #576]	; 0x240
 8004bf8:	4640      	mov	r0, r8
 8004bfa:	0053      	lsls	r3, r2, #1
 8004bfc:	58c1      	ldr	r1, [r0, r3]
 8004bfe:	3b48      	subs	r3, #72	; 0x48
 8004c00:	58c0      	ldr	r0, [r0, r3]
 8004c02:	f7fb fd11 	bl	8000628 <__aeabi_fadd>
					sum += H[i + k * 6] * M[k * 6 + j];
 8004c06:	9929      	ldr	r1, [sp, #164]	; 0xa4
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004c08:	1c04      	adds	r4, r0, #0
					sum += H[i + k * 6] * M[k * 6 + j];
 8004c0a:	4658      	mov	r0, fp
 8004c0c:	f7fc f872 	bl	8000cf4 <__aeabi_fmul>
 8004c10:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8004c12:	1c05      	adds	r5, r0, #0
 8004c14:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004c16:	f7fc f86d 	bl	8000cf4 <__aeabi_fmul>
 8004c1a:	1c01      	adds	r1, r0, #0
 8004c1c:	1c28      	adds	r0, r5, #0
 8004c1e:	f7fb fd03 	bl	8000628 <__aeabi_fadd>
 8004c22:	1c01      	adds	r1, r0, #0
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004c24:	1c20      	adds	r0, r4, #0
 8004c26:	f7fb fcff 	bl	8000628 <__aeabi_fadd>
 8004c2a:	219c      	movs	r1, #156	; 0x9c
 8004c2c:	4643      	mov	r3, r8
 8004c2e:	004a      	lsls	r2, r1, #1
 8004c30:	5899      	ldr	r1, [r3, r2]
 8004c32:	3a48      	subs	r2, #72	; 0x48
 8004c34:	9091      	str	r0, [sp, #580]	; 0x244
 8004c36:	5898      	ldr	r0, [r3, r2]
 8004c38:	f7fb fcf6 	bl	8000628 <__aeabi_fadd>
					sum += H[i + k * 6] * M[k * 6 + j];
 8004c3c:	9929      	ldr	r1, [sp, #164]	; 0xa4
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004c3e:	1c04      	adds	r4, r0, #0
					sum += H[i + k * 6] * M[k * 6 + j];
 8004c40:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004c42:	f7fc f857 	bl	8000cf4 <__aeabi_fmul>
 8004c46:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8004c48:	1c05      	adds	r5, r0, #0
 8004c4a:	4650      	mov	r0, sl
 8004c4c:	f7fc f852 	bl	8000cf4 <__aeabi_fmul>
 8004c50:	1c01      	adds	r1, r0, #0
 8004c52:	1c28      	adds	r0, r5, #0
 8004c54:	f7fb fce8 	bl	8000628 <__aeabi_fadd>
 8004c58:	1c01      	adds	r1, r0, #0
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004c5a:	1c20      	adds	r0, r4, #0
 8004c5c:	f7fb fce4 	bl	8000628 <__aeabi_fadd>
			}
		}
		for (int j = 3; j < 6; j++) {
			for (int i = 3; i < 6; i++) {
				S[i + j * 6] += Rw[i - 3 + (j - 3) * 3];
 8004c60:	22f4      	movs	r2, #244	; 0xf4
				S[i + j * 6] += Qa[i + j * 3] + Ra[i + j * 3];
 8004c62:	9092      	str	r0, [sp, #584]	; 0x248
				S[i + j * 6] += Rw[i - 3 + (j - 3) * 3];
 8004c64:	4640      	mov	r0, r8
 8004c66:	9912      	ldr	r1, [sp, #72]	; 0x48
 8004c68:	5880      	ldr	r0, [r0, r2]
 8004c6a:	f7fb fcdd 	bl	8000628 <__aeabi_fadd>
 8004c6e:	4644      	mov	r4, r8
 8004c70:	23f8      	movs	r3, #248	; 0xf8
 8004c72:	9921      	ldr	r1, [sp, #132]	; 0x84
 8004c74:	9099      	str	r0, [sp, #612]	; 0x264
 8004c76:	58e0      	ldr	r0, [r4, r3]
 8004c78:	f7fb fcd6 	bl	8000628 <__aeabi_fadd>
 8004c7c:	25fc      	movs	r5, #252	; 0xfc
 8004c7e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004c80:	909a      	str	r0, [sp, #616]	; 0x268
 8004c82:	5960      	ldr	r0, [r4, r5]
 8004c84:	f7fb fcd0 	bl	8000628 <__aeabi_fadd>
 8004c88:	909b      	str	r0, [sp, #620]	; 0x26c
 8004c8a:	2080      	movs	r0, #128	; 0x80
 8004c8c:	0043      	lsls	r3, r0, #1
 8004c8e:	58e0      	ldr	r0, [r4, r3]
 8004c90:	2582      	movs	r5, #130	; 0x82
 8004c92:	9914      	ldr	r1, [sp, #80]	; 0x50
 8004c94:	f7fb fcc8 	bl	8000628 <__aeabi_fadd>
 8004c98:	006a      	lsls	r2, r5, #1
 8004c9a:	9922      	ldr	r1, [sp, #136]	; 0x88
 8004c9c:	909f      	str	r0, [sp, #636]	; 0x27c
 8004c9e:	58a0      	ldr	r0, [r4, r2]
 8004ca0:	f7fb fcc2 	bl	8000628 <__aeabi_fadd>
 8004ca4:	2384      	movs	r3, #132	; 0x84
 8004ca6:	4645      	mov	r5, r8
 8004ca8:	005c      	lsls	r4, r3, #1
 8004caa:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004cac:	90a0      	str	r0, [sp, #640]	; 0x280
 8004cae:	5928      	ldr	r0, [r5, r4]
 8004cb0:	f7fb fcba 	bl	8000628 <__aeabi_fadd>
 8004cb4:	2286      	movs	r2, #134	; 0x86
 8004cb6:	0053      	lsls	r3, r2, #1
 8004cb8:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004cba:	90a1      	str	r0, [sp, #644]	; 0x284
 8004cbc:	58e8      	ldr	r0, [r5, r3]
 8004cbe:	f7fb fcb3 	bl	8000628 <__aeabi_fadd>
 8004cc2:	a960      	add	r1, sp, #384	; 0x180
 8004cc4:	198c      	adds	r4, r1, r6
 8004cc6:	51e0      	str	r0, [r4, r7]
 8004cc8:	2788      	movs	r7, #136	; 0x88
 8004cca:	4642      	mov	r2, r8
 8004ccc:	007d      	lsls	r5, r7, #1
 8004cce:	5950      	ldr	r0, [r2, r5]
 8004cd0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8004cd2:	f7fb fca9 	bl	8000628 <__aeabi_fadd>
 8004cd6:	2388      	movs	r3, #136	; 0x88
 8004cd8:	a960      	add	r1, sp, #384	; 0x180
 8004cda:	198c      	adds	r4, r1, r6
 8004cdc:	50e0      	str	r0, [r4, r3]
 8004cde:	4640      	mov	r0, r8
 8004ce0:	2400      	movs	r4, #0
 8004ce2:	338c      	adds	r3, #140	; 0x8c
 8004ce4:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004ce6:	58c0      	ldr	r0, [r0, r3]
 8004ce8:	f7fb fc9e 	bl	8000628 <__aeabi_fadd>
 8004cec:	258c      	movs	r5, #140	; 0x8c
 8004cee:	46a3      	mov	fp, r4
 8004cf0:	af60      	add	r7, sp, #384	; 0x180
 8004cf2:	19be      	adds	r6, r7, r6
 8004cf4:	5170      	str	r0, [r6, r5]
 8004cf6:	ab84      	add	r3, sp, #528	; 0x210
 8004cf8:	464e      	mov	r6, r9
 8004cfa:	4640      	mov	r0, r8
 8004cfc:	469a      	mov	sl, r3
	// outputs:
	//  S: the lower triangular matrix L (6x6) is overwritten in S (is stored by columns)
	static void Cholesky(float S[]) {
		// for each column
		for (int j = 0; j < 6; j++) {
			double sum = 0.0;  //sum for the diagonal term
 8004cfe:	2400      	movs	r4, #0
 8004d00:	2500      	movs	r5, #0
 8004d02:	465f      	mov	r7, fp
 8004d04:	4699      	mov	r9, r3
 8004d06:	aa84      	add	r2, sp, #528	; 0x210
 8004d08:	a98a      	add	r1, sp, #552	; 0x228
 8004d0a:	925f      	str	r2, [sp, #380]	; 0x17c
 8004d0c:	9100      	str	r1, [sp, #0]
 8004d0e:	9006      	str	r0, [sp, #24]
 8004d10:	960c      	str	r6, [sp, #48]	; 0x30
				S[i + j * 6] = 0.0;
				//we can compute this sum at the same time
				sum += S[j + i * 6] * S[j + i * 6];
			}
			// now we compute the diagonal term
			S[j * 7] = sqrt(S[j * 7] - sum); //S[j+j*m] = sqrt( S[j+j*m] - sum );
 8004d12:	464a      	mov	r2, r9
 8004d14:	6810      	ldr	r0, [r2, #0]
 8004d16:	f7fe f99f 	bl	8003058 <__aeabi_f2d>
 8004d1a:	002b      	movs	r3, r5
 8004d1c:	0022      	movs	r2, r4
 8004d1e:	f7fd fd5f 	bl	80027e0 <__aeabi_dsub>
 8004d22:	f005 f8e3 	bl	8009eec <sqrt>
 8004d26:	f7fe f9df 	bl	80030e8 <__aeabi_d2f>
 8004d2a:	464d      	mov	r5, r9
 8004d2c:	1c7b      	adds	r3, r7, #1
 8004d2e:	4680      	mov	r8, r0
 8004d30:	6028      	str	r0, [r5, #0]
			// finally we compute the terms below the diagonal
			for (int i = j + 1; i < 6; i++) {
 8004d32:	9302      	str	r3, [sp, #8]
 8004d34:	2f05      	cmp	r7, #5
 8004d36:	d100      	bne.n	8004d3a <_ZN7MEKFcRP9updateIMUEPfS0_f+0x17ba>
 8004d38:	e0c7      	b.n	8004eca <_ZN7MEKFcRP9updateIMUEPfS0_f+0x194a>
 8004d3a:	4656      	mov	r6, sl
 8004d3c:	3604      	adds	r6, #4
 8004d3e:	9604      	str	r6, [sp, #16]
 8004d40:	e059      	b.n	8004df6 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1876>
				//first the sum
				double sum = 0.0;
				for (int k = 0; k < j; k++) {
					sum += S[i + k * 6] * S[j + k * 6];
 8004d42:	4654      	mov	r4, sl
 8004d44:	6830      	ldr	r0, [r6, #0]
 8004d46:	6821      	ldr	r1, [r4, #0]
 8004d48:	f7fb ffd4 	bl	8000cf4 <__aeabi_fmul>
 8004d4c:	f7fe f984 	bl	8003058 <__aeabi_f2d>
 8004d50:	0004      	movs	r4, r0
 8004d52:	000d      	movs	r5, r1
				for (int k = 0; k < j; k++) {
 8004d54:	2f01      	cmp	r7, #1
 8004d56:	d030      	beq.n	8004dba <_ZN7MEKFcRP9updateIMUEPfS0_f+0x183a>
					sum += S[i + k * 6] * S[j + k * 6];
 8004d58:	4650      	mov	r0, sl
 8004d5a:	6981      	ldr	r1, [r0, #24]
 8004d5c:	69b0      	ldr	r0, [r6, #24]
 8004d5e:	f7fb ffc9 	bl	8000cf4 <__aeabi_fmul>
 8004d62:	f7fe f979 	bl	8003058 <__aeabi_f2d>
 8004d66:	0002      	movs	r2, r0
 8004d68:	000b      	movs	r3, r1
 8004d6a:	0020      	movs	r0, r4
 8004d6c:	0029      	movs	r1, r5
 8004d6e:	f7fc fb5b 	bl	8001428 <__aeabi_dadd>
 8004d72:	0004      	movs	r4, r0
 8004d74:	000d      	movs	r5, r1
				for (int k = 0; k < j; k++) {
 8004d76:	2f02      	cmp	r7, #2
 8004d78:	d01f      	beq.n	8004dba <_ZN7MEKFcRP9updateIMUEPfS0_f+0x183a>
					sum += S[i + k * 6] * S[j + k * 6];
 8004d7a:	4652      	mov	r2, sl
 8004d7c:	6b30      	ldr	r0, [r6, #48]	; 0x30
 8004d7e:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8004d80:	f7fb ffb8 	bl	8000cf4 <__aeabi_fmul>
 8004d84:	f7fe f968 	bl	8003058 <__aeabi_f2d>
 8004d88:	0002      	movs	r2, r0
 8004d8a:	000b      	movs	r3, r1
 8004d8c:	0020      	movs	r0, r4
 8004d8e:	0029      	movs	r1, r5
 8004d90:	f7fc fb4a 	bl	8001428 <__aeabi_dadd>
 8004d94:	0004      	movs	r4, r0
 8004d96:	000d      	movs	r5, r1
				for (int k = 0; k < j; k++) {
 8004d98:	2f03      	cmp	r7, #3
 8004d9a:	d00e      	beq.n	8004dba <_ZN7MEKFcRP9updateIMUEPfS0_f+0x183a>
					sum += S[i + k * 6] * S[j + k * 6];
 8004d9c:	4651      	mov	r1, sl
 8004d9e:	6cb0      	ldr	r0, [r6, #72]	; 0x48
 8004da0:	6c89      	ldr	r1, [r1, #72]	; 0x48
 8004da2:	f7fb ffa7 	bl	8000cf4 <__aeabi_fmul>
 8004da6:	f7fe f957 	bl	8003058 <__aeabi_f2d>
 8004daa:	0002      	movs	r2, r0
 8004dac:	000b      	movs	r3, r1
 8004dae:	0020      	movs	r0, r4
 8004db0:	0029      	movs	r1, r5
 8004db2:	f7fc fb39 	bl	8001428 <__aeabi_dadd>
 8004db6:	0004      	movs	r4, r0
 8004db8:	000d      	movs	r5, r1
				}
				//after the non-diagonal term
				S[i + j * 6] = (S[i + j * 6] - sum) / S[j * 7];
 8004dba:	465b      	mov	r3, fp
 8004dbc:	58f0      	ldr	r0, [r6, r3]
 8004dbe:	f7fe f94b 	bl	8003058 <__aeabi_f2d>
 8004dc2:	0022      	movs	r2, r4
 8004dc4:	002b      	movs	r3, r5
 8004dc6:	f7fd fd0b 	bl	80027e0 <__aeabi_dsub>
 8004dca:	0004      	movs	r4, r0
 8004dcc:	4640      	mov	r0, r8
 8004dce:	000d      	movs	r5, r1
 8004dd0:	f7fe f942 	bl	8003058 <__aeabi_f2d>
 8004dd4:	0002      	movs	r2, r0
 8004dd6:	000b      	movs	r3, r1
 8004dd8:	0020      	movs	r0, r4
 8004dda:	0029      	movs	r1, r5
 8004ddc:	f7fc fe8e 	bl	8001afc <__aeabi_ddiv>
 8004de0:	f7fe f982 	bl	80030e8 <__aeabi_d2f>
 8004de4:	465a      	mov	r2, fp
 8004de6:	50b0      	str	r0, [r6, r2]
			for (int i = j + 1; i < 6; i++) {
 8004de8:	3604      	adds	r6, #4
 8004dea:	a88a      	add	r0, sp, #552	; 0x228
 8004dec:	42b0      	cmp	r0, r6
 8004dee:	d007      	beq.n	8004e00 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1880>
 8004df0:	4649      	mov	r1, r9
 8004df2:	680b      	ldr	r3, [r1, #0]
 8004df4:	4698      	mov	r8, r3
				for (int k = 0; k < j; k++) {
 8004df6:	2f00      	cmp	r7, #0
 8004df8:	d1a3      	bne.n	8004d42 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x17c2>
				double sum = 0.0;
 8004dfa:	2400      	movs	r4, #0
 8004dfc:	2500      	movs	r5, #0
 8004dfe:	e7dc      	b.n	8004dba <_ZN7MEKFcRP9updateIMUEPfS0_f+0x183a>
				S[i + j * 6] = 0.0;
 8004e00:	2400      	movs	r4, #0
				sum += S[j + i * 6] * S[j + i * 6];
 8004e02:	4655      	mov	r5, sl
				S[i + j * 6] = 0.0;
 8004e04:	9e00      	ldr	r6, [sp, #0]
 8004e06:	6034      	str	r4, [r6, #0]
				sum += S[j + i * 6] * S[j + i * 6];
 8004e08:	6869      	ldr	r1, [r5, #4]
 8004e0a:	1c08      	adds	r0, r1, #0
 8004e0c:	f7fb ff72 	bl	8000cf4 <__aeabi_fmul>
 8004e10:	f7fe f922 	bl	8003058 <__aeabi_f2d>
 8004e14:	0004      	movs	r4, r0
 8004e16:	000d      	movs	r5, r1
			for (int i = 0; i < j; i++) {
 8004e18:	2f00      	cmp	r7, #0
 8004e1a:	d049      	beq.n	8004eb0 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1930>
				S[i + j * 6] = 0.0;
 8004e1c:	2200      	movs	r2, #0
				sum += S[j + i * 6] * S[j + i * 6];
 8004e1e:	4650      	mov	r0, sl
				S[i + j * 6] = 0.0;
 8004e20:	6072      	str	r2, [r6, #4]
				sum += S[j + i * 6] * S[j + i * 6];
 8004e22:	69c1      	ldr	r1, [r0, #28]
 8004e24:	1c08      	adds	r0, r1, #0
 8004e26:	f7fb ff65 	bl	8000cf4 <__aeabi_fmul>
 8004e2a:	f7fe f915 	bl	8003058 <__aeabi_f2d>
 8004e2e:	0002      	movs	r2, r0
 8004e30:	000b      	movs	r3, r1
 8004e32:	0020      	movs	r0, r4
 8004e34:	0029      	movs	r1, r5
 8004e36:	f7fc faf7 	bl	8001428 <__aeabi_dadd>
 8004e3a:	0004      	movs	r4, r0
 8004e3c:	000d      	movs	r5, r1
			for (int i = 0; i < j; i++) {
 8004e3e:	2f01      	cmp	r7, #1
 8004e40:	d036      	beq.n	8004eb0 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1930>
				S[i + j * 6] = 0.0;
 8004e42:	2100      	movs	r1, #0
				sum += S[j + i * 6] * S[j + i * 6];
 8004e44:	4653      	mov	r3, sl
				S[i + j * 6] = 0.0;
 8004e46:	60b1      	str	r1, [r6, #8]
				sum += S[j + i * 6] * S[j + i * 6];
 8004e48:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8004e4a:	1c08      	adds	r0, r1, #0
 8004e4c:	f7fb ff52 	bl	8000cf4 <__aeabi_fmul>
 8004e50:	f7fe f902 	bl	8003058 <__aeabi_f2d>
 8004e54:	0002      	movs	r2, r0
 8004e56:	000b      	movs	r3, r1
 8004e58:	0020      	movs	r0, r4
 8004e5a:	0029      	movs	r1, r5
 8004e5c:	f7fc fae4 	bl	8001428 <__aeabi_dadd>
 8004e60:	0004      	movs	r4, r0
 8004e62:	000d      	movs	r5, r1
			for (int i = 0; i < j; i++) {
 8004e64:	2f02      	cmp	r7, #2
 8004e66:	d023      	beq.n	8004eb0 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1930>
				S[i + j * 6] = 0.0;
 8004e68:	2200      	movs	r2, #0
				sum += S[j + i * 6] * S[j + i * 6];
 8004e6a:	4650      	mov	r0, sl
				S[i + j * 6] = 0.0;
 8004e6c:	60f2      	str	r2, [r6, #12]
				sum += S[j + i * 6] * S[j + i * 6];
 8004e6e:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 8004e70:	1c08      	adds	r0, r1, #0
 8004e72:	f7fb ff3f 	bl	8000cf4 <__aeabi_fmul>
 8004e76:	f7fe f8ef 	bl	8003058 <__aeabi_f2d>
 8004e7a:	0002      	movs	r2, r0
 8004e7c:	000b      	movs	r3, r1
 8004e7e:	0020      	movs	r0, r4
 8004e80:	0029      	movs	r1, r5
 8004e82:	f7fc fad1 	bl	8001428 <__aeabi_dadd>
 8004e86:	0004      	movs	r4, r0
 8004e88:	000d      	movs	r5, r1
			for (int i = 0; i < j; i++) {
 8004e8a:	2f03      	cmp	r7, #3
 8004e8c:	d010      	beq.n	8004eb0 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1930>
				S[i + j * 6] = 0.0;
 8004e8e:	2700      	movs	r7, #0
 8004e90:	6137      	str	r7, [r6, #16]
				sum += S[j + i * 6] * S[j + i * 6];
 8004e92:	4656      	mov	r6, sl
 8004e94:	6e70      	ldr	r0, [r6, #100]	; 0x64
 8004e96:	1c01      	adds	r1, r0, #0
 8004e98:	f7fb ff2c 	bl	8000cf4 <__aeabi_fmul>
 8004e9c:	f7fe f8dc 	bl	8003058 <__aeabi_f2d>
 8004ea0:	0002      	movs	r2, r0
 8004ea2:	000b      	movs	r3, r1
 8004ea4:	0020      	movs	r0, r4
 8004ea6:	0029      	movs	r1, r5
 8004ea8:	f7fc fabe 	bl	8001428 <__aeabi_dadd>
 8004eac:	0004      	movs	r4, r0
 8004eae:	000d      	movs	r5, r1
			for (int i = 0; i < j; i++) {
 8004eb0:	211c      	movs	r1, #28
 8004eb2:	2218      	movs	r2, #24
 8004eb4:	468c      	mov	ip, r1
 8004eb6:	4692      	mov	sl, r2
 8004eb8:	9b00      	ldr	r3, [sp, #0]
					sum += P[i + k * 6] * M[j + k * 6];
 8004eba:	9804      	ldr	r0, [sp, #16]
 8004ebc:	3318      	adds	r3, #24
 8004ebe:	44d3      	add	fp, sl
 8004ec0:	9f02      	ldr	r7, [sp, #8]
 8004ec2:	4682      	mov	sl, r0
 8004ec4:	44e1      	add	r9, ip
 8004ec6:	9300      	str	r3, [sp, #0]
 8004ec8:	e723      	b.n	8004d12 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1792>
 8004eca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8004ecc:	2590      	movs	r5, #144	; 0x90
 8004ece:	46a1      	mov	r9, r4
			for (int j = 0; j < 6; j++) {
				double sum = 0.0;
				for (int k = 0; k < j; k++) {
					sum += y[k] * S[j + k * 6];
				}
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8004ed0:	9884      	ldr	r0, [sp, #528]	; 0x210
 8004ed2:	444d      	add	r5, r9
 8004ed4:	953b      	str	r5, [sp, #236]	; 0xec
 8004ed6:	f7fe f8bf 	bl	8003058 <__aeabi_f2d>
 8004eda:	0002      	movs	r2, r0
 8004edc:	000b      	movs	r3, r1
 8004ede:	2000      	movs	r0, #0
 8004ee0:	494c      	ldr	r1, [pc, #304]	; (8005014 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1a94>)
 8004ee2:	f7fc fe0b 	bl	8001afc <__aeabi_ddiv>
 8004ee6:	900e      	str	r0, [sp, #56]	; 0x38
 8004ee8:	910f      	str	r1, [sp, #60]	; 0x3c
					sum += y[k] * S[j + k * 6];
 8004eea:	9885      	ldr	r0, [sp, #532]	; 0x214
 8004eec:	9e06      	ldr	r6, [sp, #24]
 8004eee:	9034      	str	r0, [sp, #208]	; 0xd0
 8004ef0:	f7fe f8b2 	bl	8003058 <__aeabi_f2d>
 8004ef4:	9032      	str	r0, [sp, #200]	; 0xc8
 8004ef6:	9133      	str	r1, [sp, #204]	; 0xcc
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8004ef8:	988b      	ldr	r0, [sp, #556]	; 0x22c
 8004efa:	f7fe f8ad 	bl	8003058 <__aeabi_f2d>
 8004efe:	0002      	movs	r2, r0
 8004f00:	000b      	movs	r3, r1
 8004f02:	2000      	movs	r0, #0
 8004f04:	4943      	ldr	r1, [pc, #268]	; (8005014 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1a94>)
 8004f06:	f7fc fdf9 	bl	8001afc <__aeabi_ddiv>
 8004f0a:	9016      	str	r0, [sp, #88]	; 0x58
 8004f0c:	9117      	str	r1, [sp, #92]	; 0x5c
					sum += y[k] * S[j + k * 6];
 8004f0e:	9886      	ldr	r0, [sp, #536]	; 0x218
 8004f10:	9035      	str	r0, [sp, #212]	; 0xd4
 8004f12:	f7fe f8a1 	bl	8003058 <__aeabi_f2d>
 8004f16:	9036      	str	r0, [sp, #216]	; 0xd8
 8004f18:	9137      	str	r1, [sp, #220]	; 0xdc
 8004f1a:	988c      	ldr	r0, [sp, #560]	; 0x230
 8004f1c:	903a      	str	r0, [sp, #232]	; 0xe8
 8004f1e:	f7fe f89b 	bl	8003058 <__aeabi_f2d>
 8004f22:	9038      	str	r0, [sp, #224]	; 0xe0
 8004f24:	9139      	str	r1, [sp, #228]	; 0xe4
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8004f26:	9892      	ldr	r0, [sp, #584]	; 0x248
 8004f28:	f7fe f896 	bl	8003058 <__aeabi_f2d>
 8004f2c:	0002      	movs	r2, r0
 8004f2e:	000b      	movs	r3, r1
 8004f30:	2000      	movs	r0, #0
 8004f32:	4938      	ldr	r1, [pc, #224]	; (8005014 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1a94>)
 8004f34:	f7fc fde2 	bl	8001afc <__aeabi_ddiv>
 8004f38:	9014      	str	r0, [sp, #80]	; 0x50
 8004f3a:	9115      	str	r1, [sp, #84]	; 0x54
					sum += y[k] * S[j + k * 6];
 8004f3c:	9887      	ldr	r0, [sp, #540]	; 0x21c
 8004f3e:	903e      	str	r0, [sp, #248]	; 0xf8
 8004f40:	f7fe f88a 	bl	8003058 <__aeabi_f2d>
 8004f44:	903c      	str	r0, [sp, #240]	; 0xf0
 8004f46:	913d      	str	r1, [sp, #244]	; 0xf4
 8004f48:	988d      	ldr	r0, [sp, #564]	; 0x234
 8004f4a:	903f      	str	r0, [sp, #252]	; 0xfc
 8004f4c:	f7fe f884 	bl	8003058 <__aeabi_f2d>
 8004f50:	9040      	str	r0, [sp, #256]	; 0x100
 8004f52:	9141      	str	r1, [sp, #260]	; 0x104
 8004f54:	9893      	ldr	r0, [sp, #588]	; 0x24c
 8004f56:	9044      	str	r0, [sp, #272]	; 0x110
 8004f58:	f7fe f87e 	bl	8003058 <__aeabi_f2d>
 8004f5c:	9042      	str	r0, [sp, #264]	; 0x108
 8004f5e:	9143      	str	r1, [sp, #268]	; 0x10c
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8004f60:	9899      	ldr	r0, [sp, #612]	; 0x264
 8004f62:	f7fe f879 	bl	8003058 <__aeabi_f2d>
 8004f66:	0002      	movs	r2, r0
 8004f68:	000b      	movs	r3, r1
 8004f6a:	2000      	movs	r0, #0
 8004f6c:	4929      	ldr	r1, [pc, #164]	; (8005014 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1a94>)
 8004f6e:	f7fc fdc5 	bl	8001afc <__aeabi_ddiv>
 8004f72:	9012      	str	r0, [sp, #72]	; 0x48
 8004f74:	9113      	str	r1, [sp, #76]	; 0x4c
					sum += y[k] * S[j + k * 6];
 8004f76:	9888      	ldr	r0, [sp, #544]	; 0x220
 8004f78:	9045      	str	r0, [sp, #276]	; 0x114
 8004f7a:	f7fe f86d 	bl	8003058 <__aeabi_f2d>
 8004f7e:	9046      	str	r0, [sp, #280]	; 0x118
 8004f80:	9147      	str	r1, [sp, #284]	; 0x11c
 8004f82:	988e      	ldr	r0, [sp, #568]	; 0x238
 8004f84:	904a      	str	r0, [sp, #296]	; 0x128
 8004f86:	f7fe f867 	bl	8003058 <__aeabi_f2d>
 8004f8a:	9048      	str	r0, [sp, #288]	; 0x120
 8004f8c:	9149      	str	r1, [sp, #292]	; 0x124
 8004f8e:	9894      	ldr	r0, [sp, #592]	; 0x250
 8004f90:	904b      	str	r0, [sp, #300]	; 0x12c
 8004f92:	f7fe f861 	bl	8003058 <__aeabi_f2d>
 8004f96:	904c      	str	r0, [sp, #304]	; 0x130
 8004f98:	914d      	str	r1, [sp, #308]	; 0x134
 8004f9a:	989a      	ldr	r0, [sp, #616]	; 0x268
 8004f9c:	9050      	str	r0, [sp, #320]	; 0x140
 8004f9e:	f7fe f85b 	bl	8003058 <__aeabi_f2d>
 8004fa2:	904e      	str	r0, [sp, #312]	; 0x138
 8004fa4:	914f      	str	r1, [sp, #316]	; 0x13c
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8004fa6:	98a0      	ldr	r0, [sp, #640]	; 0x280
 8004fa8:	f7fe f856 	bl	8003058 <__aeabi_f2d>
 8004fac:	0002      	movs	r2, r0
 8004fae:	000b      	movs	r3, r1
 8004fb0:	2000      	movs	r0, #0
 8004fb2:	4918      	ldr	r1, [pc, #96]	; (8005014 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1a94>)
 8004fb4:	f7fc fda2 	bl	8001afc <__aeabi_ddiv>
 8004fb8:	9010      	str	r0, [sp, #64]	; 0x40
 8004fba:	9111      	str	r1, [sp, #68]	; 0x44
					sum += y[k] * S[j + k * 6];
 8004fbc:	9889      	ldr	r0, [sp, #548]	; 0x224
 8004fbe:	9021      	str	r0, [sp, #132]	; 0x84
 8004fc0:	f7fe f84a 	bl	8003058 <__aeabi_f2d>
 8004fc4:	9022      	str	r0, [sp, #136]	; 0x88
 8004fc6:	9123      	str	r1, [sp, #140]	; 0x8c
 8004fc8:	988f      	ldr	r0, [sp, #572]	; 0x23c
 8004fca:	9028      	str	r0, [sp, #160]	; 0xa0
 8004fcc:	f7fe f844 	bl	8003058 <__aeabi_f2d>
 8004fd0:	9024      	str	r0, [sp, #144]	; 0x90
 8004fd2:	9125      	str	r1, [sp, #148]	; 0x94
 8004fd4:	9895      	ldr	r0, [sp, #596]	; 0x254
 8004fd6:	9029      	str	r0, [sp, #164]	; 0xa4
 8004fd8:	f7fe f83e 	bl	8003058 <__aeabi_f2d>
 8004fdc:	9026      	str	r0, [sp, #152]	; 0x98
 8004fde:	9127      	str	r1, [sp, #156]	; 0x9c
 8004fe0:	989b      	ldr	r0, [sp, #620]	; 0x26c
 8004fe2:	902d      	str	r0, [sp, #180]	; 0xb4
 8004fe4:	f7fe f838 	bl	8003058 <__aeabi_f2d>
 8004fe8:	902e      	str	r0, [sp, #184]	; 0xb8
 8004fea:	912f      	str	r1, [sp, #188]	; 0xbc
 8004fec:	98a1      	ldr	r0, [sp, #644]	; 0x284
 8004fee:	902c      	str	r0, [sp, #176]	; 0xb0
 8004ff0:	f7fe f832 	bl	8003058 <__aeabi_f2d>
 8004ff4:	902a      	str	r0, [sp, #168]	; 0xa8
 8004ff6:	912b      	str	r1, [sp, #172]	; 0xac
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8004ff8:	98a7      	ldr	r0, [sp, #668]	; 0x29c
 8004ffa:	f7fe f82d 	bl	8003058 <__aeabi_f2d>
 8004ffe:	0002      	movs	r2, r0
 8005000:	000b      	movs	r3, r1
 8005002:	2000      	movs	r0, #0
 8005004:	4903      	ldr	r1, [pc, #12]	; (8005014 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1a94>)
 8005006:	f7fc fd79 	bl	8001afc <__aeabi_ddiv>
 800500a:	9030      	str	r0, [sp, #192]	; 0xc0
 800500c:	9131      	str	r1, [sp, #196]	; 0xc4
 800500e:	965a      	str	r6, [sp, #360]	; 0x168
 8005010:	945b      	str	r4, [sp, #364]	; 0x16c
 8005012:	e001      	b.n	8005018 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1a98>
 8005014:	3ff00000 	.word	0x3ff00000
 8005018:	6820      	ldr	r0, [r4, #0]
 800501a:	f7fe f81d 	bl	8003058 <__aeabi_f2d>
 800501e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005020:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005022:	f7fd f971 	bl	8002308 <__aeabi_dmul>
 8005026:	9000      	str	r0, [sp, #0]
 8005028:	9101      	str	r1, [sp, #4]
 800502a:	6860      	ldr	r0, [r4, #4]
 800502c:	f7fe f814 	bl	8003058 <__aeabi_f2d>
					sum += y[k] * S[j + k * 6];
 8005030:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8005032:	9b33      	ldr	r3, [sp, #204]	; 0xcc
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005034:	0006      	movs	r6, r0
 8005036:	000f      	movs	r7, r1
					sum += y[k] * S[j + k * 6];
 8005038:	9800      	ldr	r0, [sp, #0]
 800503a:	9901      	ldr	r1, [sp, #4]
 800503c:	f7fd f964 	bl	8002308 <__aeabi_dmul>
 8005040:	0002      	movs	r2, r0
 8005042:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005044:	0030      	movs	r0, r6
 8005046:	0039      	movs	r1, r7
 8005048:	f7fd fbca 	bl	80027e0 <__aeabi_dsub>
 800504c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800504e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005050:	f7fd f95a 	bl	8002308 <__aeabi_dmul>
 8005054:	9002      	str	r0, [sp, #8]
 8005056:	9103      	str	r1, [sp, #12]
 8005058:	68a0      	ldr	r0, [r4, #8]
 800505a:	f7fd fffd 	bl	8003058 <__aeabi_f2d>
					sum += y[k] * S[j + k * 6];
 800505e:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8005060:	9b37      	ldr	r3, [sp, #220]	; 0xdc
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005062:	0005      	movs	r5, r0
 8005064:	000e      	movs	r6, r1
					sum += y[k] * S[j + k * 6];
 8005066:	9800      	ldr	r0, [sp, #0]
 8005068:	9901      	ldr	r1, [sp, #4]
 800506a:	f7fd f94d 	bl	8002308 <__aeabi_dmul>
 800506e:	0002      	movs	r2, r0
 8005070:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005072:	0028      	movs	r0, r5
 8005074:	0031      	movs	r1, r6
 8005076:	f7fd fbb3 	bl	80027e0 <__aeabi_dsub>
					sum += y[k] * S[j + k * 6];
 800507a:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 800507c:	9b39      	ldr	r3, [sp, #228]	; 0xe4
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 800507e:	0005      	movs	r5, r0
 8005080:	000f      	movs	r7, r1
					sum += y[k] * S[j + k * 6];
 8005082:	9802      	ldr	r0, [sp, #8]
 8005084:	9903      	ldr	r1, [sp, #12]
 8005086:	f7fd f93f 	bl	8002308 <__aeabi_dmul>
 800508a:	0002      	movs	r2, r0
 800508c:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 800508e:	0028      	movs	r0, r5
 8005090:	0039      	movs	r1, r7
 8005092:	f7fd fba5 	bl	80027e0 <__aeabi_dsub>
 8005096:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005098:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800509a:	f7fd f935 	bl	8002308 <__aeabi_dmul>
 800509e:	9004      	str	r0, [sp, #16]
 80050a0:	9105      	str	r1, [sp, #20]
 80050a2:	68e0      	ldr	r0, [r4, #12]
 80050a4:	f7fd ffd8 	bl	8003058 <__aeabi_f2d>
					sum += y[k] * S[j + k * 6];
 80050a8:	9a3c      	ldr	r2, [sp, #240]	; 0xf0
 80050aa:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80050ac:	0006      	movs	r6, r0
 80050ae:	000d      	movs	r5, r1
					sum += y[k] * S[j + k * 6];
 80050b0:	9800      	ldr	r0, [sp, #0]
 80050b2:	9901      	ldr	r1, [sp, #4]
 80050b4:	f7fd f928 	bl	8002308 <__aeabi_dmul>
 80050b8:	0002      	movs	r2, r0
 80050ba:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80050bc:	0030      	movs	r0, r6
 80050be:	0029      	movs	r1, r5
 80050c0:	f7fd fb8e 	bl	80027e0 <__aeabi_dsub>
					sum += y[k] * S[j + k * 6];
 80050c4:	9a40      	ldr	r2, [sp, #256]	; 0x100
 80050c6:	9b41      	ldr	r3, [sp, #260]	; 0x104
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80050c8:	0006      	movs	r6, r0
 80050ca:	000f      	movs	r7, r1
					sum += y[k] * S[j + k * 6];
 80050cc:	9802      	ldr	r0, [sp, #8]
 80050ce:	9903      	ldr	r1, [sp, #12]
 80050d0:	f7fd f91a 	bl	8002308 <__aeabi_dmul>
 80050d4:	0002      	movs	r2, r0
 80050d6:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80050d8:	0030      	movs	r0, r6
 80050da:	0039      	movs	r1, r7
 80050dc:	f7fd fb80 	bl	80027e0 <__aeabi_dsub>
					sum += y[k] * S[j + k * 6];
 80050e0:	9a42      	ldr	r2, [sp, #264]	; 0x108
 80050e2:	9b43      	ldr	r3, [sp, #268]	; 0x10c
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80050e4:	0005      	movs	r5, r0
 80050e6:	000e      	movs	r6, r1
					sum += y[k] * S[j + k * 6];
 80050e8:	9804      	ldr	r0, [sp, #16]
 80050ea:	9905      	ldr	r1, [sp, #20]
 80050ec:	f7fd f90c 	bl	8002308 <__aeabi_dmul>
 80050f0:	0002      	movs	r2, r0
 80050f2:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80050f4:	0028      	movs	r0, r5
 80050f6:	0031      	movs	r1, r6
 80050f8:	f7fd fb72 	bl	80027e0 <__aeabi_dsub>
 80050fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80050fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005100:	f7fd f902 	bl	8002308 <__aeabi_dmul>
 8005104:	9006      	str	r0, [sp, #24]
 8005106:	9107      	str	r1, [sp, #28]
 8005108:	6920      	ldr	r0, [r4, #16]
 800510a:	f7fd ffa5 	bl	8003058 <__aeabi_f2d>
					sum += y[k] * S[j + k * 6];
 800510e:	9a46      	ldr	r2, [sp, #280]	; 0x118
 8005110:	9b47      	ldr	r3, [sp, #284]	; 0x11c
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005112:	0005      	movs	r5, r0
 8005114:	000f      	movs	r7, r1
					sum += y[k] * S[j + k * 6];
 8005116:	9800      	ldr	r0, [sp, #0]
 8005118:	9901      	ldr	r1, [sp, #4]
 800511a:	f7fd f8f5 	bl	8002308 <__aeabi_dmul>
 800511e:	0002      	movs	r2, r0
 8005120:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005122:	0028      	movs	r0, r5
 8005124:	0039      	movs	r1, r7
 8005126:	f7fd fb5b 	bl	80027e0 <__aeabi_dsub>
					sum += y[k] * S[j + k * 6];
 800512a:	9a48      	ldr	r2, [sp, #288]	; 0x120
 800512c:	9b49      	ldr	r3, [sp, #292]	; 0x124
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 800512e:	0006      	movs	r6, r0
 8005130:	000d      	movs	r5, r1
					sum += y[k] * S[j + k * 6];
 8005132:	9802      	ldr	r0, [sp, #8]
 8005134:	9903      	ldr	r1, [sp, #12]
 8005136:	f7fd f8e7 	bl	8002308 <__aeabi_dmul>
 800513a:	0002      	movs	r2, r0
 800513c:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 800513e:	0030      	movs	r0, r6
 8005140:	0029      	movs	r1, r5
 8005142:	f7fd fb4d 	bl	80027e0 <__aeabi_dsub>
					sum += y[k] * S[j + k * 6];
 8005146:	9a4c      	ldr	r2, [sp, #304]	; 0x130
 8005148:	9b4d      	ldr	r3, [sp, #308]	; 0x134
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 800514a:	0006      	movs	r6, r0
 800514c:	000f      	movs	r7, r1
					sum += y[k] * S[j + k * 6];
 800514e:	9804      	ldr	r0, [sp, #16]
 8005150:	9905      	ldr	r1, [sp, #20]
 8005152:	f7fd f8d9 	bl	8002308 <__aeabi_dmul>
 8005156:	0002      	movs	r2, r0
 8005158:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 800515a:	0030      	movs	r0, r6
 800515c:	0039      	movs	r1, r7
 800515e:	f7fd fb3f 	bl	80027e0 <__aeabi_dsub>
					sum += y[k] * S[j + k * 6];
 8005162:	9a4e      	ldr	r2, [sp, #312]	; 0x138
 8005164:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005166:	0005      	movs	r5, r0
 8005168:	000e      	movs	r6, r1
					sum += y[k] * S[j + k * 6];
 800516a:	9806      	ldr	r0, [sp, #24]
 800516c:	9907      	ldr	r1, [sp, #28]
 800516e:	f7fd f8cb 	bl	8002308 <__aeabi_dmul>
 8005172:	0002      	movs	r2, r0
 8005174:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005176:	0028      	movs	r0, r5
 8005178:	0031      	movs	r1, r6
 800517a:	f7fd fb31 	bl	80027e0 <__aeabi_dsub>
 800517e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005180:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005182:	f7fd f8c1 	bl	8002308 <__aeabi_dmul>
 8005186:	900c      	str	r0, [sp, #48]	; 0x30
 8005188:	910d      	str	r1, [sp, #52]	; 0x34
 800518a:	6960      	ldr	r0, [r4, #20]
 800518c:	f7fd ff64 	bl	8003058 <__aeabi_f2d>
					sum += y[k] * S[j + k * 6];
 8005190:	9a00      	ldr	r2, [sp, #0]
 8005192:	9b01      	ldr	r3, [sp, #4]
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005194:	0005      	movs	r5, r0
 8005196:	000f      	movs	r7, r1
					sum += y[k] * S[j + k * 6];
 8005198:	9822      	ldr	r0, [sp, #136]	; 0x88
 800519a:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800519c:	f7fd f8b4 	bl	8002308 <__aeabi_dmul>
 80051a0:	0002      	movs	r2, r0
 80051a2:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80051a4:	0028      	movs	r0, r5
 80051a6:	0039      	movs	r1, r7
 80051a8:	f7fd fb1a 	bl	80027e0 <__aeabi_dsub>
					sum += y[k] * S[j + k * 6];
 80051ac:	9a02      	ldr	r2, [sp, #8]
 80051ae:	9b03      	ldr	r3, [sp, #12]
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80051b0:	0006      	movs	r6, r0
 80051b2:	000d      	movs	r5, r1
					sum += y[k] * S[j + k * 6];
 80051b4:	9824      	ldr	r0, [sp, #144]	; 0x90
 80051b6:	9925      	ldr	r1, [sp, #148]	; 0x94
 80051b8:	f7fd f8a6 	bl	8002308 <__aeabi_dmul>
 80051bc:	0002      	movs	r2, r0
 80051be:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80051c0:	0030      	movs	r0, r6
 80051c2:	0029      	movs	r1, r5
 80051c4:	f7fd fb0c 	bl	80027e0 <__aeabi_dsub>
					sum += y[k] * S[j + k * 6];
 80051c8:	9a04      	ldr	r2, [sp, #16]
 80051ca:	9b05      	ldr	r3, [sp, #20]
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80051cc:	0006      	movs	r6, r0
 80051ce:	000f      	movs	r7, r1
					sum += y[k] * S[j + k * 6];
 80051d0:	9826      	ldr	r0, [sp, #152]	; 0x98
 80051d2:	9927      	ldr	r1, [sp, #156]	; 0x9c
 80051d4:	f7fd f898 	bl	8002308 <__aeabi_dmul>
 80051d8:	0002      	movs	r2, r0
 80051da:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80051dc:	0030      	movs	r0, r6
 80051de:	0039      	movs	r1, r7
 80051e0:	f7fd fafe 	bl	80027e0 <__aeabi_dsub>
					sum += y[k] * S[j + k * 6];
 80051e4:	9a06      	ldr	r2, [sp, #24]
 80051e6:	9b07      	ldr	r3, [sp, #28]
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80051e8:	0005      	movs	r5, r0
 80051ea:	000e      	movs	r6, r1
					sum += y[k] * S[j + k * 6];
 80051ec:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80051ee:	992f      	ldr	r1, [sp, #188]	; 0xbc
 80051f0:	f7fd f88a 	bl	8002308 <__aeabi_dmul>
 80051f4:	0002      	movs	r2, r0
 80051f6:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 80051f8:	0028      	movs	r0, r5
 80051fa:	0031      	movs	r1, r6
 80051fc:	f7fd faf0 	bl	80027e0 <__aeabi_dsub>
					sum += y[k] * S[j + k * 6];
 8005200:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005202:	9b0d      	ldr	r3, [sp, #52]	; 0x34
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005204:	0005      	movs	r5, r0
 8005206:	000f      	movs	r7, r1
					sum += y[k] * S[j + k * 6];
 8005208:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800520a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800520c:	f7fd f87c 	bl	8002308 <__aeabi_dmul>
 8005210:	0002      	movs	r2, r0
 8005212:	000b      	movs	r3, r1
				y[j] = (M[i * 6 + j] - sum) / S[j * 7];
 8005214:	0028      	movs	r0, r5
 8005216:	0039      	movs	r1, r7
 8005218:	f7fd fae2 	bl	80027e0 <__aeabi_dsub>
 800521c:	9d30      	ldr	r5, [sp, #192]	; 0xc0
 800521e:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 8005220:	002a      	movs	r2, r5
 8005222:	0033      	movs	r3, r6
 8005224:	f7fd f870 	bl	8002308 <__aeabi_dmul>
			for (int j = 5; j > -1; j--) {
				double sum = 0.0;
				for (int k = j + 1; k < 6; k++) {
					sum += M[i * 6 + k] * S[k + j * 6];
				}
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 8005228:	002a      	movs	r2, r5
 800522a:	0033      	movs	r3, r6
 800522c:	f7fd f86c 	bl	8002308 <__aeabi_dmul>
 8005230:	f7fd ff5a 	bl	80030e8 <__aeabi_d2f>
 8005234:	4682      	mov	sl, r0
 8005236:	6160      	str	r0, [r4, #20]
					sum += M[i * 6 + k] * S[k + j * 6];
 8005238:	1c01      	adds	r1, r0, #0
 800523a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800523c:	f7fb fd5a 	bl	8000cf4 <__aeabi_fmul>
 8005240:	f7fd ff0a 	bl	8003058 <__aeabi_f2d>
 8005244:	0002      	movs	r2, r0
 8005246:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 8005248:	980c      	ldr	r0, [sp, #48]	; 0x30
 800524a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800524c:	f7fd fac8 	bl	80027e0 <__aeabi_dsub>
 8005250:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005252:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005254:	f7fd f858 	bl	8002308 <__aeabi_dmul>
 8005258:	f7fd ff46 	bl	80030e8 <__aeabi_d2f>
					sum += M[i * 6 + k] * S[k + j * 6];
 800525c:	4651      	mov	r1, sl
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 800525e:	4683      	mov	fp, r0
 8005260:	6120      	str	r0, [r4, #16]
					sum += M[i * 6 + k] * S[k + j * 6];
 8005262:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8005264:	f7fb fd46 	bl	8000cf4 <__aeabi_fmul>
 8005268:	f7fd fef6 	bl	8003058 <__aeabi_f2d>
 800526c:	0002      	movs	r2, r0
 800526e:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 8005270:	9806      	ldr	r0, [sp, #24]
 8005272:	9907      	ldr	r1, [sp, #28]
 8005274:	f7fd fab4 	bl	80027e0 <__aeabi_dsub>
 8005278:	0006      	movs	r6, r0
 800527a:	000d      	movs	r5, r1
					sum += M[i * 6 + k] * S[k + j * 6];
 800527c:	4658      	mov	r0, fp
 800527e:	9950      	ldr	r1, [sp, #320]	; 0x140
 8005280:	f7fb fd38 	bl	8000cf4 <__aeabi_fmul>
 8005284:	f7fd fee8 	bl	8003058 <__aeabi_f2d>
 8005288:	0002      	movs	r2, r0
 800528a:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 800528c:	0030      	movs	r0, r6
 800528e:	0029      	movs	r1, r5
 8005290:	f7fd faa6 	bl	80027e0 <__aeabi_dsub>
 8005294:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005296:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005298:	f7fd f836 	bl	8002308 <__aeabi_dmul>
 800529c:	f7fd ff24 	bl	80030e8 <__aeabi_d2f>
					sum += M[i * 6 + k] * S[k + j * 6];
 80052a0:	994b      	ldr	r1, [sp, #300]	; 0x12c
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 80052a2:	1c05      	adds	r5, r0, #0
 80052a4:	60e0      	str	r0, [r4, #12]
					sum += M[i * 6 + k] * S[k + j * 6];
 80052a6:	4658      	mov	r0, fp
 80052a8:	f7fb fd24 	bl	8000cf4 <__aeabi_fmul>
 80052ac:	f7fd fed4 	bl	8003058 <__aeabi_f2d>
 80052b0:	0006      	movs	r6, r0
 80052b2:	000f      	movs	r7, r1
 80052b4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80052b6:	4651      	mov	r1, sl
 80052b8:	f7fb fd1c 	bl	8000cf4 <__aeabi_fmul>
 80052bc:	f7fd fecc 	bl	8003058 <__aeabi_f2d>
 80052c0:	0002      	movs	r2, r0
 80052c2:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 80052c4:	0030      	movs	r0, r6
 80052c6:	0039      	movs	r1, r7
 80052c8:	f7fc f8ae 	bl	8001428 <__aeabi_dadd>
 80052cc:	0002      	movs	r2, r0
 80052ce:	000b      	movs	r3, r1
 80052d0:	9804      	ldr	r0, [sp, #16]
 80052d2:	9905      	ldr	r1, [sp, #20]
 80052d4:	f7fd fa84 	bl	80027e0 <__aeabi_dsub>
 80052d8:	0006      	movs	r6, r0
 80052da:	000f      	movs	r7, r1
					sum += M[i * 6 + k] * S[k + j * 6];
 80052dc:	1c28      	adds	r0, r5, #0
 80052de:	9944      	ldr	r1, [sp, #272]	; 0x110
 80052e0:	f7fb fd08 	bl	8000cf4 <__aeabi_fmul>
 80052e4:	f7fd feb8 	bl	8003058 <__aeabi_f2d>
 80052e8:	0002      	movs	r2, r0
 80052ea:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 80052ec:	0030      	movs	r0, r6
 80052ee:	0039      	movs	r1, r7
 80052f0:	f7fd fa76 	bl	80027e0 <__aeabi_dsub>
 80052f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80052f6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80052f8:	f7fd f806 	bl	8002308 <__aeabi_dmul>
 80052fc:	f7fd fef4 	bl	80030e8 <__aeabi_d2f>
					sum += M[i * 6 + k] * S[k + j * 6];
 8005300:	993f      	ldr	r1, [sp, #252]	; 0xfc
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 8005302:	4680      	mov	r8, r0
 8005304:	60a0      	str	r0, [r4, #8]
					sum += M[i * 6 + k] * S[k + j * 6];
 8005306:	1c28      	adds	r0, r5, #0
 8005308:	f7fb fcf4 	bl	8000cf4 <__aeabi_fmul>
 800530c:	f7fd fea4 	bl	8003058 <__aeabi_f2d>
 8005310:	0006      	movs	r6, r0
 8005312:	000f      	movs	r7, r1
 8005314:	4658      	mov	r0, fp
 8005316:	994a      	ldr	r1, [sp, #296]	; 0x128
 8005318:	f7fb fcec 	bl	8000cf4 <__aeabi_fmul>
 800531c:	f7fd fe9c 	bl	8003058 <__aeabi_f2d>
 8005320:	0002      	movs	r2, r0
 8005322:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 8005324:	0030      	movs	r0, r6
 8005326:	0039      	movs	r1, r7
 8005328:	f7fc f87e 	bl	8001428 <__aeabi_dadd>
 800532c:	0006      	movs	r6, r0
 800532e:	000f      	movs	r7, r1
					sum += M[i * 6 + k] * S[k + j * 6];
 8005330:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8005332:	4651      	mov	r1, sl
 8005334:	f7fb fcde 	bl	8000cf4 <__aeabi_fmul>
 8005338:	f7fd fe8e 	bl	8003058 <__aeabi_f2d>
 800533c:	0002      	movs	r2, r0
 800533e:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 8005340:	0030      	movs	r0, r6
 8005342:	0039      	movs	r1, r7
 8005344:	f7fc f870 	bl	8001428 <__aeabi_dadd>
 8005348:	0002      	movs	r2, r0
 800534a:	000b      	movs	r3, r1
 800534c:	9802      	ldr	r0, [sp, #8]
 800534e:	9903      	ldr	r1, [sp, #12]
 8005350:	f7fd fa46 	bl	80027e0 <__aeabi_dsub>
 8005354:	0006      	movs	r6, r0
 8005356:	000f      	movs	r7, r1
					sum += M[i * 6 + k] * S[k + j * 6];
 8005358:	4640      	mov	r0, r8
 800535a:	993a      	ldr	r1, [sp, #232]	; 0xe8
 800535c:	f7fb fcca 	bl	8000cf4 <__aeabi_fmul>
 8005360:	f7fd fe7a 	bl	8003058 <__aeabi_f2d>
 8005364:	0002      	movs	r2, r0
 8005366:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 8005368:	0030      	movs	r0, r6
 800536a:	0039      	movs	r1, r7
 800536c:	f7fd fa38 	bl	80027e0 <__aeabi_dsub>
 8005370:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8005372:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005374:	f7fc ffc8 	bl	8002308 <__aeabi_dmul>
 8005378:	f7fd feb6 	bl	80030e8 <__aeabi_d2f>
					sum += M[i * 6 + k] * S[k + j * 6];
 800537c:	9935      	ldr	r1, [sp, #212]	; 0xd4
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 800537e:	6060      	str	r0, [r4, #4]
 8005380:	4681      	mov	r9, r0
					sum += M[i * 6 + k] * S[k + j * 6];
 8005382:	4640      	mov	r0, r8
 8005384:	f7fb fcb6 	bl	8000cf4 <__aeabi_fmul>
 8005388:	f7fd fe66 	bl	8003058 <__aeabi_f2d>
 800538c:	0006      	movs	r6, r0
 800538e:	000f      	movs	r7, r1
 8005390:	1c28      	adds	r0, r5, #0
 8005392:	993e      	ldr	r1, [sp, #248]	; 0xf8
 8005394:	f7fb fcae 	bl	8000cf4 <__aeabi_fmul>
 8005398:	f7fd fe5e 	bl	8003058 <__aeabi_f2d>
 800539c:	0002      	movs	r2, r0
 800539e:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 80053a0:	0030      	movs	r0, r6
 80053a2:	0039      	movs	r1, r7
 80053a4:	f7fc f840 	bl	8001428 <__aeabi_dadd>
 80053a8:	0002      	movs	r2, r0
 80053aa:	000b      	movs	r3, r1
 80053ac:	9800      	ldr	r0, [sp, #0]
 80053ae:	9901      	ldr	r1, [sp, #4]
 80053b0:	f7fd fa16 	bl	80027e0 <__aeabi_dsub>
 80053b4:	0005      	movs	r5, r0
 80053b6:	000e      	movs	r6, r1
					sum += M[i * 6 + k] * S[k + j * 6];
 80053b8:	4658      	mov	r0, fp
 80053ba:	9945      	ldr	r1, [sp, #276]	; 0x114
 80053bc:	f7fb fc9a 	bl	8000cf4 <__aeabi_fmul>
 80053c0:	f7fd fe4a 	bl	8003058 <__aeabi_f2d>
 80053c4:	0002      	movs	r2, r0
 80053c6:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 80053c8:	0028      	movs	r0, r5
 80053ca:	0031      	movs	r1, r6
 80053cc:	f7fd fa08 	bl	80027e0 <__aeabi_dsub>
 80053d0:	0005      	movs	r5, r0
 80053d2:	000f      	movs	r7, r1
					sum += M[i * 6 + k] * S[k + j * 6];
 80053d4:	9821      	ldr	r0, [sp, #132]	; 0x84
 80053d6:	4651      	mov	r1, sl
 80053d8:	f7fb fc8c 	bl	8000cf4 <__aeabi_fmul>
 80053dc:	f7fd fe3c 	bl	8003058 <__aeabi_f2d>
 80053e0:	0002      	movs	r2, r0
 80053e2:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 80053e4:	0028      	movs	r0, r5
 80053e6:	0039      	movs	r1, r7
 80053e8:	f7fd f9fa 	bl	80027e0 <__aeabi_dsub>
 80053ec:	0006      	movs	r6, r0
 80053ee:	000d      	movs	r5, r1
					sum += M[i * 6 + k] * S[k + j * 6];
 80053f0:	4648      	mov	r0, r9
 80053f2:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80053f4:	f7fb fc7e 	bl	8000cf4 <__aeabi_fmul>
 80053f8:	f7fd fe2e 	bl	8003058 <__aeabi_f2d>
 80053fc:	0002      	movs	r2, r0
 80053fe:	000b      	movs	r3, r1
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 8005400:	0030      	movs	r0, r6
 8005402:	0029      	movs	r1, r5
 8005404:	f7fd f9ec 	bl	80027e0 <__aeabi_dsub>
 8005408:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800540a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800540c:	f7fc ff7c 	bl	8002308 <__aeabi_dmul>
 8005410:	f7fd fe6a 	bl	80030e8 <__aeabi_d2f>
		for (int i = 0; i < 6; i++) {
 8005414:	9a3b      	ldr	r2, [sp, #236]	; 0xec
				M[i * 6 + j] = (y[j] - sum) / S[j * 7];
 8005416:	6020      	str	r0, [r4, #0]
		for (int i = 0; i < 6; i++) {
 8005418:	3418      	adds	r4, #24
 800541a:	42a2      	cmp	r2, r4
 800541c:	d000      	beq.n	8005420 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1ea0>
 800541e:	e5fb      	b.n	8005018 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x1a98>
		dy[0] = am[0] - ap[0];
 8005420:	9f58      	ldr	r7, [sp, #352]	; 0x160
 8005422:	985b      	ldr	r0, [sp, #364]	; 0x16c
 8005424:	991e      	ldr	r1, [sp, #120]	; 0x78
 8005426:	4681      	mov	r9, r0
 8005428:	6838      	ldr	r0, [r7, #0]
 800542a:	f7fb fd7d 	bl	8000f28 <__aeabi_fsub>
		dy[1] = am[1] - ap[1];
 800542e:	9918      	ldr	r1, [sp, #96]	; 0x60
		dy[0] = am[0] - ap[0];
 8005430:	4683      	mov	fp, r0
		dy[1] = am[1] - ap[1];
 8005432:	6878      	ldr	r0, [r7, #4]
 8005434:	f7fb fd78 	bl	8000f28 <__aeabi_fsub>
		dy[2] = am[2] - ap[2];
 8005438:	9919      	ldr	r1, [sp, #100]	; 0x64
		dy[1] = am[1] - ap[1];
 800543a:	4682      	mov	sl, r0
		dy[2] = am[2] - ap[2];
 800543c:	68b8      	ldr	r0, [r7, #8]
 800543e:	f7fb fd73 	bl	8000f28 <__aeabi_fsub>
		dy[3] = wm[0] - w[0];
 8005442:	9d59      	ldr	r5, [sp, #356]	; 0x164
		dy[2] = am[2] - ap[2];
 8005444:	1c06      	adds	r6, r0, #0
		dy[3] = wm[0] - w[0];
 8005446:	9955      	ldr	r1, [sp, #340]	; 0x154
 8005448:	6828      	ldr	r0, [r5, #0]
 800544a:	f7fb fd6d 	bl	8000f28 <__aeabi_fsub>
		dy[4] = wm[1] - w[1];
 800544e:	9956      	ldr	r1, [sp, #344]	; 0x158
		dy[3] = wm[0] - w[0];
 8005450:	1c07      	adds	r7, r0, #0
		dy[4] = wm[1] - w[1];
 8005452:	6868      	ldr	r0, [r5, #4]
 8005454:	f7fb fd68 	bl	8000f28 <__aeabi_fsub>
		dy[5] = wm[2] - w[2];
 8005458:	9957      	ldr	r1, [sp, #348]	; 0x15c
		dy[4] = wm[1] - w[1];
 800545a:	9000      	str	r0, [sp, #0]
		dy[5] = wm[2] - w[2];
 800545c:	68a8      	ldr	r0, [r5, #8]
 800545e:	f7fb fd63 	bl	8000f28 <__aeabi_fsub>
				sum += M[i * 6 + j] * dy[j];
 8005462:	4649      	mov	r1, r9
 8005464:	464a      	mov	r2, r9
 8005466:	9c5a      	ldr	r4, [sp, #360]	; 0x168
 8005468:	684b      	ldr	r3, [r1, #4]
 800546a:	46a0      	mov	r8, r4
 800546c:	688c      	ldr	r4, [r1, #8]
 800546e:	68c9      	ldr	r1, [r1, #12]
 8005470:	9414      	str	r4, [sp, #80]	; 0x50
 8005472:	6954      	ldr	r4, [r2, #20]
 8005474:	9150      	str	r1, [sp, #320]	; 0x140
 8005476:	6911      	ldr	r1, [r2, #16]
 8005478:	9316      	str	r3, [sp, #88]	; 0x58
 800547a:	9d60      	ldr	r5, [sp, #384]	; 0x180
		dy[5] = wm[2] - w[2];
 800547c:	9002      	str	r0, [sp, #8]
				sum += M[i * 6 + j] * dy[j];
 800547e:	944c      	str	r4, [sp, #304]	; 0x130
 8005480:	9800      	ldr	r0, [sp, #0]
 8005482:	915a      	str	r1, [sp, #360]	; 0x168
 8005484:	f7fb fc36 	bl	8000cf4 <__aeabi_fmul>
 8005488:	9950      	ldr	r1, [sp, #320]	; 0x140
 800548a:	1c04      	adds	r4, r0, #0
 800548c:	1c38      	adds	r0, r7, #0
 800548e:	f7fb fc31 	bl	8000cf4 <__aeabi_fmul>
 8005492:	1c01      	adds	r1, r0, #0
 8005494:	1c20      	adds	r0, r4, #0
 8005496:	f7fb f8c7 	bl	8000628 <__aeabi_fadd>
 800549a:	994c      	ldr	r1, [sp, #304]	; 0x130
 800549c:	1c04      	adds	r4, r0, #0
 800549e:	9802      	ldr	r0, [sp, #8]
 80054a0:	f7fb fc28 	bl	8000cf4 <__aeabi_fmul>
 80054a4:	1c01      	adds	r1, r0, #0
 80054a6:	1c20      	adds	r0, r4, #0
 80054a8:	f7fb f8be 	bl	8000628 <__aeabi_fadd>
 80054ac:	9916      	ldr	r1, [sp, #88]	; 0x58
 80054ae:	1c04      	adds	r4, r0, #0
 80054b0:	4650      	mov	r0, sl
 80054b2:	f7fb fc1f 	bl	8000cf4 <__aeabi_fmul>
 80054b6:	1c01      	adds	r1, r0, #0
 80054b8:	1c20      	adds	r0, r4, #0
 80054ba:	f7fb f8b5 	bl	8000628 <__aeabi_fadd>
 80054be:	1c29      	adds	r1, r5, #0
 80054c0:	1c04      	adds	r4, r0, #0
 80054c2:	4658      	mov	r0, fp
 80054c4:	955e      	str	r5, [sp, #376]	; 0x178
 80054c6:	f7fb fc15 	bl	8000cf4 <__aeabi_fmul>
 80054ca:	1c01      	adds	r1, r0, #0
 80054cc:	1c20      	adds	r0, r4, #0
 80054ce:	f7fb f8ab 	bl	8000628 <__aeabi_fadd>
 80054d2:	9914      	ldr	r1, [sp, #80]	; 0x50
 80054d4:	1c05      	adds	r5, r0, #0
 80054d6:	1c30      	adds	r0, r6, #0
 80054d8:	f7fb fc0c 	bl	8000cf4 <__aeabi_fmul>
 80054dc:	1c01      	adds	r1, r0, #0
 80054de:	1c28      	adds	r0, r5, #0
 80054e0:	f7fb f8a2 	bl	8000628 <__aeabi_fadd>
 80054e4:	9021      	str	r0, [sp, #132]	; 0x84
 80054e6:	4648      	mov	r0, r9
 80054e8:	4649      	mov	r1, r9
 80054ea:	464c      	mov	r4, r9
 80054ec:	69c3      	ldr	r3, [r0, #28]
 80054ee:	6a02      	ldr	r2, [r0, #32]
 80054f0:	6985      	ldr	r5, [r0, #24]
 80054f2:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80054f4:	6a89      	ldr	r1, [r1, #40]	; 0x28
 80054f6:	6ae4      	ldr	r4, [r4, #44]	; 0x2c
 80054f8:	904a      	str	r0, [sp, #296]	; 0x128
 80054fa:	9800      	ldr	r0, [sp, #0]
 80054fc:	9348      	str	r3, [sp, #288]	; 0x120
 80054fe:	9212      	str	r2, [sp, #72]	; 0x48
 8005500:	9446      	str	r4, [sp, #280]	; 0x118
 8005502:	915c      	str	r1, [sp, #368]	; 0x170
 8005504:	f7fb fbf6 	bl	8000cf4 <__aeabi_fmul>
 8005508:	994a      	ldr	r1, [sp, #296]	; 0x128
 800550a:	1c04      	adds	r4, r0, #0
 800550c:	1c38      	adds	r0, r7, #0
 800550e:	f7fb fbf1 	bl	8000cf4 <__aeabi_fmul>
 8005512:	1c01      	adds	r1, r0, #0
 8005514:	1c20      	adds	r0, r4, #0
 8005516:	f7fb f887 	bl	8000628 <__aeabi_fadd>
 800551a:	9946      	ldr	r1, [sp, #280]	; 0x118
 800551c:	1c04      	adds	r4, r0, #0
 800551e:	9802      	ldr	r0, [sp, #8]
 8005520:	f7fb fbe8 	bl	8000cf4 <__aeabi_fmul>
 8005524:	1c01      	adds	r1, r0, #0
 8005526:	1c20      	adds	r0, r4, #0
 8005528:	f7fb f87e 	bl	8000628 <__aeabi_fadd>
 800552c:	9948      	ldr	r1, [sp, #288]	; 0x120
 800552e:	1c04      	adds	r4, r0, #0
 8005530:	4650      	mov	r0, sl
 8005532:	f7fb fbdf 	bl	8000cf4 <__aeabi_fmul>
 8005536:	1c01      	adds	r1, r0, #0
 8005538:	1c20      	adds	r0, r4, #0
 800553a:	f7fb f875 	bl	8000628 <__aeabi_fadd>
 800553e:	1c29      	adds	r1, r5, #0
 8005540:	1c04      	adds	r4, r0, #0
 8005542:	4658      	mov	r0, fp
 8005544:	954b      	str	r5, [sp, #300]	; 0x12c
 8005546:	f7fb fbd5 	bl	8000cf4 <__aeabi_fmul>
 800554a:	1c01      	adds	r1, r0, #0
 800554c:	1c20      	adds	r0, r4, #0
 800554e:	f7fb f86b 	bl	8000628 <__aeabi_fadd>
 8005552:	9912      	ldr	r1, [sp, #72]	; 0x48
 8005554:	1c05      	adds	r5, r0, #0
 8005556:	1c30      	adds	r0, r6, #0
 8005558:	f7fb fbcc 	bl	8000cf4 <__aeabi_fmul>
 800555c:	1c01      	adds	r1, r0, #0
 800555e:	1c28      	adds	r0, r5, #0
 8005560:	f7fb f862 	bl	8000628 <__aeabi_fadd>
 8005564:	9022      	str	r0, [sp, #136]	; 0x88
 8005566:	4648      	mov	r0, r9
 8005568:	4649      	mov	r1, r9
 800556a:	464c      	mov	r4, r9
 800556c:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800556e:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8005570:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8005572:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8005574:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8005576:	6c64      	ldr	r4, [r4, #68]	; 0x44
 8005578:	9044      	str	r0, [sp, #272]	; 0x110
 800557a:	9800      	ldr	r0, [sp, #0]
 800557c:	9310      	str	r3, [sp, #64]	; 0x40
 800557e:	9245      	str	r2, [sp, #276]	; 0x114
 8005580:	9440      	str	r4, [sp, #256]	; 0x100
 8005582:	915b      	str	r1, [sp, #364]	; 0x16c
 8005584:	f7fb fbb6 	bl	8000cf4 <__aeabi_fmul>
 8005588:	9944      	ldr	r1, [sp, #272]	; 0x110
 800558a:	1c04      	adds	r4, r0, #0
 800558c:	1c38      	adds	r0, r7, #0
 800558e:	f7fb fbb1 	bl	8000cf4 <__aeabi_fmul>
 8005592:	1c01      	adds	r1, r0, #0
 8005594:	1c20      	adds	r0, r4, #0
 8005596:	f7fb f847 	bl	8000628 <__aeabi_fadd>
 800559a:	9940      	ldr	r1, [sp, #256]	; 0x100
 800559c:	1c04      	adds	r4, r0, #0
 800559e:	9802      	ldr	r0, [sp, #8]
 80055a0:	f7fb fba8 	bl	8000cf4 <__aeabi_fmul>
 80055a4:	1c01      	adds	r1, r0, #0
 80055a6:	1c20      	adds	r0, r4, #0
 80055a8:	f7fb f83e 	bl	8000628 <__aeabi_fadd>
 80055ac:	9910      	ldr	r1, [sp, #64]	; 0x40
 80055ae:	1c04      	adds	r4, r0, #0
 80055b0:	4650      	mov	r0, sl
 80055b2:	f7fb fb9f 	bl	8000cf4 <__aeabi_fmul>
 80055b6:	1c01      	adds	r1, r0, #0
 80055b8:	1c20      	adds	r0, r4, #0
 80055ba:	f7fb f835 	bl	8000628 <__aeabi_fadd>
 80055be:	1c29      	adds	r1, r5, #0
 80055c0:	1c04      	adds	r4, r0, #0
 80055c2:	4658      	mov	r0, fp
 80055c4:	9542      	str	r5, [sp, #264]	; 0x108
 80055c6:	f7fb fb95 	bl	8000cf4 <__aeabi_fmul>
 80055ca:	1c01      	adds	r1, r0, #0
 80055cc:	1c20      	adds	r0, r4, #0
 80055ce:	f7fb f82b 	bl	8000628 <__aeabi_fadd>
 80055d2:	9945      	ldr	r1, [sp, #276]	; 0x114
 80055d4:	1c05      	adds	r5, r0, #0
 80055d6:	1c30      	adds	r0, r6, #0
 80055d8:	f7fb fb8c 	bl	8000cf4 <__aeabi_fmul>
 80055dc:	1c01      	adds	r1, r0, #0
 80055de:	1c28      	adds	r0, r5, #0
 80055e0:	f7fb f822 	bl	8000628 <__aeabi_fadd>
 80055e4:	9028      	str	r0, [sp, #160]	; 0xa0
 80055e6:	4648      	mov	r0, r9
 80055e8:	464c      	mov	r4, r9
 80055ea:	2184      	movs	r1, #132	; 0x84
 80055ec:	6c83      	ldr	r3, [r0, #72]	; 0x48
 80055ee:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80055f0:	6d05      	ldr	r5, [r0, #80]	; 0x50
 80055f2:	933a      	str	r3, [sp, #232]	; 0xe8
 80055f4:	920e      	str	r2, [sp, #56]	; 0x38
 80055f6:	6d43      	ldr	r3, [r0, #84]	; 0x54
 80055f8:	6d82      	ldr	r2, [r0, #88]	; 0x58
 80055fa:	953f      	str	r5, [sp, #252]	; 0xfc
 80055fc:	6dc5      	ldr	r5, [r0, #92]	; 0x5c
 80055fe:	9336      	str	r3, [sp, #216]	; 0xd8
 8005600:	922d      	str	r2, [sp, #180]	; 0xb4
 8005602:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8005604:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8005606:	952a      	str	r5, [sp, #168]	; 0xa8
 8005608:	6e85      	ldr	r5, [r0, #104]	; 0x68
 800560a:	932c      	str	r3, [sp, #176]	; 0xb0
 800560c:	9206      	str	r2, [sp, #24]
 800560e:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 8005610:	6f02      	ldr	r2, [r0, #112]	; 0x70
 8005612:	9504      	str	r5, [sp, #16]
 8005614:	6f45      	ldr	r5, [r0, #116]	; 0x74
 8005616:	9329      	str	r3, [sp, #164]	; 0xa4
 8005618:	9226      	str	r2, [sp, #152]	; 0x98
 800561a:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800561c:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
 800561e:	9524      	str	r5, [sp, #144]	; 0x90
 8005620:	2580      	movs	r5, #128	; 0x80
 8005622:	932e      	str	r3, [sp, #184]	; 0xb8
 8005624:	920c      	str	r2, [sp, #48]	; 0x30
 8005626:	464b      	mov	r3, r9
 8005628:	5862      	ldr	r2, [r4, r1]
 800562a:	2488      	movs	r4, #136	; 0x88
 800562c:	218c      	movs	r1, #140	; 0x8c
 800562e:	5940      	ldr	r0, [r0, r5]
 8005630:	9234      	str	r2, [sp, #208]	; 0xd0
 8005632:	9030      	str	r0, [sp, #192]	; 0xc0
 8005634:	5918      	ldr	r0, [r3, r4]
	//  e: point of the Euclidean space that we want to map to a unit quaternion
	// outputs:
	//  delta: quaternion mapped with the e point
	void fC2M(float *e, float *delta) {
		// delta from the chart definition: Rodrigues Parameters
		float aux = 1.0 / std::sqrt(4.0 + e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);
 8005636:	9d21      	ldr	r5, [sp, #132]	; 0x84
				sum += M[i * 6 + j] * dy[j];
 8005638:	585a      	ldr	r2, [r3, r1]
 800563a:	9032      	str	r0, [sp, #200]	; 0xc8
		float aux = 1.0 / std::sqrt(4.0 + e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);
 800563c:	1c29      	adds	r1, r5, #0
 800563e:	1c28      	adds	r0, r5, #0
				sum += M[i * 6 + j] * dy[j];
 8005640:	9235      	str	r2, [sp, #212]	; 0xd4
		float aux = 1.0 / std::sqrt(4.0 + e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);
 8005642:	f7fb fb57 	bl	8000cf4 <__aeabi_fmul>
 8005646:	f7fd fd07 	bl	8003058 <__aeabi_f2d>
 800564a:	0004      	movs	r4, r0
 800564c:	9822      	ldr	r0, [sp, #136]	; 0x88
 800564e:	000d      	movs	r5, r1
 8005650:	1c01      	adds	r1, r0, #0
 8005652:	f7fb fb4f 	bl	8000cf4 <__aeabi_fmul>
 8005656:	f7fd fcff 	bl	8003058 <__aeabi_f2d>
 800565a:	0002      	movs	r2, r0
 800565c:	000b      	movs	r3, r1
 800565e:	0020      	movs	r0, r4
 8005660:	0029      	movs	r1, r5
 8005662:	f7fb fee1 	bl	8001428 <__aeabi_dadd>
 8005666:	2200      	movs	r2, #0
 8005668:	4bfe      	ldr	r3, [pc, #1016]	; (8005a64 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x24e4>)
 800566a:	f7fb fedd 	bl	8001428 <__aeabi_dadd>
 800566e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8005670:	0004      	movs	r4, r0
 8005672:	000d      	movs	r5, r1
 8005674:	1c18      	adds	r0, r3, #0
 8005676:	1c19      	adds	r1, r3, #0
 8005678:	f7fb fb3c 	bl	8000cf4 <__aeabi_fmul>
 800567c:	f7fd fcec 	bl	8003058 <__aeabi_f2d>
 8005680:	0002      	movs	r2, r0
 8005682:	000b      	movs	r3, r1
 8005684:	0020      	movs	r0, r4
 8005686:	0029      	movs	r1, r5
 8005688:	f7fb fece 	bl	8001428 <__aeabi_dadd>
 800568c:	f004 fc2e 	bl	8009eec <sqrt>
 8005690:	000b      	movs	r3, r1
 8005692:	0002      	movs	r2, r0
 8005694:	49f4      	ldr	r1, [pc, #976]	; (8005a68 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x24e8>)
 8005696:	2000      	movs	r0, #0
 8005698:	f7fc fa30 	bl	8001afc <__aeabi_ddiv>
 800569c:	f7fd fd24 	bl	80030e8 <__aeabi_d2f>
		delta[0] = 2.0 * aux;
 80056a0:	1c01      	adds	r1, r0, #0
		float aux = 1.0 / std::sqrt(4.0 + e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);
 80056a2:	1c04      	adds	r4, r0, #0
		delta[0] = 2.0 * aux;
 80056a4:	f7fa ffc0 	bl	8000628 <__aeabi_fadd>
		delta[1] = e[0] * aux;
 80056a8:	9921      	ldr	r1, [sp, #132]	; 0x84
		delta[0] = 2.0 * aux;
 80056aa:	9038      	str	r0, [sp, #224]	; 0xe0
		delta[1] = e[0] * aux;
 80056ac:	1c20      	adds	r0, r4, #0
 80056ae:	f7fb fb21 	bl	8000cf4 <__aeabi_fmul>
		delta[2] = e[1] * aux;
 80056b2:	9922      	ldr	r1, [sp, #136]	; 0x88
		delta[1] = e[0] * aux;
 80056b4:	1c05      	adds	r5, r0, #0
		delta[2] = e[1] * aux;
 80056b6:	1c20      	adds	r0, r4, #0
 80056b8:	f7fb fb1c 	bl	8000cf4 <__aeabi_fmul>
		delta[3] = e[2] * aux;
 80056bc:	9928      	ldr	r1, [sp, #160]	; 0xa0
		delta[2] = e[1] * aux;
 80056be:	903b      	str	r0, [sp, #236]	; 0xec
		delta[3] = e[2] * aux;
 80056c0:	1c20      	adds	r0, r4, #0
 80056c2:	f7fb fb17 	bl	8000cf4 <__aeabi_fmul>
		q[0] = qp[0] * qw[0] - qp[1] * qw[1] - qp[2] * qw[2] - qp[3] * qw[3];
 80056c6:	9938      	ldr	r1, [sp, #224]	; 0xe0
		delta[3] = e[2] * aux;
 80056c8:	903e      	str	r0, [sp, #248]	; 0xf8
		q[0] = qp[0] * qw[0] - qp[1] * qw[1] - qp[2] * qw[2] - qp[3] * qw[3];
 80056ca:	9851      	ldr	r0, [sp, #324]	; 0x144
 80056cc:	f7fb fb12 	bl	8000cf4 <__aeabi_fmul>
 80056d0:	1c29      	adds	r1, r5, #0
 80056d2:	1c04      	adds	r4, r0, #0
 80056d4:	9852      	ldr	r0, [sp, #328]	; 0x148
 80056d6:	953c      	str	r5, [sp, #240]	; 0xf0
 80056d8:	f7fb fb0c 	bl	8000cf4 <__aeabi_fmul>
 80056dc:	993b      	ldr	r1, [sp, #236]	; 0xec
 80056de:	1c05      	adds	r5, r0, #0
 80056e0:	9853      	ldr	r0, [sp, #332]	; 0x14c
 80056e2:	f7fb fb07 	bl	8000cf4 <__aeabi_fmul>
 80056e6:	1c01      	adds	r1, r0, #0
 80056e8:	1c28      	adds	r0, r5, #0
 80056ea:	f7fa ff9d 	bl	8000628 <__aeabi_fadd>
 80056ee:	1c01      	adds	r1, r0, #0
 80056f0:	1c20      	adds	r0, r4, #0
 80056f2:	f7fb fc19 	bl	8000f28 <__aeabi_fsub>
 80056f6:	993e      	ldr	r1, [sp, #248]	; 0xf8
 80056f8:	1c04      	adds	r4, r0, #0
 80056fa:	9854      	ldr	r0, [sp, #336]	; 0x150
 80056fc:	f7fb fafa 	bl	8000cf4 <__aeabi_fmul>
 8005700:	1c01      	adds	r1, r0, #0
 8005702:	1c20      	adds	r0, r4, #0
 8005704:	f7fb fc10 	bl	8000f28 <__aeabi_fsub>
 8005708:	4642      	mov	r2, r8
		q[1] = qp[0] * qw[1] + qw[0] * qp[1] + qp[2] * qw[3] - qp[3] * qw[2];
 800570a:	993c      	ldr	r1, [sp, #240]	; 0xf0
		q[0] = qp[0] * qw[0] - qp[1] * qw[1] - qp[2] * qw[2] - qp[3] * qw[3];
 800570c:	6010      	str	r0, [r2, #0]
 800570e:	904e      	str	r0, [sp, #312]	; 0x138
		q[1] = qp[0] * qw[1] + qw[0] * qp[1] + qp[2] * qw[3] - qp[3] * qw[2];
 8005710:	9851      	ldr	r0, [sp, #324]	; 0x144
 8005712:	f7fb faef 	bl	8000cf4 <__aeabi_fmul>
 8005716:	9938      	ldr	r1, [sp, #224]	; 0xe0
 8005718:	1c05      	adds	r5, r0, #0
 800571a:	9852      	ldr	r0, [sp, #328]	; 0x148
 800571c:	f7fb faea 	bl	8000cf4 <__aeabi_fmul>
 8005720:	1c01      	adds	r1, r0, #0
 8005722:	1c28      	adds	r0, r5, #0
 8005724:	f7fa ff80 	bl	8000628 <__aeabi_fadd>
 8005728:	993e      	ldr	r1, [sp, #248]	; 0xf8
 800572a:	1c04      	adds	r4, r0, #0
 800572c:	9853      	ldr	r0, [sp, #332]	; 0x14c
 800572e:	f7fb fae1 	bl	8000cf4 <__aeabi_fmul>
 8005732:	1c01      	adds	r1, r0, #0
 8005734:	1c20      	adds	r0, r4, #0
 8005736:	f7fa ff77 	bl	8000628 <__aeabi_fadd>
 800573a:	993b      	ldr	r1, [sp, #236]	; 0xec
 800573c:	1c05      	adds	r5, r0, #0
 800573e:	9854      	ldr	r0, [sp, #336]	; 0x150
 8005740:	f7fb fad8 	bl	8000cf4 <__aeabi_fmul>
 8005744:	1c01      	adds	r1, r0, #0
 8005746:	1c28      	adds	r0, r5, #0
 8005748:	f7fb fbee 	bl	8000f28 <__aeabi_fsub>
 800574c:	4641      	mov	r1, r8
 800574e:	9058      	str	r0, [sp, #352]	; 0x160
 8005750:	6048      	str	r0, [r1, #4]
		q[2] = qp[0] * qw[2] + qw[0] * qp[2] + qp[3] * qw[1] - qp[1] * qw[3];
 8005752:	993b      	ldr	r1, [sp, #236]	; 0xec
 8005754:	9851      	ldr	r0, [sp, #324]	; 0x144
 8005756:	f7fb facd 	bl	8000cf4 <__aeabi_fmul>
 800575a:	9938      	ldr	r1, [sp, #224]	; 0xe0
 800575c:	1c04      	adds	r4, r0, #0
 800575e:	9853      	ldr	r0, [sp, #332]	; 0x14c
 8005760:	f7fb fac8 	bl	8000cf4 <__aeabi_fmul>
 8005764:	1c01      	adds	r1, r0, #0
 8005766:	1c20      	adds	r0, r4, #0
 8005768:	f7fa ff5e 	bl	8000628 <__aeabi_fadd>
 800576c:	993c      	ldr	r1, [sp, #240]	; 0xf0
 800576e:	1c05      	adds	r5, r0, #0
 8005770:	9854      	ldr	r0, [sp, #336]	; 0x150
 8005772:	f7fb fabf 	bl	8000cf4 <__aeabi_fmul>
 8005776:	1c01      	adds	r1, r0, #0
 8005778:	1c28      	adds	r0, r5, #0
 800577a:	f7fa ff55 	bl	8000628 <__aeabi_fadd>
 800577e:	993e      	ldr	r1, [sp, #248]	; 0xf8
 8005780:	1c04      	adds	r4, r0, #0
 8005782:	9852      	ldr	r0, [sp, #328]	; 0x148
 8005784:	f7fb fab6 	bl	8000cf4 <__aeabi_fmul>
 8005788:	1c01      	adds	r1, r0, #0
 800578a:	1c20      	adds	r0, r4, #0
 800578c:	f7fb fbcc 	bl	8000f28 <__aeabi_fsub>
 8005790:	4643      	mov	r3, r8
		q[3] = qp[0] * qw[3] + qw[0] * qp[3] + qp[1] * qw[2] - qp[2] * qw[1];
 8005792:	993e      	ldr	r1, [sp, #248]	; 0xf8
		q[2] = qp[0] * qw[2] + qw[0] * qp[2] + qp[3] * qw[1] - qp[1] * qw[3];
 8005794:	6098      	str	r0, [r3, #8]
 8005796:	9059      	str	r0, [sp, #356]	; 0x164
		q[3] = qp[0] * qw[3] + qw[0] * qp[3] + qp[1] * qw[2] - qp[2] * qw[1];
 8005798:	9851      	ldr	r0, [sp, #324]	; 0x144
 800579a:	f7fb faab 	bl	8000cf4 <__aeabi_fmul>
 800579e:	9938      	ldr	r1, [sp, #224]	; 0xe0
 80057a0:	1c05      	adds	r5, r0, #0
 80057a2:	9854      	ldr	r0, [sp, #336]	; 0x150
 80057a4:	f7fb faa6 	bl	8000cf4 <__aeabi_fmul>
 80057a8:	1c01      	adds	r1, r0, #0
 80057aa:	1c28      	adds	r0, r5, #0
 80057ac:	f7fa ff3c 	bl	8000628 <__aeabi_fadd>
 80057b0:	993b      	ldr	r1, [sp, #236]	; 0xec
 80057b2:	1c04      	adds	r4, r0, #0
 80057b4:	9852      	ldr	r0, [sp, #328]	; 0x148
 80057b6:	f7fb fa9d 	bl	8000cf4 <__aeabi_fmul>
 80057ba:	1c01      	adds	r1, r0, #0
 80057bc:	1c20      	adds	r0, r4, #0
 80057be:	f7fa ff33 	bl	8000628 <__aeabi_fadd>
 80057c2:	993c      	ldr	r1, [sp, #240]	; 0xf0
 80057c4:	1c05      	adds	r5, r0, #0
 80057c6:	9853      	ldr	r0, [sp, #332]	; 0x14c
 80057c8:	f7fb fa94 	bl	8000cf4 <__aeabi_fmul>
 80057cc:	1c01      	adds	r1, r0, #0
 80057ce:	1c28      	adds	r0, r5, #0
 80057d0:	f7fb fbaa 	bl	8000f28 <__aeabi_fsub>
 80057d4:	1c02      	adds	r2, r0, #0
 80057d6:	9051      	str	r0, [sp, #324]	; 0x144
 80057d8:	4640      	mov	r0, r8
				sum += M[i * 6 + j] * dy[j];
 80057da:	992d      	ldr	r1, [sp, #180]	; 0xb4
		q[3] = qp[0] * qw[3] + qw[0] * qp[3] + qp[1] * qw[2] - qp[2] * qw[1];
 80057dc:	60c2      	str	r2, [r0, #12]
				sum += M[i * 6 + j] * dy[j];
 80057de:	9800      	ldr	r0, [sp, #0]
 80057e0:	f7fb fa88 	bl	8000cf4 <__aeabi_fmul>
 80057e4:	9936      	ldr	r1, [sp, #216]	; 0xd8
 80057e6:	1c04      	adds	r4, r0, #0
 80057e8:	1c38      	adds	r0, r7, #0
 80057ea:	f7fb fa83 	bl	8000cf4 <__aeabi_fmul>
 80057ee:	1c01      	adds	r1, r0, #0
 80057f0:	1c20      	adds	r0, r4, #0
 80057f2:	f7fa ff19 	bl	8000628 <__aeabi_fadd>
 80057f6:	9d02      	ldr	r5, [sp, #8]
 80057f8:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80057fa:	1c04      	adds	r4, r0, #0
 80057fc:	1c28      	adds	r0, r5, #0
 80057fe:	f7fb fa79 	bl	8000cf4 <__aeabi_fmul>
 8005802:	1c01      	adds	r1, r0, #0
 8005804:	1c20      	adds	r0, r4, #0
 8005806:	f7fa ff0f 	bl	8000628 <__aeabi_fadd>
 800580a:	990e      	ldr	r1, [sp, #56]	; 0x38
 800580c:	1c04      	adds	r4, r0, #0
 800580e:	4650      	mov	r0, sl
 8005810:	f7fb fa70 	bl	8000cf4 <__aeabi_fmul>
 8005814:	1c01      	adds	r1, r0, #0
 8005816:	1c20      	adds	r0, r4, #0
 8005818:	f7fa ff06 	bl	8000628 <__aeabi_fadd>
 800581c:	993a      	ldr	r1, [sp, #232]	; 0xe8
 800581e:	1c04      	adds	r4, r0, #0
 8005820:	4658      	mov	r0, fp
 8005822:	f7fb fa67 	bl	8000cf4 <__aeabi_fmul>
 8005826:	1c01      	adds	r1, r0, #0
 8005828:	1c20      	adds	r0, r4, #0
 800582a:	f7fa fefd 	bl	8000628 <__aeabi_fadd>
 800582e:	993f      	ldr	r1, [sp, #252]	; 0xfc
 8005830:	1c04      	adds	r4, r0, #0
 8005832:	1c30      	adds	r0, r6, #0
 8005834:	f7fb fa5e 	bl	8000cf4 <__aeabi_fmul>
 8005838:	1c01      	adds	r1, r0, #0
 800583a:	1c20      	adds	r0, r4, #0
 800583c:	f7fa fef4 	bl	8000628 <__aeabi_fadd>
		w[0] += dx[3];
 8005840:	9955      	ldr	r1, [sp, #340]	; 0x154
 8005842:	f7fa fef1 	bl	8000628 <__aeabi_fadd>
 8005846:	4641      	mov	r1, r8
 8005848:	6108      	str	r0, [r1, #16]
				sum += M[i * 6 + j] * dy[j];
 800584a:	9926      	ldr	r1, [sp, #152]	; 0x98
 800584c:	9800      	ldr	r0, [sp, #0]
 800584e:	f7fb fa51 	bl	8000cf4 <__aeabi_fmul>
 8005852:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8005854:	1c04      	adds	r4, r0, #0
 8005856:	1c38      	adds	r0, r7, #0
 8005858:	f7fb fa4c 	bl	8000cf4 <__aeabi_fmul>
 800585c:	1c01      	adds	r1, r0, #0
 800585e:	1c20      	adds	r0, r4, #0
 8005860:	f7fa fee2 	bl	8000628 <__aeabi_fadd>
 8005864:	9924      	ldr	r1, [sp, #144]	; 0x90
 8005866:	1c04      	adds	r4, r0, #0
 8005868:	1c28      	adds	r0, r5, #0
 800586a:	f7fb fa43 	bl	8000cf4 <__aeabi_fmul>
 800586e:	1c01      	adds	r1, r0, #0
 8005870:	1c20      	adds	r0, r4, #0
 8005872:	f7fa fed9 	bl	8000628 <__aeabi_fadd>
 8005876:	9906      	ldr	r1, [sp, #24]
 8005878:	1c04      	adds	r4, r0, #0
 800587a:	4650      	mov	r0, sl
 800587c:	f7fb fa3a 	bl	8000cf4 <__aeabi_fmul>
 8005880:	1c01      	adds	r1, r0, #0
 8005882:	1c20      	adds	r0, r4, #0
 8005884:	f7fa fed0 	bl	8000628 <__aeabi_fadd>
 8005888:	992c      	ldr	r1, [sp, #176]	; 0xb0
 800588a:	1c04      	adds	r4, r0, #0
 800588c:	4658      	mov	r0, fp
 800588e:	f7fb fa31 	bl	8000cf4 <__aeabi_fmul>
 8005892:	1c01      	adds	r1, r0, #0
 8005894:	1c20      	adds	r0, r4, #0
 8005896:	f7fa fec7 	bl	8000628 <__aeabi_fadd>
 800589a:	9904      	ldr	r1, [sp, #16]
 800589c:	1c04      	adds	r4, r0, #0
 800589e:	1c30      	adds	r0, r6, #0
 80058a0:	f7fb fa28 	bl	8000cf4 <__aeabi_fmul>
 80058a4:	1c01      	adds	r1, r0, #0
 80058a6:	1c20      	adds	r0, r4, #0
 80058a8:	f7fa febe 	bl	8000628 <__aeabi_fadd>
		w[1] += dx[4];
 80058ac:	9956      	ldr	r1, [sp, #344]	; 0x158
 80058ae:	f7fa febb 	bl	8000628 <__aeabi_fadd>
 80058b2:	4642      	mov	r2, r8
				sum += M[i * 6 + j] * dy[j];
 80058b4:	9934      	ldr	r1, [sp, #208]	; 0xd0
		w[1] += dx[4];
 80058b6:	6150      	str	r0, [r2, #20]
				sum += M[i * 6 + j] * dy[j];
 80058b8:	1c38      	adds	r0, r7, #0
 80058ba:	f7fb fa1b 	bl	8000cf4 <__aeabi_fmul>
 80058be:	9932      	ldr	r1, [sp, #200]	; 0xc8
 80058c0:	1c07      	adds	r7, r0, #0
 80058c2:	9800      	ldr	r0, [sp, #0]
 80058c4:	f7fb fa16 	bl	8000cf4 <__aeabi_fmul>
 80058c8:	1c01      	adds	r1, r0, #0
 80058ca:	1c38      	adds	r0, r7, #0
 80058cc:	f7fa feac 	bl	8000628 <__aeabi_fadd>
 80058d0:	9935      	ldr	r1, [sp, #212]	; 0xd4
 80058d2:	1c04      	adds	r4, r0, #0
 80058d4:	1c28      	adds	r0, r5, #0
 80058d6:	f7fb fa0d 	bl	8000cf4 <__aeabi_fmul>
 80058da:	1c01      	adds	r1, r0, #0
 80058dc:	1c20      	adds	r0, r4, #0
 80058de:	f7fa fea3 	bl	8000628 <__aeabi_fadd>
 80058e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80058e4:	1c05      	adds	r5, r0, #0
 80058e6:	4650      	mov	r0, sl
 80058e8:	f7fb fa04 	bl	8000cf4 <__aeabi_fmul>
 80058ec:	1c01      	adds	r1, r0, #0
 80058ee:	1c28      	adds	r0, r5, #0
 80058f0:	f7fa fe9a 	bl	8000628 <__aeabi_fadd>
 80058f4:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80058f6:	1c07      	adds	r7, r0, #0
 80058f8:	4658      	mov	r0, fp
 80058fa:	f7fb f9fb 	bl	8000cf4 <__aeabi_fmul>
 80058fe:	1c01      	adds	r1, r0, #0
 8005900:	1c38      	adds	r0, r7, #0
 8005902:	f7fa fe91 	bl	8000628 <__aeabi_fadd>
 8005906:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8005908:	1c04      	adds	r4, r0, #0
 800590a:	1c30      	adds	r0, r6, #0
 800590c:	f7fb f9f2 	bl	8000cf4 <__aeabi_fmul>
 8005910:	1c01      	adds	r1, r0, #0
 8005912:	1c20      	adds	r0, r4, #0
 8005914:	f7fa fe88 	bl	8000628 <__aeabi_fadd>
		w[2] += dx[5];
 8005918:	9957      	ldr	r1, [sp, #348]	; 0x15c
 800591a:	f7fa fe85 	bl	8000628 <__aeabi_fadd>
 800591e:	4646      	mov	r6, r8
 8005920:	61b0      	str	r0, [r6, #24]
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005922:	981e      	ldr	r0, [sp, #120]	; 0x78
 8005924:	9914      	ldr	r1, [sp, #80]	; 0x50
 8005926:	4683      	mov	fp, r0
 8005928:	f7fb f9e4 	bl	8000cf4 <__aeabi_fmul>
 800592c:	9b5e      	ldr	r3, [sp, #376]	; 0x178
 800592e:	1c05      	adds	r5, r0, #0
 8005930:	1c19      	adds	r1, r3, #0
 8005932:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005934:	469a      	mov	sl, r3
 8005936:	f7fb f9dd 	bl	8000cf4 <__aeabi_fmul>
 800593a:	1c01      	adds	r1, r0, #0
 800593c:	1c28      	adds	r0, r5, #0
 800593e:	f7fa fe73 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005942:	2180      	movs	r1, #128	; 0x80
 8005944:	060f      	lsls	r7, r1, #24
 8005946:	46bc      	mov	ip, r7
 8005948:	4460      	add	r0, ip
					sum -= M[i * 6 + k] * H[k + j * 6];
 800594a:	9916      	ldr	r1, [sp, #88]	; 0x58
				S[i * 6 + j] = sum;
 800594c:	9085      	str	r0, [sp, #532]	; 0x214
					sum -= M[i * 6 + k] * H[k + j * 6];
 800594e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005950:	f7fb f9d0 	bl	8000cf4 <__aeabi_fmul>
 8005954:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8005956:	4651      	mov	r1, sl
 8005958:	1c04      	adds	r4, r0, #0
 800595a:	1c10      	adds	r0, r2, #0
 800595c:	4692      	mov	sl, r2
 800595e:	f7fb f9c9 	bl	8000cf4 <__aeabi_fmul>
 8005962:	1c01      	adds	r1, r0, #0
 8005964:	1c20      	adds	r0, r4, #0
 8005966:	f7fa fe5f 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 800596a:	46bc      	mov	ip, r7
 800596c:	9b50      	ldr	r3, [sp, #320]	; 0x140
 800596e:	4460      	add	r0, ip
 8005970:	4463      	add	r3, ip
 8005972:	9086      	str	r0, [sp, #536]	; 0x218
 8005974:	9387      	str	r3, [sp, #540]	; 0x21c
 8005976:	9b5a      	ldr	r3, [sp, #360]	; 0x168
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005978:	9912      	ldr	r1, [sp, #72]	; 0x48
				S[i * 6 + j] = sum;
 800597a:	4463      	add	r3, ip
 800597c:	9388      	str	r3, [sp, #544]	; 0x220
 800597e:	9b4c      	ldr	r3, [sp, #304]	; 0x130
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005980:	9809      	ldr	r0, [sp, #36]	; 0x24
				S[i * 6 + j] = sum;
 8005982:	4463      	add	r3, ip
 8005984:	9389      	str	r3, [sp, #548]	; 0x224
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005986:	f7fb f9b5 	bl	8000cf4 <__aeabi_fmul>
 800598a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800598c:	9f48      	ldr	r7, [sp, #288]	; 0x120
 800598e:	1c04      	adds	r4, r0, #0
 8005990:	1c39      	adds	r1, r7, #0
 8005992:	1c28      	adds	r0, r5, #0
 8005994:	f7fb f9ae 	bl	8000cf4 <__aeabi_fmul>
 8005998:	1c01      	adds	r1, r0, #0
 800599a:	1c20      	adds	r0, r4, #0
 800599c:	f7fa fe44 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 80059a0:	2180      	movs	r1, #128	; 0x80
 80059a2:	060e      	lsls	r6, r1, #24
 80059a4:	46b4      	mov	ip, r6
 80059a6:	4460      	add	r0, ip
					sum -= M[i * 6 + k] * H[k + j * 6];
 80059a8:	1c39      	adds	r1, r7, #0
				S[i * 6 + j] = sum;
 80059aa:	908a      	str	r0, [sp, #552]	; 0x228
					sum -= M[i * 6 + k] * H[k + j * 6];
 80059ac:	980a      	ldr	r0, [sp, #40]	; 0x28
 80059ae:	f7fb f9a1 	bl	8000cf4 <__aeabi_fmul>
 80059b2:	994b      	ldr	r1, [sp, #300]	; 0x12c
 80059b4:	1c04      	adds	r4, r0, #0
 80059b6:	4650      	mov	r0, sl
 80059b8:	f7fb f99c 	bl	8000cf4 <__aeabi_fmul>
 80059bc:	1c01      	adds	r1, r0, #0
 80059be:	1c20      	adds	r0, r4, #0
 80059c0:	f7fa fe32 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 80059c4:	46b4      	mov	ip, r6
 80059c6:	9b4a      	ldr	r3, [sp, #296]	; 0x128
					sum -= M[i * 6 + k] * H[k + j * 6];
 80059c8:	9f45      	ldr	r7, [sp, #276]	; 0x114
				S[i * 6 + j] = sum;
 80059ca:	4463      	add	r3, ip
 80059cc:	938d      	str	r3, [sp, #564]	; 0x234
 80059ce:	9b5c      	ldr	r3, [sp, #368]	; 0x170
 80059d0:	4460      	add	r0, ip
 80059d2:	4463      	add	r3, ip
 80059d4:	938e      	str	r3, [sp, #568]	; 0x238
 80059d6:	9b46      	ldr	r3, [sp, #280]	; 0x118
					sum -= M[i * 6 + k] * H[k + j * 6];
 80059d8:	1c39      	adds	r1, r7, #0
				S[i * 6 + j] = sum;
 80059da:	4463      	add	r3, ip
 80059dc:	908c      	str	r0, [sp, #560]	; 0x230
					sum -= M[i * 6 + k] * H[k + j * 6];
 80059de:	9809      	ldr	r0, [sp, #36]	; 0x24
				S[i * 6 + j] = sum;
 80059e0:	938f      	str	r3, [sp, #572]	; 0x23c
					sum -= M[i * 6 + k] * H[k + j * 6];
 80059e2:	f7fb f987 	bl	8000cf4 <__aeabi_fmul>
 80059e6:	9910      	ldr	r1, [sp, #64]	; 0x40
 80059e8:	1c06      	adds	r6, r0, #0
 80059ea:	1c28      	adds	r0, r5, #0
 80059ec:	f7fb f982 	bl	8000cf4 <__aeabi_fmul>
 80059f0:	1c01      	adds	r1, r0, #0
 80059f2:	1c30      	adds	r0, r6, #0
 80059f4:	f7fa fe18 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 80059f8:	2180      	movs	r1, #128	; 0x80
 80059fa:	060e      	lsls	r6, r1, #24
 80059fc:	46b4      	mov	ip, r6
 80059fe:	4460      	add	r0, ip
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005a00:	1c39      	adds	r1, r7, #0
				S[i * 6 + j] = sum;
 8005a02:	9090      	str	r0, [sp, #576]	; 0x240
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005a04:	4658      	mov	r0, fp
 8005a06:	f7fb f975 	bl	8000cf4 <__aeabi_fmul>
 8005a0a:	9942      	ldr	r1, [sp, #264]	; 0x108
 8005a0c:	1c04      	adds	r4, r0, #0
 8005a0e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005a10:	f7fb f970 	bl	8000cf4 <__aeabi_fmul>
 8005a14:	1c01      	adds	r1, r0, #0
 8005a16:	1c20      	adds	r0, r4, #0
 8005a18:	f7fa fe06 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005a1c:	9c44      	ldr	r4, [sp, #272]	; 0x110
 8005a1e:	46b4      	mov	ip, r6
 8005a20:	0023      	movs	r3, r4
 8005a22:	9c5b      	ldr	r4, [sp, #364]	; 0x16c
 8005a24:	4463      	add	r3, ip
 8005a26:	9393      	str	r3, [sp, #588]	; 0x24c
 8005a28:	0023      	movs	r3, r4
 8005a2a:	4460      	add	r0, ip
 8005a2c:	4463      	add	r3, ip
 8005a2e:	9091      	str	r0, [sp, #580]	; 0x244
 8005a30:	9394      	str	r3, [sp, #592]	; 0x250
 8005a32:	9c40      	ldr	r4, [sp, #256]	; 0x100
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005a34:	9f3f      	ldr	r7, [sp, #252]	; 0xfc
				S[i * 6 + j] = sum;
 8005a36:	0023      	movs	r3, r4
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005a38:	1c39      	adds	r1, r7, #0
				S[i * 6 + j] = sum;
 8005a3a:	4463      	add	r3, ip
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005a3c:	9809      	ldr	r0, [sp, #36]	; 0x24
				S[i * 6 + j] = sum;
 8005a3e:	9395      	str	r3, [sp, #596]	; 0x254
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005a40:	f7fb f958 	bl	8000cf4 <__aeabi_fmul>
 8005a44:	990e      	ldr	r1, [sp, #56]	; 0x38
 8005a46:	1c06      	adds	r6, r0, #0
 8005a48:	1c28      	adds	r0, r5, #0
 8005a4a:	f7fb f953 	bl	8000cf4 <__aeabi_fmul>
 8005a4e:	1c01      	adds	r1, r0, #0
 8005a50:	1c30      	adds	r0, r6, #0
 8005a52:	f7fa fde9 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005a56:	2180      	movs	r1, #128	; 0x80
 8005a58:	060e      	lsls	r6, r1, #24
 8005a5a:	46b4      	mov	ip, r6
 8005a5c:	4460      	add	r0, ip
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005a5e:	1c39      	adds	r1, r7, #0
 8005a60:	e004      	b.n	8005a6c <_ZN7MEKFcRP9updateIMUEPfS0_f+0x24ec>
 8005a62:	46c0      	nop			; (mov r8, r8)
 8005a64:	40100000 	.word	0x40100000
 8005a68:	3ff00000 	.word	0x3ff00000
				S[i * 6 + j] = sum;
 8005a6c:	9096      	str	r0, [sp, #600]	; 0x258
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005a6e:	4658      	mov	r0, fp
 8005a70:	f7fb f940 	bl	8000cf4 <__aeabi_fmul>
 8005a74:	9f3a      	ldr	r7, [sp, #232]	; 0xe8
 8005a76:	1c04      	adds	r4, r0, #0
 8005a78:	1c39      	adds	r1, r7, #0
 8005a7a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005a7c:	f7fb f93a 	bl	8000cf4 <__aeabi_fmul>
 8005a80:	1c01      	adds	r1, r0, #0
 8005a82:	1c20      	adds	r0, r4, #0
 8005a84:	f7fa fdd0 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005a88:	46b4      	mov	ip, r6
 8005a8a:	4460      	add	r0, ip
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005a8c:	990e      	ldr	r1, [sp, #56]	; 0x38
				S[i * 6 + j] = sum;
 8005a8e:	9097      	str	r0, [sp, #604]	; 0x25c
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005a90:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005a92:	f7fb f92f 	bl	8000cf4 <__aeabi_fmul>
 8005a96:	1c39      	adds	r1, r7, #0
 8005a98:	1c04      	adds	r4, r0, #0
 8005a9a:	4650      	mov	r0, sl
 8005a9c:	f7fb f92a 	bl	8000cf4 <__aeabi_fmul>
 8005aa0:	1c01      	adds	r1, r0, #0
 8005aa2:	1c20      	adds	r0, r4, #0
 8005aa4:	f7fa fdc0 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005aa8:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8005aaa:	46b4      	mov	ip, r6
 8005aac:	0023      	movs	r3, r4
 8005aae:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8005ab0:	4463      	add	r3, ip
 8005ab2:	939a      	str	r3, [sp, #616]	; 0x268
 8005ab4:	0023      	movs	r3, r4
 8005ab6:	4460      	add	r0, ip
 8005ab8:	4463      	add	r3, ip
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005aba:	9904      	ldr	r1, [sp, #16]
				S[i * 6 + j] = sum;
 8005abc:	9098      	str	r0, [sp, #608]	; 0x260
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005abe:	9809      	ldr	r0, [sp, #36]	; 0x24
				S[i * 6 + j] = sum;
 8005ac0:	939b      	str	r3, [sp, #620]	; 0x26c
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005ac2:	f7fb f917 	bl	8000cf4 <__aeabi_fmul>
 8005ac6:	9906      	ldr	r1, [sp, #24]
 8005ac8:	1c06      	adds	r6, r0, #0
 8005aca:	1c28      	adds	r0, r5, #0
 8005acc:	f7fb f912 	bl	8000cf4 <__aeabi_fmul>
 8005ad0:	1c2f      	adds	r7, r5, #0
				S[i * 6 + j] = sum;
 8005ad2:	2580      	movs	r5, #128	; 0x80
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005ad4:	1c01      	adds	r1, r0, #0
 8005ad6:	1c30      	adds	r0, r6, #0
 8005ad8:	f7fa fda6 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005adc:	0629      	lsls	r1, r5, #24
 8005ade:	468c      	mov	ip, r1
 8005ae0:	4460      	add	r0, ip
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005ae2:	9904      	ldr	r1, [sp, #16]
				S[i * 6 + j] = sum;
 8005ae4:	909c      	str	r0, [sp, #624]	; 0x270
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005ae6:	4658      	mov	r0, fp
 8005ae8:	f7fb f904 	bl	8000cf4 <__aeabi_fmul>
 8005aec:	9e2c      	ldr	r6, [sp, #176]	; 0xb0
 8005aee:	1c04      	adds	r4, r0, #0
 8005af0:	1c31      	adds	r1, r6, #0
 8005af2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005af4:	f7fb f8fe 	bl	8000cf4 <__aeabi_fmul>
 8005af8:	1c01      	adds	r1, r0, #0
 8005afa:	1c20      	adds	r0, r4, #0
 8005afc:	f7fa fd94 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005b00:	2280      	movs	r2, #128	; 0x80
 8005b02:	0613      	lsls	r3, r2, #24
 8005b04:	469c      	mov	ip, r3
 8005b06:	4460      	add	r0, ip
 8005b08:	909d      	str	r0, [sp, #628]	; 0x274
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005b0a:	9906      	ldr	r1, [sp, #24]
 8005b0c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8005b0e:	1c28      	adds	r0, r5, #0
 8005b10:	f7fb f8f0 	bl	8000cf4 <__aeabi_fmul>
 8005b14:	1c31      	adds	r1, r6, #0
 8005b16:	1c04      	adds	r4, r0, #0
 8005b18:	4650      	mov	r0, sl
 8005b1a:	f7fb f8eb 	bl	8000cf4 <__aeabi_fmul>
 8005b1e:	1c01      	adds	r1, r0, #0
 8005b20:	1c20      	adds	r0, r4, #0
 8005b22:	f7fa fd81 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005b26:	2180      	movs	r1, #128	; 0x80
 8005b28:	060e      	lsls	r6, r1, #24
 8005b2a:	46b4      	mov	ip, r6
 8005b2c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8005b2e:	4460      	add	r0, ip
 8005b30:	4463      	add	r3, ip
 8005b32:	939f      	str	r3, [sp, #636]	; 0x27c
 8005b34:	9b24      	ldr	r3, [sp, #144]	; 0x90
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005b36:	990c      	ldr	r1, [sp, #48]	; 0x30
				S[i * 6 + j] = sum;
 8005b38:	4463      	add	r3, ip
 8005b3a:	909e      	str	r0, [sp, #632]	; 0x278
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005b3c:	1c38      	adds	r0, r7, #0
				S[i * 6 + j] = sum;
 8005b3e:	93a1      	str	r3, [sp, #644]	; 0x284
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005b40:	9719      	str	r7, [sp, #100]	; 0x64
 8005b42:	f7fb f8d7 	bl	8000cf4 <__aeabi_fmul>
 8005b46:	9f30      	ldr	r7, [sp, #192]	; 0xc0
 8005b48:	1c04      	adds	r4, r0, #0
 8005b4a:	1c39      	adds	r1, r7, #0
 8005b4c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005b4e:	f7fb f8d1 	bl	8000cf4 <__aeabi_fmul>
 8005b52:	1c01      	adds	r1, r0, #0
 8005b54:	1c20      	adds	r0, r4, #0
 8005b56:	f7fa fd67 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005b5a:	46b4      	mov	ip, r6
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005b5c:	9e2e      	ldr	r6, [sp, #184]	; 0xb8
				S[i * 6 + j] = sum;
 8005b5e:	4460      	add	r0, ip
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005b60:	1c31      	adds	r1, r6, #0
				S[i * 6 + j] = sum;
 8005b62:	90a2      	str	r0, [sp, #648]	; 0x288
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005b64:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005b66:	f7fb f8c5 	bl	8000cf4 <__aeabi_fmul>
 8005b6a:	1c39      	adds	r1, r7, #0
 8005b6c:	1c04      	adds	r4, r0, #0
 8005b6e:	4658      	mov	r0, fp
 8005b70:	f7fb f8c0 	bl	8000cf4 <__aeabi_fmul>
 8005b74:	1c01      	adds	r1, r0, #0
 8005b76:	1c20      	adds	r0, r4, #0
 8005b78:	f7fa fd56 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005b7c:	2380      	movs	r3, #128	; 0x80
 8005b7e:	061a      	lsls	r2, r3, #24
 8005b80:	4694      	mov	ip, r2
 8005b82:	4460      	add	r0, ip
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005b84:	1c31      	adds	r1, r6, #0
				S[i * 6 + j] = sum;
 8005b86:	90a3      	str	r0, [sp, #652]	; 0x28c
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005b88:	4650      	mov	r0, sl
 8005b8a:	f7fb f8b3 	bl	8000cf4 <__aeabi_fmul>
 8005b8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005b90:	1c07      	adds	r7, r0, #0
 8005b92:	1c28      	adds	r0, r5, #0
 8005b94:	950a      	str	r5, [sp, #40]	; 0x28
 8005b96:	f7fb f8ad 	bl	8000cf4 <__aeabi_fmul>
				S[i * 6 + j] = sum;
 8005b9a:	2580      	movs	r5, #128	; 0x80
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005b9c:	1c01      	adds	r1, r0, #0
 8005b9e:	1c38      	adds	r0, r7, #0
 8005ba0:	f7fa fd42 	bl	8000628 <__aeabi_fadd>
				S[i * 6 + j] = sum;
 8005ba4:	0629      	lsls	r1, r5, #24
 8005ba6:	2590      	movs	r5, #144	; 0x90
 8005ba8:	468c      	mov	ip, r1
 8005baa:	2680      	movs	r6, #128	; 0x80
 8005bac:	2784      	movs	r7, #132	; 0x84
 8005bae:	aa60      	add	r2, sp, #384	; 0x180
 8005bb0:	1951      	adds	r1, r2, r5
 8005bb2:	2288      	movs	r2, #136	; 0x88
 8005bb4:	ac60      	add	r4, sp, #384	; 0x180
 8005bb6:	4460      	add	r0, ip
 8005bb8:	1963      	adds	r3, r4, r5
 8005bba:	5198      	str	r0, [r3, r6]
 8005bbc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8005bbe:	ac60      	add	r4, sp, #384	; 0x180
 8005bc0:	4463      	add	r3, ip
 8005bc2:	51cb      	str	r3, [r1, r7]
 8005bc4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8005bc6:	1961      	adds	r1, r4, r5
 8005bc8:	4463      	add	r3, ip
 8005bca:	508b      	str	r3, [r1, r2]
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005bcc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005bce:	9914      	ldr	r1, [sp, #80]	; 0x50
 8005bd0:	f7fb f890 	bl	8000cf4 <__aeabi_fmul>
 8005bd4:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005bd6:	1c04      	adds	r4, r0, #0
 8005bd8:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005bda:	f7fb f88b 	bl	8000cf4 <__aeabi_fmul>
 8005bde:	1c01      	adds	r1, r0, #0
			S[k] += 1.0;
 8005be0:	1c20      	adds	r0, r4, #0
 8005be2:	f7fa fd21 	bl	8000628 <__aeabi_fadd>
 8005be6:	23fe      	movs	r3, #254	; 0xfe
 8005be8:	1c01      	adds	r1, r0, #0
 8005bea:	0598      	lsls	r0, r3, #22
 8005bec:	f7fb f99c 	bl	8000f28 <__aeabi_fsub>
 8005bf0:	9084      	str	r0, [sp, #528]	; 0x210
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005bf2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8005bf4:	4658      	mov	r0, fp
 8005bf6:	f7fb f87d 	bl	8000cf4 <__aeabi_fmul>
 8005bfa:	994b      	ldr	r1, [sp, #300]	; 0x12c
 8005bfc:	1c04      	adds	r4, r0, #0
 8005bfe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005c00:	f7fb f878 	bl	8000cf4 <__aeabi_fmul>
 8005c04:	1c01      	adds	r1, r0, #0
			S[k] += 1.0;
 8005c06:	1c20      	adds	r0, r4, #0
 8005c08:	f7fa fd0e 	bl	8000628 <__aeabi_fadd>
 8005c0c:	1c01      	adds	r1, r0, #0
 8005c0e:	20fe      	movs	r0, #254	; 0xfe
 8005c10:	0580      	lsls	r0, r0, #22
 8005c12:	f7fb f989 	bl	8000f28 <__aeabi_fsub>
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005c16:	9910      	ldr	r1, [sp, #64]	; 0x40
			S[k] += 1.0;
 8005c18:	908b      	str	r0, [sp, #556]	; 0x22c
					sum -= M[i * 6 + k] * H[k + j * 6];
 8005c1a:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005c1c:	f7fb f86a 	bl	8000cf4 <__aeabi_fmul>
 8005c20:	9942      	ldr	r1, [sp, #264]	; 0x108
 8005c22:	1c04      	adds	r4, r0, #0
 8005c24:	4650      	mov	r0, sl
 8005c26:	f7fb f865 	bl	8000cf4 <__aeabi_fmul>
 8005c2a:	1c01      	adds	r1, r0, #0
			S[k] += 1.0;
 8005c2c:	1c20      	adds	r0, r4, #0
 8005c2e:	f7fa fcfb 	bl	8000628 <__aeabi_fadd>
 8005c32:	22fe      	movs	r2, #254	; 0xfe
 8005c34:	1c01      	adds	r1, r0, #0
 8005c36:	0590      	lsls	r0, r2, #22
 8005c38:	f7fb f976 	bl	8000f28 <__aeabi_fsub>
 8005c3c:	23fe      	movs	r3, #254	; 0xfe
 8005c3e:	9936      	ldr	r1, [sp, #216]	; 0xd8
 8005c40:	9092      	str	r0, [sp, #584]	; 0x248
 8005c42:	0598      	lsls	r0, r3, #22
 8005c44:	f7fb f970 	bl	8000f28 <__aeabi_fsub>
 8005c48:	9099      	str	r0, [sp, #612]	; 0x264
 8005c4a:	20fe      	movs	r0, #254	; 0xfe
 8005c4c:	9926      	ldr	r1, [sp, #152]	; 0x98
 8005c4e:	0580      	lsls	r0, r0, #22
 8005c50:	f7fb f96a 	bl	8000f28 <__aeabi_fsub>
 8005c54:	24fe      	movs	r4, #254	; 0xfe
 8005c56:	9935      	ldr	r1, [sp, #212]	; 0xd4
 8005c58:	90a0      	str	r0, [sp, #640]	; 0x280
 8005c5a:	05a0      	lsls	r0, r4, #22
 8005c5c:	f7fb f964 	bl	8000f28 <__aeabi_fsub>
					sum += S[i * 6 + k] * P[k + j * 6];
 8005c60:	4642      	mov	r2, r8
			S[k] += 1.0;
 8005c62:	238c      	movs	r3, #140	; 0x8c
 8005c64:	a960      	add	r1, sp, #384	; 0x180
 8005c66:	194d      	adds	r5, r1, r5
 8005c68:	50e8      	str	r0, [r5, r3]
					sum += S[i * 6 + k] * P[k + j * 6];
 8005c6a:	6a10      	ldr	r0, [r2, #32]
 8005c6c:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8005c6e:	4644      	mov	r4, r8
 8005c70:	4645      	mov	r5, r8
 8005c72:	9002      	str	r0, [sp, #8]
 8005c74:	4640      	mov	r0, r8
 8005c76:	9104      	str	r1, [sp, #16]
 8005c78:	4641      	mov	r1, r8
 8005c7a:	6a92      	ldr	r2, [r2, #40]	; 0x28
 8005c7c:	6ae4      	ldr	r4, [r4, #44]	; 0x2c
 8005c7e:	6b2d      	ldr	r5, [r5, #48]	; 0x30
 8005c80:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8005c82:	9206      	str	r2, [sp, #24]
 8005c84:	9409      	str	r4, [sp, #36]	; 0x24
 8005c86:	4642      	mov	r2, r8
 8005c88:	4644      	mov	r4, r8
 8005c8a:	950a      	str	r5, [sp, #40]	; 0x28
 8005c8c:	900b      	str	r0, [sp, #44]	; 0x2c
 8005c8e:	4645      	mov	r5, r8
 8005c90:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
 8005c92:	4640      	mov	r0, r8
 8005c94:	910c      	str	r1, [sp, #48]	; 0x30
 8005c96:	4641      	mov	r1, r8
 8005c98:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8005c9a:	6c64      	ldr	r4, [r4, #68]	; 0x44
 8005c9c:	6cad      	ldr	r5, [r5, #72]	; 0x48
 8005c9e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8005ca0:	6d49      	ldr	r1, [r1, #84]	; 0x54
 8005ca2:	9218      	str	r2, [sp, #96]	; 0x60
 8005ca4:	940e      	str	r4, [sp, #56]	; 0x38
 8005ca6:	4642      	mov	r2, r8
 8005ca8:	4644      	mov	r4, r8
 8005caa:	9510      	str	r5, [sp, #64]	; 0x40
 8005cac:	9012      	str	r0, [sp, #72]	; 0x48
 8005cae:	4645      	mov	r5, r8
 8005cb0:	4640      	mov	r0, r8
 8005cb2:	9114      	str	r1, [sp, #80]	; 0x50
 8005cb4:	4641      	mov	r1, r8
 8005cb6:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8005cb8:	6de4      	ldr	r4, [r4, #92]	; 0x5c
 8005cba:	6e2d      	ldr	r5, [r5, #96]	; 0x60
 8005cbc:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8005cbe:	6ec9      	ldr	r1, [r1, #108]	; 0x6c
 8005cc0:	9216      	str	r2, [sp, #88]	; 0x58
 8005cc2:	9419      	str	r4, [sp, #100]	; 0x64
 8005cc4:	4642      	mov	r2, r8
 8005cc6:	4644      	mov	r4, r8
 8005cc8:	951e      	str	r5, [sp, #120]	; 0x78
 8005cca:	9021      	str	r0, [sp, #132]	; 0x84
 8005ccc:	4645      	mov	r5, r8
 8005cce:	4640      	mov	r0, r8
 8005cd0:	9122      	str	r1, [sp, #136]	; 0x88
 8005cd2:	2188      	movs	r1, #136	; 0x88
 8005cd4:	5986      	ldr	r6, [r0, r6]
 8005cd6:	59c7      	ldr	r7, [r0, r7]
 8005cd8:	6f12      	ldr	r2, [r2, #112]	; 0x70
 8005cda:	6f64      	ldr	r4, [r4, #116]	; 0x74
 8005cdc:	6fad      	ldr	r5, [r5, #120]	; 0x78
 8005cde:	9228      	str	r2, [sp, #160]	; 0xa0
 8005ce0:	9424      	str	r4, [sp, #144]	; 0x90
 8005ce2:	4642      	mov	r2, r8
 8005ce4:	9629      	str	r6, [sp, #164]	; 0xa4
 8005ce6:	972c      	str	r7, [sp, #176]	; 0xb0
 8005ce8:	2690      	movs	r6, #144	; 0x90
 8005cea:	2798      	movs	r7, #152	; 0x98
 8005cec:	9526      	str	r5, [sp, #152]	; 0x98
 8005cee:	5845      	ldr	r5, [r0, r1]
 8005cf0:	58c3      	ldr	r3, [r0, r3]
 8005cf2:	219c      	movs	r1, #156	; 0x9c
 8005cf4:	932d      	str	r3, [sp, #180]	; 0xb4
 8005cf6:	23a0      	movs	r3, #160	; 0xa0
 8005cf8:	59d4      	ldr	r4, [r2, r7]
 8005cfa:	5980      	ldr	r0, [r0, r6]
 8005cfc:	952a      	str	r5, [sp, #168]	; 0xa8
 8005cfe:	58d6      	ldr	r6, [r2, r3]
 8005d00:	5855      	ldr	r5, [r2, r1]
 8005d02:	902e      	str	r0, [sp, #184]	; 0xb8
 8005d04:	9430      	str	r4, [sp, #192]	; 0xc0
 8005d06:	20a4      	movs	r0, #164	; 0xa4
 8005d08:	24a8      	movs	r4, #168	; 0xa8
 8005d0a:	9b5d      	ldr	r3, [sp, #372]	; 0x174
 8005d0c:	9534      	str	r5, [sp, #208]	; 0xd0
 8005d0e:	9632      	str	r6, [sp, #200]	; 0xc8
 8005d10:	4645      	mov	r5, r8
 8005d12:	464e      	mov	r6, r9
 8005d14:	4698      	mov	r8, r3
 8005d16:	5817      	ldr	r7, [r2, r0]
 8005d18:	5912      	ldr	r2, [r2, r4]
 8005d1a:	a9a8      	add	r1, sp, #672	; 0x2a0
 8005d1c:	9c5f      	ldr	r4, [sp, #380]	; 0x17c
 8005d1e:	9735      	str	r7, [sp, #212]	; 0xd4
 8005d20:	9236      	str	r2, [sp, #216]	; 0xd8
 8005d22:	913a      	str	r1, [sp, #232]	; 0xe8
 8005d24:	953f      	str	r5, [sp, #252]	; 0xfc
 8005d26:	9640      	str	r6, [sp, #256]	; 0x100
 8005d28:	6820      	ldr	r0, [r4, #0]
 8005d2a:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005d2c:	4682      	mov	sl, r0
 8005d2e:	f7fa ffe1 	bl	8000cf4 <__aeabi_fmul>
 8005d32:	6867      	ldr	r7, [r4, #4]
 8005d34:	9902      	ldr	r1, [sp, #8]
 8005d36:	1c05      	adds	r5, r0, #0
 8005d38:	1c38      	adds	r0, r7, #0
 8005d3a:	f7fa ffdb 	bl	8000cf4 <__aeabi_fmul>
 8005d3e:	1c01      	adds	r1, r0, #0
 8005d40:	1c28      	adds	r0, r5, #0
 8005d42:	f7fa fc71 	bl	8000628 <__aeabi_fadd>
 8005d46:	68a6      	ldr	r6, [r4, #8]
 8005d48:	46b9      	mov	r9, r7
 8005d4a:	9904      	ldr	r1, [sp, #16]
 8005d4c:	1c07      	adds	r7, r0, #0
 8005d4e:	1c30      	adds	r0, r6, #0
 8005d50:	9600      	str	r6, [sp, #0]
 8005d52:	f7fa ffcf 	bl	8000cf4 <__aeabi_fmul>
 8005d56:	1c01      	adds	r1, r0, #0
 8005d58:	1c38      	adds	r0, r7, #0
 8005d5a:	f7fa fc65 	bl	8000628 <__aeabi_fadd>
 8005d5e:	68e7      	ldr	r7, [r4, #12]
 8005d60:	9906      	ldr	r1, [sp, #24]
 8005d62:	1c06      	adds	r6, r0, #0
 8005d64:	1c38      	adds	r0, r7, #0
 8005d66:	f7fa ffc5 	bl	8000cf4 <__aeabi_fmul>
 8005d6a:	1c31      	adds	r1, r6, #0
 8005d6c:	f7fa fc5c 	bl	8000628 <__aeabi_fadd>
 8005d70:	6926      	ldr	r6, [r4, #16]
 8005d72:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005d74:	1c05      	adds	r5, r0, #0
 8005d76:	1c30      	adds	r0, r6, #0
 8005d78:	f7fa ffbc 	bl	8000cf4 <__aeabi_fmul>
 8005d7c:	1c29      	adds	r1, r5, #0
 8005d7e:	f7fa fc53 	bl	8000628 <__aeabi_fadd>
 8005d82:	4683      	mov	fp, r0
 8005d84:	6965      	ldr	r5, [r4, #20]
 8005d86:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005d88:	1c28      	adds	r0, r5, #0
 8005d8a:	f7fa ffb3 	bl	8000cf4 <__aeabi_fmul>
 8005d8e:	4659      	mov	r1, fp
 8005d90:	f7fa fc4a 	bl	8000628 <__aeabi_fadd>
				M[i + j * 6] = sum;
 8005d94:	4642      	mov	r2, r8
					sum += S[i * 6 + k] * P[k + j * 6];
 8005d96:	991f      	ldr	r1, [sp, #124]	; 0x7c
				M[i + j * 6] = sum;
 8005d98:	6010      	str	r0, [r2, #0]
					sum += S[i * 6 + k] * P[k + j * 6];
 8005d9a:	4650      	mov	r0, sl
 8005d9c:	f7fa ffaa 	bl	8000cf4 <__aeabi_fmul>
 8005da0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005da2:	4683      	mov	fp, r0
 8005da4:	4648      	mov	r0, r9
 8005da6:	f7fa ffa5 	bl	8000cf4 <__aeabi_fmul>
 8005daa:	1c01      	adds	r1, r0, #0
 8005dac:	4658      	mov	r0, fp
 8005dae:	f7fa fc3b 	bl	8000628 <__aeabi_fadd>
 8005db2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005db4:	4683      	mov	fp, r0
 8005db6:	9800      	ldr	r0, [sp, #0]
 8005db8:	f7fa ff9c 	bl	8000cf4 <__aeabi_fmul>
 8005dbc:	1c01      	adds	r1, r0, #0
 8005dbe:	4658      	mov	r0, fp
 8005dc0:	f7fa fc32 	bl	8000628 <__aeabi_fadd>
 8005dc4:	4683      	mov	fp, r0
 8005dc6:	9918      	ldr	r1, [sp, #96]	; 0x60
 8005dc8:	1c38      	adds	r0, r7, #0
 8005dca:	f7fa ff93 	bl	8000cf4 <__aeabi_fmul>
 8005dce:	4659      	mov	r1, fp
 8005dd0:	f7fa fc2a 	bl	8000628 <__aeabi_fadd>
 8005dd4:	4683      	mov	fp, r0
 8005dd6:	990e      	ldr	r1, [sp, #56]	; 0x38
 8005dd8:	1c30      	adds	r0, r6, #0
 8005dda:	f7fa ff8b 	bl	8000cf4 <__aeabi_fmul>
 8005dde:	4659      	mov	r1, fp
 8005de0:	f7fa fc22 	bl	8000628 <__aeabi_fadd>
 8005de4:	4683      	mov	fp, r0
 8005de6:	9910      	ldr	r1, [sp, #64]	; 0x40
 8005de8:	1c28      	adds	r0, r5, #0
 8005dea:	f7fa ff83 	bl	8000cf4 <__aeabi_fmul>
 8005dee:	4659      	mov	r1, fp
 8005df0:	f7fa fc1a 	bl	8000628 <__aeabi_fadd>
				M[i + j * 6] = sum;
 8005df4:	4641      	mov	r1, r8
 8005df6:	6188      	str	r0, [r1, #24]
					sum += S[i * 6 + k] * P[k + j * 6];
 8005df8:	9920      	ldr	r1, [sp, #128]	; 0x80
 8005dfa:	4650      	mov	r0, sl
 8005dfc:	f7fa ff7a 	bl	8000cf4 <__aeabi_fmul>
 8005e00:	9912      	ldr	r1, [sp, #72]	; 0x48
 8005e02:	4683      	mov	fp, r0
 8005e04:	4648      	mov	r0, r9
 8005e06:	f7fa ff75 	bl	8000cf4 <__aeabi_fmul>
 8005e0a:	1c01      	adds	r1, r0, #0
 8005e0c:	4658      	mov	r0, fp
 8005e0e:	f7fa fc0b 	bl	8000628 <__aeabi_fadd>
 8005e12:	9914      	ldr	r1, [sp, #80]	; 0x50
 8005e14:	4683      	mov	fp, r0
 8005e16:	9800      	ldr	r0, [sp, #0]
 8005e18:	f7fa ff6c 	bl	8000cf4 <__aeabi_fmul>
 8005e1c:	1c01      	adds	r1, r0, #0
 8005e1e:	4658      	mov	r0, fp
 8005e20:	f7fa fc02 	bl	8000628 <__aeabi_fadd>
 8005e24:	4683      	mov	fp, r0
 8005e26:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005e28:	1c38      	adds	r0, r7, #0
 8005e2a:	f7fa ff63 	bl	8000cf4 <__aeabi_fmul>
 8005e2e:	4659      	mov	r1, fp
 8005e30:	f7fa fbfa 	bl	8000628 <__aeabi_fadd>
 8005e34:	4683      	mov	fp, r0
 8005e36:	9919      	ldr	r1, [sp, #100]	; 0x64
 8005e38:	1c30      	adds	r0, r6, #0
 8005e3a:	f7fa ff5b 	bl	8000cf4 <__aeabi_fmul>
 8005e3e:	4659      	mov	r1, fp
 8005e40:	f7fa fbf2 	bl	8000628 <__aeabi_fadd>
 8005e44:	4683      	mov	fp, r0
 8005e46:	991e      	ldr	r1, [sp, #120]	; 0x78
 8005e48:	1c28      	adds	r0, r5, #0
 8005e4a:	f7fa ff53 	bl	8000cf4 <__aeabi_fmul>
 8005e4e:	4659      	mov	r1, fp
 8005e50:	f7fa fbea 	bl	8000628 <__aeabi_fadd>
				M[i + j * 6] = sum;
 8005e54:	4643      	mov	r3, r8
					sum += S[i * 6 + k] * P[k + j * 6];
 8005e56:	991b      	ldr	r1, [sp, #108]	; 0x6c
				M[i + j * 6] = sum;
 8005e58:	6318      	str	r0, [r3, #48]	; 0x30
					sum += S[i * 6 + k] * P[k + j * 6];
 8005e5a:	4650      	mov	r0, sl
 8005e5c:	f7fa ff4a 	bl	8000cf4 <__aeabi_fmul>
 8005e60:	9921      	ldr	r1, [sp, #132]	; 0x84
 8005e62:	4683      	mov	fp, r0
 8005e64:	4648      	mov	r0, r9
 8005e66:	f7fa ff45 	bl	8000cf4 <__aeabi_fmul>
 8005e6a:	1c01      	adds	r1, r0, #0
 8005e6c:	4658      	mov	r0, fp
 8005e6e:	f7fa fbdb 	bl	8000628 <__aeabi_fadd>
 8005e72:	9922      	ldr	r1, [sp, #136]	; 0x88
 8005e74:	4683      	mov	fp, r0
 8005e76:	9800      	ldr	r0, [sp, #0]
 8005e78:	f7fa ff3c 	bl	8000cf4 <__aeabi_fmul>
 8005e7c:	1c01      	adds	r1, r0, #0
 8005e7e:	4658      	mov	r0, fp
 8005e80:	f7fa fbd2 	bl	8000628 <__aeabi_fadd>
 8005e84:	4683      	mov	fp, r0
 8005e86:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8005e88:	1c38      	adds	r0, r7, #0
 8005e8a:	f7fa ff33 	bl	8000cf4 <__aeabi_fmul>
 8005e8e:	4659      	mov	r1, fp
 8005e90:	f7fa fbca 	bl	8000628 <__aeabi_fadd>
 8005e94:	4683      	mov	fp, r0
 8005e96:	9924      	ldr	r1, [sp, #144]	; 0x90
 8005e98:	1c30      	adds	r0, r6, #0
 8005e9a:	f7fa ff2b 	bl	8000cf4 <__aeabi_fmul>
 8005e9e:	4659      	mov	r1, fp
 8005ea0:	f7fa fbc2 	bl	8000628 <__aeabi_fadd>
 8005ea4:	4683      	mov	fp, r0
 8005ea6:	9926      	ldr	r1, [sp, #152]	; 0x98
 8005ea8:	1c28      	adds	r0, r5, #0
 8005eaa:	f7fa ff23 	bl	8000cf4 <__aeabi_fmul>
 8005eae:	4659      	mov	r1, fp
 8005eb0:	f7fa fbba 	bl	8000628 <__aeabi_fadd>
				M[i + j * 6] = sum;
 8005eb4:	4642      	mov	r2, r8
					sum += S[i * 6 + k] * P[k + j * 6];
 8005eb6:	991c      	ldr	r1, [sp, #112]	; 0x70
				M[i + j * 6] = sum;
 8005eb8:	6490      	str	r0, [r2, #72]	; 0x48
					sum += S[i * 6 + k] * P[k + j * 6];
 8005eba:	4650      	mov	r0, sl
 8005ebc:	f7fa ff1a 	bl	8000cf4 <__aeabi_fmul>
 8005ec0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8005ec2:	4683      	mov	fp, r0
 8005ec4:	4648      	mov	r0, r9
 8005ec6:	f7fa ff15 	bl	8000cf4 <__aeabi_fmul>
 8005eca:	1c01      	adds	r1, r0, #0
 8005ecc:	4658      	mov	r0, fp
 8005ece:	f7fa fbab 	bl	8000628 <__aeabi_fadd>
 8005ed2:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8005ed4:	4683      	mov	fp, r0
 8005ed6:	9800      	ldr	r0, [sp, #0]
 8005ed8:	f7fa ff0c 	bl	8000cf4 <__aeabi_fmul>
 8005edc:	1c01      	adds	r1, r0, #0
 8005ede:	4658      	mov	r0, fp
 8005ee0:	f7fa fba2 	bl	8000628 <__aeabi_fadd>
 8005ee4:	4683      	mov	fp, r0
 8005ee6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8005ee8:	1c38      	adds	r0, r7, #0
 8005eea:	f7fa ff03 	bl	8000cf4 <__aeabi_fmul>
 8005eee:	4659      	mov	r1, fp
 8005ef0:	f7fa fb9a 	bl	8000628 <__aeabi_fadd>
 8005ef4:	4683      	mov	fp, r0
 8005ef6:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8005ef8:	1c30      	adds	r0, r6, #0
 8005efa:	f7fa fefb 	bl	8000cf4 <__aeabi_fmul>
 8005efe:	4659      	mov	r1, fp
 8005f00:	f7fa fb92 	bl	8000628 <__aeabi_fadd>
 8005f04:	4683      	mov	fp, r0
 8005f06:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8005f08:	1c28      	adds	r0, r5, #0
 8005f0a:	f7fa fef3 	bl	8000cf4 <__aeabi_fmul>
 8005f0e:	4659      	mov	r1, fp
 8005f10:	f7fa fb8a 	bl	8000628 <__aeabi_fadd>
				M[i + j * 6] = sum;
 8005f14:	4641      	mov	r1, r8
 8005f16:	6608      	str	r0, [r1, #96]	; 0x60
					sum += S[i * 6 + k] * P[k + j * 6];
 8005f18:	4650      	mov	r0, sl
 8005f1a:	991d      	ldr	r1, [sp, #116]	; 0x74
 8005f1c:	f7fa feea 	bl	8000cf4 <__aeabi_fmul>
 8005f20:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8005f22:	4682      	mov	sl, r0
 8005f24:	4648      	mov	r0, r9
 8005f26:	f7fa fee5 	bl	8000cf4 <__aeabi_fmul>
 8005f2a:	1c01      	adds	r1, r0, #0
 8005f2c:	4650      	mov	r0, sl
 8005f2e:	f7fa fb7b 	bl	8000628 <__aeabi_fadd>
 8005f32:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8005f34:	4681      	mov	r9, r0
 8005f36:	9800      	ldr	r0, [sp, #0]
 8005f38:	f7fa fedc 	bl	8000cf4 <__aeabi_fmul>
 8005f3c:	1c01      	adds	r1, r0, #0
 8005f3e:	4648      	mov	r0, r9
 8005f40:	f7fa fb72 	bl	8000628 <__aeabi_fadd>
 8005f44:	4683      	mov	fp, r0
 8005f46:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8005f48:	1c38      	adds	r0, r7, #0
 8005f4a:	f7fa fed3 	bl	8000cf4 <__aeabi_fmul>
 8005f4e:	4659      	mov	r1, fp
 8005f50:	f7fa fb6a 	bl	8000628 <__aeabi_fadd>
 8005f54:	9935      	ldr	r1, [sp, #212]	; 0xd4
 8005f56:	1c07      	adds	r7, r0, #0
 8005f58:	1c30      	adds	r0, r6, #0
 8005f5a:	f7fa fecb 	bl	8000cf4 <__aeabi_fmul>
 8005f5e:	1c39      	adds	r1, r7, #0
 8005f60:	f7fa fb62 	bl	8000628 <__aeabi_fadd>
 8005f64:	9936      	ldr	r1, [sp, #216]	; 0xd8
 8005f66:	1c06      	adds	r6, r0, #0
 8005f68:	1c28      	adds	r0, r5, #0
 8005f6a:	f7fa fec3 	bl	8000cf4 <__aeabi_fmul>
 8005f6e:	1c31      	adds	r1, r6, #0
 8005f70:	f7fa fb5a 	bl	8000628 <__aeabi_fadd>
				M[i + j * 6] = sum;
 8005f74:	4645      	mov	r5, r8
 8005f76:	67a8      	str	r0, [r5, #120]	; 0x78
		for (int i = 0; i < 6; i++) {
 8005f78:	2004      	movs	r0, #4
 8005f7a:	4684      	mov	ip, r0
 8005f7c:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
 8005f7e:	3418      	adds	r4, #24
 8005f80:	44e0      	add	r8, ip
 8005f82:	429c      	cmp	r4, r3
 8005f84:	d000      	beq.n	8005f88 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x2a08>
 8005f86:	e6cf      	b.n	8005d28 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x27a8>
		if (chartUpdate) {
 8005f88:	219e      	movs	r1, #158	; 0x9e
 8005f8a:	9c3f      	ldr	r4, [sp, #252]	; 0xfc
 8005f8c:	004f      	lsls	r7, r1, #1
 8005f8e:	9a40      	ldr	r2, [sp, #256]	; 0x100
 8005f90:	5de5      	ldrb	r5, [r4, r7]
 8005f92:	46a0      	mov	r8, r4
 8005f94:	4691      	mov	r9, r2
 8005f96:	2d00      	cmp	r5, #0
 8005f98:	d000      	beq.n	8005f9c <_ZN7MEKFcRP9updateIMUEPfS0_f+0x2a1c>
 8005f9a:	e233      	b.n	8006404 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x2e84>
 8005f9c:	9860      	ldr	r0, [sp, #384]	; 0x180
 8005f9e:	9004      	str	r0, [sp, #16]
		float qnorm = std::sqrt(q[0] * q[0] + q[1] * q[1] + q[2] * q[2] + q[3] * q[3]);
 8005fa0:	9859      	ldr	r0, [sp, #356]	; 0x164
 8005fa2:	1c01      	adds	r1, r0, #0
 8005fa4:	4682      	mov	sl, r0
 8005fa6:	f7fa fea5 	bl	8000cf4 <__aeabi_fmul>
 8005faa:	9f58      	ldr	r7, [sp, #352]	; 0x160
 8005fac:	1c06      	adds	r6, r0, #0
 8005fae:	1c39      	adds	r1, r7, #0
 8005fb0:	1c38      	adds	r0, r7, #0
 8005fb2:	f7fa fe9f 	bl	8000cf4 <__aeabi_fmul>
 8005fb6:	1c01      	adds	r1, r0, #0
 8005fb8:	1c30      	adds	r0, r6, #0
 8005fba:	f7fa fb35 	bl	8000628 <__aeabi_fadd>
 8005fbe:	9e51      	ldr	r6, [sp, #324]	; 0x144
 8005fc0:	1c05      	adds	r5, r0, #0
 8005fc2:	1c31      	adds	r1, r6, #0
 8005fc4:	1c30      	adds	r0, r6, #0
 8005fc6:	f7fa fe95 	bl	8000cf4 <__aeabi_fmul>
 8005fca:	1c01      	adds	r1, r0, #0
 8005fcc:	1c28      	adds	r0, r5, #0
 8005fce:	f7fa fb2b 	bl	8000628 <__aeabi_fadd>
 8005fd2:	9d4e      	ldr	r5, [sp, #312]	; 0x138
 8005fd4:	1c04      	adds	r4, r0, #0
 8005fd6:	1c29      	adds	r1, r5, #0
 8005fd8:	1c28      	adds	r0, r5, #0
 8005fda:	f7fa fe8b 	bl	8000cf4 <__aeabi_fmul>
 8005fde:	1c01      	adds	r1, r0, #0
 8005fe0:	1c20      	adds	r0, r4, #0
 8005fe2:	f7fa fb21 	bl	8000628 <__aeabi_fadd>
  using ::sqrt;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  sqrt(float __x)
  { return __builtin_sqrtf(__x); }
 8005fe6:	f003 ffd7 	bl	8009f98 <sqrtf>
 8005fea:	23fe      	movs	r3, #254	; 0xfe
 8005fec:	1c01      	adds	r1, r0, #0
		q[0] /= qnorm;
 8005fee:	0598      	lsls	r0, r3, #22
 8005ff0:	f7fa fcb6 	bl	8000960 <__aeabi_fdiv>
 8005ff4:	1c04      	adds	r4, r0, #0
 8005ff6:	1c01      	adds	r1, r0, #0
 8005ff8:	1c28      	adds	r0, r5, #0
 8005ffa:	f7fa fe7b 	bl	8000cf4 <__aeabi_fmul>
 8005ffe:	4642      	mov	r2, r8
		q[1] /= qnorm;
 8006000:	1c21      	adds	r1, r4, #0
		q[0] /= qnorm;
 8006002:	6010      	str	r0, [r2, #0]
		q[1] /= qnorm;
 8006004:	1c38      	adds	r0, r7, #0
 8006006:	f7fa fe75 	bl	8000cf4 <__aeabi_fmul>
 800600a:	4641      	mov	r1, r8
 800600c:	6048      	str	r0, [r1, #4]
		q[2] /= qnorm;
 800600e:	1c21      	adds	r1, r4, #0
 8006010:	4650      	mov	r0, sl
 8006012:	f7fa fe6f 	bl	8000cf4 <__aeabi_fmul>
 8006016:	4647      	mov	r7, r8
		q[3] /= qnorm;
 8006018:	1c21      	adds	r1, r4, #0
		q[2] /= qnorm;
 800601a:	60b8      	str	r0, [r7, #8]
		q[3] /= qnorm;
 800601c:	1c30      	adds	r0, r6, #0
 800601e:	f7fa fe69 	bl	8000cf4 <__aeabi_fmul>
				P[i + j * 6] = 0.5 * (M[i + j * 6] + M[j + i * 6]);
 8006022:	25fc      	movs	r5, #252	; 0xfc
 8006024:	9904      	ldr	r1, [sp, #16]
		q[3] /= qnorm;
 8006026:	60f8      	str	r0, [r7, #12]
				P[i + j * 6] = 0.5 * (M[i + j * 6] + M[j + i * 6]);
 8006028:	1c08      	adds	r0, r1, #0
 800602a:	f7fa fafd 	bl	8000628 <__aeabi_fadd>
 800602e:	05a9      	lsls	r1, r5, #22
 8006030:	f7fa fe60 	bl	8000cf4 <__aeabi_fmul>
 8006034:	61f8      	str	r0, [r7, #28]
 8006036:	4648      	mov	r0, r9
 8006038:	24fc      	movs	r4, #252	; 0xfc
 800603a:	6981      	ldr	r1, [r0, #24]
 800603c:	6840      	ldr	r0, [r0, #4]
 800603e:	f7fa faf3 	bl	8000628 <__aeabi_fadd>
 8006042:	05a1      	lsls	r1, r4, #22
 8006044:	f7fa fe56 	bl	8000cf4 <__aeabi_fmul>
 8006048:	6378      	str	r0, [r7, #52]	; 0x34
 800604a:	464f      	mov	r7, r9
 800604c:	1c06      	adds	r6, r0, #0
 800604e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8006050:	68b8      	ldr	r0, [r7, #8]
 8006052:	f7fa fae9 	bl	8000628 <__aeabi_fadd>
 8006056:	21fc      	movs	r1, #252	; 0xfc
 8006058:	0589      	lsls	r1, r1, #22
 800605a:	f7fa fe4b 	bl	8000cf4 <__aeabi_fmul>
 800605e:	4645      	mov	r5, r8
 8006060:	24fc      	movs	r4, #252	; 0xfc
 8006062:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8006064:	4683      	mov	fp, r0
 8006066:	64e8      	str	r0, [r5, #76]	; 0x4c
 8006068:	68f8      	ldr	r0, [r7, #12]
 800606a:	f7fa fadd 	bl	8000628 <__aeabi_fadd>
 800606e:	05a1      	lsls	r1, r4, #22
 8006070:	f7fa fe40 	bl	8000cf4 <__aeabi_fmul>
 8006074:	6668      	str	r0, [r5, #100]	; 0x64
 8006076:	464d      	mov	r5, r9
 8006078:	4682      	mov	sl, r0
 800607a:	6e29      	ldr	r1, [r5, #96]	; 0x60
 800607c:	6928      	ldr	r0, [r5, #16]
 800607e:	f7fa fad3 	bl	8000628 <__aeabi_fadd>
 8006082:	21fc      	movs	r1, #252	; 0xfc
 8006084:	0589      	lsls	r1, r1, #22
 8006086:	f7fa fe35 	bl	8000cf4 <__aeabi_fmul>
 800608a:	4643      	mov	r3, r8
 800608c:	24fc      	movs	r4, #252	; 0xfc
 800608e:	67d8      	str	r0, [r3, #124]	; 0x7c
 8006090:	6fa9      	ldr	r1, [r5, #120]	; 0x78
 8006092:	1c07      	adds	r7, r0, #0
 8006094:	6968      	ldr	r0, [r5, #20]
 8006096:	f7fa fac7 	bl	8000628 <__aeabi_fadd>
 800609a:	05a1      	lsls	r1, r4, #22
 800609c:	f7fa fe2a 	bl	8000cf4 <__aeabi_fmul>
 80060a0:	2594      	movs	r5, #148	; 0x94
 80060a2:	4641      	mov	r1, r8
 80060a4:	5148      	str	r0, [r1, r5]
 80060a6:	620e      	str	r6, [r1, #32]
 80060a8:	464e      	mov	r6, r9
 80060aa:	24fc      	movs	r4, #252	; 0xfc
 80060ac:	69f1      	ldr	r1, [r6, #28]
 80060ae:	9000      	str	r0, [sp, #0]
 80060b0:	1c08      	adds	r0, r1, #0
 80060b2:	f7fa fab9 	bl	8000628 <__aeabi_fadd>
 80060b6:	05a1      	lsls	r1, r4, #22
 80060b8:	f7fa fe1c 	bl	8000cf4 <__aeabi_fmul>
 80060bc:	4642      	mov	r2, r8
 80060be:	25fc      	movs	r5, #252	; 0xfc
 80060c0:	6390      	str	r0, [r2, #56]	; 0x38
 80060c2:	6b71      	ldr	r1, [r6, #52]	; 0x34
 80060c4:	6a30      	ldr	r0, [r6, #32]
 80060c6:	f7fa faaf 	bl	8000628 <__aeabi_fadd>
 80060ca:	05a9      	lsls	r1, r5, #22
 80060cc:	f7fa fe12 	bl	8000cf4 <__aeabi_fmul>
 80060d0:	4641      	mov	r1, r8
 80060d2:	1c05      	adds	r5, r0, #0
 80060d4:	6508      	str	r0, [r1, #80]	; 0x50
 80060d6:	6cf1      	ldr	r1, [r6, #76]	; 0x4c
 80060d8:	6a70      	ldr	r0, [r6, #36]	; 0x24
 80060da:	26fc      	movs	r6, #252	; 0xfc
 80060dc:	f7fa faa4 	bl	8000628 <__aeabi_fadd>
 80060e0:	05b1      	lsls	r1, r6, #22
 80060e2:	f7fa fe07 	bl	8000cf4 <__aeabi_fmul>
 80060e6:	4642      	mov	r2, r8
 80060e8:	9002      	str	r0, [sp, #8]
 80060ea:	6690      	str	r0, [r2, #104]	; 0x68
 80060ec:	4648      	mov	r0, r9
 80060ee:	6e41      	ldr	r1, [r0, #100]	; 0x64
 80060f0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80060f2:	f7fa fa99 	bl	8000628 <__aeabi_fadd>
 80060f6:	21fc      	movs	r1, #252	; 0xfc
 80060f8:	0589      	lsls	r1, r1, #22
 80060fa:	f7fa fdfb 	bl	8000cf4 <__aeabi_fmul>
 80060fe:	2480      	movs	r4, #128	; 0x80
 8006100:	4642      	mov	r2, r8
 8006102:	1c06      	adds	r6, r0, #0
 8006104:	5110      	str	r0, [r2, r4]
 8006106:	4648      	mov	r0, r9
 8006108:	6fc1      	ldr	r1, [r0, #124]	; 0x7c
 800610a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800610c:	f7fa fa8c 	bl	8000628 <__aeabi_fadd>
 8006110:	21fc      	movs	r1, #252	; 0xfc
 8006112:	0589      	lsls	r1, r1, #22
 8006114:	f7fa fdee 	bl	8000cf4 <__aeabi_fmul>
 8006118:	2398      	movs	r3, #152	; 0x98
 800611a:	1c02      	adds	r2, r0, #0
 800611c:	4640      	mov	r0, r8
 800611e:	4659      	mov	r1, fp
 8006120:	50c2      	str	r2, [r0, r3]
 8006122:	63c5      	str	r5, [r0, #60]	; 0x3c
 8006124:	464d      	mov	r5, r9
 8006126:	6241      	str	r1, [r0, #36]	; 0x24
 8006128:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 800612a:	9204      	str	r2, [sp, #16]
 800612c:	1c08      	adds	r0, r1, #0
 800612e:	f7fa fa7b 	bl	8000628 <__aeabi_fadd>
 8006132:	22fc      	movs	r2, #252	; 0xfc
 8006134:	0591      	lsls	r1, r2, #22
 8006136:	f7fa fddd 	bl	8000cf4 <__aeabi_fmul>
 800613a:	4645      	mov	r5, r8
 800613c:	464b      	mov	r3, r9
 800613e:	6568      	str	r0, [r5, #84]	; 0x54
 8006140:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8006142:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8006144:	f7fa fa70 	bl	8000628 <__aeabi_fadd>
 8006148:	21fc      	movs	r1, #252	; 0xfc
 800614a:	0589      	lsls	r1, r1, #22
 800614c:	f7fa fdd2 	bl	8000cf4 <__aeabi_fmul>
 8006150:	9006      	str	r0, [sp, #24]
 8006152:	66e8      	str	r0, [r5, #108]	; 0x6c
 8006154:	4648      	mov	r0, r9
 8006156:	6e81      	ldr	r1, [r0, #104]	; 0x68
 8006158:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800615a:	f7fa fa65 	bl	8000628 <__aeabi_fadd>
 800615e:	22fc      	movs	r2, #252	; 0xfc
 8006160:	0591      	lsls	r1, r2, #22
 8006162:	f7fa fdc7 	bl	8000cf4 <__aeabi_fmul>
 8006166:	464a      	mov	r2, r9
 8006168:	2384      	movs	r3, #132	; 0x84
 800616a:	4641      	mov	r1, r8
 800616c:	1c05      	adds	r5, r0, #0
 800616e:	50c8      	str	r0, [r1, r3]
 8006170:	5911      	ldr	r1, [r2, r4]
 8006172:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8006174:	469b      	mov	fp, r3
 8006176:	f7fa fa57 	bl	8000628 <__aeabi_fadd>
 800617a:	23fc      	movs	r3, #252	; 0xfc
 800617c:	0599      	lsls	r1, r3, #22
 800617e:	f7fa fdb9 	bl	8000cf4 <__aeabi_fmul>
 8006182:	219c      	movs	r1, #156	; 0x9c
 8006184:	1c04      	adds	r4, r0, #0
 8006186:	4640      	mov	r0, r8
 8006188:	4652      	mov	r2, sl
 800618a:	5044      	str	r4, [r0, r1]
 800618c:	4649      	mov	r1, r9
 800618e:	4643      	mov	r3, r8
 8006190:	6282      	str	r2, [r0, #40]	; 0x28
 8006192:	6d49      	ldr	r1, [r1, #84]	; 0x54
 8006194:	9a06      	ldr	r2, [sp, #24]
 8006196:	9802      	ldr	r0, [sp, #8]
 8006198:	659a      	str	r2, [r3, #88]	; 0x58
 800619a:	6418      	str	r0, [r3, #64]	; 0x40
 800619c:	1c08      	adds	r0, r1, #0
 800619e:	f7fa fa43 	bl	8000628 <__aeabi_fadd>
 80061a2:	23fc      	movs	r3, #252	; 0xfc
 80061a4:	0599      	lsls	r1, r3, #22
 80061a6:	f7fa fda5 	bl	8000cf4 <__aeabi_fmul>
 80061aa:	4642      	mov	r2, r8
 80061ac:	6710      	str	r0, [r2, #112]	; 0x70
 80061ae:	4648      	mov	r0, r9
 80061b0:	6ec1      	ldr	r1, [r0, #108]	; 0x6c
 80061b2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80061b4:	f7fa fa38 	bl	8000628 <__aeabi_fadd>
 80061b8:	21fc      	movs	r1, #252	; 0xfc
 80061ba:	0589      	lsls	r1, r1, #22
 80061bc:	f7fa fd9a 	bl	8000cf4 <__aeabi_fmul>
 80061c0:	4642      	mov	r2, r8
 80061c2:	2388      	movs	r3, #136	; 0x88
 80061c4:	9002      	str	r0, [sp, #8]
 80061c6:	50d0      	str	r0, [r2, r3]
 80061c8:	4659      	mov	r1, fp
 80061ca:	4648      	mov	r0, r9
 80061cc:	5841      	ldr	r1, [r0, r1]
 80061ce:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80061d0:	f7fa fa2a 	bl	8000628 <__aeabi_fadd>
 80061d4:	22fc      	movs	r2, #252	; 0xfc
 80061d6:	0591      	lsls	r1, r2, #22
 80061d8:	f7fa fd8c 	bl	8000cf4 <__aeabi_fmul>
 80061dc:	4682      	mov	sl, r0
 80061de:	23a0      	movs	r3, #160	; 0xa0
 80061e0:	4640      	mov	r0, r8
 80061e2:	4651      	mov	r1, sl
 80061e4:	50c1      	str	r1, [r0, r3]
 80061e6:	9b02      	ldr	r3, [sp, #8]
 80061e8:	62c7      	str	r7, [r0, #44]	; 0x2c
 80061ea:	6446      	str	r6, [r0, #68]	; 0x44
 80061ec:	65c5      	str	r5, [r0, #92]	; 0x5c
 80061ee:	6743      	str	r3, [r0, #116]	; 0x74
 80061f0:	4648      	mov	r0, r9
 80061f2:	6f01      	ldr	r1, [r0, #112]	; 0x70
 80061f4:	4646      	mov	r6, r8
 80061f6:	1c08      	adds	r0, r1, #0
 80061f8:	f7fa fa16 	bl	8000628 <__aeabi_fadd>
 80061fc:	21fc      	movs	r1, #252	; 0xfc
 80061fe:	0589      	lsls	r1, r1, #22
 8006200:	f7fa fd78 	bl	8000cf4 <__aeabi_fmul>
 8006204:	278c      	movs	r7, #140	; 0x8c
 8006206:	464a      	mov	r2, r9
 8006208:	2588      	movs	r5, #136	; 0x88
 800620a:	51f0      	str	r0, [r6, r7]
 800620c:	5951      	ldr	r1, [r2, r5]
 800620e:	6f50      	ldr	r0, [r2, #116]	; 0x74
 8006210:	f7fa fa0a 	bl	8000628 <__aeabi_fadd>
 8006214:	21fc      	movs	r1, #252	; 0xfc
 8006216:	0589      	lsls	r1, r1, #22
 8006218:	f7fa fd6c 	bl	8000cf4 <__aeabi_fmul>
 800621c:	22a4      	movs	r2, #164	; 0xa4
 800621e:	2190      	movs	r1, #144	; 0x90
 8006220:	50b0      	str	r0, [r6, r2]
 8006222:	6634      	str	r4, [r6, #96]	; 0x60
 8006224:	4654      	mov	r4, sl
 8006226:	9b04      	ldr	r3, [sp, #16]
 8006228:	9d00      	ldr	r5, [sp, #0]
 800622a:	64b3      	str	r3, [r6, #72]	; 0x48
 800622c:	6335      	str	r5, [r6, #48]	; 0x30
 800622e:	67b4      	str	r4, [r6, #120]	; 0x78
 8006230:	5070      	str	r0, [r6, r1]
 8006232:	4648      	mov	r0, r9
 8006234:	59c0      	ldr	r0, [r0, r7]
 8006236:	27fc      	movs	r7, #252	; 0xfc
 8006238:	1c01      	adds	r1, r0, #0
 800623a:	f7fa f9f5 	bl	8000628 <__aeabi_fadd>
 800623e:	05b9      	lsls	r1, r7, #22
 8006240:	f7fa fd58 	bl	8000cf4 <__aeabi_fmul>
 8006244:	26a8      	movs	r6, #168	; 0xa8
 8006246:	4645      	mov	r5, r8
 8006248:	51a8      	str	r0, [r5, r6]
	}
 800624a:	23a9      	movs	r3, #169	; 0xa9
 800624c:	009b      	lsls	r3, r3, #2
 800624e:	449d      	add	sp, r3
 8006250:	bcf0      	pop	{r4, r5, r6, r7}
 8006252:	46bb      	mov	fp, r7
 8006254:	46b2      	mov	sl, r6
 8006256:	46a9      	mov	r9, r5
 8006258:	46a0      	mov	r8, r4
 800625a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800625c:	1c20      	adds	r0, r4, #0
 800625e:	f003 fe9b 	bl	8009f98 <sqrtf>
 8006262:	1c06      	adds	r6, r0, #0
			float wdt05 = 0.5 * wnorm * dt;
 8006264:	4658      	mov	r0, fp
 8006266:	f7fc fef7 	bl	8003058 <__aeabi_f2d>
 800626a:	2200      	movs	r2, #0
 800626c:	4b63      	ldr	r3, [pc, #396]	; (80063fc <_ZN7MEKFcRP9updateIMUEPfS0_f+0x2e7c>)
 800626e:	9012      	str	r0, [sp, #72]	; 0x48
 8006270:	9113      	str	r1, [sp, #76]	; 0x4c
 8006272:	f7fc f849 	bl	8002308 <__aeabi_dmul>
 8006276:	0007      	movs	r7, r0
 8006278:	1c30      	adds	r0, r6, #0
 800627a:	000d      	movs	r5, r1
 800627c:	f7fc feec 	bl	8003058 <__aeabi_f2d>
 8006280:	0002      	movs	r2, r0
 8006282:	000b      	movs	r3, r1
 8006284:	0038      	movs	r0, r7
 8006286:	0029      	movs	r1, r5
 8006288:	f7fc f83e 	bl	8002308 <__aeabi_dmul>
 800628c:	f7fc ff2c 	bl	80030e8 <__aeabi_d2f>
 8006290:	1c04      	adds	r4, r0, #0
  { return __builtin_sinf(__x); }
 8006292:	f003 fdf3 	bl	8009e7c <sinf>
			float swdt = std::sin(wdt05) / wnorm;
 8006296:	1c31      	adds	r1, r6, #0
 8006298:	f7fa fb62 	bl	8000960 <__aeabi_fdiv>
 800629c:	1c07      	adds	r7, r0, #0
  { return __builtin_cosf(__x); }
 800629e:	1c20      	adds	r0, r4, #0
 80062a0:	f003 fdb8 	bl	8009e14 <cosf>
			qw[1] = w[0] * swdt;
 80062a4:	1c39      	adds	r1, r7, #0
 80062a6:	1c06      	adds	r6, r0, #0
 80062a8:	9855      	ldr	r0, [sp, #340]	; 0x154
 80062aa:	f7fa fd23 	bl	8000cf4 <__aeabi_fmul>
			qw[2] = w[1] * swdt;
 80062ae:	1c39      	adds	r1, r7, #0
			qw[1] = w[0] * swdt;
 80062b0:	1c04      	adds	r4, r0, #0
			qw[2] = w[1] * swdt;
 80062b2:	9856      	ldr	r0, [sp, #344]	; 0x158
 80062b4:	f7fa fd1e 	bl	8000cf4 <__aeabi_fmul>
			qw[3] = w[2] * swdt;
 80062b8:	1c39      	adds	r1, r7, #0
			qw[2] = w[1] * swdt;
 80062ba:	4682      	mov	sl, r0
			qw[3] = w[2] * swdt;
 80062bc:	9857      	ldr	r0, [sp, #348]	; 0x15c
 80062be:	f7fa fd19 	bl	8000cf4 <__aeabi_fmul>
 80062c2:	4651      	mov	r1, sl
 80062c4:	1c05      	adds	r5, r0, #0
 80062c6:	4650      	mov	r0, sl
 80062c8:	f7fa fd14 	bl	8000cf4 <__aeabi_fmul>
 80062cc:	1c29      	adds	r1, r5, #0
 80062ce:	900e      	str	r0, [sp, #56]	; 0x38
 80062d0:	1c28      	adds	r0, r5, #0
 80062d2:	f7fa fd0f 	bl	8000cf4 <__aeabi_fmul>
 80062d6:	4651      	mov	r1, sl
 80062d8:	900a      	str	r0, [sp, #40]	; 0x28
 80062da:	1c20      	adds	r0, r4, #0
 80062dc:	f7fa fd0a 	bl	8000cf4 <__aeabi_fmul>
 80062e0:	1c31      	adds	r1, r6, #0
 80062e2:	9009      	str	r0, [sp, #36]	; 0x24
 80062e4:	1c28      	adds	r0, r5, #0
 80062e6:	f7fa fd05 	bl	8000cf4 <__aeabi_fmul>
 80062ea:	1c29      	adds	r1, r5, #0
 80062ec:	900b      	str	r0, [sp, #44]	; 0x2c
 80062ee:	1c20      	adds	r0, r4, #0
 80062f0:	f7fa fd00 	bl	8000cf4 <__aeabi_fmul>
 80062f4:	1c31      	adds	r1, r6, #0
 80062f6:	900c      	str	r0, [sp, #48]	; 0x30
 80062f8:	4650      	mov	r0, sl
 80062fa:	f7fa fcfb 	bl	8000cf4 <__aeabi_fmul>
 80062fe:	1c21      	adds	r1, r4, #0
 8006300:	1c07      	adds	r7, r0, #0
 8006302:	1c20      	adds	r0, r4, #0
 8006304:	f7fa fcf6 	bl	8000cf4 <__aeabi_fmul>
 8006308:	2180      	movs	r1, #128	; 0x80
 800630a:	060a      	lsls	r2, r1, #24
 800630c:	4694      	mov	ip, r2
 800630e:	0003      	movs	r3, r0
 8006310:	1c29      	adds	r1, r5, #0
 8006312:	4463      	add	r3, ip
 8006314:	4650      	mov	r0, sl
 8006316:	9300      	str	r3, [sp, #0]
 8006318:	f7fa fcec 	bl	8000cf4 <__aeabi_fmul>
 800631c:	1c31      	adds	r1, r6, #0
 800631e:	9018      	str	r0, [sp, #96]	; 0x60
 8006320:	1c20      	adds	r0, r4, #0
 8006322:	f7fa fce7 	bl	8000cf4 <__aeabi_fmul>
 8006326:	990e      	ldr	r1, [sp, #56]	; 0x38
 8006328:	4681      	mov	r9, r0
 800632a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800632c:	f7fa f97c 	bl	8000628 <__aeabi_fadd>
 8006330:	2380      	movs	r3, #128	; 0x80
 8006332:	0619      	lsls	r1, r3, #24
 8006334:	468c      	mov	ip, r1
 8006336:	4460      	add	r0, ip
 8006338:	f7fc fe8e 	bl	8003058 <__aeabi_f2d>
 800633c:	0002      	movs	r2, r0
 800633e:	000b      	movs	r3, r1
 8006340:	f7fb f872 	bl	8001428 <__aeabi_dadd>
 8006344:	2200      	movs	r2, #0
 8006346:	4b2e      	ldr	r3, [pc, #184]	; (8006400 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x2e80>)
 8006348:	f7fb f86e 	bl	8001428 <__aeabi_dadd>
 800634c:	f7fc fecc 	bl	80030e8 <__aeabi_d2f>
 8006350:	9002      	str	r0, [sp, #8]
 8006352:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006354:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006356:	f7fa fde7 	bl	8000f28 <__aeabi_fsub>
 800635a:	1c01      	adds	r1, r0, #0
 800635c:	f7fa f964 	bl	8000628 <__aeabi_fadd>
 8006360:	1c39      	adds	r1, r7, #0
 8006362:	9004      	str	r0, [sp, #16]
 8006364:	980c      	ldr	r0, [sp, #48]	; 0x30
 8006366:	f7fa f95f 	bl	8000628 <__aeabi_fadd>
 800636a:	1c01      	adds	r1, r0, #0
 800636c:	f7fa f95c 	bl	8000628 <__aeabi_fadd>
 8006370:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006372:	9006      	str	r0, [sp, #24]
 8006374:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006376:	f7fa f957 	bl	8000628 <__aeabi_fadd>
 800637a:	1c01      	adds	r1, r0, #0
 800637c:	f7fa f954 	bl	8000628 <__aeabi_fadd>
 8006380:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006382:	9009      	str	r0, [sp, #36]	; 0x24
 8006384:	9800      	ldr	r0, [sp, #0]
 8006386:	f7fa fdcf 	bl	8000f28 <__aeabi_fsub>
 800638a:	f7fc fe65 	bl	8003058 <__aeabi_f2d>
 800638e:	0002      	movs	r2, r0
 8006390:	000b      	movs	r3, r1
 8006392:	f7fb f849 	bl	8001428 <__aeabi_dadd>
 8006396:	2200      	movs	r2, #0
 8006398:	4b19      	ldr	r3, [pc, #100]	; (8006400 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x2e80>)
 800639a:	f7fb f845 	bl	8001428 <__aeabi_dadd>
 800639e:	f7fc fea3 	bl	80030e8 <__aeabi_d2f>
 80063a2:	4649      	mov	r1, r9
 80063a4:	900a      	str	r0, [sp, #40]	; 0x28
 80063a6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80063a8:	f7fa fdbe 	bl	8000f28 <__aeabi_fsub>
 80063ac:	1c01      	adds	r1, r0, #0
 80063ae:	f7fa f93b 	bl	8000628 <__aeabi_fadd>
 80063b2:	1c39      	adds	r1, r7, #0
 80063b4:	900b      	str	r0, [sp, #44]	; 0x2c
 80063b6:	980c      	ldr	r0, [sp, #48]	; 0x30
 80063b8:	f7fa fdb6 	bl	8000f28 <__aeabi_fsub>
 80063bc:	1c01      	adds	r1, r0, #0
 80063be:	f7fa f933 	bl	8000628 <__aeabi_fadd>
 80063c2:	4649      	mov	r1, r9
 80063c4:	900c      	str	r0, [sp, #48]	; 0x30
 80063c6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80063c8:	f7fa f92e 	bl	8000628 <__aeabi_fadd>
 80063cc:	1c01      	adds	r1, r0, #0
 80063ce:	f7fa f92b 	bl	8000628 <__aeabi_fadd>
 80063d2:	990e      	ldr	r1, [sp, #56]	; 0x38
 80063d4:	9018      	str	r0, [sp, #96]	; 0x60
 80063d6:	9800      	ldr	r0, [sp, #0]
 80063d8:	f7fa fda6 	bl	8000f28 <__aeabi_fsub>
 80063dc:	f7fc fe3c 	bl	8003058 <__aeabi_f2d>
 80063e0:	0002      	movs	r2, r0
 80063e2:	000b      	movs	r3, r1
 80063e4:	f7fb f820 	bl	8001428 <__aeabi_dadd>
 80063e8:	2200      	movs	r2, #0
 80063ea:	4b05      	ldr	r3, [pc, #20]	; (8006400 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x2e80>)
 80063ec:	f7fb f81c 	bl	8001428 <__aeabi_dadd>
 80063f0:	f7fc fe7a 	bl	80030e8 <__aeabi_d2f>
 80063f4:	901a      	str	r0, [sp, #104]	; 0x68
 80063f6:	f7fd f904 	bl	8003602 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x82>
 80063fa:	46c0      	nop			; (mov r8, r8)
 80063fc:	3fe00000 	.word	0x3fe00000
 8006400:	3ff00000 	.word	0x3ff00000
	//  delta: quaternion used to update the quaternion estimation
	// outputs:
	//  G: transformation matrix to update the covariance matrix
	void chartUpdateMatrix(float *delta, float *G) {
		// we will not use delta again in this update, so we transform it to save computations
		delta[1] *= delta[0];
 8006404:	9c38      	ldr	r4, [sp, #224]	; 0xe0
 8006406:	993c      	ldr	r1, [sp, #240]	; 0xf0
 8006408:	1c20      	adds	r0, r4, #0
 800640a:	f7fa fc73 	bl	8000cf4 <__aeabi_fmul>
		delta[2] *= delta[0];
 800640e:	993b      	ldr	r1, [sp, #236]	; 0xec
		delta[1] *= delta[0];
 8006410:	1c07      	adds	r7, r0, #0
		delta[2] *= delta[0];
 8006412:	1c20      	adds	r0, r4, #0
 8006414:	f7fa fc6e 	bl	8000cf4 <__aeabi_fmul>
		delta[3] *= delta[0];
 8006418:	993e      	ldr	r1, [sp, #248]	; 0xf8
		delta[2] *= delta[0];
 800641a:	1c05      	adds	r5, r0, #0
		delta[3] *= delta[0];
 800641c:	1c20      	adds	r0, r4, #0
 800641e:	f7fa fc69 	bl	8000cf4 <__aeabi_fmul>
		delta[0] *= delta[0];
 8006422:	1c21      	adds	r1, r4, #0
		delta[3] *= delta[0];
 8006424:	1c06      	adds	r6, r0, #0
		delta[0] *= delta[0];
 8006426:	1c20      	adds	r0, r4, #0
 8006428:	f7fa fc64 	bl	8000cf4 <__aeabi_fmul>
		// now we build the transformation matrix
		G[0] = delta[0];     G[3] = delta[3];     G[6] = -delta[2];
 800642c:	2380      	movs	r3, #128	; 0x80
 800642e:	061b      	lsls	r3, r3, #24
 8006430:	469a      	mov	sl, r3
		delta[0] *= delta[0];
 8006432:	1c04      	adds	r4, r0, #0
						sum += M[i + k * 6] * S[j + k * 6];
 8006434:	4648      	mov	r0, r9
		G[0] = delta[0];     G[3] = delta[3];     G[6] = -delta[2];
 8006436:	9502      	str	r5, [sp, #8]
 8006438:	4455      	add	r5, sl
						sum += M[i + k * 6] * S[j + k * 6];
 800643a:	9960      	ldr	r1, [sp, #384]	; 0x180
		G[0] = delta[0];     G[3] = delta[3];     G[6] = -delta[2];
 800643c:	9500      	str	r5, [sp, #0]
						sum += M[i + k * 6] * S[j + k * 6];
 800643e:	6985      	ldr	r5, [r0, #24]
 8006440:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8006442:	9106      	str	r1, [sp, #24]
 8006444:	1c30      	adds	r0, r6, #0
 8006446:	1c29      	adds	r1, r5, #0
		G[1] = -delta[3];    G[4] = delta[0];     G[7] = delta[1];
		G[2] = delta[2];     G[5] = -delta[1];    G[8] = delta[0];
 8006448:	469b      	mov	fp, r3
						sum += M[i + k * 6] * S[j + k * 6];
 800644a:	9204      	str	r2, [sp, #16]
 800644c:	9509      	str	r5, [sp, #36]	; 0x24
 800644e:	f7fa fc51 	bl	8000cf4 <__aeabi_fmul>
 8006452:	9906      	ldr	r1, [sp, #24]
 8006454:	1c05      	adds	r5, r0, #0
 8006456:	1c20      	adds	r0, r4, #0
 8006458:	f7fa fc4c 	bl	8000cf4 <__aeabi_fmul>
 800645c:	1c01      	adds	r1, r0, #0
 800645e:	1c28      	adds	r0, r5, #0
 8006460:	f7fa f8e2 	bl	8000628 <__aeabi_fadd>
 8006464:	9904      	ldr	r1, [sp, #16]
 8006466:	1c05      	adds	r5, r0, #0
 8006468:	9800      	ldr	r0, [sp, #0]
 800646a:	f7fa fc43 	bl	8000cf4 <__aeabi_fmul>
 800646e:	1c01      	adds	r1, r0, #0
 8006470:	1c28      	adds	r0, r5, #0
 8006472:	f7fa f8d9 	bl	8000628 <__aeabi_fadd>
 8006476:	4649      	mov	r1, r9
 8006478:	901f      	str	r0, [sp, #124]	; 0x7c
 800647a:	6e0a      	ldr	r2, [r1, #96]	; 0x60
 800647c:	6c88      	ldr	r0, [r1, #72]	; 0x48
 800647e:	6f89      	ldr	r1, [r1, #120]	; 0x78
 8006480:	901b      	str	r0, [sp, #108]	; 0x6c
 8006482:	912a      	str	r1, [sp, #168]	; 0xa8
 8006484:	1c38      	adds	r0, r7, #0
 8006486:	9904      	ldr	r1, [sp, #16]
 8006488:	921a      	str	r2, [sp, #104]	; 0x68
 800648a:	f7fa fc33 	bl	8000cf4 <__aeabi_fmul>
 800648e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006490:	1c05      	adds	r5, r0, #0
 8006492:	1c20      	adds	r0, r4, #0
 8006494:	f7fa fc2e 	bl	8000cf4 <__aeabi_fmul>
 8006498:	1c01      	adds	r1, r0, #0
 800649a:	1c28      	adds	r0, r5, #0
 800649c:	f7fa f8c4 	bl	8000628 <__aeabi_fadd>
		G[1] = -delta[3];    G[4] = delta[0];     G[7] = delta[1];
 80064a0:	44b2      	add	sl, r6
						sum += M[i + k * 6] * S[j + k * 6];
 80064a2:	9906      	ldr	r1, [sp, #24]
 80064a4:	1c05      	adds	r5, r0, #0
 80064a6:	4650      	mov	r0, sl
 80064a8:	f7fa fc24 	bl	8000cf4 <__aeabi_fmul>
 80064ac:	1c01      	adds	r1, r0, #0
 80064ae:	1c28      	adds	r0, r5, #0
 80064b0:	f7fa f8ba 	bl	8000628 <__aeabi_fadd>
 80064b4:	9904      	ldr	r1, [sp, #16]
 80064b6:	9020      	str	r0, [sp, #128]	; 0x80
 80064b8:	1c20      	adds	r0, r4, #0
 80064ba:	f7fa fc1b 	bl	8000cf4 <__aeabi_fmul>
 80064be:	9906      	ldr	r1, [sp, #24]
 80064c0:	1c05      	adds	r5, r0, #0
 80064c2:	9802      	ldr	r0, [sp, #8]
 80064c4:	f7fa fc16 	bl	8000cf4 <__aeabi_fmul>
 80064c8:	1c01      	adds	r1, r0, #0
 80064ca:	1c28      	adds	r0, r5, #0
 80064cc:	f7fa f8ac 	bl	8000628 <__aeabi_fadd>
		G[2] = delta[2];     G[5] = -delta[1];    G[8] = delta[0];
 80064d0:	44bb      	add	fp, r7
						sum += M[i + k * 6] * S[j + k * 6];
 80064d2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80064d4:	1c05      	adds	r5, r0, #0
 80064d6:	4658      	mov	r0, fp
 80064d8:	f7fa fc0c 	bl	8000cf4 <__aeabi_fmul>
 80064dc:	1c01      	adds	r1, r0, #0
 80064de:	1c28      	adds	r0, r5, #0
 80064e0:	f7fa f8a2 	bl	8000628 <__aeabi_fadd>
 80064e4:	9021      	str	r0, [sp, #132]	; 0x84
 80064e6:	4648      	mov	r0, r9
 80064e8:	6843      	ldr	r3, [r0, #4]
 80064ea:	69c1      	ldr	r1, [r0, #28]
 80064ec:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80064ee:	9306      	str	r3, [sp, #24]
 80064f0:	9004      	str	r0, [sp, #16]
 80064f2:	1c30      	adds	r0, r6, #0
 80064f4:	9109      	str	r1, [sp, #36]	; 0x24
 80064f6:	f7fa fbfd 	bl	8000cf4 <__aeabi_fmul>
 80064fa:	9906      	ldr	r1, [sp, #24]
 80064fc:	1c05      	adds	r5, r0, #0
 80064fe:	1c20      	adds	r0, r4, #0
 8006500:	f7fa fbf8 	bl	8000cf4 <__aeabi_fmul>
 8006504:	1c01      	adds	r1, r0, #0
 8006506:	1c28      	adds	r0, r5, #0
 8006508:	f7fa f88e 	bl	8000628 <__aeabi_fadd>
 800650c:	9904      	ldr	r1, [sp, #16]
 800650e:	1c05      	adds	r5, r0, #0
 8006510:	9800      	ldr	r0, [sp, #0]
 8006512:	f7fa fbef 	bl	8000cf4 <__aeabi_fmul>
 8006516:	1c01      	adds	r1, r0, #0
 8006518:	1c28      	adds	r0, r5, #0
 800651a:	f7fa f885 	bl	8000628 <__aeabi_fadd>
 800651e:	464b      	mov	r3, r9
 8006520:	9022      	str	r0, [sp, #136]	; 0x88
 8006522:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8006524:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8006526:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8006528:	9904      	ldr	r1, [sp, #16]
 800652a:	9016      	str	r0, [sp, #88]	; 0x58
 800652c:	1c38      	adds	r0, r7, #0
 800652e:	9314      	str	r3, [sp, #80]	; 0x50
 8006530:	9219      	str	r2, [sp, #100]	; 0x64
 8006532:	f7fa fbdf 	bl	8000cf4 <__aeabi_fmul>
 8006536:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006538:	1c05      	adds	r5, r0, #0
 800653a:	1c20      	adds	r0, r4, #0
 800653c:	f7fa fbda 	bl	8000cf4 <__aeabi_fmul>
 8006540:	1c01      	adds	r1, r0, #0
 8006542:	1c28      	adds	r0, r5, #0
 8006544:	f7fa f870 	bl	8000628 <__aeabi_fadd>
 8006548:	9906      	ldr	r1, [sp, #24]
 800654a:	1c05      	adds	r5, r0, #0
 800654c:	4650      	mov	r0, sl
 800654e:	f7fa fbd1 	bl	8000cf4 <__aeabi_fmul>
 8006552:	1c01      	adds	r1, r0, #0
 8006554:	1c28      	adds	r0, r5, #0
 8006556:	f7fa f867 	bl	8000628 <__aeabi_fadd>
 800655a:	9904      	ldr	r1, [sp, #16]
 800655c:	9028      	str	r0, [sp, #160]	; 0xa0
 800655e:	1c20      	adds	r0, r4, #0
 8006560:	f7fa fbc8 	bl	8000cf4 <__aeabi_fmul>
 8006564:	9906      	ldr	r1, [sp, #24]
 8006566:	1c05      	adds	r5, r0, #0
 8006568:	9802      	ldr	r0, [sp, #8]
 800656a:	f7fa fbc3 	bl	8000cf4 <__aeabi_fmul>
 800656e:	1c01      	adds	r1, r0, #0
 8006570:	1c28      	adds	r0, r5, #0
 8006572:	f7fa f859 	bl	8000628 <__aeabi_fadd>
 8006576:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006578:	1c05      	adds	r5, r0, #0
 800657a:	4658      	mov	r0, fp
 800657c:	f7fa fbba 	bl	8000cf4 <__aeabi_fmul>
 8006580:	1c01      	adds	r1, r0, #0
 8006582:	1c28      	adds	r0, r5, #0
 8006584:	f7fa f850 	bl	8000628 <__aeabi_fadd>
 8006588:	464a      	mov	r2, r9
 800658a:	6891      	ldr	r1, [r2, #8]
 800658c:	6b95      	ldr	r5, [r2, #56]	; 0x38
 800658e:	9106      	str	r1, [sp, #24]
 8006590:	6a11      	ldr	r1, [r2, #32]
 8006592:	9024      	str	r0, [sp, #144]	; 0x90
 8006594:	1c30      	adds	r0, r6, #0
 8006596:	9504      	str	r5, [sp, #16]
 8006598:	9109      	str	r1, [sp, #36]	; 0x24
 800659a:	f7fa fbab 	bl	8000cf4 <__aeabi_fmul>
 800659e:	9906      	ldr	r1, [sp, #24]
 80065a0:	1c05      	adds	r5, r0, #0
 80065a2:	1c20      	adds	r0, r4, #0
 80065a4:	f7fa fba6 	bl	8000cf4 <__aeabi_fmul>
 80065a8:	1c01      	adds	r1, r0, #0
 80065aa:	1c28      	adds	r0, r5, #0
 80065ac:	f7fa f83c 	bl	8000628 <__aeabi_fadd>
 80065b0:	9904      	ldr	r1, [sp, #16]
 80065b2:	1c05      	adds	r5, r0, #0
 80065b4:	9800      	ldr	r0, [sp, #0]
 80065b6:	f7fa fb9d 	bl	8000cf4 <__aeabi_fmul>
 80065ba:	1c01      	adds	r1, r0, #0
 80065bc:	1c28      	adds	r0, r5, #0
 80065be:	f7fa f833 	bl	8000628 <__aeabi_fadd>
 80065c2:	464a      	mov	r2, r9
 80065c4:	9026      	str	r0, [sp, #152]	; 0x98
 80065c6:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80065c8:	6d11      	ldr	r1, [r2, #80]	; 0x50
 80065ca:	4648      	mov	r0, r9
 80065cc:	2280      	movs	r2, #128	; 0x80
 80065ce:	9112      	str	r1, [sp, #72]	; 0x48
 80065d0:	5881      	ldr	r1, [r0, r2]
 80065d2:	1c38      	adds	r0, r7, #0
 80065d4:	910e      	str	r1, [sp, #56]	; 0x38
 80065d6:	9904      	ldr	r1, [sp, #16]
 80065d8:	9310      	str	r3, [sp, #64]	; 0x40
 80065da:	f7fa fb8b 	bl	8000cf4 <__aeabi_fmul>
 80065de:	9909      	ldr	r1, [sp, #36]	; 0x24
 80065e0:	1c05      	adds	r5, r0, #0
 80065e2:	1c20      	adds	r0, r4, #0
 80065e4:	f7fa fb86 	bl	8000cf4 <__aeabi_fmul>
 80065e8:	1c01      	adds	r1, r0, #0
 80065ea:	1c28      	adds	r0, r5, #0
 80065ec:	f7fa f81c 	bl	8000628 <__aeabi_fadd>
 80065f0:	9906      	ldr	r1, [sp, #24]
 80065f2:	1c05      	adds	r5, r0, #0
 80065f4:	4650      	mov	r0, sl
 80065f6:	f7fa fb7d 	bl	8000cf4 <__aeabi_fmul>
 80065fa:	1c01      	adds	r1, r0, #0
 80065fc:	1c28      	adds	r0, r5, #0
 80065fe:	f7fa f813 	bl	8000628 <__aeabi_fadd>
 8006602:	9904      	ldr	r1, [sp, #16]
 8006604:	9029      	str	r0, [sp, #164]	; 0xa4
 8006606:	1c20      	adds	r0, r4, #0
 8006608:	f7fa fb74 	bl	8000cf4 <__aeabi_fmul>
 800660c:	9906      	ldr	r1, [sp, #24]
 800660e:	1c05      	adds	r5, r0, #0
 8006610:	9802      	ldr	r0, [sp, #8]
 8006612:	f7fa fb6f 	bl	8000cf4 <__aeabi_fmul>
 8006616:	1c01      	adds	r1, r0, #0
 8006618:	1c28      	adds	r0, r5, #0
 800661a:	f7fa f805 	bl	8000628 <__aeabi_fadd>
 800661e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006620:	1c05      	adds	r5, r0, #0
 8006622:	4658      	mov	r0, fp
 8006624:	f7fa fb66 	bl	8000cf4 <__aeabi_fmul>
 8006628:	1c01      	adds	r1, r0, #0
 800662a:	1c28      	adds	r0, r5, #0
 800662c:	f7f9 fffc 	bl	8000628 <__aeabi_fadd>
 8006630:	902c      	str	r0, [sp, #176]	; 0xb0
 8006632:	4648      	mov	r0, r9
 8006634:	464a      	mov	r2, r9
 8006636:	68c3      	ldr	r3, [r0, #12]
 8006638:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800663a:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800663c:	6912      	ldr	r2, [r2, #16]
 800663e:	910c      	str	r1, [sp, #48]	; 0x30
 8006640:	900b      	str	r0, [sp, #44]	; 0x2c
 8006642:	4649      	mov	r1, r9
 8006644:	4648      	mov	r0, r9
 8006646:	464d      	mov	r5, r9
 8006648:	9318      	str	r3, [sp, #96]	; 0x60
 800664a:	920a      	str	r2, [sp, #40]	; 0x28
 800664c:	464b      	mov	r3, r9
 800664e:	464a      	mov	r2, r9
 8006650:	6949      	ldr	r1, [r1, #20]
 8006652:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8006654:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8006656:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006658:	6aad      	ldr	r5, [r5, #40]	; 0x28
 800665a:	911c      	str	r1, [sp, #112]	; 0x70
 800665c:	901d      	str	r0, [sp, #116]	; 0x74
						sum += S[i + k * 6] * H[k * 6 + j];
 800665e:	9922      	ldr	r1, [sp, #136]	; 0x88
 8006660:	1c30      	adds	r0, r6, #0
						sum += M[i + k * 6] * S[j + k * 6];
 8006662:	921e      	str	r2, [sp, #120]	; 0x78
 8006664:	9306      	str	r3, [sp, #24]
 8006666:	9509      	str	r5, [sp, #36]	; 0x24
						sum += S[i + k * 6] * H[k * 6 + j];
 8006668:	f7fa fb44 	bl	8000cf4 <__aeabi_fmul>
 800666c:	991f      	ldr	r1, [sp, #124]	; 0x7c
 800666e:	1c05      	adds	r5, r0, #0
 8006670:	1c20      	adds	r0, r4, #0
 8006672:	f7fa fb3f 	bl	8000cf4 <__aeabi_fmul>
 8006676:	1c01      	adds	r1, r0, #0
 8006678:	1c28      	adds	r0, r5, #0
 800667a:	f7f9 ffd5 	bl	8000628 <__aeabi_fadd>
 800667e:	9926      	ldr	r1, [sp, #152]	; 0x98
 8006680:	1c05      	adds	r5, r0, #0
 8006682:	9800      	ldr	r0, [sp, #0]
 8006684:	f7fa fb36 	bl	8000cf4 <__aeabi_fmul>
 8006688:	1c01      	adds	r1, r0, #0
 800668a:	1c28      	adds	r0, r5, #0
 800668c:	f7f9 ffcc 	bl	8000628 <__aeabi_fadd>
 8006690:	9926      	ldr	r1, [sp, #152]	; 0x98
 8006692:	9004      	str	r0, [sp, #16]
					M[i + j * 6] = sum;
 8006694:	9060      	str	r0, [sp, #384]	; 0x180
						sum += S[i + k * 6] * H[k * 6 + j];
 8006696:	1c38      	adds	r0, r7, #0
 8006698:	f7fa fb2c 	bl	8000cf4 <__aeabi_fmul>
 800669c:	9922      	ldr	r1, [sp, #136]	; 0x88
 800669e:	1c05      	adds	r5, r0, #0
 80066a0:	1c20      	adds	r0, r4, #0
 80066a2:	f7fa fb27 	bl	8000cf4 <__aeabi_fmul>
 80066a6:	1c01      	adds	r1, r0, #0
 80066a8:	1c28      	adds	r0, r5, #0
 80066aa:	f7f9 ffbd 	bl	8000628 <__aeabi_fadd>
 80066ae:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80066b0:	1c05      	adds	r5, r0, #0
 80066b2:	4650      	mov	r0, sl
 80066b4:	f7fa fb1e 	bl	8000cf4 <__aeabi_fmul>
 80066b8:	1c01      	adds	r1, r0, #0
 80066ba:	1c28      	adds	r0, r5, #0
 80066bc:	f7f9 ffb4 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 80066c0:	464b      	mov	r3, r9
						sum += S[i + k * 6] * H[k * 6 + j];
 80066c2:	9926      	ldr	r1, [sp, #152]	; 0x98
					M[i + j * 6] = sum;
 80066c4:	6058      	str	r0, [r3, #4]
						sum += S[i + k * 6] * H[k * 6 + j];
 80066c6:	1c20      	adds	r0, r4, #0
 80066c8:	f7fa fb14 	bl	8000cf4 <__aeabi_fmul>
 80066cc:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80066ce:	1c05      	adds	r5, r0, #0
 80066d0:	9802      	ldr	r0, [sp, #8]
 80066d2:	f7fa fb0f 	bl	8000cf4 <__aeabi_fmul>
 80066d6:	1c01      	adds	r1, r0, #0
 80066d8:	1c28      	adds	r0, r5, #0
 80066da:	f7f9 ffa5 	bl	8000628 <__aeabi_fadd>
 80066de:	9922      	ldr	r1, [sp, #136]	; 0x88
 80066e0:	1c05      	adds	r5, r0, #0
 80066e2:	4658      	mov	r0, fp
 80066e4:	f7fa fb06 	bl	8000cf4 <__aeabi_fmul>
 80066e8:	1c01      	adds	r1, r0, #0
 80066ea:	1c28      	adds	r0, r5, #0
 80066ec:	f7f9 ff9c 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 80066f0:	464a      	mov	r2, r9
						sum += M[i + k * 6] * S[j + k * 6];
 80066f2:	990c      	ldr	r1, [sp, #48]	; 0x30
					M[i + j * 6] = sum;
 80066f4:	6090      	str	r0, [r2, #8]
						sum += M[i + k * 6] * S[j + k * 6];
 80066f6:	1c30      	adds	r0, r6, #0
 80066f8:	f7fa fafc 	bl	8000cf4 <__aeabi_fmul>
 80066fc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80066fe:	1c05      	adds	r5, r0, #0
 8006700:	1c20      	adds	r0, r4, #0
 8006702:	f7fa faf7 	bl	8000cf4 <__aeabi_fmul>
 8006706:	1c01      	adds	r1, r0, #0
 8006708:	1c28      	adds	r0, r5, #0
 800670a:	f7f9 ff8d 	bl	8000628 <__aeabi_fadd>
 800670e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006710:	1c05      	adds	r5, r0, #0
 8006712:	9800      	ldr	r0, [sp, #0]
 8006714:	f7fa faee 	bl	8000cf4 <__aeabi_fmul>
 8006718:	1c01      	adds	r1, r0, #0
 800671a:	1c28      	adds	r0, r5, #0
 800671c:	f7f9 ff84 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006720:	4649      	mov	r1, r9
 8006722:	60c8      	str	r0, [r1, #12]
						sum += M[i + k * 6] * S[j + k * 6];
 8006724:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006726:	1c30      	adds	r0, r6, #0
 8006728:	f7fa fae4 	bl	8000cf4 <__aeabi_fmul>
 800672c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800672e:	1c05      	adds	r5, r0, #0
 8006730:	1c20      	adds	r0, r4, #0
 8006732:	f7fa fadf 	bl	8000cf4 <__aeabi_fmul>
 8006736:	1c01      	adds	r1, r0, #0
 8006738:	1c28      	adds	r0, r5, #0
 800673a:	f7f9 ff75 	bl	8000628 <__aeabi_fadd>
 800673e:	9906      	ldr	r1, [sp, #24]
 8006740:	1c05      	adds	r5, r0, #0
 8006742:	9800      	ldr	r0, [sp, #0]
 8006744:	f7fa fad6 	bl	8000cf4 <__aeabi_fmul>
 8006748:	1c01      	adds	r1, r0, #0
 800674a:	1c28      	adds	r0, r5, #0
 800674c:	f7f9 ff6c 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006750:	464b      	mov	r3, r9
						sum += M[i + k * 6] * S[j + k * 6];
 8006752:	991c      	ldr	r1, [sp, #112]	; 0x70
					M[i + j * 6] = sum;
 8006754:	6118      	str	r0, [r3, #16]
						sum += M[i + k * 6] * S[j + k * 6];
 8006756:	1c20      	adds	r0, r4, #0
 8006758:	f7fa facc 	bl	8000cf4 <__aeabi_fmul>
 800675c:	991d      	ldr	r1, [sp, #116]	; 0x74
 800675e:	1c05      	adds	r5, r0, #0
 8006760:	1c30      	adds	r0, r6, #0
 8006762:	f7fa fac7 	bl	8000cf4 <__aeabi_fmul>
 8006766:	1c01      	adds	r1, r0, #0
 8006768:	1c28      	adds	r0, r5, #0
 800676a:	f7f9 ff5d 	bl	8000628 <__aeabi_fadd>
 800676e:	991e      	ldr	r1, [sp, #120]	; 0x78
 8006770:	1c05      	adds	r5, r0, #0
 8006772:	9800      	ldr	r0, [sp, #0]
 8006774:	f7fa fabe 	bl	8000cf4 <__aeabi_fmul>
 8006778:	1c01      	adds	r1, r0, #0
 800677a:	1c28      	adds	r0, r5, #0
 800677c:	f7f9 ff54 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006780:	464a      	mov	r2, r9
						sum += S[i + k * 6] * H[k * 6 + j];
 8006782:	9928      	ldr	r1, [sp, #160]	; 0xa0
					M[i + j * 6] = sum;
 8006784:	6150      	str	r0, [r2, #20]
						sum += S[i + k * 6] * H[k * 6 + j];
 8006786:	1c30      	adds	r0, r6, #0
 8006788:	f7fa fab4 	bl	8000cf4 <__aeabi_fmul>
 800678c:	9920      	ldr	r1, [sp, #128]	; 0x80
 800678e:	1c05      	adds	r5, r0, #0
 8006790:	1c20      	adds	r0, r4, #0
 8006792:	f7fa faaf 	bl	8000cf4 <__aeabi_fmul>
 8006796:	1c01      	adds	r1, r0, #0
 8006798:	1c28      	adds	r0, r5, #0
 800679a:	f7f9 ff45 	bl	8000628 <__aeabi_fadd>
 800679e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80067a0:	1c05      	adds	r5, r0, #0
 80067a2:	9800      	ldr	r0, [sp, #0]
 80067a4:	f7fa faa6 	bl	8000cf4 <__aeabi_fmul>
 80067a8:	1c01      	adds	r1, r0, #0
 80067aa:	1c28      	adds	r0, r5, #0
 80067ac:	f7f9 ff3c 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 80067b0:	4649      	mov	r1, r9
 80067b2:	6188      	str	r0, [r1, #24]
						sum += S[i + k * 6] * H[k * 6 + j];
 80067b4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80067b6:	1c38      	adds	r0, r7, #0
 80067b8:	f7fa fa9c 	bl	8000cf4 <__aeabi_fmul>
 80067bc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80067be:	1c05      	adds	r5, r0, #0
 80067c0:	1c20      	adds	r0, r4, #0
 80067c2:	f7fa fa97 	bl	8000cf4 <__aeabi_fmul>
 80067c6:	1c01      	adds	r1, r0, #0
 80067c8:	1c28      	adds	r0, r5, #0
 80067ca:	f7f9 ff2d 	bl	8000628 <__aeabi_fadd>
 80067ce:	9920      	ldr	r1, [sp, #128]	; 0x80
 80067d0:	1c05      	adds	r5, r0, #0
 80067d2:	4650      	mov	r0, sl
 80067d4:	f7fa fa8e 	bl	8000cf4 <__aeabi_fmul>
 80067d8:	1c01      	adds	r1, r0, #0
 80067da:	1c28      	adds	r0, r5, #0
 80067dc:	f7f9 ff24 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 80067e0:	464b      	mov	r3, r9
						sum += S[i + k * 6] * H[k * 6 + j];
 80067e2:	9929      	ldr	r1, [sp, #164]	; 0xa4
					M[i + j * 6] = sum;
 80067e4:	61d8      	str	r0, [r3, #28]
						sum += S[i + k * 6] * H[k * 6 + j];
 80067e6:	1c20      	adds	r0, r4, #0
 80067e8:	f7fa fa84 	bl	8000cf4 <__aeabi_fmul>
 80067ec:	9920      	ldr	r1, [sp, #128]	; 0x80
 80067ee:	1c05      	adds	r5, r0, #0
 80067f0:	9802      	ldr	r0, [sp, #8]
 80067f2:	f7fa fa7f 	bl	8000cf4 <__aeabi_fmul>
 80067f6:	1c01      	adds	r1, r0, #0
 80067f8:	1c28      	adds	r0, r5, #0
 80067fa:	f7f9 ff15 	bl	8000628 <__aeabi_fadd>
 80067fe:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8006800:	1c05      	adds	r5, r0, #0
 8006802:	4658      	mov	r0, fp
 8006804:	f7fa fa76 	bl	8000cf4 <__aeabi_fmul>
 8006808:	1c01      	adds	r1, r0, #0
 800680a:	1c28      	adds	r0, r5, #0
 800680c:	f7f9 ff0c 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006810:	464a      	mov	r2, r9
 8006812:	6210      	str	r0, [r2, #32]
						sum += M[i + k * 6] * S[j + k * 6];
 8006814:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006816:	1c38      	adds	r0, r7, #0
 8006818:	f7fa fa6c 	bl	8000cf4 <__aeabi_fmul>
 800681c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800681e:	1c05      	adds	r5, r0, #0
 8006820:	1c20      	adds	r0, r4, #0
 8006822:	f7fa fa67 	bl	8000cf4 <__aeabi_fmul>
 8006826:	1c01      	adds	r1, r0, #0
 8006828:	1c28      	adds	r0, r5, #0
 800682a:	f7f9 fefd 	bl	8000628 <__aeabi_fadd>
 800682e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8006830:	1c05      	adds	r5, r0, #0
 8006832:	4650      	mov	r0, sl
 8006834:	f7fa fa5e 	bl	8000cf4 <__aeabi_fmul>
 8006838:	1c01      	adds	r1, r0, #0
 800683a:	1c28      	adds	r0, r5, #0
 800683c:	f7f9 fef4 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006840:	4649      	mov	r1, r9
 8006842:	6248      	str	r0, [r1, #36]	; 0x24
						sum += M[i + k * 6] * S[j + k * 6];
 8006844:	9906      	ldr	r1, [sp, #24]
 8006846:	1c38      	adds	r0, r7, #0
 8006848:	f7fa fa54 	bl	8000cf4 <__aeabi_fmul>
 800684c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800684e:	1c05      	adds	r5, r0, #0
 8006850:	1c20      	adds	r0, r4, #0
 8006852:	f7fa fa4f 	bl	8000cf4 <__aeabi_fmul>
 8006856:	1c01      	adds	r1, r0, #0
 8006858:	1c28      	adds	r0, r5, #0
 800685a:	f7f9 fee5 	bl	8000628 <__aeabi_fadd>
 800685e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006860:	1c05      	adds	r5, r0, #0
 8006862:	4650      	mov	r0, sl
 8006864:	f7fa fa46 	bl	8000cf4 <__aeabi_fmul>
 8006868:	1c01      	adds	r1, r0, #0
 800686a:	1c28      	adds	r0, r5, #0
 800686c:	f7f9 fedc 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006870:	464b      	mov	r3, r9
						sum += M[i + k * 6] * S[j + k * 6];
 8006872:	991d      	ldr	r1, [sp, #116]	; 0x74
					M[i + j * 6] = sum;
 8006874:	6298      	str	r0, [r3, #40]	; 0x28
						sum += M[i + k * 6] * S[j + k * 6];
 8006876:	1c20      	adds	r0, r4, #0
 8006878:	f7fa fa3c 	bl	8000cf4 <__aeabi_fmul>
 800687c:	991e      	ldr	r1, [sp, #120]	; 0x78
 800687e:	1c05      	adds	r5, r0, #0
 8006880:	1c38      	adds	r0, r7, #0
 8006882:	f7fa fa37 	bl	8000cf4 <__aeabi_fmul>
 8006886:	1c01      	adds	r1, r0, #0
 8006888:	1c28      	adds	r0, r5, #0
 800688a:	f7f9 fecd 	bl	8000628 <__aeabi_fadd>
 800688e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8006890:	1c05      	adds	r5, r0, #0
 8006892:	4650      	mov	r0, sl
 8006894:	f7fa fa2e 	bl	8000cf4 <__aeabi_fmul>
 8006898:	1c01      	adds	r1, r0, #0
 800689a:	1c28      	adds	r0, r5, #0
 800689c:	f7f9 fec4 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 80068a0:	464a      	mov	r2, r9
						sum += S[i + k * 6] * H[k * 6 + j];
 80068a2:	9924      	ldr	r1, [sp, #144]	; 0x90
					M[i + j * 6] = sum;
 80068a4:	62d0      	str	r0, [r2, #44]	; 0x2c
						sum += S[i + k * 6] * H[k * 6 + j];
 80068a6:	1c30      	adds	r0, r6, #0
 80068a8:	f7fa fa24 	bl	8000cf4 <__aeabi_fmul>
 80068ac:	9921      	ldr	r1, [sp, #132]	; 0x84
 80068ae:	1c05      	adds	r5, r0, #0
 80068b0:	1c20      	adds	r0, r4, #0
 80068b2:	f7fa fa1f 	bl	8000cf4 <__aeabi_fmul>
 80068b6:	1c01      	adds	r1, r0, #0
 80068b8:	1c28      	adds	r0, r5, #0
 80068ba:	f7f9 feb5 	bl	8000628 <__aeabi_fadd>
 80068be:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80068c0:	1c05      	adds	r5, r0, #0
 80068c2:	9800      	ldr	r0, [sp, #0]
 80068c4:	f7fa fa16 	bl	8000cf4 <__aeabi_fmul>
 80068c8:	1c01      	adds	r1, r0, #0
 80068ca:	1c28      	adds	r0, r5, #0
 80068cc:	f7f9 feac 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 80068d0:	4649      	mov	r1, r9
 80068d2:	6308      	str	r0, [r1, #48]	; 0x30
						sum += S[i + k * 6] * H[k * 6 + j];
 80068d4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80068d6:	1c38      	adds	r0, r7, #0
 80068d8:	f7fa fa0c 	bl	8000cf4 <__aeabi_fmul>
 80068dc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80068de:	1c05      	adds	r5, r0, #0
 80068e0:	1c20      	adds	r0, r4, #0
 80068e2:	f7fa fa07 	bl	8000cf4 <__aeabi_fmul>
 80068e6:	1c01      	adds	r1, r0, #0
 80068e8:	1c28      	adds	r0, r5, #0
 80068ea:	f7f9 fe9d 	bl	8000628 <__aeabi_fadd>
 80068ee:	9921      	ldr	r1, [sp, #132]	; 0x84
 80068f0:	1c05      	adds	r5, r0, #0
 80068f2:	4650      	mov	r0, sl
 80068f4:	f7fa f9fe 	bl	8000cf4 <__aeabi_fmul>
 80068f8:	1c01      	adds	r1, r0, #0
 80068fa:	1c28      	adds	r0, r5, #0
 80068fc:	f7f9 fe94 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006900:	464b      	mov	r3, r9
						sum += S[i + k * 6] * H[k * 6 + j];
 8006902:	992c      	ldr	r1, [sp, #176]	; 0xb0
					M[i + j * 6] = sum;
 8006904:	6358      	str	r0, [r3, #52]	; 0x34
						sum += S[i + k * 6] * H[k * 6 + j];
 8006906:	1c20      	adds	r0, r4, #0
 8006908:	f7fa f9f4 	bl	8000cf4 <__aeabi_fmul>
 800690c:	9921      	ldr	r1, [sp, #132]	; 0x84
 800690e:	1c05      	adds	r5, r0, #0
 8006910:	9802      	ldr	r0, [sp, #8]
 8006912:	f7fa f9ef 	bl	8000cf4 <__aeabi_fmul>
 8006916:	1c01      	adds	r1, r0, #0
 8006918:	1c28      	adds	r0, r5, #0
 800691a:	f7f9 fe85 	bl	8000628 <__aeabi_fadd>
 800691e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8006920:	1c05      	adds	r5, r0, #0
 8006922:	4658      	mov	r0, fp
 8006924:	f7fa f9e6 	bl	8000cf4 <__aeabi_fmul>
 8006928:	1c01      	adds	r1, r0, #0
 800692a:	1c28      	adds	r0, r5, #0
 800692c:	f7f9 fe7c 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006930:	464a      	mov	r2, r9
						sum += M[i + k * 6] * S[j + k * 6];
 8006932:	990b      	ldr	r1, [sp, #44]	; 0x2c
					M[i + j * 6] = sum;
 8006934:	6390      	str	r0, [r2, #56]	; 0x38
						sum += M[i + k * 6] * S[j + k * 6];
 8006936:	1c20      	adds	r0, r4, #0
 8006938:	f7fa f9dc 	bl	8000cf4 <__aeabi_fmul>
 800693c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800693e:	1c05      	adds	r5, r0, #0
 8006940:	9802      	ldr	r0, [sp, #8]
 8006942:	f7fa f9d7 	bl	8000cf4 <__aeabi_fmul>
 8006946:	1c01      	adds	r1, r0, #0
 8006948:	1c28      	adds	r0, r5, #0
 800694a:	f7f9 fe6d 	bl	8000628 <__aeabi_fadd>
 800694e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8006950:	1c05      	adds	r5, r0, #0
 8006952:	4658      	mov	r0, fp
 8006954:	f7fa f9ce 	bl	8000cf4 <__aeabi_fmul>
 8006958:	1c01      	adds	r1, r0, #0
 800695a:	1c28      	adds	r0, r5, #0
 800695c:	f7f9 fe64 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006960:	4649      	mov	r1, r9
 8006962:	63c8      	str	r0, [r1, #60]	; 0x3c
						sum += M[i + k * 6] * S[j + k * 6];
 8006964:	9906      	ldr	r1, [sp, #24]
 8006966:	1c20      	adds	r0, r4, #0
 8006968:	f7fa f9c4 	bl	8000cf4 <__aeabi_fmul>
 800696c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800696e:	1c05      	adds	r5, r0, #0
 8006970:	9802      	ldr	r0, [sp, #8]
 8006972:	f7fa f9bf 	bl	8000cf4 <__aeabi_fmul>
 8006976:	1c01      	adds	r1, r0, #0
 8006978:	1c28      	adds	r0, r5, #0
 800697a:	f7f9 fe55 	bl	8000628 <__aeabi_fadd>
 800697e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006980:	1c05      	adds	r5, r0, #0
 8006982:	4658      	mov	r0, fp
 8006984:	f7fa f9b6 	bl	8000cf4 <__aeabi_fmul>
 8006988:	1c01      	adds	r1, r0, #0
 800698a:	1c28      	adds	r0, r5, #0
 800698c:	f7f9 fe4c 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006990:	464b      	mov	r3, r9
						sum += M[i + k * 6] * S[j + k * 6];
 8006992:	991c      	ldr	r1, [sp, #112]	; 0x70
					M[i + j * 6] = sum;
 8006994:	6418      	str	r0, [r3, #64]	; 0x40
						sum += M[i + k * 6] * S[j + k * 6];
 8006996:	9802      	ldr	r0, [sp, #8]
 8006998:	f7fa f9ac 	bl	8000cf4 <__aeabi_fmul>
 800699c:	991e      	ldr	r1, [sp, #120]	; 0x78
 800699e:	1c05      	adds	r5, r0, #0
 80069a0:	1c20      	adds	r0, r4, #0
 80069a2:	f7fa f9a7 	bl	8000cf4 <__aeabi_fmul>
 80069a6:	1c01      	adds	r1, r0, #0
 80069a8:	1c28      	adds	r0, r5, #0
 80069aa:	f7f9 fe3d 	bl	8000628 <__aeabi_fadd>
 80069ae:	991d      	ldr	r1, [sp, #116]	; 0x74
 80069b0:	1c05      	adds	r5, r0, #0
 80069b2:	4658      	mov	r0, fp
 80069b4:	f7fa f99e 	bl	8000cf4 <__aeabi_fmul>
 80069b8:	1c01      	adds	r1, r0, #0
 80069ba:	1c28      	adds	r0, r5, #0
 80069bc:	f7f9 fe34 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 80069c0:	464a      	mov	r2, r9
 80069c2:	6450      	str	r0, [r2, #68]	; 0x44
 80069c4:	a860      	add	r0, sp, #384	; 0x180
 80069c6:	4681      	mov	r9, r0
						sum += S[i + k * 6] * H[k * 6 + j];
 80069c8:	9919      	ldr	r1, [sp, #100]	; 0x64
 80069ca:	1c30      	adds	r0, r6, #0
 80069cc:	f7fa f992 	bl	8000cf4 <__aeabi_fmul>
 80069d0:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80069d2:	1c05      	adds	r5, r0, #0
 80069d4:	1c20      	adds	r0, r4, #0
 80069d6:	f7fa f98d 	bl	8000cf4 <__aeabi_fmul>
 80069da:	1c01      	adds	r1, r0, #0
 80069dc:	1c28      	adds	r0, r5, #0
 80069de:	f7f9 fe23 	bl	8000628 <__aeabi_fadd>
 80069e2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80069e4:	1c05      	adds	r5, r0, #0
 80069e6:	9800      	ldr	r0, [sp, #0]
 80069e8:	f7fa f984 	bl	8000cf4 <__aeabi_fmul>
 80069ec:	1c01      	adds	r1, r0, #0
 80069ee:	1c28      	adds	r0, r5, #0
 80069f0:	f7f9 fe1a 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 80069f4:	4649      	mov	r1, r9
 80069f6:	6488      	str	r0, [r1, #72]	; 0x48
						sum += S[i + k * 6] * H[k * 6 + j];
 80069f8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80069fa:	1c38      	adds	r0, r7, #0
 80069fc:	f7fa f97a 	bl	8000cf4 <__aeabi_fmul>
 8006a00:	9919      	ldr	r1, [sp, #100]	; 0x64
 8006a02:	1c05      	adds	r5, r0, #0
 8006a04:	1c20      	adds	r0, r4, #0
 8006a06:	f7fa f975 	bl	8000cf4 <__aeabi_fmul>
 8006a0a:	1c01      	adds	r1, r0, #0
 8006a0c:	1c28      	adds	r0, r5, #0
 8006a0e:	f7f9 fe0b 	bl	8000628 <__aeabi_fadd>
 8006a12:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8006a14:	1c05      	adds	r5, r0, #0
 8006a16:	4650      	mov	r0, sl
 8006a18:	f7fa f96c 	bl	8000cf4 <__aeabi_fmul>
 8006a1c:	1c01      	adds	r1, r0, #0
 8006a1e:	1c28      	adds	r0, r5, #0
 8006a20:	f7f9 fe02 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006a24:	464b      	mov	r3, r9
						sum += S[i + k * 6] * H[k * 6 + j];
 8006a26:	9912      	ldr	r1, [sp, #72]	; 0x48
					M[i + j * 6] = sum;
 8006a28:	64d8      	str	r0, [r3, #76]	; 0x4c
						sum += S[i + k * 6] * H[k * 6 + j];
 8006a2a:	1c20      	adds	r0, r4, #0
 8006a2c:	f7fa f962 	bl	8000cf4 <__aeabi_fmul>
 8006a30:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8006a32:	1c05      	adds	r5, r0, #0
 8006a34:	9802      	ldr	r0, [sp, #8]
 8006a36:	f7fa f95d 	bl	8000cf4 <__aeabi_fmul>
 8006a3a:	1c01      	adds	r1, r0, #0
 8006a3c:	1c28      	adds	r0, r5, #0
 8006a3e:	f7f9 fdf3 	bl	8000628 <__aeabi_fadd>
 8006a42:	9919      	ldr	r1, [sp, #100]	; 0x64
 8006a44:	1c05      	adds	r5, r0, #0
 8006a46:	4658      	mov	r0, fp
 8006a48:	f7fa f954 	bl	8000cf4 <__aeabi_fmul>
 8006a4c:	1c01      	adds	r1, r0, #0
 8006a4e:	1c28      	adds	r0, r5, #0
 8006a50:	f7f9 fdea 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006a54:	464a      	mov	r2, r9
						sum += S[i + k * 6] * H[k * 6 + j];
 8006a56:	9916      	ldr	r1, [sp, #88]	; 0x58
					M[i + j * 6] = sum;
 8006a58:	6510      	str	r0, [r2, #80]	; 0x50
						sum += S[i + k * 6] * H[k * 6 + j];
 8006a5a:	1c30      	adds	r0, r6, #0
 8006a5c:	f7fa f94a 	bl	8000cf4 <__aeabi_fmul>
 8006a60:	991a      	ldr	r1, [sp, #104]	; 0x68
 8006a62:	1c05      	adds	r5, r0, #0
 8006a64:	1c20      	adds	r0, r4, #0
 8006a66:	f7fa f945 	bl	8000cf4 <__aeabi_fmul>
 8006a6a:	1c01      	adds	r1, r0, #0
 8006a6c:	1c28      	adds	r0, r5, #0
 8006a6e:	f7f9 fddb 	bl	8000628 <__aeabi_fadd>
 8006a72:	9910      	ldr	r1, [sp, #64]	; 0x40
 8006a74:	1c05      	adds	r5, r0, #0
 8006a76:	9800      	ldr	r0, [sp, #0]
 8006a78:	f7fa f93c 	bl	8000cf4 <__aeabi_fmul>
 8006a7c:	1c01      	adds	r1, r0, #0
 8006a7e:	1c28      	adds	r0, r5, #0
 8006a80:	f7f9 fdd2 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006a84:	4649      	mov	r1, r9
 8006a86:	6608      	str	r0, [r1, #96]	; 0x60
						sum += S[i + k * 6] * H[k * 6 + j];
 8006a88:	9910      	ldr	r1, [sp, #64]	; 0x40
 8006a8a:	1c38      	adds	r0, r7, #0
 8006a8c:	f7fa f932 	bl	8000cf4 <__aeabi_fmul>
 8006a90:	9916      	ldr	r1, [sp, #88]	; 0x58
 8006a92:	1c05      	adds	r5, r0, #0
 8006a94:	1c20      	adds	r0, r4, #0
 8006a96:	f7fa f92d 	bl	8000cf4 <__aeabi_fmul>
 8006a9a:	1c01      	adds	r1, r0, #0
 8006a9c:	1c28      	adds	r0, r5, #0
 8006a9e:	f7f9 fdc3 	bl	8000628 <__aeabi_fadd>
 8006aa2:	991a      	ldr	r1, [sp, #104]	; 0x68
 8006aa4:	1c05      	adds	r5, r0, #0
 8006aa6:	4650      	mov	r0, sl
 8006aa8:	f7fa f924 	bl	8000cf4 <__aeabi_fmul>
 8006aac:	1c01      	adds	r1, r0, #0
 8006aae:	1c28      	adds	r0, r5, #0
 8006ab0:	f7f9 fdba 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006ab4:	464b      	mov	r3, r9
						sum += S[i + k * 6] * H[k * 6 + j];
 8006ab6:	9910      	ldr	r1, [sp, #64]	; 0x40
					M[i + j * 6] = sum;
 8006ab8:	6658      	str	r0, [r3, #100]	; 0x64
						sum += S[i + k * 6] * H[k * 6 + j];
 8006aba:	1c20      	adds	r0, r4, #0
 8006abc:	f7fa f91a 	bl	8000cf4 <__aeabi_fmul>
 8006ac0:	991a      	ldr	r1, [sp, #104]	; 0x68
 8006ac2:	1c05      	adds	r5, r0, #0
 8006ac4:	9802      	ldr	r0, [sp, #8]
 8006ac6:	f7fa f915 	bl	8000cf4 <__aeabi_fmul>
 8006aca:	1c01      	adds	r1, r0, #0
 8006acc:	1c28      	adds	r0, r5, #0
 8006ace:	f7f9 fdab 	bl	8000628 <__aeabi_fadd>
 8006ad2:	9916      	ldr	r1, [sp, #88]	; 0x58
 8006ad4:	1c05      	adds	r5, r0, #0
 8006ad6:	4658      	mov	r0, fp
 8006ad8:	f7fa f90c 	bl	8000cf4 <__aeabi_fmul>
 8006adc:	1c01      	adds	r1, r0, #0
 8006ade:	1c28      	adds	r0, r5, #0
 8006ae0:	f7f9 fda2 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006ae4:	464a      	mov	r2, r9
						sum += S[i + k * 6] * H[k * 6 + j];
 8006ae6:	992a      	ldr	r1, [sp, #168]	; 0xa8
					M[i + j * 6] = sum;
 8006ae8:	6690      	str	r0, [r2, #104]	; 0x68
						sum += S[i + k * 6] * H[k * 6 + j];
 8006aea:	1c20      	adds	r0, r4, #0
 8006aec:	f7fa f902 	bl	8000cf4 <__aeabi_fmul>
 8006af0:	9914      	ldr	r1, [sp, #80]	; 0x50
 8006af2:	1c05      	adds	r5, r0, #0
 8006af4:	1c30      	adds	r0, r6, #0
 8006af6:	f7fa f8fd 	bl	8000cf4 <__aeabi_fmul>
 8006afa:	1c01      	adds	r1, r0, #0
 8006afc:	1c28      	adds	r0, r5, #0
 8006afe:	f7f9 fd93 	bl	8000628 <__aeabi_fadd>
 8006b02:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8006b04:	1c05      	adds	r5, r0, #0
 8006b06:	1c31      	adds	r1, r6, #0
 8006b08:	9800      	ldr	r0, [sp, #0]
 8006b0a:	f7fa f8f3 	bl	8000cf4 <__aeabi_fmul>
 8006b0e:	1c01      	adds	r1, r0, #0
 8006b10:	1c28      	adds	r0, r5, #0
 8006b12:	f7f9 fd89 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006b16:	4649      	mov	r1, r9
 8006b18:	6788      	str	r0, [r1, #120]	; 0x78
						sum += S[i + k * 6] * H[k * 6 + j];
 8006b1a:	9914      	ldr	r1, [sp, #80]	; 0x50
 8006b1c:	1c20      	adds	r0, r4, #0
 8006b1e:	f7fa f8e9 	bl	8000cf4 <__aeabi_fmul>
 8006b22:	1c31      	adds	r1, r6, #0
 8006b24:	1c05      	adds	r5, r0, #0
 8006b26:	1c38      	adds	r0, r7, #0
 8006b28:	960e      	str	r6, [sp, #56]	; 0x38
 8006b2a:	f7fa f8e3 	bl	8000cf4 <__aeabi_fmul>
 8006b2e:	1c01      	adds	r1, r0, #0
 8006b30:	1c28      	adds	r0, r5, #0
 8006b32:	f7f9 fd79 	bl	8000628 <__aeabi_fadd>
 8006b36:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8006b38:	1c07      	adds	r7, r0, #0
 8006b3a:	1c31      	adds	r1, r6, #0
 8006b3c:	4650      	mov	r0, sl
 8006b3e:	f7fa f8d9 	bl	8000cf4 <__aeabi_fmul>
 8006b42:	1c01      	adds	r1, r0, #0
 8006b44:	1c38      	adds	r0, r7, #0
 8006b46:	f7f9 fd6f 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006b4a:	464b      	mov	r3, r9
						sum += S[i + k * 6] * H[k * 6 + j];
 8006b4c:	1c31      	adds	r1, r6, #0
					M[i + j * 6] = sum;
 8006b4e:	67d8      	str	r0, [r3, #124]	; 0x7c
						sum += S[i + k * 6] * H[k * 6 + j];
 8006b50:	9802      	ldr	r0, [sp, #8]
 8006b52:	f7fa f8cf 	bl	8000cf4 <__aeabi_fmul>
 8006b56:	990e      	ldr	r1, [sp, #56]	; 0x38
 8006b58:	1c05      	adds	r5, r0, #0
 8006b5a:	1c20      	adds	r0, r4, #0
 8006b5c:	f7fa f8ca 	bl	8000cf4 <__aeabi_fmul>
 8006b60:	1c01      	adds	r1, r0, #0
 8006b62:	1c28      	adds	r0, r5, #0
 8006b64:	f7f9 fd60 	bl	8000628 <__aeabi_fadd>
 8006b68:	9914      	ldr	r1, [sp, #80]	; 0x50
 8006b6a:	1c04      	adds	r4, r0, #0
 8006b6c:	4658      	mov	r0, fp
 8006b6e:	f7fa f8c1 	bl	8000cf4 <__aeabi_fmul>
 8006b72:	1c01      	adds	r1, r0, #0
 8006b74:	1c20      	adds	r0, r4, #0
 8006b76:	f7f9 fd57 	bl	8000628 <__aeabi_fadd>
					M[i + j * 6] = sum;
 8006b7a:	464a      	mov	r2, r9
 8006b7c:	2180      	movs	r1, #128	; 0x80
 8006b7e:	5050      	str	r0, [r2, r1]
			for (int j = 0; j < 6; j++) {
 8006b80:	f7ff fa0e 	bl	8005fa0 <_ZN7MEKFcRP9updateIMUEPfS0_f+0x2a20>

08006b84 <_Z18SystemClock_Configv>:
void SystemClock_Config(void) {
 8006b84:	b500      	push	{lr}
 8006b86:	b09b      	sub	sp, #108	; 0x6c
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8006b88:	221c      	movs	r2, #28
 8006b8a:	2100      	movs	r1, #0
 8006b8c:	a80e      	add	r0, sp, #56	; 0x38
 8006b8e:	f004 fa4d 	bl	800b02c <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8006b92:	2210      	movs	r2, #16
 8006b94:	2100      	movs	r1, #0
 8006b96:	4668      	mov	r0, sp
 8006b98:	f004 fa48 	bl	800b02c <memset>
	RCC_PeriphCLKInitTypeDef PeriphClkInit = { 0 };
 8006b9c:	221c      	movs	r2, #28
 8006b9e:	2100      	movs	r1, #0
 8006ba0:	a805      	add	r0, sp, #20
 8006ba2:	f004 fa43 	bl	800b02c <memset>
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8006ba6:	2201      	movs	r2, #1
 8006ba8:	2305      	movs	r3, #5
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8006baa:	2080      	movs	r0, #128	; 0x80
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8006bac:	920c      	str	r2, [sp, #48]	; 0x30
 8006bae:	930d      	str	r3, [sp, #52]	; 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8006bb0:	0241      	lsls	r1, r0, #9
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8006bb2:	2302      	movs	r3, #2
	RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV2;
 8006bb4:	2001      	movs	r0, #1
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8006bb6:	22a0      	movs	r2, #160	; 0xa0
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8006bb8:	9315      	str	r3, [sp, #84]	; 0x54
	RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV2;
 8006bba:	9018      	str	r0, [sp, #96]	; 0x60
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8006bbc:	0393      	lsls	r3, r2, #14
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8006bbe:	a80c      	add	r0, sp, #48	; 0x30
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8006bc0:	9116      	str	r1, [sp, #88]	; 0x58
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8006bc2:	9317      	str	r3, [sp, #92]	; 0x5c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8006bc4:	f001 fc14 	bl	80083f0 <HAL_RCC_OscConfig>
 8006bc8:	2800      	cmp	r0, #0
 8006bca:	d001      	beq.n	8006bd0 <_Z18SystemClock_Configv+0x4c>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8006bcc:	b672      	cpsid	i
 */
void Error_Handler(void) {
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8006bce:	e7fe      	b.n	8006bce <_Z18SystemClock_Configv+0x4a>
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 8006bd0:	2207      	movs	r2, #7
 8006bd2:	2302      	movs	r3, #2
 8006bd4:	9200      	str	r2, [sp, #0]
 8006bd6:	9301      	str	r3, [sp, #4]
 8006bd8:	2200      	movs	r2, #0
 8006bda:	2300      	movs	r3, #0
	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 8006bdc:	2101      	movs	r1, #1
 8006bde:	4668      	mov	r0, sp
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 8006be0:	9202      	str	r2, [sp, #8]
 8006be2:	9303      	str	r3, [sp, #12]
	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 8006be4:	f001 fef8 	bl	80089d8 <HAL_RCC_ClockConfig>
 8006be8:	2800      	cmp	r0, #0
 8006bea:	d001      	beq.n	8006bf0 <_Z18SystemClock_Configv+0x6c>
 8006bec:	b672      	cpsid	i
	while (1) {
 8006bee:	e7fe      	b.n	8006bee <_Z18SystemClock_Configv+0x6a>
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2 | RCC_PERIPHCLK_I2C1;
 8006bf0:	2122      	movs	r1, #34	; 0x22
	PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8006bf2:	9008      	str	r0, [sp, #32]
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2 | RCC_PERIPHCLK_I2C1;
 8006bf4:	9105      	str	r1, [sp, #20]
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 8006bf6:	a805      	add	r0, sp, #20
	PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_SYSCLK;
 8006bf8:	3912      	subs	r1, #18
 8006bfa:	910a      	str	r1, [sp, #40]	; 0x28
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 8006bfc:	f001 ff90 	bl	8008b20 <HAL_RCCEx_PeriphCLKConfig>
 8006c00:	2800      	cmp	r0, #0
 8006c02:	d001      	beq.n	8006c08 <_Z18SystemClock_Configv+0x84>
 8006c04:	b672      	cpsid	i
	while (1) {
 8006c06:	e7fe      	b.n	8006c06 <_Z18SystemClock_Configv+0x82>
}
 8006c08:	b01b      	add	sp, #108	; 0x6c
 8006c0a:	bd00      	pop	{pc}

08006c0c <_Z8calc_zyxv>:
void calc_zyx(){
 8006c0c:	b570      	push	{r4, r5, r6, lr}
	float u0 = -2 * (quat_f[1]*quat_f[3]-quat_f[0]*quat_f[2]);
 8006c0e:	4c23      	ldr	r4, [pc, #140]	; (8006c9c <_Z8calc_zyxv+0x90>)
 8006c10:	68e1      	ldr	r1, [r4, #12]
 8006c12:	6860      	ldr	r0, [r4, #4]
 8006c14:	f7fa f86e 	bl	8000cf4 <__aeabi_fmul>
 8006c18:	68a1      	ldr	r1, [r4, #8]
 8006c1a:	1c05      	adds	r5, r0, #0
 8006c1c:	6820      	ldr	r0, [r4, #0]
 8006c1e:	f7fa f869 	bl	8000cf4 <__aeabi_fmul>
 8006c22:	1c01      	adds	r1, r0, #0
 8006c24:	1c28      	adds	r0, r5, #0
 8006c26:	f7fa f97f 	bl	8000f28 <__aeabi_fsub>
	if (u0 > 1.0) {
 8006c2a:	21bf      	movs	r1, #191	; 0xbf
 8006c2c:	0609      	lsls	r1, r1, #24
	float u0 = -2 * (quat_f[1]*quat_f[3]-quat_f[0]*quat_f[2]);
 8006c2e:	1c04      	adds	r4, r0, #0
	if (u0 > 1.0) {
 8006c30:	f7f9 fc4a 	bl	80004c8 <__aeabi_fcmplt>
 8006c34:	2800      	cmp	r0, #0
 8006c36:	d108      	bne.n	8006c4a <_Z8calc_zyxv+0x3e>
		if (u0 < -1.0) {
 8006c38:	20fc      	movs	r0, #252	; 0xfc
 8006c3a:	0581      	lsls	r1, r0, #22
 8006c3c:	1c20      	adds	r0, r4, #0
 8006c3e:	f7f9 fc57 	bl	80004f0 <__aeabi_fcmpgt>
 8006c42:	2800      	cmp	r0, #0
 8006c44:	d019      	beq.n	8006c7a <_Z8calc_zyxv+0x6e>
 8006c46:	4d16      	ldr	r5, [pc, #88]	; (8006ca0 <_Z8calc_zyxv+0x94>)
 8006c48:	e000      	b.n	8006c4c <_Z8calc_zyxv+0x40>
 8006c4a:	4d16      	ldr	r5, [pc, #88]	; (8006ca4 <_Z8calc_zyxv+0x98>)
		zyx[i] *= RAD_TO_DEG;
 8006c4c:	4c16      	ldr	r4, [pc, #88]	; (8006ca8 <_Z8calc_zyxv+0x9c>)
 8006c4e:	6820      	ldr	r0, [r4, #0]
 8006c50:	f7fc fa02 	bl	8003058 <__aeabi_f2d>
 8006c54:	4a15      	ldr	r2, [pc, #84]	; (8006cac <_Z8calc_zyxv+0xa0>)
 8006c56:	4b16      	ldr	r3, [pc, #88]	; (8006cb0 <_Z8calc_zyxv+0xa4>)
 8006c58:	f7fb fb56 	bl	8002308 <__aeabi_dmul>
 8006c5c:	f7fc fa44 	bl	80030e8 <__aeabi_d2f>
 8006c60:	6065      	str	r5, [r4, #4]
 8006c62:	6020      	str	r0, [r4, #0]
 8006c64:	68a0      	ldr	r0, [r4, #8]
 8006c66:	f7fc f9f7 	bl	8003058 <__aeabi_f2d>
 8006c6a:	4a10      	ldr	r2, [pc, #64]	; (8006cac <_Z8calc_zyxv+0xa0>)
 8006c6c:	4b10      	ldr	r3, [pc, #64]	; (8006cb0 <_Z8calc_zyxv+0xa4>)
 8006c6e:	f7fb fb4b 	bl	8002308 <__aeabi_dmul>
 8006c72:	f7fc fa39 	bl	80030e8 <__aeabi_d2f>
 8006c76:	60a0      	str	r0, [r4, #8]
}
 8006c78:	bd70      	pop	{r4, r5, r6, pc}
	float u0 = -2 * (quat_f[1]*quat_f[3]-quat_f[0]*quat_f[2]);
 8006c7a:	22c0      	movs	r2, #192	; 0xc0
 8006c7c:	1c20      	adds	r0, r4, #0
 8006c7e:	0611      	lsls	r1, r2, #24
 8006c80:	f7fa f838 	bl	8000cf4 <__aeabi_fmul>
 8006c84:	f003 f960 	bl	8009f48 <asinf>
 8006c88:	f7fc f9e6 	bl	8003058 <__aeabi_f2d>
 8006c8c:	4a07      	ldr	r2, [pc, #28]	; (8006cac <_Z8calc_zyxv+0xa0>)
 8006c8e:	4b08      	ldr	r3, [pc, #32]	; (8006cb0 <_Z8calc_zyxv+0xa4>)
 8006c90:	f7fb fb3a 	bl	8002308 <__aeabi_dmul>
 8006c94:	f7fc fa28 	bl	80030e8 <__aeabi_d2f>
 8006c98:	1c05      	adds	r5, r0, #0
 8006c9a:	e7d7      	b.n	8006c4c <_Z8calc_zyxv+0x40>
 8006c9c:	20000478 	.word	0x20000478
 8006ca0:	c2b40000 	.word	0xc2b40000
 8006ca4:	42b40000 	.word	0x42b40000
 8006ca8:	200004a4 	.word	0x200004a4
 8006cac:	1a63c1f8 	.word	0x1a63c1f8
 8006cb0:	404ca5dc 	.word	0x404ca5dc

08006cb4 <_Z8calc_zxyv>:
void calc_zxy(){
 8006cb4:	b570      	push	{r4, r5, r6, lr}
	float u0 = 2 * (quat_f[2]*quat_f[3] + quat_f[0]*quat_f[1]);
 8006cb6:	4c23      	ldr	r4, [pc, #140]	; (8006d44 <_Z8calc_zxyv+0x90>)
 8006cb8:	68e1      	ldr	r1, [r4, #12]
 8006cba:	68a0      	ldr	r0, [r4, #8]
 8006cbc:	f7fa f81a 	bl	8000cf4 <__aeabi_fmul>
 8006cc0:	6861      	ldr	r1, [r4, #4]
 8006cc2:	1c05      	adds	r5, r0, #0
 8006cc4:	6820      	ldr	r0, [r4, #0]
 8006cc6:	f7fa f815 	bl	8000cf4 <__aeabi_fmul>
 8006cca:	1c01      	adds	r1, r0, #0
 8006ccc:	1c28      	adds	r0, r5, #0
 8006cce:	f7f9 fcab 	bl	8000628 <__aeabi_fadd>
	if (u0 > 1.0) {
 8006cd2:	21fc      	movs	r1, #252	; 0xfc
 8006cd4:	0589      	lsls	r1, r1, #22
	float u0 = 2 * (quat_f[2]*quat_f[3] + quat_f[0]*quat_f[1]);
 8006cd6:	1c04      	adds	r4, r0, #0
	if (u0 > 1.0) {
 8006cd8:	f7f9 fc0a 	bl	80004f0 <__aeabi_fcmpgt>
 8006cdc:	2800      	cmp	r0, #0
 8006cde:	d108      	bne.n	8006cf2 <_Z8calc_zxyv+0x3e>
		if (u0 < -1.0) {
 8006ce0:	20bf      	movs	r0, #191	; 0xbf
 8006ce2:	0601      	lsls	r1, r0, #24
 8006ce4:	1c20      	adds	r0, r4, #0
 8006ce6:	f7f9 fbef 	bl	80004c8 <__aeabi_fcmplt>
 8006cea:	2800      	cmp	r0, #0
 8006cec:	d019      	beq.n	8006d22 <_Z8calc_zxyv+0x6e>
 8006cee:	4d16      	ldr	r5, [pc, #88]	; (8006d48 <_Z8calc_zxyv+0x94>)
 8006cf0:	e000      	b.n	8006cf4 <_Z8calc_zxyv+0x40>
 8006cf2:	4d16      	ldr	r5, [pc, #88]	; (8006d4c <_Z8calc_zxyv+0x98>)
		zxy[i] *= RAD_TO_DEG;
 8006cf4:	4c16      	ldr	r4, [pc, #88]	; (8006d50 <_Z8calc_zxyv+0x9c>)
 8006cf6:	6820      	ldr	r0, [r4, #0]
 8006cf8:	f7fc f9ae 	bl	8003058 <__aeabi_f2d>
 8006cfc:	4a15      	ldr	r2, [pc, #84]	; (8006d54 <_Z8calc_zxyv+0xa0>)
 8006cfe:	4b16      	ldr	r3, [pc, #88]	; (8006d58 <_Z8calc_zxyv+0xa4>)
 8006d00:	f7fb fb02 	bl	8002308 <__aeabi_dmul>
 8006d04:	f7fc f9f0 	bl	80030e8 <__aeabi_d2f>
 8006d08:	6065      	str	r5, [r4, #4]
 8006d0a:	6020      	str	r0, [r4, #0]
 8006d0c:	68a0      	ldr	r0, [r4, #8]
 8006d0e:	f7fc f9a3 	bl	8003058 <__aeabi_f2d>
 8006d12:	4a10      	ldr	r2, [pc, #64]	; (8006d54 <_Z8calc_zxyv+0xa0>)
 8006d14:	4b10      	ldr	r3, [pc, #64]	; (8006d58 <_Z8calc_zxyv+0xa4>)
 8006d16:	f7fb faf7 	bl	8002308 <__aeabi_dmul>
 8006d1a:	f7fc f9e5 	bl	80030e8 <__aeabi_d2f>
 8006d1e:	60a0      	str	r0, [r4, #8]
}
 8006d20:	bd70      	pop	{r4, r5, r6, pc}
	float u0 = 2 * (quat_f[2]*quat_f[3] + quat_f[0]*quat_f[1]);
 8006d22:	1c21      	adds	r1, r4, #0
 8006d24:	1c20      	adds	r0, r4, #0
 8006d26:	f7f9 fc7f 	bl	8000628 <__aeabi_fadd>
 8006d2a:	f003 f90d 	bl	8009f48 <asinf>
 8006d2e:	f7fc f993 	bl	8003058 <__aeabi_f2d>
 8006d32:	4a08      	ldr	r2, [pc, #32]	; (8006d54 <_Z8calc_zxyv+0xa0>)
 8006d34:	4b08      	ldr	r3, [pc, #32]	; (8006d58 <_Z8calc_zxyv+0xa4>)
 8006d36:	f7fb fae7 	bl	8002308 <__aeabi_dmul>
 8006d3a:	f7fc f9d5 	bl	80030e8 <__aeabi_d2f>
 8006d3e:	1c05      	adds	r5, r0, #0
 8006d40:	e7d8      	b.n	8006cf4 <_Z8calc_zxyv+0x40>
 8006d42:	46c0      	nop			; (mov r8, r8)
 8006d44:	20000478 	.word	0x20000478
 8006d48:	c2b40000 	.word	0xc2b40000
 8006d4c:	42b40000 	.word	0x42b40000
 8006d50:	20000498 	.word	0x20000498
 8006d54:	1a63c1f8 	.word	0x1a63c1f8
 8006d58:	404ca5dc 	.word	0x404ca5dc

08006d5c <main>:
int main(void) {
 8006d5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006d5e:	46de      	mov	lr, fp
 8006d60:	4657      	mov	r7, sl
 8006d62:	464e      	mov	r6, r9
 8006d64:	4645      	mov	r5, r8
 8006d66:	b5e0      	push	{r5, r6, r7, lr}
 8006d68:	b091      	sub	sp, #68	; 0x44
	HAL_Init();
 8006d6a:	f000 fd41 	bl	80077f0 <HAL_Init>
	SystemClock_Config();
 8006d6e:	f7ff ff09 	bl	8006b84 <_Z18SystemClock_Configv>
	MX_GPIO_Init();
 8006d72:	f7fc fa5f 	bl	8003234 <MX_GPIO_Init>
	MX_USART2_UART_Init();
 8006d76:	f000 fc81 	bl	800767c <MX_USART2_UART_Init>
	MX_I2C1_Init();
 8006d7a:	f7fc fab5 	bl	80032e8 <MX_I2C1_Init>
	MX_IWDG_Init();
 8006d7e:	f7fc fb25 	bl	80033cc <MX_IWDG_Init>
	MX_TIM3_Init();
 8006d82:	f000 fbd5 	bl	8007530 <MX_TIM3_Init>
	MX_TIM2_Init();
 8006d86:	f000 fb4f 	bl	8007428 <MX_TIM2_Init>
 8006d8a:	4bdf      	ldr	r3, [pc, #892]	; (8007108 <main+0x3ac>)
 8006d8c:	469a      	mov	sl, r3
	while (MPU6050_Init(&hi2c1));
 8006d8e:	4650      	mov	r0, sl
 8006d90:	f002 fe5a 	bl	8009a48 <_Z12MPU6050_InitP19__I2C_HandleTypeDef>
 8006d94:	2800      	cmp	r0, #0
 8006d96:	d1fa      	bne.n	8006d8e <main+0x32>
	Reset_Filters();
 8006d98:	f7fc fb32 	bl	8003400 <_ZL13Reset_Filtersv>
	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, servo_val[0]);
 8006d9c:	4adb      	ldr	r2, [pc, #876]	; (800710c <main+0x3b0>)
 8006d9e:	48dc      	ldr	r0, [pc, #880]	; (8007110 <main+0x3b4>)
 8006da0:	8814      	ldrh	r4, [r2, #0]
 8006da2:	6801      	ldr	r1, [r0, #0]
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8006da4:	48da      	ldr	r0, [pc, #872]	; (8007110 <main+0x3b4>)
	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, servo_val[0]);
 8006da6:	634c      	str	r4, [r1, #52]	; 0x34
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8006da8:	2100      	movs	r1, #0
 8006daa:	f002 f86b 	bl	8008e84 <HAL_TIM_PWM_Start>
	__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, servo_val[1]);
 8006dae:	4dd9      	ldr	r5, [pc, #868]	; (8007114 <main+0x3b8>)
 8006db0:	4fd6      	ldr	r7, [pc, #856]	; (800710c <main+0x3b0>)
 8006db2:	682e      	ldr	r6, [r5, #0]
 8006db4:	887b      	ldrh	r3, [r7, #2]
	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8006db6:	2100      	movs	r1, #0
	__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, servo_val[1]);
 8006db8:	6373      	str	r3, [r6, #52]	; 0x34
	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8006dba:	48d6      	ldr	r0, [pc, #856]	; (8007114 <main+0x3b8>)
 8006dbc:	f002 f862 	bl	8008e84 <HAL_TIM_PWM_Start>
			pid_kp[i], pid_ki[i], pid_kd[i], pid_tau[i],
 8006dc0:	4dd5      	ldr	r5, [pc, #852]	; (8007118 <main+0x3bc>)
 8006dc2:	4ad6      	ldr	r2, [pc, #856]	; (800711c <main+0x3c0>)
 8006dc4:	682e      	ldr	r6, [r5, #0]
 8006dc6:	6814      	ldr	r4, [r2, #0]
 8006dc8:	4fd5      	ldr	r7, [pc, #852]	; (8007120 <main+0x3c4>)
 8006dca:	9606      	str	r6, [sp, #24]
			pid_lim_int_min[i], pid_lim_int_max[i],
 8006dcc:	4ed5      	ldr	r6, [pc, #852]	; (8007124 <main+0x3c8>)
			pid_kp[i], pid_ki[i], pid_kd[i], pid_tau[i],
 8006dce:	48d6      	ldr	r0, [pc, #856]	; (8007128 <main+0x3cc>)
 8006dd0:	683b      	ldr	r3, [r7, #0]
 8006dd2:	46b8      	mov	r8, r7
 8006dd4:	9408      	str	r4, [sp, #32]
			pid_lim_min[i], pid_lim_max[i],
 8006dd6:	4fd5      	ldr	r7, [pc, #852]	; (800712c <main+0x3d0>)
			pid_lim_int_min[i], pid_lim_int_max[i],
 8006dd8:	6834      	ldr	r4, [r6, #0]
			pid_kp[i], pid_ki[i], pid_kd[i], pid_tau[i],
 8006dda:	6801      	ldr	r1, [r0, #0]
 8006ddc:	4683      	mov	fp, r0
			pid_lim_int_min[i], pid_lim_int_max[i],
 8006dde:	9402      	str	r4, [sp, #8]
			pid_lim_min[i], pid_lim_max[i],
 8006de0:	6838      	ldr	r0, [r7, #0]
		pid[i] = (PIDController) {
 8006de2:	4cd3      	ldr	r4, [pc, #844]	; (8007130 <main+0x3d4>)
			pid_lim_min[i], pid_lim_max[i],
 8006de4:	9004      	str	r0, [sp, #16]
		pid[i] = (PIDController) {
 8006de6:	0020      	movs	r0, r4
			pid_kp[i], pid_ki[i], pid_kd[i], pid_tau[i],
 8006de8:	9109      	str	r1, [sp, #36]	; 0x24
			pid_lim_min[i], pid_lim_max[i],
 8006dea:	49d2      	ldr	r1, [pc, #840]	; (8007134 <main+0x3d8>)
			pid_kp[i], pid_ki[i], pid_kd[i], pid_tau[i],
 8006dec:	46a9      	mov	r9, r5
			pid_lim_int_min[i], pid_lim_int_max[i],
 8006dee:	4dd2      	ldr	r5, [pc, #840]	; (8007138 <main+0x3dc>)
			pid_lim_min[i], pid_lim_max[i],
 8006df0:	680a      	ldr	r2, [r1, #0]
			pid_kp[i], pid_ki[i], pid_kd[i], pid_tau[i],
 8006df2:	9305      	str	r3, [sp, #20]
			pid_lim_int_min[i], pid_lim_int_max[i],
 8006df4:	682b      	ldr	r3, [r5, #0]
		pid[i] = (PIDController) {
 8006df6:	2100      	movs	r1, #0
			pid_lim_min[i], pid_lim_max[i],
 8006df8:	9203      	str	r2, [sp, #12]
		pid[i] = (PIDController) {
 8006dfa:	3024      	adds	r0, #36	; 0x24
 8006dfc:	2218      	movs	r2, #24
			pid_lim_int_min[i], pid_lim_int_max[i],
 8006dfe:	9307      	str	r3, [sp, #28]
		pid[i] = (PIDController) {
 8006e00:	f004 f914 	bl	800b02c <memset>
 8006e04:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006e06:	9908      	ldr	r1, [sp, #32]
 8006e08:	9a06      	ldr	r2, [sp, #24]
 8006e0a:	9b05      	ldr	r3, [sp, #20]
 8006e0c:	6020      	str	r0, [r4, #0]
 8006e0e:	9804      	ldr	r0, [sp, #16]
 8006e10:	6061      	str	r1, [r4, #4]
 8006e12:	60a2      	str	r2, [r4, #8]
 8006e14:	9903      	ldr	r1, [sp, #12]
 8006e16:	9a02      	ldr	r2, [sp, #8]
 8006e18:	60e3      	str	r3, [r4, #12]
 8006e1a:	6120      	str	r0, [r4, #16]
 8006e1c:	9b07      	ldr	r3, [sp, #28]
 8006e1e:	48c7      	ldr	r0, [pc, #796]	; (800713c <main+0x3e0>)
 8006e20:	6161      	str	r1, [r4, #20]
 8006e22:	61a2      	str	r2, [r4, #24]
 8006e24:	61e3      	str	r3, [r4, #28]
 8006e26:	6220      	str	r0, [r4, #32]
		PIDController_Init(&pid[i]);
 8006e28:	0020      	movs	r0, r4
 8006e2a:	f002 ff4d 	bl	8009cc8 <_Z18PIDController_InitP13PIDController>
			pid_kp[i], pid_ki[i], pid_kd[i], pid_tau[i],
 8006e2e:	4659      	mov	r1, fp
 8006e30:	4bba      	ldr	r3, [pc, #744]	; (800711c <main+0x3c0>)
 8006e32:	684a      	ldr	r2, [r1, #4]
 8006e34:	6858      	ldr	r0, [r3, #4]
 8006e36:	4643      	mov	r3, r8
 8006e38:	4649      	mov	r1, r9
 8006e3a:	4683      	mov	fp, r0
 8006e3c:	6858      	ldr	r0, [r3, #4]
 8006e3e:	9202      	str	r2, [sp, #8]
 8006e40:	4680      	mov	r8, r0
		pid[i] = (PIDController) {
 8006e42:	0020      	movs	r0, r4
			pid_kp[i], pid_ki[i], pid_kd[i], pid_tau[i],
 8006e44:	684a      	ldr	r2, [r1, #4]
			pid_lim_min[i], pid_lim_max[i],
 8006e46:	49bb      	ldr	r1, [pc, #748]	; (8007134 <main+0x3d8>)
			pid_kp[i], pid_ki[i], pid_kd[i], pid_tau[i],
 8006e48:	4691      	mov	r9, r2
			pid_lim_min[i], pid_lim_max[i],
 8006e4a:	684a      	ldr	r2, [r1, #4]
		pid[i] = (PIDController) {
 8006e4c:	3060      	adds	r0, #96	; 0x60
 8006e4e:	2100      	movs	r1, #0
			pid_lim_min[i], pid_lim_max[i],
 8006e50:	9203      	str	r2, [sp, #12]
		pid[i] = (PIDController) {
 8006e52:	2218      	movs	r2, #24
			pid_lim_min[i], pid_lim_max[i],
 8006e54:	687f      	ldr	r7, [r7, #4]
			pid_lim_int_min[i], pid_lim_int_max[i],
 8006e56:	6876      	ldr	r6, [r6, #4]
 8006e58:	686d      	ldr	r5, [r5, #4]
		pid[i] = (PIDController) {
 8006e5a:	f004 f8e7 	bl	800b02c <memset>
 8006e5e:	4658      	mov	r0, fp
 8006e60:	4649      	mov	r1, r9
 8006e62:	4642      	mov	r2, r8
 8006e64:	6420      	str	r0, [r4, #64]	; 0x40
		PIDController_Init(&pid[i]);
 8006e66:	0020      	movs	r0, r4
		pid[i] = (PIDController) {
 8006e68:	64e7      	str	r7, [r4, #76]	; 0x4c
 8006e6a:	9f03      	ldr	r7, [sp, #12]
 8006e6c:	9b02      	ldr	r3, [sp, #8]
 8006e6e:	6527      	str	r7, [r4, #80]	; 0x50
	pid_lst = init_tim + 2000;
 8006e70:	27fa      	movs	r7, #250	; 0xfa
		pid[i] = (PIDController) {
 8006e72:	6566      	str	r6, [r4, #84]	; 0x54
 8006e74:	4eb1      	ldr	r6, [pc, #708]	; (800713c <main+0x3e0>)
 8006e76:	63e3      	str	r3, [r4, #60]	; 0x3c
 8006e78:	6461      	str	r1, [r4, #68]	; 0x44
 8006e7a:	64a2      	str	r2, [r4, #72]	; 0x48
 8006e7c:	65a5      	str	r5, [r4, #88]	; 0x58
 8006e7e:	65e6      	str	r6, [r4, #92]	; 0x5c
		PIDController_Init(&pid[i]);
 8006e80:	303c      	adds	r0, #60	; 0x3c
 8006e82:	f002 ff21 	bl	8009cc8 <_Z18PIDController_InitP13PIDController>
	HAL_IWDG_Refresh(&hiwdg);
 8006e86:	48ae      	ldr	r0, [pc, #696]	; (8007140 <main+0x3e4>)
 8006e88:	f001 faaa 	bl	80083e0 <HAL_IWDG_Refresh>
	init_tim = HAL_GetTick();
 8006e8c:	f000 fccc 	bl	8007828 <HAL_GetTick>
	pid_lst = init_tim + 2000;
 8006e90:	00fe      	lsls	r6, r7, #3
 8006e92:	46b4      	mov	ip, r6
	init_tim = HAL_GetTick();
 8006e94:	4dab      	ldr	r5, [pc, #684]	; (8007144 <main+0x3e8>)
	calc_lst = init_tim;
 8006e96:	49ac      	ldr	r1, [pc, #688]	; (8007148 <main+0x3ec>)
 8006e98:	0403      	lsls	r3, r0, #16
	teapot_lst = init_tim;
 8006e9a:	4aac      	ldr	r2, [pc, #688]	; (800714c <main+0x3f0>)
	init_tim = HAL_GetTick();
 8006e9c:	8028      	strh	r0, [r5, #0]
	calc_lst = init_tim;
 8006e9e:	0c18      	lsrs	r0, r3, #16
	pid_lst = init_tim + 2000;
 8006ea0:	4dab      	ldr	r5, [pc, #684]	; (8007150 <main+0x3f4>)
		if(global_reset){
 8006ea2:	4bac      	ldr	r3, [pc, #688]	; (8007154 <main+0x3f8>)
	calc_lst = init_tim;
 8006ea4:	6008      	str	r0, [r1, #0]
	teapot_lst = init_tim;
 8006ea6:	6010      	str	r0, [r2, #0]
	pid_lst = init_tim + 2000;
 8006ea8:	4460      	add	r0, ip
 8006eaa:	6028      	str	r0, [r5, #0]
		if(global_reset){
 8006eac:	7818      	ldrb	r0, [r3, #0]
	calc_lst = init_tim;
 8006eae:	468b      	mov	fp, r1
		if(global_reset){
 8006eb0:	2800      	cmp	r0, #0
 8006eb2:	d000      	beq.n	8006eb6 <main+0x15a>
 8006eb4:	e118      	b.n	80070e8 <main+0x38c>
 8006eb6:	49a8      	ldr	r1, [pc, #672]	; (8007158 <main+0x3fc>)
 8006eb8:	4aa8      	ldr	r2, [pc, #672]	; (800715c <main+0x400>)
 8006eba:	4688      	mov	r8, r1
 8006ebc:	4691      	mov	r9, r2
 8006ebe:	4da8      	ldr	r5, [pc, #672]	; (8007160 <main+0x404>)
 8006ec0:	e018      	b.n	8006ef4 <main+0x198>
		cur_tick = HAL_GetTick();
 8006ec2:	f000 fcb1 	bl	8007828 <HAL_GetTick>
 8006ec6:	4641      	mov	r1, r8
 8006ec8:	6008      	str	r0, [r1, #0]
			auto status = MPU6050_Read_All(&hi2c1, &MPU6050);
 8006eca:	0029      	movs	r1, r5
 8006ecc:	4650      	mov	r0, sl
 8006ece:	f002 fe39 	bl	8009b44 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t>
			if(status == HAL_OK){
 8006ed2:	2800      	cmp	r0, #0
 8006ed4:	d018      	beq.n	8006f08 <main+0x1ac>
		if(!sim_enable) if(PID_EN) if (cur_tick > PID_TIME + pid_lst){
 8006ed6:	4ba3      	ldr	r3, [pc, #652]	; (8007164 <main+0x408>)
 8006ed8:	7819      	ldrb	r1, [r3, #0]
 8006eda:	2900      	cmp	r1, #0
 8006edc:	d105      	bne.n	8006eea <main+0x18e>
 8006ede:	4642      	mov	r2, r8
 8006ee0:	4e9b      	ldr	r6, [pc, #620]	; (8007150 <main+0x3f4>)
 8006ee2:	6817      	ldr	r7, [r2, #0]
 8006ee4:	6830      	ldr	r0, [r6, #0]
 8006ee6:	4287      	cmp	r7, r0
 8006ee8:	d83b      	bhi.n	8006f62 <main+0x206>
		if(global_reset){
 8006eea:	489a      	ldr	r0, [pc, #616]	; (8007154 <main+0x3f8>)
 8006eec:	7803      	ldrb	r3, [r0, #0]
 8006eee:	2b00      	cmp	r3, #0
 8006ef0:	d000      	beq.n	8006ef4 <main+0x198>
 8006ef2:	e0f9      	b.n	80070e8 <main+0x38c>
		if (recalc_filters_flag) {
 8006ef4:	4f9c      	ldr	r7, [pc, #624]	; (8007168 <main+0x40c>)
 8006ef6:	783e      	ldrb	r6, [r7, #0]
 8006ef8:	2e00      	cmp	r6, #0
 8006efa:	d0e2      	beq.n	8006ec2 <main+0x166>
			recalc_filters_flag = 0;
 8006efc:	2300      	movs	r3, #0
 8006efe:	489a      	ldr	r0, [pc, #616]	; (8007168 <main+0x40c>)
 8006f00:	7003      	strb	r3, [r0, #0]
			Reset_Filters();
 8006f02:	f7fc fa7d 	bl	8003400 <_ZL13Reset_Filtersv>
 8006f06:	e7dc      	b.n	8006ec2 <main+0x166>
				calc_dt = cur_tick - calc_lst;
 8006f08:	465e      	mov	r6, fp
 8006f0a:	4642      	mov	r2, r8
 8006f0c:	6833      	ldr	r3, [r6, #0]
 8006f0e:	6817      	ldr	r7, [r2, #0]
 8006f10:	4996      	ldr	r1, [pc, #600]	; (800716c <main+0x410>)
 8006f12:	1af8      	subs	r0, r7, r3
				calc_lst = cur_tick;
 8006f14:	6037      	str	r7, [r6, #0]
				float am[] = {MPU6050.Ax, MPU6050.Ay, MPU6050.Az};
 8006f16:	68af      	ldr	r7, [r5, #8]
 8006f18:	692b      	ldr	r3, [r5, #16]
				float wm[] = {MPU6050.Gx, MPU6050.Gy, MPU6050.Gz};
 8006f1a:	6a2a      	ldr	r2, [r5, #32]
				float am[] = {MPU6050.Ax, MPU6050.Ay, MPU6050.Az};
 8006f1c:	68ee      	ldr	r6, [r5, #12]
				calc_dt = cur_tick - calc_lst;
 8006f1e:	6008      	str	r0, [r1, #0]
				float am[] = {MPU6050.Ax, MPU6050.Ay, MPU6050.Az};
 8006f20:	970a      	str	r7, [sp, #40]	; 0x28
				float wm[] = {MPU6050.Gx, MPU6050.Gy, MPU6050.Gz};
 8006f22:	69e9      	ldr	r1, [r5, #28]
 8006f24:	6a6f      	ldr	r7, [r5, #36]	; 0x24
				float am[] = {MPU6050.Ax, MPU6050.Ay, MPU6050.Az};
 8006f26:	930c      	str	r3, [sp, #48]	; 0x30
				float wm[] = {MPU6050.Gx, MPU6050.Gy, MPU6050.Gz};
 8006f28:	920e      	str	r2, [sp, #56]	; 0x38
				float am[] = {MPU6050.Ax, MPU6050.Ay, MPU6050.Az};
 8006f2a:	960b      	str	r6, [sp, #44]	; 0x2c
				float wm[] = {MPU6050.Gx, MPU6050.Gy, MPU6050.Gz};
 8006f2c:	910d      	str	r1, [sp, #52]	; 0x34
 8006f2e:	970f      	str	r7, [sp, #60]	; 0x3c
				kal.updateIMU(am, wm, calc_dt * 0.001f);
 8006f30:	f7fa fa3e 	bl	80013b0 <__aeabi_ui2f>
 8006f34:	498e      	ldr	r1, [pc, #568]	; (8007170 <main+0x414>)
 8006f36:	f7f9 fedd 	bl	8000cf4 <__aeabi_fmul>
 8006f3a:	a90a      	add	r1, sp, #40	; 0x28
 8006f3c:	1c03      	adds	r3, r0, #0
 8006f3e:	aa0d      	add	r2, sp, #52	; 0x34
 8006f40:	4648      	mov	r0, r9
 8006f42:	f7fc fb1d 	bl	8003580 <_ZN7MEKFcRP9updateIMUEPfS0_f>
				if (++cnt % 50 == 0) {
 8006f46:	4e8b      	ldr	r6, [pc, #556]	; (8007174 <main+0x418>)
 8006f48:	2132      	movs	r1, #50	; 0x32
 8006f4a:	6830      	ldr	r0, [r6, #0]
 8006f4c:	3001      	adds	r0, #1
 8006f4e:	6030      	str	r0, [r6, #0]
 8006f50:	f7f9 f97a 	bl	8000248 <__aeabi_uidivmod>
 8006f54:	2900      	cmp	r1, #0
 8006f56:	d100      	bne.n	8006f5a <main+0x1fe>
 8006f58:	e0cf      	b.n	80070fa <main+0x39e>
				HAL_IWDG_Refresh(&hiwdg);
 8006f5a:	4879      	ldr	r0, [pc, #484]	; (8007140 <main+0x3e4>)
 8006f5c:	f001 fa40 	bl	80083e0 <HAL_IWDG_Refresh>
 8006f60:	e7b9      	b.n	8006ed6 <main+0x17a>
			pid_dt = cur_tick - pid_lst;
 8006f62:	4985      	ldr	r1, [pc, #532]	; (8007178 <main+0x41c>)
 8006f64:	1a3b      	subs	r3, r7, r0
			qOut[i] = q[i];
 8006f66:	464e      	mov	r6, r9
 8006f68:	600b      	str	r3, [r1, #0]
 8006f6a:	464b      	mov	r3, r9
			pid_lst = cur_tick;
 8006f6c:	4a78      	ldr	r2, [pc, #480]	; (8007150 <main+0x3f4>)
 8006f6e:	6871      	ldr	r1, [r6, #4]
 8006f70:	6830      	ldr	r0, [r6, #0]
 8006f72:	68db      	ldr	r3, [r3, #12]
 8006f74:	6017      	str	r7, [r2, #0]
 8006f76:	68b6      	ldr	r6, [r6, #8]
 8006f78:	4f80      	ldr	r7, [pc, #512]	; (800717c <main+0x420>)
 8006f7a:	6079      	str	r1, [r7, #4]
 8006f7c:	6038      	str	r0, [r7, #0]
 8006f7e:	60fb      	str	r3, [r7, #12]
 8006f80:	60be      	str	r6, [r7, #8]
			calc_zyx();
 8006f82:	f7ff fe43 	bl	8006c0c <_Z8calc_zyxv>
			calc_zxy();
 8006f86:	f7ff fe95 	bl	8006cb4 <_Z8calc_zxyv>
			if(pid_dt > 20){
 8006f8a:	4f7b      	ldr	r7, [pc, #492]	; (8007178 <main+0x41c>)
 8006f8c:	6839      	ldr	r1, [r7, #0]
 8006f8e:	9102      	str	r1, [sp, #8]
 8006f90:	2914      	cmp	r1, #20
 8006f92:	d902      	bls.n	8006f9a <main+0x23e>
				pid_dt = 20;
 8006f94:	2614      	movs	r6, #20
 8006f96:	4a78      	ldr	r2, [pc, #480]	; (8007178 <main+0x41c>)
 8006f98:	6016      	str	r6, [r2, #0]
			measurement[0] = -zyx[1];
 8006f9a:	2380      	movs	r3, #128	; 0x80
 8006f9c:	061f      	lsls	r7, r3, #24
 8006f9e:	46bc      	mov	ip, r7
			measurement[1] = -zxy[1];
 8006fa0:	4a77      	ldr	r2, [pc, #476]	; (8007180 <main+0x424>)
			measurement[0] = -zyx[1];
 8006fa2:	4878      	ldr	r0, [pc, #480]	; (8007184 <main+0x428>)
 8006fa4:	4978      	ldr	r1, [pc, #480]	; (8007188 <main+0x42c>)
 8006fa6:	6846      	ldr	r6, [r0, #4]
			measurement[1] = -zxy[1];
 8006fa8:	6850      	ldr	r0, [r2, #4]
 8006faa:	4b77      	ldr	r3, [pc, #476]	; (8007188 <main+0x42c>)
		        PIDController_Update(&pid[i], target[i], measurement[i], pid_dt, i==0);
 8006fac:	4f72      	ldr	r7, [pc, #456]	; (8007178 <main+0x41c>)
			measurement[0] = -zyx[1];
 8006fae:	4466      	add	r6, ip
			measurement[1] = -zxy[1];
 8006fb0:	9002      	str	r0, [sp, #8]
 8006fb2:	4460      	add	r0, ip
			measurement[0] = -zyx[1];
 8006fb4:	600e      	str	r6, [r1, #0]
			measurement[1] = -zxy[1];
 8006fb6:	6058      	str	r0, [r3, #4]
		        PIDController_Update(&pid[i], target[i], measurement[i], pid_dt, i==0);
 8006fb8:	6838      	ldr	r0, [r7, #0]
 8006fba:	f7fa f9f9 	bl	80013b0 <__aeabi_ui2f>
 8006fbe:	1c03      	adds	r3, r0, #0
 8006fc0:	2001      	movs	r0, #1
 8006fc2:	4972      	ldr	r1, [pc, #456]	; (800718c <main+0x430>)
 8006fc4:	680a      	ldr	r2, [r1, #0]
 8006fc6:	9000      	str	r0, [sp, #0]
 8006fc8:	9202      	str	r2, [sp, #8]
 8006fca:	9902      	ldr	r1, [sp, #8]
 8006fcc:	1c32      	adds	r2, r6, #0
 8006fce:	0020      	movs	r0, r4
 8006fd0:	f002 fe82 	bl	8009cd8 <_Z20PIDController_UpdateP13PIDControllerfffb>
 8006fd4:	4e68      	ldr	r6, [pc, #416]	; (8007178 <main+0x41c>)
 8006fd6:	6830      	ldr	r0, [r6, #0]
 8006fd8:	f7fa f9ea 	bl	80013b0 <__aeabi_ui2f>
 8006fdc:	4a6b      	ldr	r2, [pc, #428]	; (800718c <main+0x430>)
 8006fde:	1c03      	adds	r3, r0, #0
 8006fe0:	6850      	ldr	r0, [r2, #4]
 8006fe2:	2600      	movs	r6, #0
 8006fe4:	9003      	str	r0, [sp, #12]
 8006fe6:	0020      	movs	r0, r4
 8006fe8:	4f67      	ldr	r7, [pc, #412]	; (8007188 <main+0x42c>)
 8006fea:	303c      	adds	r0, #60	; 0x3c
 8006fec:	6879      	ldr	r1, [r7, #4]
 8006fee:	9600      	str	r6, [sp, #0]
 8006ff0:	9102      	str	r1, [sp, #8]
 8006ff2:	9a02      	ldr	r2, [sp, #8]
 8006ff4:	9903      	ldr	r1, [sp, #12]
 8006ff6:	f002 fe6f 	bl	8009cd8 <_Z20PIDController_UpdateP13PIDControllerfffb>
			pid_res[0] += pid[0].out * (pid_dt * 0.001);
 8006ffa:	4b5f      	ldr	r3, [pc, #380]	; (8007178 <main+0x41c>)
 8006ffc:	6818      	ldr	r0, [r3, #0]
 8006ffe:	f7fc f805 	bl	800300c <__aeabi_ui2d>
 8007002:	0006      	movs	r6, r0
 8007004:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8007006:	000f      	movs	r7, r1
 8007008:	f7fc f826 	bl	8003058 <__aeabi_f2d>
 800700c:	0002      	movs	r2, r0
 800700e:	000b      	movs	r3, r1
 8007010:	0030      	movs	r0, r6
 8007012:	0039      	movs	r1, r7
 8007014:	f7fb f978 	bl	8002308 <__aeabi_dmul>
 8007018:	4a5d      	ldr	r2, [pc, #372]	; (8007190 <main+0x434>)
 800701a:	4b5e      	ldr	r3, [pc, #376]	; (8007194 <main+0x438>)
 800701c:	f7fb f974 	bl	8002308 <__aeabi_dmul>
 8007020:	000f      	movs	r7, r1
 8007022:	495d      	ldr	r1, [pc, #372]	; (8007198 <main+0x43c>)
 8007024:	0006      	movs	r6, r0
 8007026:	6808      	ldr	r0, [r1, #0]
 8007028:	f7fc f816 	bl	8003058 <__aeabi_f2d>
 800702c:	0002      	movs	r2, r0
 800702e:	000b      	movs	r3, r1
 8007030:	0030      	movs	r0, r6
 8007032:	0039      	movs	r1, r7
 8007034:	f7fa f9f8 	bl	8001428 <__aeabi_dadd>
 8007038:	f7fc f856 	bl	80030e8 <__aeabi_d2f>
 800703c:	4a56      	ldr	r2, [pc, #344]	; (8007198 <main+0x43c>)
 800703e:	1c06      	adds	r6, r0, #0
 8007040:	6010      	str	r0, [r2, #0]
			pid_res[1] = -pid[1].out;
 8007042:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8007044:	2380      	movs	r3, #128	; 0x80
 8007046:	4684      	mov	ip, r0
 8007048:	4953      	ldr	r1, [pc, #332]	; (8007198 <main+0x43c>)
			if(pid_res[0] > 90){
 800704a:	4f54      	ldr	r7, [pc, #336]	; (800719c <main+0x440>)
			pid_res[1] = -pid[1].out;
 800704c:	061b      	lsls	r3, r3, #24
 800704e:	4463      	add	r3, ip
 8007050:	9002      	str	r0, [sp, #8]
 8007052:	604b      	str	r3, [r1, #4]
			if(pid_res[0] > 90){
 8007054:	1c30      	adds	r0, r6, #0
 8007056:	1c39      	adds	r1, r7, #0
 8007058:	f7f9 fa4a 	bl	80004f0 <__aeabi_fcmpgt>
 800705c:	2800      	cmp	r0, #0
 800705e:	d106      	bne.n	800706e <main+0x312>
			else if(pid_res[0] < -90){
 8007060:	4f4f      	ldr	r7, [pc, #316]	; (80071a0 <main+0x444>)
 8007062:	1c30      	adds	r0, r6, #0
 8007064:	1c39      	adds	r1, r7, #0
 8007066:	f7f9 fa2f 	bl	80004c8 <__aeabi_fcmplt>
 800706a:	2800      	cmp	r0, #0
 800706c:	d001      	beq.n	8007072 <main+0x316>
				pid_res[0] = -90;
 800706e:	4e4a      	ldr	r6, [pc, #296]	; (8007198 <main+0x43c>)
 8007070:	6037      	str	r7, [r6, #0]
    return (((val - I_Min) * ((O_Max - O_Min) / (I_Max - I_Min))) + O_Min);
 8007072:	4a49      	ldr	r2, [pc, #292]	; (8007198 <main+0x43c>)
 8007074:	4949      	ldr	r1, [pc, #292]	; (800719c <main+0x440>)
 8007076:	6810      	ldr	r0, [r2, #0]
 8007078:	f7f9 fad6 	bl	8000628 <__aeabi_fadd>
 800707c:	4949      	ldr	r1, [pc, #292]	; (80071a4 <main+0x448>)
 800707e:	f7f9 fe39 	bl	8000cf4 <__aeabi_fmul>
 8007082:	4949      	ldr	r1, [pc, #292]	; (80071a8 <main+0x44c>)
 8007084:	f7f9 fad0 	bl	8000628 <__aeabi_fadd>
			servo_val[0] = (uint16_t) mapArduino(pid_res[0], -90, +90, 500, 2500);
 8007088:	f7f9 fa46 	bl	8000518 <__aeabi_f2uiz>
			__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, servo_val[0]);
 800708c:	4920      	ldr	r1, [pc, #128]	; (8007110 <main+0x3b4>)
			servo_val[0] = (uint16_t) mapArduino(pid_res[0], -90, +90, 500, 2500);
 800708e:	4b1f      	ldr	r3, [pc, #124]	; (800710c <main+0x3b0>)
			__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, servo_val[0]);
 8007090:	680f      	ldr	r7, [r1, #0]
			servo_val[0] = (uint16_t) mapArduino(pid_res[0], -90, +90, 500, 2500);
 8007092:	b280      	uxth	r0, r0
 8007094:	8018      	strh	r0, [r3, #0]
    return (((val - I_Min) * ((O_Max - O_Min) / (I_Max - I_Min))) + O_Min);
 8007096:	9902      	ldr	r1, [sp, #8]
			__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, servo_val[0]);
 8007098:	6378      	str	r0, [r7, #52]	; 0x34
    return (((val - I_Min) * ((O_Max - O_Min) / (I_Max - I_Min))) + O_Min);
 800709a:	4840      	ldr	r0, [pc, #256]	; (800719c <main+0x440>)
 800709c:	f7f9 ff44 	bl	8000f28 <__aeabi_fsub>
 80070a0:	4942      	ldr	r1, [pc, #264]	; (80071ac <main+0x450>)
 80070a2:	f7f9 fe27 	bl	8000cf4 <__aeabi_fmul>
 80070a6:	4942      	ldr	r1, [pc, #264]	; (80071b0 <main+0x454>)
 80070a8:	f7f9 fabe 	bl	8000628 <__aeabi_fadd>
			servo_val[1] = (uint16_t) mapArduino(pid_res[1], -90, +90, 1000, 2000);
 80070ac:	f7f9 fa34 	bl	8000518 <__aeabi_f2uiz>
 80070b0:	b286      	uxth	r6, r0
			__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, servo_val[1]);
 80070b2:	4818      	ldr	r0, [pc, #96]	; (8007114 <main+0x3b8>)
			servo_val[1] = (uint16_t) mapArduino(pid_res[1], -90, +90, 1000, 2000);
 80070b4:	4a15      	ldr	r2, [pc, #84]	; (800710c <main+0x3b0>)
			__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, servo_val[1]);
 80070b6:	6803      	ldr	r3, [r0, #0]
			printf("%f %f\n", measurement[0], measurement[1]);
 80070b8:	4933      	ldr	r1, [pc, #204]	; (8007188 <main+0x42c>)
			__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, servo_val[1]);
 80070ba:	635e      	str	r6, [r3, #52]	; 0x34
			printf("%f %f\n", measurement[0], measurement[1]);
 80070bc:	6808      	ldr	r0, [r1, #0]
			servo_val[1] = (uint16_t) mapArduino(pid_res[1], -90, +90, 1000, 2000);
 80070be:	8056      	strh	r6, [r2, #2]
			printf("%f %f\n", measurement[0], measurement[1]);
 80070c0:	f7fb ffca 	bl	8003058 <__aeabi_f2d>
 80070c4:	4a30      	ldr	r2, [pc, #192]	; (8007188 <main+0x42c>)
 80070c6:	0006      	movs	r6, r0
 80070c8:	6850      	ldr	r0, [r2, #4]
 80070ca:	000f      	movs	r7, r1
 80070cc:	f7fb ffc4 	bl	8003058 <__aeabi_f2d>
 80070d0:	003b      	movs	r3, r7
 80070d2:	9000      	str	r0, [sp, #0]
 80070d4:	9101      	str	r1, [sp, #4]
 80070d6:	0032      	movs	r2, r6
 80070d8:	4836      	ldr	r0, [pc, #216]	; (80071b4 <main+0x458>)
 80070da:	f004 fe31 	bl	800bd40 <iprintf>
		if(global_reset){
 80070de:	481d      	ldr	r0, [pc, #116]	; (8007154 <main+0x3f8>)
 80070e0:	7803      	ldrb	r3, [r0, #0]
 80070e2:	2b00      	cmp	r3, #0
 80070e4:	d100      	bne.n	80070e8 <main+0x38c>
 80070e6:	e705      	b.n	8006ef4 <main+0x198>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80070e8:	f3bf 8f4f 	dsb	sy
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80070ec:	4932      	ldr	r1, [pc, #200]	; (80071b8 <main+0x45c>)
 80070ee:	4e33      	ldr	r6, [pc, #204]	; (80071bc <main+0x460>)
 80070f0:	60ce      	str	r6, [r1, #12]
 80070f2:	f3bf 8f4f 	dsb	sy
                 SCB_AIRCR_SYSRESETREQ_Msk);
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 80070f6:	46c0      	nop			; (mov r8, r8)
  for(;;)                                                           /* wait until reset */
 80070f8:	e7fd      	b.n	80070f6 <main+0x39a>
					HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 80070fa:	2090      	movs	r0, #144	; 0x90
 80070fc:	3120      	adds	r1, #32
 80070fe:	05c0      	lsls	r0, r0, #23
 8007100:	f000 fd3e 	bl	8007b80 <HAL_GPIO_TogglePin>
 8007104:	e729      	b.n	8006f5a <main+0x1fe>
 8007106:	46c0      	nop			; (mov r8, r8)
 8007108:	200004bc 	.word	0x200004bc
 800710c:	20000048 	.word	0x20000048
 8007110:	20000518 	.word	0x20000518
 8007114:	20000560 	.word	0x20000560
 8007118:	20000010 	.word	0x20000010
 800711c:	20000464 	.word	0x20000464
 8007120:	20000040 	.word	0x20000040
 8007124:	20000028 	.word	0x20000028
 8007128:	20000018 	.word	0x20000018
 800712c:	20000038 	.word	0x20000038
 8007130:	200003e8 	.word	0x200003e8
 8007134:	20000030 	.word	0x20000030
 8007138:	20000020 	.word	0x20000020
 800713c:	3c75c28f 	.word	0x3c75c28f
 8007140:	20000508 	.word	0x20000508
 8007144:	2000029a 	.word	0x2000029a
 8007148:	2000028c 	.word	0x2000028c
 800714c:	20000494 	.word	0x20000494
 8007150:	2000046c 	.word	0x2000046c
 8007154:	20000298 	.word	0x20000298
 8007158:	20000294 	.word	0x20000294
 800715c:	2000029c 	.word	0x2000029c
 8007160:	2000024c 	.word	0x2000024c
 8007164:	20000489 	.word	0x20000489
 8007168:	20000488 	.word	0x20000488
 800716c:	20000288 	.word	0x20000288
 8007170:	3a83126f 	.word	0x3a83126f
 8007174:	20000290 	.word	0x20000290
 8007178:	20000460 	.word	0x20000460
 800717c:	20000478 	.word	0x20000478
 8007180:	20000498 	.word	0x20000498
 8007184:	200004a4 	.word	0x200004a4
 8007188:	200003e0 	.word	0x200003e0
 800718c:	2000048c 	.word	0x2000048c
 8007190:	d2f1a9fc 	.word	0xd2f1a9fc
 8007194:	3f50624d 	.word	0x3f50624d
 8007198:	20000470 	.word	0x20000470
 800719c:	42b40000 	.word	0x42b40000
 80071a0:	c2b40000 	.word	0xc2b40000
 80071a4:	4131c71c 	.word	0x4131c71c
 80071a8:	43fa0000 	.word	0x43fa0000
 80071ac:	40b1c71c 	.word	0x40b1c71c
 80071b0:	447a0000 	.word	0x447a0000
 80071b4:	0800fb88 	.word	0x0800fb88
 80071b8:	e000ed00 	.word	0xe000ed00
 80071bc:	05fa0004 	.word	0x05fa0004

080071c0 <Error_Handler>:
  __ASM volatile ("cpsid i" : : : "memory");
 80071c0:	b672      	cpsid	i
	while (1) {
 80071c2:	e7fe      	b.n	80071c2 <Error_Handler+0x2>

080071c4 <_GLOBAL__sub_I_MPU6050>:
	}
	/* USER CODE END Error_Handler_Debug */
}
 80071c4:	b510      	push	{r4, lr}

    float Gx_bias = -0.0395212956;
    float Gy_bias = -0.0430579931;
    float Gz_bias = -0.000511327176;

} MPU6050_t;
 80071c6:	4b06      	ldr	r3, [pc, #24]	; (80071e0 <_GLOBAL__sub_I_MPU6050+0x1c>)
 80071c8:	4a06      	ldr	r2, [pc, #24]	; (80071e4 <_GLOBAL__sub_I_MPU6050+0x20>)
 80071ca:	4807      	ldr	r0, [pc, #28]	; (80071e8 <_GLOBAL__sub_I_MPU6050+0x24>)
 80071cc:	4907      	ldr	r1, [pc, #28]	; (80071ec <_GLOBAL__sub_I_MPU6050+0x28>)
 80071ce:	62da      	str	r2, [r3, #44]	; 0x2c
 80071d0:	4a07      	ldr	r2, [pc, #28]	; (80071f0 <_GLOBAL__sub_I_MPU6050+0x2c>)
 80071d2:	6318      	str	r0, [r3, #48]	; 0x30
 80071d4:	6359      	str	r1, [r3, #52]	; 0x34
MEKFcRP kal;
 80071d6:	4807      	ldr	r0, [pc, #28]	; (80071f4 <_GLOBAL__sub_I_MPU6050+0x30>)
 80071d8:	639a      	str	r2, [r3, #56]	; 0x38
 80071da:	f7fc f97b 	bl	80034d4 <_ZN7MEKFcRPC1Ev>
}
 80071de:	bd10      	pop	{r4, pc}
 80071e0:	2000024c 	.word	0x2000024c
 80071e4:	41efdd10 	.word	0x41efdd10
 80071e8:	bd21e115 	.word	0xbd21e115
 80071ec:	bd305d94 	.word	0xbd305d94
 80071f0:	ba060a96 	.word	0xba060a96
 80071f4:	2000029c 	.word	0x2000029c

080071f8 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80071f8:	2201      	movs	r2, #1
 80071fa:	4b0a      	ldr	r3, [pc, #40]	; (8007224 <HAL_MspInit+0x2c>)
{
 80071fc:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80071fe:	6999      	ldr	r1, [r3, #24]
 8007200:	4311      	orrs	r1, r2
 8007202:	6199      	str	r1, [r3, #24]
  __HAL_RCC_PWR_CLK_ENABLE();
 8007204:	2180      	movs	r1, #128	; 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007206:	6998      	ldr	r0, [r3, #24]
 8007208:	4002      	ands	r2, r0
 800720a:	9200      	str	r2, [sp, #0]
 800720c:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800720e:	69da      	ldr	r2, [r3, #28]
 8007210:	0548      	lsls	r0, r1, #21
 8007212:	4302      	orrs	r2, r0
 8007214:	61da      	str	r2, [r3, #28]
 8007216:	69db      	ldr	r3, [r3, #28]
 8007218:	4003      	ands	r3, r0
 800721a:	9301      	str	r3, [sp, #4]
 800721c:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800721e:	b002      	add	sp, #8
 8007220:	4770      	bx	lr
 8007222:	46c0      	nop			; (mov r8, r8)
 8007224:	40021000 	.word	0x40021000

08007228 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8007228:	e7fe      	b.n	8007228 <NMI_Handler>
 800722a:	46c0      	nop			; (mov r8, r8)

0800722c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800722c:	e7fe      	b.n	800722c <HardFault_Handler>
 800722e:	46c0      	nop			; (mov r8, r8)

08007230 <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8007230:	4770      	bx	lr
 8007232:	46c0      	nop			; (mov r8, r8)

08007234 <PendSV_Handler>:
 8007234:	4770      	bx	lr
 8007236:	46c0      	nop			; (mov r8, r8)

08007238 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8007238:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800723a:	f000 fae9 	bl	8007810 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800723e:	bd10      	pop	{r4, pc}

08007240 <EXTI4_15_IRQHandler>:
void EXTI4_15_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI4_15_IRQn 0 */

  /* USER CODE END EXTI4_15_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 8007240:	2080      	movs	r0, #128	; 0x80
{
 8007242:	b510      	push	{r4, lr}
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 8007244:	0180      	lsls	r0, r0, #6
 8007246:	f000 fca5 	bl	8007b94 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_15_IRQn 1 */

  /* USER CODE END EXTI4_15_IRQn 1 */
}
 800724a:	bd10      	pop	{r4, pc}

0800724c <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI line 26.
  */
void USART2_IRQHandler(void)
{
 800724c:	b510      	push	{r4, lr}
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 800724e:	4802      	ldr	r0, [pc, #8]	; (8007258 <USART2_IRQHandler+0xc>)
 8007250:	f001 ff92 	bl	8009178 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8007254:	bd10      	pop	{r4, pc}
 8007256:	46c0      	nop			; (mov r8, r8)
 8007258:	200005a8 	.word	0x200005a8

0800725c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800725c:	2001      	movs	r0, #1
 800725e:	4770      	bx	lr

08007260 <_kill>:

int _kill(int pid, int sig)
{
 8007260:	b510      	push	{r4, lr}
	errno = EINVAL;
 8007262:	f003 feb9 	bl	800afd8 <__errno>
 8007266:	2316      	movs	r3, #22
 8007268:	6003      	str	r3, [r0, #0]
	return -1;
 800726a:	2001      	movs	r0, #1
}
 800726c:	4240      	negs	r0, r0
 800726e:	bd10      	pop	{r4, pc}

08007270 <_exit>:

void _exit (int status)
{
 8007270:	b510      	push	{r4, lr}
	errno = EINVAL;
 8007272:	f003 feb1 	bl	800afd8 <__errno>
 8007276:	2316      	movs	r3, #22
 8007278:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800727a:	e7fe      	b.n	800727a <_exit+0xa>

0800727c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800727c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800727e:	1e15      	subs	r5, r2, #0
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8007280:	dd47      	ble.n	8007312 <_read+0x96>
 8007282:	188e      	adds	r6, r1, r2
 8007284:	2207      	movs	r2, #7
 8007286:	0013      	movs	r3, r2
 8007288:	000c      	movs	r4, r1
 800728a:	402b      	ands	r3, r5
 800728c:	422a      	tst	r2, r5
 800728e:	d025      	beq.n	80072dc <_read+0x60>
 8007290:	2b01      	cmp	r3, #1
 8007292:	d01d      	beq.n	80072d0 <_read+0x54>
 8007294:	2b02      	cmp	r3, #2
 8007296:	d017      	beq.n	80072c8 <_read+0x4c>
 8007298:	2b03      	cmp	r3, #3
 800729a:	d011      	beq.n	80072c0 <_read+0x44>
 800729c:	2b04      	cmp	r3, #4
 800729e:	d00b      	beq.n	80072b8 <_read+0x3c>
 80072a0:	2b05      	cmp	r3, #5
 80072a2:	d005      	beq.n	80072b0 <_read+0x34>
 80072a4:	2b06      	cmp	r3, #6
 80072a6:	d136      	bne.n	8007316 <_read+0x9a>
	{
		*ptr++ = __io_getchar();
 80072a8:	e000      	b.n	80072ac <_read+0x30>
 80072aa:	bf00      	nop
 80072ac:	7020      	strb	r0, [r4, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80072ae:	3401      	adds	r4, #1
		*ptr++ = __io_getchar();
 80072b0:	e000      	b.n	80072b4 <_read+0x38>
 80072b2:	bf00      	nop
 80072b4:	7020      	strb	r0, [r4, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80072b6:	3401      	adds	r4, #1
		*ptr++ = __io_getchar();
 80072b8:	e000      	b.n	80072bc <_read+0x40>
 80072ba:	bf00      	nop
 80072bc:	7020      	strb	r0, [r4, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80072be:	3401      	adds	r4, #1
		*ptr++ = __io_getchar();
 80072c0:	e000      	b.n	80072c4 <_read+0x48>
 80072c2:	bf00      	nop
 80072c4:	7020      	strb	r0, [r4, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80072c6:	3401      	adds	r4, #1
		*ptr++ = __io_getchar();
 80072c8:	e000      	b.n	80072cc <_read+0x50>
 80072ca:	bf00      	nop
 80072cc:	7020      	strb	r0, [r4, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80072ce:	3401      	adds	r4, #1
		*ptr++ = __io_getchar();
 80072d0:	e000      	b.n	80072d4 <_read+0x58>
 80072d2:	bf00      	nop
 80072d4:	7020      	strb	r0, [r4, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80072d6:	3401      	adds	r4, #1
 80072d8:	42b4      	cmp	r4, r6
 80072da:	d01a      	beq.n	8007312 <_read+0x96>
		*ptr++ = __io_getchar();
 80072dc:	e000      	b.n	80072e0 <_read+0x64>
 80072de:	bf00      	nop
 80072e0:	7020      	strb	r0, [r4, #0]
 80072e2:	e000      	b.n	80072e6 <_read+0x6a>
 80072e4:	bf00      	nop
 80072e6:	7060      	strb	r0, [r4, #1]
 80072e8:	e000      	b.n	80072ec <_read+0x70>
 80072ea:	bf00      	nop
 80072ec:	70a0      	strb	r0, [r4, #2]
 80072ee:	e000      	b.n	80072f2 <_read+0x76>
 80072f0:	bf00      	nop
 80072f2:	70e0      	strb	r0, [r4, #3]
 80072f4:	e000      	b.n	80072f8 <_read+0x7c>
 80072f6:	bf00      	nop
 80072f8:	7120      	strb	r0, [r4, #4]
 80072fa:	e000      	b.n	80072fe <_read+0x82>
 80072fc:	bf00      	nop
 80072fe:	7160      	strb	r0, [r4, #5]
 8007300:	e000      	b.n	8007304 <_read+0x88>
 8007302:	bf00      	nop
 8007304:	71a0      	strb	r0, [r4, #6]
 8007306:	e000      	b.n	800730a <_read+0x8e>
 8007308:	bf00      	nop
 800730a:	71e0      	strb	r0, [r4, #7]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800730c:	3408      	adds	r4, #8
 800730e:	42b4      	cmp	r4, r6
 8007310:	d1e4      	bne.n	80072dc <_read+0x60>
	}

return len;
}
 8007312:	0028      	movs	r0, r5
 8007314:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		*ptr++ = __io_getchar();
 8007316:	e000      	b.n	800731a <_read+0x9e>
 8007318:	bf00      	nop
 800731a:	7020      	strb	r0, [r4, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800731c:	3401      	adds	r4, #1
 800731e:	e7c3      	b.n	80072a8 <_read+0x2c>

08007320 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8007320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007322:	1e15      	subs	r5, r2, #0
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8007324:	dd47      	ble.n	80073b6 <_write+0x96>
 8007326:	188e      	adds	r6, r1, r2
 8007328:	2207      	movs	r2, #7
 800732a:	0013      	movs	r3, r2
 800732c:	000c      	movs	r4, r1
 800732e:	402b      	ands	r3, r5
 8007330:	422a      	tst	r2, r5
 8007332:	d025      	beq.n	8007380 <_write+0x60>
 8007334:	2b01      	cmp	r3, #1
 8007336:	d01d      	beq.n	8007374 <_write+0x54>
 8007338:	2b02      	cmp	r3, #2
 800733a:	d017      	beq.n	800736c <_write+0x4c>
 800733c:	2b03      	cmp	r3, #3
 800733e:	d011      	beq.n	8007364 <_write+0x44>
 8007340:	2b04      	cmp	r3, #4
 8007342:	d00b      	beq.n	800735c <_write+0x3c>
 8007344:	2b05      	cmp	r3, #5
 8007346:	d005      	beq.n	8007354 <_write+0x34>
 8007348:	2b06      	cmp	r3, #6
 800734a:	d136      	bne.n	80073ba <_write+0x9a>
	{
		__io_putchar(*ptr++);
 800734c:	7820      	ldrb	r0, [r4, #0]
 800734e:	f000 f9ef 	bl	8007730 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8007352:	3401      	adds	r4, #1
		__io_putchar(*ptr++);
 8007354:	7820      	ldrb	r0, [r4, #0]
 8007356:	f000 f9eb 	bl	8007730 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800735a:	3401      	adds	r4, #1
		__io_putchar(*ptr++);
 800735c:	7820      	ldrb	r0, [r4, #0]
 800735e:	f000 f9e7 	bl	8007730 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8007362:	3401      	adds	r4, #1
		__io_putchar(*ptr++);
 8007364:	7820      	ldrb	r0, [r4, #0]
 8007366:	f000 f9e3 	bl	8007730 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800736a:	3401      	adds	r4, #1
		__io_putchar(*ptr++);
 800736c:	7820      	ldrb	r0, [r4, #0]
 800736e:	f000 f9df 	bl	8007730 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8007372:	3401      	adds	r4, #1
		__io_putchar(*ptr++);
 8007374:	7820      	ldrb	r0, [r4, #0]
 8007376:	3401      	adds	r4, #1
 8007378:	f000 f9da 	bl	8007730 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800737c:	42b4      	cmp	r4, r6
 800737e:	d01a      	beq.n	80073b6 <_write+0x96>
		__io_putchar(*ptr++);
 8007380:	7820      	ldrb	r0, [r4, #0]
 8007382:	f000 f9d5 	bl	8007730 <__io_putchar>
 8007386:	7860      	ldrb	r0, [r4, #1]
 8007388:	f000 f9d2 	bl	8007730 <__io_putchar>
 800738c:	78a0      	ldrb	r0, [r4, #2]
 800738e:	f000 f9cf 	bl	8007730 <__io_putchar>
 8007392:	78e0      	ldrb	r0, [r4, #3]
 8007394:	f000 f9cc 	bl	8007730 <__io_putchar>
 8007398:	7920      	ldrb	r0, [r4, #4]
 800739a:	f000 f9c9 	bl	8007730 <__io_putchar>
 800739e:	7960      	ldrb	r0, [r4, #5]
 80073a0:	f000 f9c6 	bl	8007730 <__io_putchar>
 80073a4:	79a0      	ldrb	r0, [r4, #6]
 80073a6:	f000 f9c3 	bl	8007730 <__io_putchar>
 80073aa:	79e0      	ldrb	r0, [r4, #7]
 80073ac:	3408      	adds	r4, #8
 80073ae:	f000 f9bf 	bl	8007730 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80073b2:	42b4      	cmp	r4, r6
 80073b4:	d1e4      	bne.n	8007380 <_write+0x60>
	}
	return len;
}
 80073b6:	0028      	movs	r0, r5
 80073b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		__io_putchar(*ptr++);
 80073ba:	7808      	ldrb	r0, [r1, #0]
 80073bc:	f000 f9b8 	bl	8007730 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80073c0:	3401      	adds	r4, #1
 80073c2:	e7c3      	b.n	800734c <_write+0x2c>

080073c4 <_close>:

int _close(int file)
{
	return -1;
 80073c4:	2001      	movs	r0, #1
}
 80073c6:	4240      	negs	r0, r0
 80073c8:	4770      	bx	lr
 80073ca:	46c0      	nop			; (mov r8, r8)

080073cc <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80073cc:	2380      	movs	r3, #128	; 0x80
 80073ce:	0198      	lsls	r0, r3, #6
 80073d0:	6048      	str	r0, [r1, #4]
	return 0;
}
 80073d2:	2000      	movs	r0, #0
 80073d4:	4770      	bx	lr
 80073d6:	46c0      	nop			; (mov r8, r8)

080073d8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80073d8:	2001      	movs	r0, #1
 80073da:	4770      	bx	lr

080073dc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80073dc:	2000      	movs	r0, #0
 80073de:	4770      	bx	lr

080073e0 <_sbrk>:
void *_sbrk(ptrdiff_t incr)
{
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80073e0:	490c      	ldr	r1, [pc, #48]	; (8007414 <_sbrk+0x34>)
 80073e2:	4a0d      	ldr	r2, [pc, #52]	; (8007418 <_sbrk+0x38>)
{
 80073e4:	0003      	movs	r3, r0
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80073e6:	1a52      	subs	r2, r2, r1
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80073e8:	490c      	ldr	r1, [pc, #48]	; (800741c <_sbrk+0x3c>)
{
 80073ea:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80073ec:	6808      	ldr	r0, [r1, #0]
 80073ee:	2800      	cmp	r0, #0
 80073f0:	d004      	beq.n	80073fc <_sbrk+0x1c>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80073f2:	18c3      	adds	r3, r0, r3
 80073f4:	4293      	cmp	r3, r2
 80073f6:	d806      	bhi.n	8007406 <_sbrk+0x26>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 80073f8:	600b      	str	r3, [r1, #0]

  return (void *)prev_heap_end;
}
 80073fa:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 80073fc:	4808      	ldr	r0, [pc, #32]	; (8007420 <_sbrk+0x40>)
  if (__sbrk_heap_end + incr > max_heap)
 80073fe:	18c3      	adds	r3, r0, r3
    __sbrk_heap_end = &_end;
 8007400:	6008      	str	r0, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 8007402:	4293      	cmp	r3, r2
 8007404:	d9f8      	bls.n	80073f8 <_sbrk+0x18>
    errno = ENOMEM;
 8007406:	f003 fde7 	bl	800afd8 <__errno>
 800740a:	220c      	movs	r2, #12
 800740c:	6002      	str	r2, [r0, #0]
    return (void *)-1;
 800740e:	2001      	movs	r0, #1
 8007410:	4240      	negs	r0, r0
 8007412:	e7f2      	b.n	80073fa <_sbrk+0x1a>
 8007414:	00000400 	.word	0x00000400
 8007418:	20008000 	.word	0x20008000
 800741c:	200004b0 	.word	0x200004b0
 8007420:	20000640 	.word	0x20000640

08007424 <SystemInit>:
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8007424:	4770      	bx	lr
 8007426:	46c0      	nop			; (mov r8, r8)

08007428 <MX_TIM2_Init>:
TIM_HandleTypeDef htim2;
TIM_HandleTypeDef htim3;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8007428:	b510      	push	{r4, lr}
 800742a:	b092      	sub	sp, #72	; 0x48

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800742c:	2208      	movs	r2, #8
 800742e:	2100      	movs	r1, #0
 8007430:	a802      	add	r0, sp, #8
 8007432:	f003 fdfb 	bl	800b02c <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8007436:	221c      	movs	r2, #28
 8007438:	2100      	movs	r1, #0
 800743a:	a80a      	add	r0, sp, #40	; 0x28
 800743c:	f003 fdf6 	bl	800b02c <memset>

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8007440:	2380      	movs	r3, #128	; 0x80
  htim2.Init.Prescaler = 48-1;
 8007442:	212f      	movs	r1, #47	; 0x2f
  htim2.Instance = TIM2;
 8007444:	05d8      	lsls	r0, r3, #23
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8007446:	2300      	movs	r3, #0
  htim2.Instance = TIM2;
 8007448:	4c35      	ldr	r4, [pc, #212]	; (8007520 <MX_TIM2_Init+0xf8>)
  htim2.Init.Period = 20000;
 800744a:	4a36      	ldr	r2, [pc, #216]	; (8007524 <MX_TIM2_Init+0xfc>)
  htim2.Instance = TIM2;
 800744c:	6020      	str	r0, [r4, #0]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800744e:	0020      	movs	r0, r4
  htim2.Init.Prescaler = 48-1;
 8007450:	6061      	str	r1, [r4, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8007452:	60a3      	str	r3, [r4, #8]
  htim2.Init.Period = 20000;
 8007454:	60e2      	str	r2, [r4, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8007456:	6123      	str	r3, [r4, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8007458:	61a3      	str	r3, [r4, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800745a:	f001 fc95 	bl	8008d88 <HAL_TIM_PWM_Init>
 800745e:	2800      	cmp	r0, #0
 8007460:	d126      	bne.n	80074b0 <MX_TIM2_Init+0x88>
  {
    Error_Handler();
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8007462:	2200      	movs	r2, #0
 8007464:	2300      	movs	r3, #0
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8007466:	0020      	movs	r0, r4
 8007468:	a902      	add	r1, sp, #8
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800746a:	9202      	str	r2, [sp, #8]
 800746c:	9303      	str	r3, [sp, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800746e:	f001 fe41 	bl	80090f4 <HAL_TIMEx_MasterConfigSynchronization>
 8007472:	2800      	cmp	r0, #0
 8007474:	d122      	bne.n	80074bc <MX_TIM2_Init+0x94>
  {
    Error_Handler();
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
  sConfigOC.Pulse = 0;
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8007476:	2000      	movs	r0, #0
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8007478:	2260      	movs	r2, #96	; 0x60
 800747a:	2300      	movs	r3, #0
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800747c:	900c      	str	r0, [sp, #48]	; 0x30
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800747e:	920a      	str	r2, [sp, #40]	; 0x28
 8007480:	930b      	str	r3, [sp, #44]	; 0x2c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8007482:	900e      	str	r0, [sp, #56]	; 0x38
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8007484:	2200      	movs	r2, #0
 8007486:	0020      	movs	r0, r4
 8007488:	a90a      	add	r1, sp, #40	; 0x28
 800748a:	f001 fd9b 	bl	8008fc4 <HAL_TIM_PWM_ConfigChannel>
 800748e:	2800      	cmp	r0, #0
 8007490:	d111      	bne.n	80074b6 <MX_TIM2_Init+0x8e>
  }
}
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8007492:	2100      	movs	r1, #0
 8007494:	2214      	movs	r2, #20
 8007496:	a804      	add	r0, sp, #16
 8007498:	f003 fdc8 	bl	800b02c <memset>
  if(timHandle->Instance==TIM2)
 800749c:	2180      	movs	r1, #128	; 0x80
 800749e:	6824      	ldr	r4, [r4, #0]
 80074a0:	05cb      	lsls	r3, r1, #23
 80074a2:	429c      	cmp	r4, r3
 80074a4:	d00d      	beq.n	80074c2 <MX_TIM2_Init+0x9a>

  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }
  else if(timHandle->Instance==TIM3)
 80074a6:	4a20      	ldr	r2, [pc, #128]	; (8007528 <MX_TIM2_Init+0x100>)
 80074a8:	4294      	cmp	r4, r2
 80074aa:	d024      	beq.n	80074f6 <MX_TIM2_Init+0xce>
}
 80074ac:	b012      	add	sp, #72	; 0x48
 80074ae:	bd10      	pop	{r4, pc}
    Error_Handler();
 80074b0:	f7ff fe86 	bl	80071c0 <Error_Handler>
 80074b4:	e7d5      	b.n	8007462 <MX_TIM2_Init+0x3a>
    Error_Handler();
 80074b6:	f7ff fe83 	bl	80071c0 <Error_Handler>
 80074ba:	e7ea      	b.n	8007492 <MX_TIM2_Init+0x6a>
    Error_Handler();
 80074bc:	f7ff fe80 	bl	80071c0 <Error_Handler>
 80074c0:	e7d9      	b.n	8007476 <MX_TIM2_Init+0x4e>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80074c2:	2080      	movs	r0, #128	; 0x80
 80074c4:	4a19      	ldr	r2, [pc, #100]	; (800752c <MX_TIM2_Init+0x104>)
 80074c6:	0284      	lsls	r4, r0, #10
 80074c8:	6951      	ldr	r1, [r2, #20]
 80074ca:	4321      	orrs	r1, r4
 80074cc:	6151      	str	r1, [r2, #20]
 80074ce:	6953      	ldr	r3, [r2, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80074d0:	2201      	movs	r2, #1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80074d2:	4023      	ands	r3, r4
 80074d4:	9300      	str	r3, [sp, #0]
 80074d6:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80074d8:	2302      	movs	r3, #2
 80074da:	9204      	str	r2, [sp, #16]
 80074dc:	9305      	str	r3, [sp, #20]
 80074de:	2200      	movs	r2, #0
 80074e0:	2300      	movs	r3, #0
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 80074e2:	2402      	movs	r4, #2
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80074e4:	9206      	str	r2, [sp, #24]
 80074e6:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80074e8:	2290      	movs	r2, #144	; 0x90
 80074ea:	a904      	add	r1, sp, #16
 80074ec:	05d0      	lsls	r0, r2, #23
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 80074ee:	9408      	str	r4, [sp, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80074f0:	f000 fa4e 	bl	8007990 <HAL_GPIO_Init>
}
 80074f4:	e7da      	b.n	80074ac <MX_TIM2_Init+0x84>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80074f6:	2080      	movs	r0, #128	; 0x80
 80074f8:	4c0c      	ldr	r4, [pc, #48]	; (800752c <MX_TIM2_Init+0x104>)
 80074fa:	0282      	lsls	r2, r0, #10
 80074fc:	6961      	ldr	r1, [r4, #20]
 80074fe:	4311      	orrs	r1, r2
 8007500:	6161      	str	r1, [r4, #20]
 8007502:	6963      	ldr	r3, [r4, #20]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 8007504:	2401      	movs	r4, #1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8007506:	4013      	ands	r3, r2
 8007508:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 800750a:	2240      	movs	r2, #64	; 0x40
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800750c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 800750e:	2302      	movs	r3, #2
 8007510:	9204      	str	r2, [sp, #16]
 8007512:	9305      	str	r3, [sp, #20]
 8007514:	2200      	movs	r2, #0
 8007516:	2300      	movs	r3, #0
 8007518:	9206      	str	r2, [sp, #24]
 800751a:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 800751c:	e7e4      	b.n	80074e8 <MX_TIM2_Init+0xc0>
 800751e:	46c0      	nop			; (mov r8, r8)
 8007520:	20000560 	.word	0x20000560
 8007524:	00004e20 	.word	0x00004e20
 8007528:	40000400 	.word	0x40000400
 800752c:	40021000 	.word	0x40021000

08007530 <MX_TIM3_Init>:
{
 8007530:	b510      	push	{r4, lr}
 8007532:	b092      	sub	sp, #72	; 0x48
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8007534:	2208      	movs	r2, #8
 8007536:	2100      	movs	r1, #0
 8007538:	a802      	add	r0, sp, #8
 800753a:	f003 fd77 	bl	800b02c <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 800753e:	221c      	movs	r2, #28
 8007540:	2100      	movs	r1, #0
 8007542:	a80a      	add	r0, sp, #40	; 0x28
 8007544:	f003 fd72 	bl	800b02c <memset>
  htim3.Init.Prescaler = 48-1;
 8007548:	202f      	movs	r0, #47	; 0x2f
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800754a:	2100      	movs	r1, #0
  htim3.Instance = TIM3;
 800754c:	4c35      	ldr	r4, [pc, #212]	; (8007624 <MX_TIM3_Init+0xf4>)
 800754e:	4b36      	ldr	r3, [pc, #216]	; (8007628 <MX_TIM3_Init+0xf8>)
  htim3.Init.Period = 20000;
 8007550:	4a36      	ldr	r2, [pc, #216]	; (800762c <MX_TIM3_Init+0xfc>)
  htim3.Init.Prescaler = 48-1;
 8007552:	6060      	str	r0, [r4, #4]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8007554:	0020      	movs	r0, r4
  htim3.Instance = TIM3;
 8007556:	6023      	str	r3, [r4, #0]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8007558:	60a1      	str	r1, [r4, #8]
  htim3.Init.Period = 20000;
 800755a:	60e2      	str	r2, [r4, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800755c:	6121      	str	r1, [r4, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800755e:	61a1      	str	r1, [r4, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8007560:	f001 fc12 	bl	8008d88 <HAL_TIM_PWM_Init>
 8007564:	2800      	cmp	r0, #0
 8007566:	d126      	bne.n	80075b6 <MX_TIM3_Init+0x86>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8007568:	2200      	movs	r2, #0
 800756a:	2300      	movs	r3, #0
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800756c:	0020      	movs	r0, r4
 800756e:	a902      	add	r1, sp, #8
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8007570:	9202      	str	r2, [sp, #8]
 8007572:	9303      	str	r3, [sp, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8007574:	f001 fdbe 	bl	80090f4 <HAL_TIMEx_MasterConfigSynchronization>
 8007578:	2800      	cmp	r0, #0
 800757a:	d122      	bne.n	80075c2 <MX_TIM3_Init+0x92>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800757c:	2260      	movs	r2, #96	; 0x60
 800757e:	2300      	movs	r3, #0
 8007580:	920a      	str	r2, [sp, #40]	; 0x28
 8007582:	930b      	str	r3, [sp, #44]	; 0x2c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8007584:	2300      	movs	r3, #0
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8007586:	2200      	movs	r2, #0
 8007588:	0020      	movs	r0, r4
 800758a:	a90a      	add	r1, sp, #40	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800758c:	930c      	str	r3, [sp, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800758e:	930e      	str	r3, [sp, #56]	; 0x38
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8007590:	f001 fd18 	bl	8008fc4 <HAL_TIM_PWM_ConfigChannel>
 8007594:	2800      	cmp	r0, #0
 8007596:	d111      	bne.n	80075bc <MX_TIM3_Init+0x8c>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8007598:	2100      	movs	r1, #0
 800759a:	2214      	movs	r2, #20
 800759c:	a804      	add	r0, sp, #16
 800759e:	f003 fd45 	bl	800b02c <memset>
  if(timHandle->Instance==TIM2)
 80075a2:	2080      	movs	r0, #128	; 0x80
 80075a4:	6824      	ldr	r4, [r4, #0]
 80075a6:	05c1      	lsls	r1, r0, #23
 80075a8:	428c      	cmp	r4, r1
 80075aa:	d00d      	beq.n	80075c8 <MX_TIM3_Init+0x98>
  else if(timHandle->Instance==TIM3)
 80075ac:	4a1e      	ldr	r2, [pc, #120]	; (8007628 <MX_TIM3_Init+0xf8>)
 80075ae:	4294      	cmp	r4, r2
 80075b0:	d024      	beq.n	80075fc <MX_TIM3_Init+0xcc>
}
 80075b2:	b012      	add	sp, #72	; 0x48
 80075b4:	bd10      	pop	{r4, pc}
    Error_Handler();
 80075b6:	f7ff fe03 	bl	80071c0 <Error_Handler>
 80075ba:	e7d5      	b.n	8007568 <MX_TIM3_Init+0x38>
    Error_Handler();
 80075bc:	f7ff fe00 	bl	80071c0 <Error_Handler>
 80075c0:	e7ea      	b.n	8007598 <MX_TIM3_Init+0x68>
    Error_Handler();
 80075c2:	f7ff fdfd 	bl	80071c0 <Error_Handler>
 80075c6:	e7d9      	b.n	800757c <MX_TIM3_Init+0x4c>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80075c8:	2080      	movs	r0, #128	; 0x80
 80075ca:	4c19      	ldr	r4, [pc, #100]	; (8007630 <MX_TIM3_Init+0x100>)
 80075cc:	0282      	lsls	r2, r0, #10
 80075ce:	6961      	ldr	r1, [r4, #20]
 80075d0:	4311      	orrs	r1, r2
 80075d2:	6161      	str	r1, [r4, #20]
 80075d4:	6963      	ldr	r3, [r4, #20]
 80075d6:	4013      	ands	r3, r2
 80075d8:	9300      	str	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80075da:	2201      	movs	r2, #1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80075dc:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80075de:	2302      	movs	r3, #2
 80075e0:	9204      	str	r2, [sp, #16]
 80075e2:	9305      	str	r3, [sp, #20]
 80075e4:	2300      	movs	r3, #0
 80075e6:	2200      	movs	r2, #0
 80075e8:	9206      	str	r2, [sp, #24]
 80075ea:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 80075ec:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80075ee:	2490      	movs	r4, #144	; 0x90
 80075f0:	a904      	add	r1, sp, #16
 80075f2:	05e0      	lsls	r0, r4, #23
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 80075f4:	9308      	str	r3, [sp, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80075f6:	f000 f9cb 	bl	8007990 <HAL_GPIO_Init>
}
 80075fa:	e7da      	b.n	80075b2 <MX_TIM3_Init+0x82>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80075fc:	2080      	movs	r0, #128	; 0x80
 80075fe:	4b0c      	ldr	r3, [pc, #48]	; (8007630 <MX_TIM3_Init+0x100>)
 8007600:	0281      	lsls	r1, r0, #10
 8007602:	695c      	ldr	r4, [r3, #20]
 8007604:	430c      	orrs	r4, r1
 8007606:	615c      	str	r4, [r3, #20]
 8007608:	695a      	ldr	r2, [r3, #20]
 800760a:	400a      	ands	r2, r1
 800760c:	9201      	str	r2, [sp, #4]
 800760e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8007610:	2240      	movs	r2, #64	; 0x40
 8007612:	2302      	movs	r3, #2
 8007614:	9204      	str	r2, [sp, #16]
 8007616:	9305      	str	r3, [sp, #20]
 8007618:	2300      	movs	r3, #0
 800761a:	2200      	movs	r2, #0
 800761c:	9206      	str	r2, [sp, #24]
 800761e:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 8007620:	2301      	movs	r3, #1
 8007622:	e7e4      	b.n	80075ee <MX_TIM3_Init+0xbe>
 8007624:	20000518 	.word	0x20000518
 8007628:	40000400 	.word	0x40000400
 800762c:	00004e20 	.word	0x00004e20
 8007630:	40021000 	.word	0x40021000

08007634 <HAL_TIM_PWM_MspInit>:
  if(tim_pwmHandle->Instance==TIM2)
 8007634:	2280      	movs	r2, #128	; 0x80
 8007636:	6803      	ldr	r3, [r0, #0]
{
 8007638:	b082      	sub	sp, #8
  if(tim_pwmHandle->Instance==TIM2)
 800763a:	05d0      	lsls	r0, r2, #23
 800763c:	4283      	cmp	r3, r0
 800763e:	d00e      	beq.n	800765e <HAL_TIM_PWM_MspInit+0x2a>
  else if(tim_pwmHandle->Instance==TIM3)
 8007640:	490c      	ldr	r1, [pc, #48]	; (8007674 <HAL_TIM_PWM_MspInit+0x40>)
 8007642:	428b      	cmp	r3, r1
 8007644:	d001      	beq.n	800764a <HAL_TIM_PWM_MspInit+0x16>
}
 8007646:	b002      	add	sp, #8
 8007648:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 800764a:	2302      	movs	r3, #2
 800764c:	4a0a      	ldr	r2, [pc, #40]	; (8007678 <HAL_TIM_PWM_MspInit+0x44>)
 800764e:	69d0      	ldr	r0, [r2, #28]
 8007650:	4318      	orrs	r0, r3
 8007652:	61d0      	str	r0, [r2, #28]
 8007654:	69d1      	ldr	r1, [r2, #28]
 8007656:	400b      	ands	r3, r1
 8007658:	9301      	str	r3, [sp, #4]
 800765a:	9b01      	ldr	r3, [sp, #4]
}
 800765c:	e7f3      	b.n	8007646 <HAL_TIM_PWM_MspInit+0x12>
    __HAL_RCC_TIM2_CLK_ENABLE();
 800765e:	2301      	movs	r3, #1
 8007660:	4a05      	ldr	r2, [pc, #20]	; (8007678 <HAL_TIM_PWM_MspInit+0x44>)
 8007662:	69d0      	ldr	r0, [r2, #28]
 8007664:	4318      	orrs	r0, r3
 8007666:	61d0      	str	r0, [r2, #28]
 8007668:	69d1      	ldr	r1, [r2, #28]
 800766a:	400b      	ands	r3, r1
 800766c:	9300      	str	r3, [sp, #0]
 800766e:	9b00      	ldr	r3, [sp, #0]
 8007670:	e7e9      	b.n	8007646 <HAL_TIM_PWM_MspInit+0x12>
 8007672:	46c0      	nop			; (mov r8, r8)
 8007674:	40000400 	.word	0x40000400
 8007678:	40021000 	.word	0x40021000

0800767c <MX_USART2_UART_Init>:
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800767c:	480b      	ldr	r0, [pc, #44]	; (80076ac <MX_USART2_UART_Init+0x30>)
 800767e:	4b0c      	ldr	r3, [pc, #48]	; (80076b0 <MX_USART2_UART_Init+0x34>)
{
 8007680:	b510      	push	{r4, lr}
  huart2.Init.BaudRate = 2000000;
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
  huart2.Init.StopBits = UART_STOPBITS_1;
  huart2.Init.Parity = UART_PARITY_NONE;
  huart2.Init.Mode = UART_MODE_TX;
 8007682:	2208      	movs	r2, #8
  huart2.Instance = USART2;
 8007684:	6003      	str	r3, [r0, #0]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8007686:	2300      	movs	r3, #0
  huart2.Init.BaudRate = 2000000;
 8007688:	490a      	ldr	r1, [pc, #40]	; (80076b4 <MX_USART2_UART_Init+0x38>)
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800768a:	6083      	str	r3, [r0, #8]
  huart2.Init.BaudRate = 2000000;
 800768c:	6041      	str	r1, [r0, #4]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800768e:	60c3      	str	r3, [r0, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8007690:	6103      	str	r3, [r0, #16]
  huart2.Init.Mode = UART_MODE_TX;
 8007692:	6142      	str	r2, [r0, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8007694:	6183      	str	r3, [r0, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8007696:	61c3      	str	r3, [r0, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8007698:	6203      	str	r3, [r0, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800769a:	6243      	str	r3, [r0, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800769c:	f001 ff86 	bl	80095ac <HAL_UART_Init>
 80076a0:	2800      	cmp	r0, #0
 80076a2:	d100      	bne.n	80076a6 <MX_USART2_UART_Init+0x2a>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80076a4:	bd10      	pop	{r4, pc}
    Error_Handler();
 80076a6:	f7ff fd8b 	bl	80071c0 <Error_Handler>
}
 80076aa:	e7fb      	b.n	80076a4 <MX_USART2_UART_Init+0x28>
 80076ac:	200005a8 	.word	0x200005a8
 80076b0:	40004400 	.word	0x40004400
 80076b4:	001e8480 	.word	0x001e8480

080076b8 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80076b8:	b510      	push	{r4, lr}
 80076ba:	0004      	movs	r4, r0
 80076bc:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80076be:	2214      	movs	r2, #20
 80076c0:	2100      	movs	r1, #0
 80076c2:	a802      	add	r0, sp, #8
 80076c4:	f003 fcb2 	bl	800b02c <memset>
  if(uartHandle->Instance==USART2)
 80076c8:	4b17      	ldr	r3, [pc, #92]	; (8007728 <HAL_UART_MspInit+0x70>)
 80076ca:	6822      	ldr	r2, [r4, #0]
 80076cc:	429a      	cmp	r2, r3
 80076ce:	d001      	beq.n	80076d4 <HAL_UART_MspInit+0x1c>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 80076d0:	b008      	add	sp, #32
 80076d2:	bd10      	pop	{r4, pc}
    __HAL_RCC_USART2_CLK_ENABLE();
 80076d4:	2480      	movs	r4, #128	; 0x80
 80076d6:	4815      	ldr	r0, [pc, #84]	; (800772c <HAL_UART_MspInit+0x74>)
 80076d8:	02a2      	lsls	r2, r4, #10
 80076da:	69c1      	ldr	r1, [r0, #28]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 80076dc:	2401      	movs	r4, #1
    __HAL_RCC_USART2_CLK_ENABLE();
 80076de:	4311      	orrs	r1, r2
 80076e0:	61c1      	str	r1, [r0, #28]
 80076e2:	69c3      	ldr	r3, [r0, #28]
 80076e4:	4013      	ands	r3, r2
 80076e6:	9300      	str	r3, [sp, #0]
 80076e8:	9900      	ldr	r1, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80076ea:	6941      	ldr	r1, [r0, #20]
 80076ec:	4311      	orrs	r1, r2
 80076ee:	6141      	str	r1, [r0, #20]
 80076f0:	6940      	ldr	r0, [r0, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80076f2:	a902      	add	r1, sp, #8
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80076f4:	4002      	ands	r2, r0
 80076f6:	9201      	str	r2, [sp, #4]
 80076f8:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 80076fa:	220c      	movs	r2, #12
 80076fc:	2302      	movs	r3, #2
 80076fe:	9202      	str	r2, [sp, #8]
 8007700:	9303      	str	r3, [sp, #12]
 8007702:	2300      	movs	r3, #0
 8007704:	2200      	movs	r2, #0
 8007706:	9204      	str	r2, [sp, #16]
 8007708:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800770a:	2290      	movs	r2, #144	; 0x90
 800770c:	05d0      	lsls	r0, r2, #23
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 800770e:	9406      	str	r4, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8007710:	f000 f93e 	bl	8007990 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8007714:	2200      	movs	r2, #0
 8007716:	2100      	movs	r1, #0
 8007718:	201c      	movs	r0, #28
 800771a:	f000 f89d 	bl	8007858 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 800771e:	201c      	movs	r0, #28
 8007720:	f000 f8cc 	bl	80078bc <HAL_NVIC_EnableIRQ>
}
 8007724:	e7d4      	b.n	80076d0 <HAL_UART_MspInit+0x18>
 8007726:	46c0      	nop			; (mov r8, r8)
 8007728:	40004400 	.word	0x40004400
 800772c:	40021000 	.word	0x40021000

08007730 <__io_putchar>:
{
    HAL_UART_Transmit(&huart2,(uint8_t *)&ch,1,1000); return ch;
}

PUTCHAR_PROTOTYPE
{
 8007730:	b500      	push	{lr}
 8007732:	b083      	sub	sp, #12
 8007734:	9001      	str	r0, [sp, #4]
    /* Place your implementation of fputc here */
    /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */
    HAL_UART_Transmit(&huart2, (uint8_t *) &ch, 1, 0xFFFF);
 8007736:	2201      	movs	r2, #1
 8007738:	4b03      	ldr	r3, [pc, #12]	; (8007748 <__io_putchar+0x18>)
 800773a:	a901      	add	r1, sp, #4
 800773c:	4803      	ldr	r0, [pc, #12]	; (800774c <__io_putchar+0x1c>)
 800773e:	f002 f8c5 	bl	80098cc <HAL_UART_Transmit>

    return ch;
}
 8007742:	9801      	ldr	r0, [sp, #4]
 8007744:	b003      	add	sp, #12
 8007746:	bd00      	pop	{pc}
 8007748:	0000ffff 	.word	0x0000ffff
 800774c:	200005a8 	.word	0x200005a8

08007750 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8007750:	480d      	ldr	r0, [pc, #52]	; (8007788 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8007752:	4685      	mov	sp, r0
  
/* Call the clock system initialization function.*/
  bl  SystemInit
 8007754:	f7ff fe66 	bl	8007424 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8007758:	480c      	ldr	r0, [pc, #48]	; (800778c <LoopForever+0x6>)
  ldr r1, =_edata
 800775a:	490d      	ldr	r1, [pc, #52]	; (8007790 <LoopForever+0xa>)
  ldr r2, =_sidata
 800775c:	4a0d      	ldr	r2, [pc, #52]	; (8007794 <LoopForever+0xe>)
  movs r3, #0
 800775e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8007760:	e002      	b.n	8007768 <LoopCopyDataInit>

08007762 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8007762:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8007764:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8007766:	3304      	adds	r3, #4

08007768 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8007768:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800776a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800776c:	d3f9      	bcc.n	8007762 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800776e:	4a0a      	ldr	r2, [pc, #40]	; (8007798 <LoopForever+0x12>)
  ldr r4, =_ebss
 8007770:	4c0a      	ldr	r4, [pc, #40]	; (800779c <LoopForever+0x16>)
  movs r3, #0
 8007772:	2300      	movs	r3, #0
  b LoopFillZerobss
 8007774:	e001      	b.n	800777a <LoopFillZerobss>

08007776 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8007776:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8007778:	3204      	adds	r2, #4

0800777a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800777a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800777c:	d3fb      	bcc.n	8007776 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800777e:	f003 fc31 	bl	800afe4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8007782:	f7ff faeb 	bl	8006d5c <main>

08007786 <LoopForever>:

LoopForever:
    b LoopForever
 8007786:	e7fe      	b.n	8007786 <LoopForever>
  ldr   r0, =_estack
 8007788:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 800778c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8007790:	20000230 	.word	0x20000230
  ldr r2, =_sidata
 8007794:	08010468 	.word	0x08010468
  ldr r2, =_sbss
 8007798:	20000230 	.word	0x20000230
  ldr r4, =_ebss
 800779c:	20000640 	.word	0x20000640

080077a0 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80077a0:	e7fe      	b.n	80077a0 <ADC1_COMP_IRQHandler>
	...

080077a4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80077a4:	b510      	push	{r4, lr}
 80077a6:	0004      	movs	r4, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80077a8:	20fa      	movs	r0, #250	; 0xfa
 80077aa:	4b0e      	ldr	r3, [pc, #56]	; (80077e4 <HAL_InitTick+0x40>)
 80077ac:	0080      	lsls	r0, r0, #2
 80077ae:	7819      	ldrb	r1, [r3, #0]
 80077b0:	f7f8 fcc4 	bl	800013c <__udivsi3>
 80077b4:	4a0c      	ldr	r2, [pc, #48]	; (80077e8 <HAL_InitTick+0x44>)
 80077b6:	0001      	movs	r1, r0
 80077b8:	6810      	ldr	r0, [r2, #0]
 80077ba:	f7f8 fcbf 	bl	800013c <__udivsi3>
 80077be:	f000 f889 	bl	80078d4 <HAL_SYSTICK_Config>
 80077c2:	2800      	cmp	r0, #0
 80077c4:	d10c      	bne.n	80077e0 <HAL_InitTick+0x3c>
  {
    return HAL_ERROR;
 80077c6:	3001      	adds	r0, #1
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80077c8:	2c03      	cmp	r4, #3
 80077ca:	d900      	bls.n	80077ce <HAL_InitTick+0x2a>
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
}
 80077cc:	bd10      	pop	{r4, pc}
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80077ce:	0021      	movs	r1, r4
 80077d0:	3802      	subs	r0, #2
 80077d2:	2200      	movs	r2, #0
 80077d4:	f000 f840 	bl	8007858 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80077d8:	4904      	ldr	r1, [pc, #16]	; (80077ec <HAL_InitTick+0x48>)
 80077da:	2000      	movs	r0, #0
 80077dc:	600c      	str	r4, [r1, #0]
  return HAL_OK;
 80077de:	e7f5      	b.n	80077cc <HAL_InitTick+0x28>
    return HAL_ERROR;
 80077e0:	2001      	movs	r0, #1
 80077e2:	e7f3      	b.n	80077cc <HAL_InitTick+0x28>
 80077e4:	20000050 	.word	0x20000050
 80077e8:	2000004c 	.word	0x2000004c
 80077ec:	20000054 	.word	0x20000054

080077f0 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80077f0:	2110      	movs	r1, #16
 80077f2:	4a06      	ldr	r2, [pc, #24]	; (800780c <HAL_Init+0x1c>)
{
 80077f4:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80077f6:	6813      	ldr	r3, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 80077f8:	2000      	movs	r0, #0
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80077fa:	430b      	orrs	r3, r1
 80077fc:	6013      	str	r3, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 80077fe:	f7ff ffd1 	bl	80077a4 <HAL_InitTick>
  HAL_MspInit();
 8007802:	f7ff fcf9 	bl	80071f8 <HAL_MspInit>
}
 8007806:	2000      	movs	r0, #0
 8007808:	bd10      	pop	{r4, pc}
 800780a:	46c0      	nop			; (mov r8, r8)
 800780c:	40022000 	.word	0x40022000

08007810 <HAL_IncTick>:
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8007810:	4a03      	ldr	r2, [pc, #12]	; (8007820 <HAL_IncTick+0x10>)
 8007812:	4b04      	ldr	r3, [pc, #16]	; (8007824 <HAL_IncTick+0x14>)
 8007814:	6811      	ldr	r1, [r2, #0]
 8007816:	7818      	ldrb	r0, [r3, #0]
 8007818:	1841      	adds	r1, r0, r1
 800781a:	6011      	str	r1, [r2, #0]
}
 800781c:	4770      	bx	lr
 800781e:	46c0      	nop			; (mov r8, r8)
 8007820:	2000062c 	.word	0x2000062c
 8007824:	20000050 	.word	0x20000050

08007828 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8007828:	4b01      	ldr	r3, [pc, #4]	; (8007830 <HAL_GetTick+0x8>)
 800782a:	6818      	ldr	r0, [r3, #0]
}
 800782c:	4770      	bx	lr
 800782e:	46c0      	nop			; (mov r8, r8)
 8007830:	2000062c 	.word	0x2000062c

08007834 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8007834:	b570      	push	{r4, r5, r6, lr}
 8007836:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007838:	f7ff fff6 	bl	8007828 <HAL_GetTick>
 800783c:	0005      	movs	r5, r0
  uint32_t wait = Delay;
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800783e:	1c63      	adds	r3, r4, #1
 8007840:	d002      	beq.n	8007848 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8007842:	4b04      	ldr	r3, [pc, #16]	; (8007854 <HAL_Delay+0x20>)
 8007844:	7818      	ldrb	r0, [r3, #0]
 8007846:	1824      	adds	r4, r4, r0
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 8007848:	f7ff ffee 	bl	8007828 <HAL_GetTick>
 800784c:	1b41      	subs	r1, r0, r5
 800784e:	42a1      	cmp	r1, r4
 8007850:	d3fa      	bcc.n	8007848 <HAL_Delay+0x14>
  {
  }
}
 8007852:	bd70      	pop	{r4, r5, r6, pc}
 8007854:	20000050 	.word	0x20000050

08007858 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8007858:	b570      	push	{r4, r5, r6, lr}
  if ((int32_t)(IRQn) >= 0)
 800785a:	2800      	cmp	r0, #0
 800785c:	db14      	blt.n	8007888 <HAL_NVIC_SetPriority+0x30>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800785e:	4b15      	ldr	r3, [pc, #84]	; (80078b4 <HAL_NVIC_SetPriority+0x5c>)
 8007860:	0886      	lsrs	r6, r0, #2
 8007862:	469c      	mov	ip, r3
 8007864:	2303      	movs	r3, #3
 8007866:	22c0      	movs	r2, #192	; 0xc0
 8007868:	4018      	ands	r0, r3
 800786a:	23ff      	movs	r3, #255	; 0xff
 800786c:	00b4      	lsls	r4, r6, #2
 800786e:	0096      	lsls	r6, r2, #2
 8007870:	001a      	movs	r2, r3
 8007872:	00c0      	lsls	r0, r0, #3
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8007874:	0189      	lsls	r1, r1, #6
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8007876:	4082      	lsls	r2, r0
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8007878:	400b      	ands	r3, r1
 800787a:	4083      	lsls	r3, r0
 800787c:	4464      	add	r4, ip
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800787e:	59a5      	ldr	r5, [r4, r6]
 8007880:	4395      	bics	r5, r2
 8007882:	432b      	orrs	r3, r5
 8007884:	51a3      	str	r3, [r4, r6]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
}
 8007886:	bd70      	pop	{r4, r5, r6, pc}
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8007888:	230f      	movs	r3, #15
 800788a:	4003      	ands	r3, r0
 800788c:	3b08      	subs	r3, #8
 800788e:	089a      	lsrs	r2, r3, #2
 8007890:	0096      	lsls	r6, r2, #2
 8007892:	2203      	movs	r2, #3
 8007894:	4010      	ands	r0, r2
 8007896:	32fc      	adds	r2, #252	; 0xfc
 8007898:	0015      	movs	r5, r2
 800789a:	4c07      	ldr	r4, [pc, #28]	; (80078b8 <HAL_NVIC_SetPriority+0x60>)
 800789c:	00c0      	lsls	r0, r0, #3
 800789e:	46a4      	mov	ip, r4
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80078a0:	0189      	lsls	r1, r1, #6
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80078a2:	4085      	lsls	r5, r0
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80078a4:	400a      	ands	r2, r1
 80078a6:	4082      	lsls	r2, r0
 80078a8:	4466      	add	r6, ip
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80078aa:	69f3      	ldr	r3, [r6, #28]
 80078ac:	43ab      	bics	r3, r5
 80078ae:	431a      	orrs	r2, r3
 80078b0:	61f2      	str	r2, [r6, #28]
 80078b2:	e7e8      	b.n	8007886 <HAL_NVIC_SetPriority+0x2e>
 80078b4:	e000e100 	.word	0xe000e100
 80078b8:	e000ed00 	.word	0xe000ed00

080078bc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80078bc:	2800      	cmp	r0, #0
 80078be:	db05      	blt.n	80078cc <HAL_NVIC_EnableIRQ+0x10>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80078c0:	231f      	movs	r3, #31
 80078c2:	4018      	ands	r0, r3
 80078c4:	3b1e      	subs	r3, #30
 80078c6:	4083      	lsls	r3, r0
 80078c8:	4a01      	ldr	r2, [pc, #4]	; (80078d0 <HAL_NVIC_EnableIRQ+0x14>)
 80078ca:	6013      	str	r3, [r2, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80078cc:	4770      	bx	lr
 80078ce:	46c0      	nop			; (mov r8, r8)
 80078d0:	e000e100 	.word	0xe000e100

080078d4 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80078d4:	2280      	movs	r2, #128	; 0x80
 80078d6:	1e43      	subs	r3, r0, #1
 80078d8:	0451      	lsls	r1, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 80078da:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80078dc:	428b      	cmp	r3, r1
 80078de:	d20e      	bcs.n	80078fe <HAL_SYSTICK_Config+0x2a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80078e0:	4a07      	ldr	r2, [pc, #28]	; (8007900 <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80078e2:	4808      	ldr	r0, [pc, #32]	; (8007904 <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80078e4:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80078e6:	6a03      	ldr	r3, [r0, #32]
 80078e8:	0219      	lsls	r1, r3, #8
 80078ea:	0a0b      	lsrs	r3, r1, #8
 80078ec:	21c0      	movs	r1, #192	; 0xc0
 80078ee:	0609      	lsls	r1, r1, #24
 80078f0:	430b      	orrs	r3, r1
 80078f2:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80078f4:	2000      	movs	r0, #0
 80078f6:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80078f8:	3007      	adds	r0, #7
 80078fa:	6010      	str	r0, [r2, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80078fc:	2000      	movs	r0, #0
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80078fe:	4770      	bx	lr
 8007900:	e000e010 	.word	0xe000e010
 8007904:	e000ed00 	.word	0xe000ed00

08007908 <HAL_DMA_Abort>:
  *               the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8007908:	2321      	movs	r3, #33	; 0x21
{
 800790a:	b530      	push	{r4, r5, lr}
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800790c:	5cc2      	ldrb	r2, [r0, r3]
 800790e:	2a02      	cmp	r2, #2
 8007910:	d006      	beq.n	8007920 <HAL_DMA_Abort+0x18>
  {
    /* no transfer ongoing */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8007912:	2200      	movs	r2, #0
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8007914:	3b1d      	subs	r3, #29
 8007916:	6383      	str	r3, [r0, #56]	; 0x38
    __HAL_UNLOCK(hdma);
 8007918:	331c      	adds	r3, #28
 800791a:	54c2      	strb	r2, [r0, r3]
    
    return HAL_ERROR;
 800791c:	2001      	movs	r0, #1
  
  /* Process Unlocked */
  __HAL_UNLOCK(hdma);
  
  return HAL_OK;
}
 800791e:	bd30      	pop	{r4, r5, pc}
    hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 8007920:	240e      	movs	r4, #14
 8007922:	6805      	ldr	r5, [r0, #0]
 8007924:	6829      	ldr	r1, [r5, #0]
 8007926:	43a1      	bics	r1, r4
 8007928:	6029      	str	r1, [r5, #0]
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 800792a:	2101      	movs	r1, #1
    hdma->DmaBaseAddress->IFCR = (DMA_FLAG_GL1 << hdma->ChannelIndex);
 800792c:	000c      	movs	r4, r1
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 800792e:	682a      	ldr	r2, [r5, #0]
 8007930:	438a      	bics	r2, r1
 8007932:	602a      	str	r2, [r5, #0]
    hdma->DmaBaseAddress->IFCR = (DMA_FLAG_GL1 << hdma->ChannelIndex);
 8007934:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007936:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8007938:	40ac      	lsls	r4, r5
 800793a:	6054      	str	r4, [r2, #4]
  hdma->State = HAL_DMA_STATE_READY; 
 800793c:	54c1      	strb	r1, [r0, r3]
  __HAL_UNLOCK(hdma);
 800793e:	2320      	movs	r3, #32
 8007940:	2100      	movs	r1, #0
 8007942:	54c1      	strb	r1, [r0, r3]
  return HAL_OK;
 8007944:	2000      	movs	r0, #0
 8007946:	e7ea      	b.n	800791e <HAL_DMA_Abort+0x16>

08007948 <HAL_DMA_Abort_IT>:
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{  
  HAL_StatusTypeDef status = HAL_OK;
  
  if(HAL_DMA_STATE_BUSY != hdma->State)
 8007948:	2321      	movs	r3, #33	; 0x21
{  
 800794a:	b570      	push	{r4, r5, r6, lr}
  if(HAL_DMA_STATE_BUSY != hdma->State)
 800794c:	5cc2      	ldrb	r2, [r0, r3]
 800794e:	2a02      	cmp	r2, #2
 8007950:	d003      	beq.n	800795a <HAL_DMA_Abort_IT+0x12>
  {
    /* no transfer ongoing */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8007952:	3b1d      	subs	r3, #29
 8007954:	6383      	str	r3, [r0, #56]	; 0x38
        
    status = HAL_ERROR;
 8007956:	2001      	movs	r0, #1
    {
      hdma->XferAbortCallback(hdma);
    } 
  }
  return status;
}
 8007958:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 800795a:	240e      	movs	r4, #14
 800795c:	6805      	ldr	r5, [r0, #0]
 800795e:	6829      	ldr	r1, [r5, #0]
 8007960:	43a1      	bics	r1, r4
 8007962:	6029      	str	r1, [r5, #0]
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 8007964:	2101      	movs	r1, #1
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 8007966:	000c      	movs	r4, r1
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 8007968:	682a      	ldr	r2, [r5, #0]
 800796a:	438a      	bics	r2, r1
 800796c:	602a      	str	r2, [r5, #0]
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 800796e:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007970:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8007972:	40ac      	lsls	r4, r5
 8007974:	6054      	str	r4, [r2, #4]
    hdma->State = HAL_DMA_STATE_READY;
 8007976:	54c1      	strb	r1, [r0, r3]
    __HAL_UNLOCK(hdma);
 8007978:	2320      	movs	r3, #32
 800797a:	2100      	movs	r1, #0
 800797c:	54c1      	strb	r1, [r0, r3]
    if(hdma->XferAbortCallback != NULL)
 800797e:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8007980:	2a00      	cmp	r2, #0
 8007982:	d002      	beq.n	800798a <HAL_DMA_Abort_IT+0x42>
      hdma->XferAbortCallback(hdma);
 8007984:	4790      	blx	r2
  HAL_StatusTypeDef status = HAL_OK;
 8007986:	2000      	movs	r0, #0
 8007988:	e7e6      	b.n	8007958 <HAL_DMA_Abort_IT+0x10>
 800798a:	2000      	movs	r0, #0
 800798c:	e7e4      	b.n	8007958 <HAL_DMA_Abort_IT+0x10>
 800798e:	46c0      	nop			; (mov r8, r8)

08007990 <HAL_GPIO_Init>:
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8007990:	680b      	ldr	r3, [r1, #0]
{ 
 8007992:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007994:	464e      	mov	r6, r9
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8007996:	4699      	mov	r9, r3
{ 
 8007998:	46de      	mov	lr, fp
 800799a:	4657      	mov	r7, sl
 800799c:	4645      	mov	r5, r8
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800799e:	464a      	mov	r2, r9
{ 
 80079a0:	b5e0      	push	{r5, r6, r7, lr}
  uint32_t position = 0x00u;
 80079a2:	2300      	movs	r3, #0
{ 
 80079a4:	b087      	sub	sp, #28
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80079a6:	2a00      	cmp	r2, #0
 80079a8:	d07c      	beq.n	8007aa4 <HAL_GPIO_Init+0x114>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 80079aa:	2401      	movs	r4, #1
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80079ac:	4d6a      	ldr	r5, [pc, #424]	; (8007b58 <HAL_GPIO_Init+0x1c8>)
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 80079ae:	46a2      	mov	sl, r4
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80079b0:	46ab      	mov	fp, r5
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
        SYSCFG->EXTICR[position >> 2u] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80079b2:	46c8      	mov	r8, r9
 80079b4:	4f69      	ldr	r7, [pc, #420]	; (8007b5c <HAL_GPIO_Init+0x1cc>)
 80079b6:	9101      	str	r1, [sp, #4]
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 80079b8:	4652      	mov	r2, sl
 80079ba:	4641      	mov	r1, r8
 80079bc:	409a      	lsls	r2, r3
    if (iocurrent != 0x00u)
 80079be:	4646      	mov	r6, r8
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 80079c0:	4011      	ands	r1, r2
 80079c2:	9102      	str	r1, [sp, #8]
    if (iocurrent != 0x00u)
 80079c4:	4216      	tst	r6, r2
 80079c6:	d069      	beq.n	8007a9c <HAL_GPIO_Init+0x10c>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80079c8:	9c01      	ldr	r4, [sp, #4]
 80079ca:	2110      	movs	r1, #16
 80079cc:	6865      	ldr	r5, [r4, #4]
 80079ce:	002e      	movs	r6, r5
 80079d0:	438e      	bics	r6, r1
 80079d2:	1e74      	subs	r4, r6, #1
 80079d4:	46a9      	mov	r9, r5
 80079d6:	2c01      	cmp	r4, #1
 80079d8:	d96b      	bls.n	8007ab2 <HAL_GPIO_Init+0x122>
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 80079da:	2503      	movs	r5, #3
 80079dc:	005c      	lsls	r4, r3, #1
 80079de:	40a5      	lsls	r5, r4
      temp = GPIOx->PUPDR;
 80079e0:	68c2      	ldr	r2, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 80079e2:	43ee      	mvns	r6, r5
 80079e4:	43aa      	bics	r2, r5
 80079e6:	0011      	movs	r1, r2
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 80079e8:	9a01      	ldr	r2, [sp, #4]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 80079ea:	9603      	str	r6, [sp, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 80079ec:	6895      	ldr	r5, [r2, #8]
 80079ee:	40a5      	lsls	r5, r4
 80079f0:	430d      	orrs	r5, r1
      GPIOx->PUPDR = temp;
 80079f2:	60c5      	str	r5, [r0, #12]
      temp = GPIOx->MODER;
 80079f4:	6802      	ldr	r2, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 80079f6:	9903      	ldr	r1, [sp, #12]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80079f8:	2603      	movs	r6, #3
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 80079fa:	4011      	ands	r1, r2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80079fc:	464a      	mov	r2, r9
 80079fe:	4016      	ands	r6, r2
 8007a00:	40a6      	lsls	r6, r4
 8007a02:	430e      	orrs	r6, r1
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8007a04:	2180      	movs	r1, #128	; 0x80
 8007a06:	054d      	lsls	r5, r1, #21
      GPIOx->MODER = temp;
 8007a08:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8007a0a:	422a      	tst	r2, r5
 8007a0c:	d046      	beq.n	8007a9c <HAL_GPIO_Init+0x10c>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007a0e:	465e      	mov	r6, fp
 8007a10:	4654      	mov	r4, sl
 8007a12:	69b2      	ldr	r2, [r6, #24]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8007a14:	2503      	movs	r5, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007a16:	4322      	orrs	r2, r4
 8007a18:	61b2      	str	r2, [r6, #24]
 8007a1a:	69b6      	ldr	r6, [r6, #24]
 8007a1c:	4950      	ldr	r1, [pc, #320]	; (8007b60 <HAL_GPIO_Init+0x1d0>)
 8007a1e:	4026      	ands	r6, r4
 8007a20:	9605      	str	r6, [sp, #20]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8007a22:	260f      	movs	r6, #15
 8007a24:	468c      	mov	ip, r1
 8007a26:	401d      	ands	r5, r3
 8007a28:	00ad      	lsls	r5, r5, #2
 8007a2a:	40ae      	lsls	r6, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8007a2c:	2190      	movs	r1, #144	; 0x90
        temp = SYSCFG->EXTICR[position >> 2u];
 8007a2e:	089c      	lsrs	r4, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007a30:	9a05      	ldr	r2, [sp, #20]
        temp = SYSCFG->EXTICR[position >> 2u];
 8007a32:	00a2      	lsls	r2, r4, #2
 8007a34:	4462      	add	r2, ip
 8007a36:	6894      	ldr	r4, [r2, #8]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8007a38:	43b4      	bics	r4, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8007a3a:	05ce      	lsls	r6, r1, #23
 8007a3c:	42b0      	cmp	r0, r6
 8007a3e:	d012      	beq.n	8007a66 <HAL_GPIO_Init+0xd6>
 8007a40:	4948      	ldr	r1, [pc, #288]	; (8007b64 <HAL_GPIO_Init+0x1d4>)
 8007a42:	4288      	cmp	r0, r1
 8007a44:	d100      	bne.n	8007a48 <HAL_GPIO_Init+0xb8>
 8007a46:	e07b      	b.n	8007b40 <HAL_GPIO_Init+0x1b0>
 8007a48:	4947      	ldr	r1, [pc, #284]	; (8007b68 <HAL_GPIO_Init+0x1d8>)
 8007a4a:	4288      	cmp	r0, r1
 8007a4c:	d100      	bne.n	8007a50 <HAL_GPIO_Init+0xc0>
 8007a4e:	e07b      	b.n	8007b48 <HAL_GPIO_Init+0x1b8>
 8007a50:	4946      	ldr	r1, [pc, #280]	; (8007b6c <HAL_GPIO_Init+0x1dc>)
 8007a52:	4288      	cmp	r0, r1
 8007a54:	d100      	bne.n	8007a58 <HAL_GPIO_Init+0xc8>
 8007a56:	e06f      	b.n	8007b38 <HAL_GPIO_Init+0x1a8>
 8007a58:	4945      	ldr	r1, [pc, #276]	; (8007b70 <HAL_GPIO_Init+0x1e0>)
 8007a5a:	4288      	cmp	r0, r1
 8007a5c:	d100      	bne.n	8007a60 <HAL_GPIO_Init+0xd0>
 8007a5e:	e077      	b.n	8007b50 <HAL_GPIO_Init+0x1c0>
 8007a60:	2605      	movs	r6, #5
 8007a62:	40ae      	lsls	r6, r5
 8007a64:	4334      	orrs	r4, r6
        temp &= ~(iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8007a66:	464e      	mov	r6, r9
        SYSCFG->EXTICR[position >> 2u] = temp;
 8007a68:	6094      	str	r4, [r2, #8]
        temp &= ~(iocurrent);
 8007a6a:	9c02      	ldr	r4, [sp, #8]
        temp = EXTI->IMR;
 8007a6c:	683a      	ldr	r2, [r7, #0]
        temp &= ~(iocurrent);
 8007a6e:	43e5      	mvns	r5, r4
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8007a70:	03f1      	lsls	r1, r6, #15
 8007a72:	d45e      	bmi.n	8007b32 <HAL_GPIO_Init+0x1a2>
        temp &= ~(iocurrent);
 8007a74:	402a      	ands	r2, r5
        }
        EXTI->IMR = temp;

        temp = EXTI->EMR;
        temp &= ~(iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8007a76:	464c      	mov	r4, r9
        EXTI->IMR = temp;
 8007a78:	603a      	str	r2, [r7, #0]
        temp = EXTI->EMR;
 8007a7a:	687a      	ldr	r2, [r7, #4]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8007a7c:	03a1      	lsls	r1, r4, #14
 8007a7e:	d455      	bmi.n	8007b2c <HAL_GPIO_Init+0x19c>
        temp &= ~(iocurrent);
 8007a80:	402a      	ands	r2, r5
        {
          temp |= iocurrent;
        }
        EXTI->EMR = temp;
 8007a82:	607a      	str	r2, [r7, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~(iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8007a84:	464a      	mov	r2, r9
        temp = EXTI->RTSR;
 8007a86:	68b9      	ldr	r1, [r7, #8]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8007a88:	02d2      	lsls	r2, r2, #11
 8007a8a:	d44c      	bmi.n	8007b26 <HAL_GPIO_Init+0x196>
        temp &= ~(iocurrent);
 8007a8c:	4029      	ands	r1, r5
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~(iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8007a8e:	464e      	mov	r6, r9
        EXTI->RTSR = temp;
 8007a90:	60b9      	str	r1, [r7, #8]
        temp = EXTI->FTSR;
 8007a92:	68fa      	ldr	r2, [r7, #12]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8007a94:	02b1      	lsls	r1, r6, #10
 8007a96:	d441      	bmi.n	8007b1c <HAL_GPIO_Init+0x18c>
        temp &= ~(iocurrent);
 8007a98:	402a      	ands	r2, r5
        {
          temp |= iocurrent;
        }
        EXTI->FTSR = temp;
 8007a9a:	60fa      	str	r2, [r7, #12]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8007a9c:	4641      	mov	r1, r8
      }
    }

    position++;
 8007a9e:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8007aa0:	40d9      	lsrs	r1, r3
 8007aa2:	d189      	bne.n	80079b8 <HAL_GPIO_Init+0x28>
  } 
}
 8007aa4:	b007      	add	sp, #28
 8007aa6:	bcf0      	pop	{r4, r5, r6, r7}
 8007aa8:	46bb      	mov	fp, r7
 8007aaa:	46b2      	mov	sl, r6
 8007aac:	46a9      	mov	r9, r5
 8007aae:	46a0      	mov	r8, r4
 8007ab0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8007ab2:	2103      	movs	r1, #3
 8007ab4:	005c      	lsls	r4, r3, #1
 8007ab6:	40a1      	lsls	r1, r4
 8007ab8:	468c      	mov	ip, r1
 8007aba:	43c9      	mvns	r1, r1
 8007abc:	9103      	str	r1, [sp, #12]
 8007abe:	4661      	mov	r1, ip
        temp = GPIOx->OSPEEDR;
 8007ac0:	6885      	ldr	r5, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8007ac2:	438d      	bics	r5, r1
        temp |= (GPIO_Init->Speed << (position * 2u));
 8007ac4:	9901      	ldr	r1, [sp, #4]
 8007ac6:	68c9      	ldr	r1, [r1, #12]
 8007ac8:	40a1      	lsls	r1, r4
 8007aca:	430d      	orrs	r5, r1
        GPIOx->OSPEEDR = temp;
 8007acc:	6085      	str	r5, [r0, #8]
        temp = GPIOx->OTYPER;
 8007ace:	6845      	ldr	r5, [r0, #4]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 8007ad0:	4651      	mov	r1, sl
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8007ad2:	4395      	bics	r5, r2
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 8007ad4:	464a      	mov	r2, r9
 8007ad6:	0912      	lsrs	r2, r2, #4
 8007ad8:	400a      	ands	r2, r1
 8007ada:	409a      	lsls	r2, r3
 8007adc:	432a      	orrs	r2, r5
        GPIOx->OTYPER = temp;
 8007ade:	6042      	str	r2, [r0, #4]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8007ae0:	4662      	mov	r2, ip
      temp = GPIOx->PUPDR;
 8007ae2:	68c5      	ldr	r5, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 8007ae4:	9901      	ldr	r1, [sp, #4]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8007ae6:	4395      	bics	r5, r2
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 8007ae8:	688a      	ldr	r2, [r1, #8]
 8007aea:	40a2      	lsls	r2, r4
 8007aec:	432a      	orrs	r2, r5
      GPIOx->PUPDR = temp;
 8007aee:	60c2      	str	r2, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8007af0:	2e02      	cmp	r6, #2
 8007af2:	d000      	beq.n	8007af6 <HAL_GPIO_Init+0x166>
 8007af4:	e77e      	b.n	80079f4 <HAL_GPIO_Init+0x64>
        temp = GPIOx->AFR[position >> 3u];
 8007af6:	08dd      	lsrs	r5, r3, #3
 8007af8:	00a9      	lsls	r1, r5, #2
 8007afa:	1842      	adds	r2, r0, r1
 8007afc:	6a15      	ldr	r5, [r2, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8007afe:	360d      	adds	r6, #13
        temp = GPIOx->AFR[position >> 3u];
 8007b00:	0029      	movs	r1, r5
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8007b02:	2507      	movs	r5, #7
 8007b04:	401d      	ands	r5, r3
 8007b06:	00ad      	lsls	r5, r5, #2
 8007b08:	40ae      	lsls	r6, r5
 8007b0a:	43b1      	bics	r1, r6
 8007b0c:	000e      	movs	r6, r1
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8007b0e:	9901      	ldr	r1, [sp, #4]
 8007b10:	6909      	ldr	r1, [r1, #16]
 8007b12:	40a9      	lsls	r1, r5
 8007b14:	000d      	movs	r5, r1
 8007b16:	4335      	orrs	r5, r6
        GPIOx->AFR[position >> 3u] = temp;
 8007b18:	6215      	str	r5, [r2, #32]
 8007b1a:	e76b      	b.n	80079f4 <HAL_GPIO_Init+0x64>
          temp |= iocurrent;
 8007b1c:	9d02      	ldr	r5, [sp, #8]
 8007b1e:	4315      	orrs	r5, r2
 8007b20:	002a      	movs	r2, r5
        EXTI->FTSR = temp;
 8007b22:	60fa      	str	r2, [r7, #12]
 8007b24:	e7ba      	b.n	8007a9c <HAL_GPIO_Init+0x10c>
          temp |= iocurrent;
 8007b26:	9c02      	ldr	r4, [sp, #8]
 8007b28:	4321      	orrs	r1, r4
 8007b2a:	e7b0      	b.n	8007a8e <HAL_GPIO_Init+0xfe>
          temp |= iocurrent;
 8007b2c:	9e02      	ldr	r6, [sp, #8]
 8007b2e:	4332      	orrs	r2, r6
 8007b30:	e7a7      	b.n	8007a82 <HAL_GPIO_Init+0xf2>
          temp |= iocurrent;
 8007b32:	9902      	ldr	r1, [sp, #8]
 8007b34:	430a      	orrs	r2, r1
 8007b36:	e79e      	b.n	8007a76 <HAL_GPIO_Init+0xe6>
 8007b38:	2603      	movs	r6, #3
 8007b3a:	40ae      	lsls	r6, r5
 8007b3c:	4334      	orrs	r4, r6
 8007b3e:	e792      	b.n	8007a66 <HAL_GPIO_Init+0xd6>
 8007b40:	4656      	mov	r6, sl
 8007b42:	40ae      	lsls	r6, r5
 8007b44:	4334      	orrs	r4, r6
 8007b46:	e78e      	b.n	8007a66 <HAL_GPIO_Init+0xd6>
 8007b48:	2602      	movs	r6, #2
 8007b4a:	40ae      	lsls	r6, r5
 8007b4c:	4334      	orrs	r4, r6
 8007b4e:	e78a      	b.n	8007a66 <HAL_GPIO_Init+0xd6>
 8007b50:	2104      	movs	r1, #4
 8007b52:	40a9      	lsls	r1, r5
 8007b54:	430c      	orrs	r4, r1
 8007b56:	e786      	b.n	8007a66 <HAL_GPIO_Init+0xd6>
 8007b58:	40021000 	.word	0x40021000
 8007b5c:	40010400 	.word	0x40010400
 8007b60:	40010000 	.word	0x40010000
 8007b64:	48000400 	.word	0x48000400
 8007b68:	48000800 	.word	0x48000800
 8007b6c:	48000c00 	.word	0x48000c00
 8007b70:	48001000 	.word	0x48001000

08007b74 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8007b74:	2a00      	cmp	r2, #0
 8007b76:	d001      	beq.n	8007b7c <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8007b78:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8007b7a:	4770      	bx	lr
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8007b7c:	6281      	str	r1, [r0, #40]	; 0x28
}
 8007b7e:	e7fc      	b.n	8007b7a <HAL_GPIO_WritePin+0x6>

08007b80 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 8007b80:	6942      	ldr	r2, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8007b82:	0013      	movs	r3, r2
 8007b84:	400b      	ands	r3, r1
 8007b86:	041b      	lsls	r3, r3, #16
 8007b88:	4391      	bics	r1, r2
 8007b8a:	4319      	orrs	r1, r3
 8007b8c:	6181      	str	r1, [r0, #24]
}
 8007b8e:	4770      	bx	lr

08007b90 <HAL_GPIO_EXTI_Callback>:
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed,
            the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */ 
}
 8007b90:	4770      	bx	lr
 8007b92:	46c0      	nop			; (mov r8, r8)

08007b94 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 8007b94:	4b04      	ldr	r3, [pc, #16]	; (8007ba8 <HAL_GPIO_EXTI_IRQHandler+0x14>)
{
 8007b96:	b510      	push	{r4, lr}
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 8007b98:	695a      	ldr	r2, [r3, #20]
 8007b9a:	4210      	tst	r0, r2
 8007b9c:	d100      	bne.n	8007ba0 <HAL_GPIO_EXTI_IRQHandler+0xc>
}
 8007b9e:	bd10      	pop	{r4, pc}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8007ba0:	6158      	str	r0, [r3, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8007ba2:	f7ff fff5 	bl	8007b90 <HAL_GPIO_EXTI_Callback>
}
 8007ba6:	e7fa      	b.n	8007b9e <HAL_GPIO_EXTI_IRQHandler+0xa>
 8007ba8:	40010400 	.word	0x40010400

08007bac <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007bac:	2310      	movs	r3, #16
{
 8007bae:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007bb0:	46c6      	mov	lr, r8
 8007bb2:	0004      	movs	r4, r0
 8007bb4:	000d      	movs	r5, r1
 8007bb6:	0016      	movs	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8007bb8:	2702      	movs	r7, #2
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007bba:	4698      	mov	r8, r3
{
 8007bbc:	b500      	push	{lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8007bbe:	6823      	ldr	r3, [r4, #0]
 8007bc0:	1c6a      	adds	r2, r5, #1
 8007bc2:	d131      	bne.n	8007c28 <I2C_WaitOnTXISFlagUntilTimeout+0x7c>
 8007bc4:	2502      	movs	r5, #2
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007bc6:	2610      	movs	r6, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8007bc8:	699f      	ldr	r7, [r3, #24]
 8007bca:	423d      	tst	r5, r7
 8007bcc:	d12a      	bne.n	8007c24 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007bce:	6998      	ldr	r0, [r3, #24]
 8007bd0:	4206      	tst	r6, r0
 8007bd2:	d0f9      	beq.n	8007bc8 <I2C_WaitOnTXISFlagUntilTimeout+0x1c>
  {
    /* Wait until STOP Flag is reset */
    /* AutoEnd should be initiate after AF */
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8007bd4:	2120      	movs	r1, #32
 8007bd6:	699a      	ldr	r2, [r3, #24]
 8007bd8:	4211      	tst	r1, r2
 8007bda:	d0fc      	beq.n	8007bd6 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
        }
      }
    }

    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007bdc:	2510      	movs	r5, #16
 8007bde:	61dd      	str	r5, [r3, #28]

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8007be0:	3510      	adds	r5, #16
 8007be2:	61dd      	str	r5, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8007be4:	699e      	ldr	r6, [r3, #24]
 8007be6:	07b2      	lsls	r2, r6, #30
 8007be8:	d501      	bpl.n	8007bee <I2C_WaitOnTXISFlagUntilTimeout+0x42>
    hi2c->Instance->TXDR = 0x00U;
 8007bea:	2700      	movs	r7, #0
 8007bec:	629f      	str	r7, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8007bee:	2201      	movs	r2, #1
 8007bf0:	6998      	ldr	r0, [r3, #24]
 8007bf2:	4202      	tst	r2, r0
 8007bf4:	d102      	bne.n	8007bfc <I2C_WaitOnTXISFlagUntilTimeout+0x50>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8007bf6:	6999      	ldr	r1, [r3, #24]
 8007bf8:	430a      	orrs	r2, r1
 8007bfa:	619a      	str	r2, [r3, #24]
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);

    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8007bfc:	2204      	movs	r2, #4
    I2C_RESET_CR2(hi2c);
 8007bfe:	685d      	ldr	r5, [r3, #4]
 8007c00:	4e1a      	ldr	r6, [pc, #104]	; (8007c6c <I2C_WaitOnTXISFlagUntilTimeout+0xc0>)
 8007c02:	4035      	ands	r5, r6
 8007c04:	605d      	str	r5, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8007c06:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007c08:	4313      	orrs	r3, r2
 8007c0a:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8007c0c:	2341      	movs	r3, #65	; 0x41
 8007c0e:	321c      	adds	r2, #28
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007c10:	2700      	movs	r7, #0
      return HAL_ERROR;
 8007c12:	2001      	movs	r0, #1
    hi2c->State = HAL_I2C_STATE_READY;
 8007c14:	54e2      	strb	r2, [r4, r3]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007c16:	3222      	adds	r2, #34	; 0x22
 8007c18:	54a7      	strb	r7, [r4, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007c1a:	3a02      	subs	r2, #2
 8007c1c:	54a7      	strb	r7, [r4, r2]
}
 8007c1e:	bc80      	pop	{r7}
 8007c20:	46b8      	mov	r8, r7
 8007c22:	bdf0      	pop	{r4, r5, r6, r7, pc}
  return HAL_OK;
 8007c24:	2000      	movs	r0, #0
 8007c26:	e7fa      	b.n	8007c1e <I2C_WaitOnTXISFlagUntilTimeout+0x72>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8007c28:	699a      	ldr	r2, [r3, #24]
 8007c2a:	4217      	tst	r7, r2
 8007c2c:	d1fa      	bne.n	8007c24 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007c2e:	4641      	mov	r1, r8
 8007c30:	6998      	ldr	r0, [r3, #24]
 8007c32:	4201      	tst	r1, r0
 8007c34:	d00d      	beq.n	8007c52 <I2C_WaitOnTXISFlagUntilTimeout+0xa6>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8007c36:	2720      	movs	r7, #32
 8007c38:	e007      	b.n	8007c4a <I2C_WaitOnTXISFlagUntilTimeout+0x9e>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007c3a:	f7ff fdf5 	bl	8007828 <HAL_GetTick>
 8007c3e:	1b80      	subs	r0, r0, r6
 8007c40:	4285      	cmp	r5, r0
 8007c42:	d30d      	bcc.n	8007c60 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
 8007c44:	2d00      	cmp	r5, #0
 8007c46:	d00b      	beq.n	8007c60 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
 8007c48:	6823      	ldr	r3, [r4, #0]
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8007c4a:	699a      	ldr	r2, [r3, #24]
 8007c4c:	4217      	tst	r7, r2
 8007c4e:	d0f4      	beq.n	8007c3a <I2C_WaitOnTXISFlagUntilTimeout+0x8e>
 8007c50:	e7c4      	b.n	8007bdc <I2C_WaitOnTXISFlagUntilTimeout+0x30>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007c52:	f7ff fde9 	bl	8007828 <HAL_GetTick>
 8007c56:	1b83      	subs	r3, r0, r6
 8007c58:	42ab      	cmp	r3, r5
 8007c5a:	d801      	bhi.n	8007c60 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
 8007c5c:	2d00      	cmp	r5, #0
 8007c5e:	d1ae      	bne.n	8007bbe <I2C_WaitOnTXISFlagUntilTimeout+0x12>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8007c60:	2220      	movs	r2, #32
 8007c62:	6c61      	ldr	r1, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8007c64:	2341      	movs	r3, #65	; 0x41
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8007c66:	4311      	orrs	r1, r2
 8007c68:	6461      	str	r1, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8007c6a:	e7d1      	b.n	8007c10 <I2C_WaitOnTXISFlagUntilTimeout+0x64>
 8007c6c:	fe00e800 	.word	0xfe00e800

08007c70 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8007c70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c72:	46c6      	mov	lr, r8
 8007c74:	0004      	movs	r4, r0
 8007c76:	000d      	movs	r5, r1
 8007c78:	0016      	movs	r6, r2
 8007c7a:	b500      	push	{lr}
 8007c7c:	2900      	cmp	r1, #0
 8007c7e:	d04c      	beq.n	8007d1a <I2C_WaitOnSTOPFlagUntilTimeout+0xaa>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007c80:	2110      	movs	r1, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8007c82:	2720      	movs	r7, #32
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007c84:	4688      	mov	r8, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8007c86:	6823      	ldr	r3, [r4, #0]
 8007c88:	699a      	ldr	r2, [r3, #24]
 8007c8a:	4217      	tst	r7, r2
 8007c8c:	d154      	bne.n	8007d38 <I2C_WaitOnSTOPFlagUntilTimeout+0xc8>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007c8e:	4641      	mov	r1, r8
 8007c90:	6998      	ldr	r0, [r3, #24]
 8007c92:	4201      	tst	r1, r0
 8007c94:	d02a      	beq.n	8007cec <I2C_WaitOnSTOPFlagUntilTimeout+0x7c>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8007c96:	2720      	movs	r7, #32
 8007c98:	1c6a      	adds	r2, r5, #1
 8007c9a:	d132      	bne.n	8007d02 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
 8007c9c:	2520      	movs	r5, #32
 8007c9e:	699e      	ldr	r6, [r3, #24]
 8007ca0:	4235      	tst	r5, r6
 8007ca2:	d0fc      	beq.n	8007c9e <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007ca4:	2710      	movs	r7, #16
 8007ca6:	61df      	str	r7, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8007ca8:	3710      	adds	r7, #16
 8007caa:	61df      	str	r7, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8007cac:	6998      	ldr	r0, [r3, #24]
 8007cae:	0782      	lsls	r2, r0, #30
 8007cb0:	d501      	bpl.n	8007cb6 <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    hi2c->Instance->TXDR = 0x00U;
 8007cb2:	2100      	movs	r1, #0
 8007cb4:	6299      	str	r1, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8007cb6:	2201      	movs	r2, #1
 8007cb8:	699d      	ldr	r5, [r3, #24]
 8007cba:	422a      	tst	r2, r5
 8007cbc:	d102      	bne.n	8007cc4 <I2C_WaitOnSTOPFlagUntilTimeout+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8007cbe:	699e      	ldr	r6, [r3, #24]
 8007cc0:	4332      	orrs	r2, r6
 8007cc2:	619a      	str	r2, [r3, #24]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8007cc4:	2204      	movs	r2, #4
    I2C_RESET_CR2(hi2c);
 8007cc6:	685f      	ldr	r7, [r3, #4]
 8007cc8:	481c      	ldr	r0, [pc, #112]	; (8007d3c <I2C_WaitOnSTOPFlagUntilTimeout+0xcc>)
 8007cca:	4007      	ands	r7, r0
 8007ccc:	605f      	str	r7, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8007cce:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007cd0:	4313      	orrs	r3, r2
 8007cd2:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8007cd4:	2341      	movs	r3, #65	; 0x41
 8007cd6:	321c      	adds	r2, #28
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007cd8:	2100      	movs	r1, #0
      return HAL_ERROR;
 8007cda:	2001      	movs	r0, #1
    hi2c->State = HAL_I2C_STATE_READY;
 8007cdc:	54e2      	strb	r2, [r4, r3]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007cde:	3222      	adds	r2, #34	; 0x22
 8007ce0:	54a1      	strb	r1, [r4, r2]
    __HAL_UNLOCK(hi2c);
 8007ce2:	3a02      	subs	r2, #2
 8007ce4:	54a1      	strb	r1, [r4, r2]
}
 8007ce6:	bc80      	pop	{r7}
 8007ce8:	46b8      	mov	r8, r7
 8007cea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007cec:	f7ff fd9c 	bl	8007828 <HAL_GetTick>
 8007cf0:	1b83      	subs	r3, r0, r6
 8007cf2:	429d      	cmp	r5, r3
 8007cf4:	d2c7      	bcs.n	8007c86 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8007cf6:	2220      	movs	r2, #32
 8007cf8:	6c61      	ldr	r1, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8007cfa:	2341      	movs	r3, #65	; 0x41
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8007cfc:	4311      	orrs	r1, r2
 8007cfe:	6461      	str	r1, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8007d00:	e7ea      	b.n	8007cd8 <I2C_WaitOnSTOPFlagUntilTimeout+0x68>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8007d02:	699a      	ldr	r2, [r3, #24]
 8007d04:	4217      	tst	r7, r2
 8007d06:	d1cd      	bne.n	8007ca4 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007d08:	f7ff fd8e 	bl	8007828 <HAL_GetTick>
 8007d0c:	1b80      	subs	r0, r0, r6
 8007d0e:	4285      	cmp	r5, r0
 8007d10:	d3f1      	bcc.n	8007cf6 <I2C_WaitOnSTOPFlagUntilTimeout+0x86>
 8007d12:	2d00      	cmp	r5, #0
 8007d14:	d0ef      	beq.n	8007cf6 <I2C_WaitOnSTOPFlagUntilTimeout+0x86>
 8007d16:	6823      	ldr	r3, [r4, #0]
 8007d18:	e7be      	b.n	8007c98 <I2C_WaitOnSTOPFlagUntilTimeout+0x28>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8007d1a:	6803      	ldr	r3, [r0, #0]
 8007d1c:	699a      	ldr	r2, [r3, #24]
 8007d1e:	0692      	lsls	r2, r2, #26
 8007d20:	d40a      	bmi.n	8007d38 <I2C_WaitOnSTOPFlagUntilTimeout+0xc8>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007d22:	6998      	ldr	r0, [r3, #24]
 8007d24:	06c2      	lsls	r2, r0, #27
 8007d26:	d4b6      	bmi.n	8007c96 <I2C_WaitOnSTOPFlagUntilTimeout+0x26>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007d28:	f7ff fd7e 	bl	8007828 <HAL_GetTick>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8007d2c:	2220      	movs	r2, #32
 8007d2e:	6c61      	ldr	r1, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8007d30:	2341      	movs	r3, #65	; 0x41
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8007d32:	4311      	orrs	r1, r2
 8007d34:	6461      	str	r1, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8007d36:	e7cf      	b.n	8007cd8 <I2C_WaitOnSTOPFlagUntilTimeout+0x68>
  return HAL_OK;
 8007d38:	2000      	movs	r0, #0
 8007d3a:	e7d4      	b.n	8007ce6 <I2C_WaitOnSTOPFlagUntilTimeout+0x76>
 8007d3c:	fe00e800 	.word	0xfe00e800

08007d40 <HAL_I2C_Init>:
{
 8007d40:	b510      	push	{r4, lr}
 8007d42:	1e04      	subs	r4, r0, #0
  if (hi2c == NULL)
 8007d44:	d04e      	beq.n	8007de4 <HAL_I2C_Init+0xa4>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8007d46:	2341      	movs	r3, #65	; 0x41
 8007d48:	5cc0      	ldrb	r0, [r0, r3]
 8007d4a:	b2c2      	uxtb	r2, r0
 8007d4c:	2800      	cmp	r0, #0
 8007d4e:	d043      	beq.n	8007dd8 <HAL_I2C_Init+0x98>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8007d50:	2141      	movs	r1, #65	; 0x41
 8007d52:	2324      	movs	r3, #36	; 0x24
  __HAL_I2C_DISABLE(hi2c);
 8007d54:	2201      	movs	r2, #1
  hi2c->State = HAL_I2C_STATE_BUSY;
 8007d56:	5463      	strb	r3, [r4, r1]
  __HAL_I2C_DISABLE(hi2c);
 8007d58:	6823      	ldr	r3, [r4, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8007d5a:	6861      	ldr	r1, [r4, #4]
  __HAL_I2C_DISABLE(hi2c);
 8007d5c:	6818      	ldr	r0, [r3, #0]
 8007d5e:	4390      	bics	r0, r2
 8007d60:	6018      	str	r0, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8007d62:	4821      	ldr	r0, [pc, #132]	; (8007de8 <HAL_I2C_Init+0xa8>)
 8007d64:	4008      	ands	r0, r1
 8007d66:	6118      	str	r0, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8007d68:	689a      	ldr	r2, [r3, #8]
 8007d6a:	4820      	ldr	r0, [pc, #128]	; (8007dec <HAL_I2C_Init+0xac>)
 8007d6c:	4002      	ands	r2, r0
 8007d6e:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8007d70:	68e2      	ldr	r2, [r4, #12]
 8007d72:	2a01      	cmp	r2, #1
 8007d74:	d02a      	beq.n	8007dcc <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8007d76:	2184      	movs	r1, #132	; 0x84
 8007d78:	68a0      	ldr	r0, [r4, #8]
 8007d7a:	0209      	lsls	r1, r1, #8
 8007d7c:	4301      	orrs	r1, r0
 8007d7e:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8007d80:	2a02      	cmp	r2, #2
 8007d82:	d102      	bne.n	8007d8a <HAL_I2C_Init+0x4a>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8007d84:	2280      	movs	r2, #128	; 0x80
 8007d86:	0111      	lsls	r1, r2, #4
 8007d88:	6059      	str	r1, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8007d8a:	6858      	ldr	r0, [r3, #4]
 8007d8c:	4a18      	ldr	r2, [pc, #96]	; (8007df0 <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8007d8e:	4917      	ldr	r1, [pc, #92]	; (8007dec <HAL_I2C_Init+0xac>)
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8007d90:	4302      	orrs	r2, r0
 8007d92:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8007d94:	68d8      	ldr	r0, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8007d96:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8007d98:	4008      	ands	r0, r1
 8007d9a:	60d8      	str	r0, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8007d9c:	69a1      	ldr	r1, [r4, #24]
 8007d9e:	6960      	ldr	r0, [r4, #20]
 8007da0:	4302      	orrs	r2, r0
 8007da2:	0208      	lsls	r0, r1, #8
 8007da4:	4302      	orrs	r2, r0
 8007da6:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8007da8:	6a21      	ldr	r1, [r4, #32]
 8007daa:	69e2      	ldr	r2, [r4, #28]
 8007dac:	430a      	orrs	r2, r1
  __HAL_I2C_ENABLE(hi2c);
 8007dae:	2101      	movs	r1, #1
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8007db0:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8007db2:	6818      	ldr	r0, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8007db4:	2241      	movs	r2, #65	; 0x41
  __HAL_I2C_ENABLE(hi2c);
 8007db6:	4308      	orrs	r0, r1
 8007db8:	6018      	str	r0, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007dba:	2300      	movs	r3, #0
  return HAL_OK;
 8007dbc:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8007dbe:	311f      	adds	r1, #31
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007dc0:	6463      	str	r3, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8007dc2:	54a1      	strb	r1, [r4, r2]
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8007dc4:	3201      	adds	r2, #1
  hi2c->PreviousState = I2C_STATE_NONE;
 8007dc6:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8007dc8:	54a3      	strb	r3, [r4, r2]
}
 8007dca:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8007dcc:	2080      	movs	r0, #128	; 0x80
 8007dce:	68a1      	ldr	r1, [r4, #8]
 8007dd0:	0202      	lsls	r2, r0, #8
 8007dd2:	430a      	orrs	r2, r1
 8007dd4:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8007dd6:	e7d8      	b.n	8007d8a <HAL_I2C_Init+0x4a>
    hi2c->Lock = HAL_UNLOCKED;
 8007dd8:	3040      	adds	r0, #64	; 0x40
 8007dda:	5422      	strb	r2, [r4, r0]
    HAL_I2C_MspInit(hi2c);
 8007ddc:	0020      	movs	r0, r4
 8007dde:	f7fb fabd 	bl	800335c <HAL_I2C_MspInit>
 8007de2:	e7b5      	b.n	8007d50 <HAL_I2C_Init+0x10>
    return HAL_ERROR;
 8007de4:	2001      	movs	r0, #1
 8007de6:	e7f0      	b.n	8007dca <HAL_I2C_Init+0x8a>
 8007de8:	f0ffffff 	.word	0xf0ffffff
 8007dec:	ffff7fff 	.word	0xffff7fff
 8007df0:	02008000 	.word	0x02008000

08007df4 <HAL_I2C_Mem_Write>:
{
 8007df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007df6:	464e      	mov	r6, r9
 8007df8:	4645      	mov	r5, r8
 8007dfa:	46de      	mov	lr, fp
 8007dfc:	4657      	mov	r7, sl
 8007dfe:	0004      	movs	r4, r0
 8007e00:	b5e0      	push	{r5, r6, r7, lr}
 8007e02:	000d      	movs	r5, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007e04:	2141      	movs	r1, #65	; 0x41
{
 8007e06:	4698      	mov	r8, r3
 8007e08:	ab0a      	add	r3, sp, #40	; 0x28
 8007e0a:	4691      	mov	r9, r2
 8007e0c:	cb04      	ldmia	r3!, {r2}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007e0e:	5c66      	ldrb	r6, [r4, r1]
{
 8007e10:	8818      	ldrh	r0, [r3, #0]
 8007e12:	4692      	mov	sl, r2
 8007e14:	4683      	mov	fp, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007e16:	2e20      	cmp	r6, #32
 8007e18:	d000      	beq.n	8007e1c <HAL_I2C_Mem_Write+0x28>
 8007e1a:	e09f      	b.n	8007f5c <HAL_I2C_Mem_Write+0x168>
    if ((pData == NULL) || (Size == 0U))
 8007e1c:	2a00      	cmp	r2, #0
 8007e1e:	d100      	bne.n	8007e22 <HAL_I2C_Mem_Write+0x2e>
 8007e20:	e092      	b.n	8007f48 <HAL_I2C_Mem_Write+0x154>
 8007e22:	2800      	cmp	r0, #0
 8007e24:	d100      	bne.n	8007e28 <HAL_I2C_Mem_Write+0x34>
 8007e26:	e08f      	b.n	8007f48 <HAL_I2C_Mem_Write+0x154>
    __HAL_LOCK(hi2c);
 8007e28:	2040      	movs	r0, #64	; 0x40
 8007e2a:	5c22      	ldrb	r2, [r4, r0]
 8007e2c:	2a01      	cmp	r2, #1
 8007e2e:	d100      	bne.n	8007e32 <HAL_I2C_Mem_Write+0x3e>
 8007e30:	e094      	b.n	8007f5c <HAL_I2C_Mem_Write+0x168>
 8007e32:	2101      	movs	r1, #1
 8007e34:	5421      	strb	r1, [r4, r0]
    tickstart = HAL_GetTick();
 8007e36:	f7ff fcf7 	bl	8007828 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007e3a:	2780      	movs	r7, #128	; 0x80
    tickstart = HAL_GetTick();
 8007e3c:	0006      	movs	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007e3e:	023f      	lsls	r7, r7, #8
 8007e40:	e005      	b.n	8007e4e <HAL_I2C_Mem_Write+0x5a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007e42:	f7ff fcf1 	bl	8007828 <HAL_GetTick>
 8007e46:	1b83      	subs	r3, r0, r6
 8007e48:	2b19      	cmp	r3, #25
 8007e4a:	d900      	bls.n	8007e4e <HAL_I2C_Mem_Write+0x5a>
 8007e4c:	e088      	b.n	8007f60 <HAL_I2C_Mem_Write+0x16c>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007e4e:	6822      	ldr	r2, [r4, #0]
 8007e50:	6993      	ldr	r3, [r2, #24]
 8007e52:	0019      	movs	r1, r3
 8007e54:	4039      	ands	r1, r7
 8007e56:	423b      	tst	r3, r7
 8007e58:	d1f3      	bne.n	8007e42 <HAL_I2C_Mem_Write+0x4e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8007e5a:	2741      	movs	r7, #65	; 0x41
 8007e5c:	2021      	movs	r0, #33	; 0x21
    hi2c->pBuffPtr  = pData;
 8007e5e:	4653      	mov	r3, sl
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8007e60:	55e0      	strb	r0, [r4, r7]
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8007e62:	3701      	adds	r7, #1
 8007e64:	301f      	adds	r0, #31
 8007e66:	55e0      	strb	r0, [r4, r7]
    hi2c->XferCount = Size;
 8007e68:	465f      	mov	r7, fp
    hi2c->pBuffPtr  = pData;
 8007e6a:	6263      	str	r3, [r4, #36]	; 0x24
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2,
 8007e6c:	4643      	mov	r3, r8
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007e6e:	6461      	str	r1, [r4, #68]	; 0x44
    hi2c->XferCount = Size;
 8007e70:	8567      	strh	r7, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 8007e72:	6850      	ldr	r0, [r2, #4]
    hi2c->XferISR   = NULL;
 8007e74:	6361      	str	r1, [r4, #52]	; 0x34
  MODIFY_REG(hi2c->Instance->CR2,
 8007e76:	4972      	ldr	r1, [pc, #456]	; (8008040 <HAL_I2C_Mem_Write+0x24c>)
 8007e78:	b2df      	uxtb	r7, r3
 8007e7a:	4008      	ands	r0, r1
 8007e7c:	05ad      	lsls	r5, r5, #22
 8007e7e:	0439      	lsls	r1, r7, #16
 8007e80:	4308      	orrs	r0, r1
 8007e82:	4b70      	ldr	r3, [pc, #448]	; (8008044 <HAL_I2C_Mem_Write+0x250>)
 8007e84:	0dad      	lsrs	r5, r5, #22
 8007e86:	4328      	orrs	r0, r5
 8007e88:	4318      	orrs	r0, r3
 8007e8a:	6050      	str	r0, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007e8c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007e8e:	0032      	movs	r2, r6
 8007e90:	0020      	movs	r0, r4
 8007e92:	f7ff fe8b 	bl	8007bac <I2C_WaitOnTXISFlagUntilTimeout>
 8007e96:	2800      	cmp	r0, #0
 8007e98:	d000      	beq.n	8007e9c <HAL_I2C_Mem_Write+0xa8>
 8007e9a:	e091      	b.n	8007fc0 <HAL_I2C_Mem_Write+0x1cc>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007e9c:	4642      	mov	r2, r8
 8007e9e:	2a01      	cmp	r2, #1
 8007ea0:	d000      	beq.n	8007ea4 <HAL_I2C_Mem_Write+0xb0>
 8007ea2:	e081      	b.n	8007fa8 <HAL_I2C_Mem_Write+0x1b4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8007ea4:	464b      	mov	r3, r9
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007ea6:	2780      	movs	r7, #128	; 0x80
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8007ea8:	6821      	ldr	r1, [r4, #0]
 8007eaa:	b2da      	uxtb	r2, r3
 8007eac:	628a      	str	r2, [r1, #40]	; 0x28
 8007eae:	980c      	ldr	r0, [sp, #48]	; 0x30
 8007eb0:	1c43      	adds	r3, r0, #1
 8007eb2:	d162      	bne.n	8007f7a <HAL_I2C_Mem_Write+0x186>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007eb4:	2780      	movs	r7, #128	; 0x80
 8007eb6:	698a      	ldr	r2, [r1, #24]
 8007eb8:	4217      	tst	r7, r2
 8007eba:	d0fc      	beq.n	8007eb6 <HAL_I2C_Mem_Write+0xc2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8007ebc:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8007ebe:	28ff      	cmp	r0, #255	; 0xff
 8007ec0:	d868      	bhi.n	8007f94 <HAL_I2C_Mem_Write+0x1a0>
      hi2c->XferSize = hi2c->XferCount;
 8007ec2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 8007ec4:	4860      	ldr	r0, [pc, #384]	; (8008048 <HAL_I2C_Mem_Write+0x254>)
 8007ec6:	684a      	ldr	r2, [r1, #4]
      hi2c->XferSize = hi2c->XferCount;
 8007ec8:	b29f      	uxth	r7, r3
  MODIFY_REG(hi2c->Instance->CR2,
 8007eca:	4002      	ands	r2, r0
 8007ecc:	b2fb      	uxtb	r3, r7
      hi2c->XferSize = hi2c->XferCount;
 8007ece:	8527      	strh	r7, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8007ed0:	432a      	orrs	r2, r5
 8007ed2:	041f      	lsls	r7, r3, #16
 8007ed4:	4317      	orrs	r7, r2
 8007ed6:	2280      	movs	r2, #128	; 0x80
 8007ed8:	0490      	lsls	r0, r2, #18
 8007eda:	4307      	orrs	r7, r0
 8007edc:	604f      	str	r7, [r1, #4]
 8007ede:	495a      	ldr	r1, [pc, #360]	; (8008048 <HAL_I2C_Mem_Write+0x254>)
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007ee0:	2780      	movs	r7, #128	; 0x80
  MODIFY_REG(hi2c->Instance->CR2,
 8007ee2:	4688      	mov	r8, r1
 8007ee4:	e003      	b.n	8007eee <HAL_I2C_Mem_Write+0xfa>
    } while (hi2c->XferCount > 0U);
 8007ee6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8007ee8:	2a00      	cmp	r2, #0
 8007eea:	d100      	bne.n	8007eee <HAL_I2C_Mem_Write+0xfa>
 8007eec:	e089      	b.n	8008002 <HAL_I2C_Mem_Write+0x20e>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007eee:	0032      	movs	r2, r6
 8007ef0:	0020      	movs	r0, r4
 8007ef2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007ef4:	f7ff fe5a 	bl	8007bac <I2C_WaitOnTXISFlagUntilTimeout>
 8007ef8:	2800      	cmp	r0, #0
 8007efa:	d13c      	bne.n	8007f76 <HAL_I2C_Mem_Write+0x182>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8007efc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007efe:	6822      	ldr	r2, [r4, #0]
 8007f00:	7818      	ldrb	r0, [r3, #0]
      hi2c->pBuffPtr++;
 8007f02:	3301      	adds	r3, #1
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8007f04:	6290      	str	r0, [r2, #40]	; 0x28
      hi2c->XferCount--;
 8007f06:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8007f08:	8d20      	ldrh	r0, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8007f0a:	3901      	subs	r1, #1
      hi2c->pBuffPtr++;
 8007f0c:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8007f0e:	b28b      	uxth	r3, r1
 8007f10:	8563      	strh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8007f12:	3801      	subs	r0, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8007f14:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8007f16:	b283      	uxth	r3, r0
 8007f18:	8523      	strh	r3, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8007f1a:	2900      	cmp	r1, #0
 8007f1c:	d0e3      	beq.n	8007ee6 <HAL_I2C_Mem_Write+0xf2>
 8007f1e:	2b00      	cmp	r3, #0
 8007f20:	d1e1      	bne.n	8007ee6 <HAL_I2C_Mem_Write+0xf2>
 8007f22:	980c      	ldr	r0, [sp, #48]	; 0x30
 8007f24:	1c43      	adds	r3, r0, #1
 8007f26:	d150      	bne.n	8007fca <HAL_I2C_Mem_Write+0x1d6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007f28:	6990      	ldr	r0, [r2, #24]
 8007f2a:	4207      	tst	r7, r0
 8007f2c:	d0fc      	beq.n	8007f28 <HAL_I2C_Mem_Write+0x134>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8007f2e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007f30:	2bff      	cmp	r3, #255	; 0xff
 8007f32:	d957      	bls.n	8007fe4 <HAL_I2C_Mem_Write+0x1f0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8007f34:	20ff      	movs	r0, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8007f36:	4641      	mov	r1, r8
 8007f38:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8007f3a:	8520      	strh	r0, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8007f3c:	400b      	ands	r3, r1
 8007f3e:	4843      	ldr	r0, [pc, #268]	; (800804c <HAL_I2C_Mem_Write+0x258>)
 8007f40:	432b      	orrs	r3, r5
 8007f42:	4303      	orrs	r3, r0
 8007f44:	6053      	str	r3, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | I2C_CR2_START | I2C_CR2_STOP)), \
             (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) |
                        (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | (uint32_t)Mode | (uint32_t)Request));
}
 8007f46:	e7ce      	b.n	8007ee6 <HAL_I2C_Mem_Write+0xf2>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8007f48:	2580      	movs	r5, #128	; 0x80
      return  HAL_ERROR;
 8007f4a:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8007f4c:	00af      	lsls	r7, r5, #2
 8007f4e:	6467      	str	r7, [r4, #68]	; 0x44
}
 8007f50:	bcf0      	pop	{r4, r5, r6, r7}
 8007f52:	46bb      	mov	fp, r7
 8007f54:	46b2      	mov	sl, r6
 8007f56:	46a9      	mov	r9, r5
 8007f58:	46a0      	mov	r8, r4
 8007f5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_BUSY;
 8007f5c:	2002      	movs	r0, #2
 8007f5e:	e7f7      	b.n	8007f50 <HAL_I2C_Mem_Write+0x15c>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8007f60:	2120      	movs	r1, #32
        hi2c->State = HAL_I2C_STATE_READY;
 8007f62:	2041      	movs	r0, #65	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8007f64:	2200      	movs	r2, #0
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8007f66:	6c66      	ldr	r6, [r4, #68]	; 0x44
 8007f68:	430e      	orrs	r6, r1
 8007f6a:	6466      	str	r6, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8007f6c:	5421      	strb	r1, [r4, r0]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8007f6e:	3122      	adds	r1, #34	; 0x22
 8007f70:	5462      	strb	r2, [r4, r1]
        __HAL_UNLOCK(hi2c);
 8007f72:	3902      	subs	r1, #2
 8007f74:	5462      	strb	r2, [r4, r1]
          return HAL_ERROR;
 8007f76:	2001      	movs	r0, #1
 8007f78:	e7ea      	b.n	8007f50 <HAL_I2C_Mem_Write+0x15c>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007f7a:	698b      	ldr	r3, [r1, #24]
 8007f7c:	421f      	tst	r7, r3
 8007f7e:	d19d      	bne.n	8007ebc <HAL_I2C_Mem_Write+0xc8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007f80:	f7ff fc52 	bl	8007828 <HAL_GetTick>
 8007f84:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007f86:	1b81      	subs	r1, r0, r6
 8007f88:	428a      	cmp	r2, r1
 8007f8a:	d34f      	bcc.n	800802c <HAL_I2C_Mem_Write+0x238>
 8007f8c:	2a00      	cmp	r2, #0
 8007f8e:	d04d      	beq.n	800802c <HAL_I2C_Mem_Write+0x238>
 8007f90:	6821      	ldr	r1, [r4, #0]
 8007f92:	e78c      	b.n	8007eae <HAL_I2C_Mem_Write+0xba>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8007f94:	23ff      	movs	r3, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8007f96:	684f      	ldr	r7, [r1, #4]
 8007f98:	4a2b      	ldr	r2, [pc, #172]	; (8008048 <HAL_I2C_Mem_Write+0x254>)
 8007f9a:	482c      	ldr	r0, [pc, #176]	; (800804c <HAL_I2C_Mem_Write+0x258>)
 8007f9c:	4017      	ands	r7, r2
 8007f9e:	432f      	orrs	r7, r5
 8007fa0:	4307      	orrs	r7, r0
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8007fa2:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8007fa4:	604f      	str	r7, [r1, #4]
}
 8007fa6:	e79a      	b.n	8007ede <HAL_I2C_Mem_Write+0xea>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8007fa8:	464f      	mov	r7, r9
 8007faa:	6820      	ldr	r0, [r4, #0]
 8007fac:	0a39      	lsrs	r1, r7, #8
 8007fae:	6281      	str	r1, [r0, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007fb0:	0032      	movs	r2, r6
 8007fb2:	0020      	movs	r0, r4
 8007fb4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007fb6:	f7ff fdf9 	bl	8007bac <I2C_WaitOnTXISFlagUntilTimeout>
 8007fba:	2800      	cmp	r0, #0
 8007fbc:	d100      	bne.n	8007fc0 <HAL_I2C_Mem_Write+0x1cc>
 8007fbe:	e771      	b.n	8007ea4 <HAL_I2C_Mem_Write+0xb0>
      __HAL_UNLOCK(hi2c);
 8007fc0:	2040      	movs	r0, #64	; 0x40
 8007fc2:	2200      	movs	r2, #0
 8007fc4:	5422      	strb	r2, [r4, r0]
      return HAL_ERROR;
 8007fc6:	2001      	movs	r0, #1
 8007fc8:	e7c2      	b.n	8007f50 <HAL_I2C_Mem_Write+0x15c>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007fca:	6993      	ldr	r3, [r2, #24]
 8007fcc:	421f      	tst	r7, r3
 8007fce:	d1ae      	bne.n	8007f2e <HAL_I2C_Mem_Write+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007fd0:	f7ff fc2a 	bl	8007828 <HAL_GetTick>
 8007fd4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007fd6:	1b82      	subs	r2, r0, r6
 8007fd8:	4291      	cmp	r1, r2
 8007fda:	d3c1      	bcc.n	8007f60 <HAL_I2C_Mem_Write+0x16c>
 8007fdc:	2900      	cmp	r1, #0
 8007fde:	d0bf      	beq.n	8007f60 <HAL_I2C_Mem_Write+0x16c>
 8007fe0:	6822      	ldr	r2, [r4, #0]
 8007fe2:	e79e      	b.n	8007f22 <HAL_I2C_Mem_Write+0x12e>
  MODIFY_REG(hi2c->Instance->CR2,
 8007fe4:	4640      	mov	r0, r8
          hi2c->XferSize = hi2c->XferCount;
 8007fe6:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 8007fe8:	b28b      	uxth	r3, r1
  MODIFY_REG(hi2c->Instance->CR2,
 8007fea:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
 8007fec:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8007fee:	4001      	ands	r1, r0
 8007ff0:	b2db      	uxtb	r3, r3
 8007ff2:	4329      	orrs	r1, r5
 8007ff4:	0418      	lsls	r0, r3, #16
 8007ff6:	4308      	orrs	r0, r1
 8007ff8:	2180      	movs	r1, #128	; 0x80
 8007ffa:	048b      	lsls	r3, r1, #18
 8007ffc:	4318      	orrs	r0, r3
 8007ffe:	6050      	str	r0, [r2, #4]
}
 8008000:	e771      	b.n	8007ee6 <HAL_I2C_Mem_Write+0xf2>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008002:	0032      	movs	r2, r6
 8008004:	0020      	movs	r0, r4
 8008006:	990c      	ldr	r1, [sp, #48]	; 0x30
 8008008:	f7ff fe32 	bl	8007c70 <I2C_WaitOnSTOPFlagUntilTimeout>
 800800c:	2800      	cmp	r0, #0
 800800e:	d1b2      	bne.n	8007f76 <HAL_I2C_Mem_Write+0x182>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008010:	2720      	movs	r7, #32
    hi2c->State = HAL_I2C_STATE_READY;
 8008012:	2141      	movs	r1, #65	; 0x41
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008014:	6826      	ldr	r6, [r4, #0]
    I2C_RESET_CR2(hi2c);
 8008016:	4d0e      	ldr	r5, [pc, #56]	; (8008050 <HAL_I2C_Mem_Write+0x25c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008018:	61f7      	str	r7, [r6, #28]
    I2C_RESET_CR2(hi2c);
 800801a:	6873      	ldr	r3, [r6, #4]
 800801c:	402b      	ands	r3, r5
 800801e:	6073      	str	r3, [r6, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8008020:	5467      	strb	r7, [r4, r1]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8008022:	3101      	adds	r1, #1
 8008024:	5460      	strb	r0, [r4, r1]
    __HAL_UNLOCK(hi2c);
 8008026:	3902      	subs	r1, #2
 8008028:	5460      	strb	r0, [r4, r1]
    return HAL_OK;
 800802a:	e791      	b.n	8007f50 <HAL_I2C_Mem_Write+0x15c>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800802c:	2520      	movs	r5, #32
        hi2c->State = HAL_I2C_STATE_READY;
 800802e:	2041      	movs	r0, #65	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8008030:	2300      	movs	r3, #0
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8008032:	6c66      	ldr	r6, [r4, #68]	; 0x44
 8008034:	432e      	orrs	r6, r5
 8008036:	6466      	str	r6, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8008038:	5425      	strb	r5, [r4, r0]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800803a:	3001      	adds	r0, #1
 800803c:	5423      	strb	r3, [r4, r0]
    return HAL_ERROR;
 800803e:	e7bf      	b.n	8007fc0 <HAL_I2C_Mem_Write+0x1cc>
 8008040:	fc009800 	.word	0xfc009800
 8008044:	81002000 	.word	0x81002000
 8008048:	fc009c00 	.word	0xfc009c00
 800804c:	01ff0000 	.word	0x01ff0000
 8008050:	fe00e800 	.word	0xfe00e800

08008054 <HAL_I2C_Mem_Read>:
{
 8008054:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008056:	464e      	mov	r6, r9
 8008058:	4645      	mov	r5, r8
 800805a:	46de      	mov	lr, fp
 800805c:	4657      	mov	r7, sl
 800805e:	0004      	movs	r4, r0
 8008060:	4689      	mov	r9, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008062:	2141      	movs	r1, #65	; 0x41
{
 8008064:	b5e0      	push	{r5, r6, r7, lr}
 8008066:	b083      	sub	sp, #12
 8008068:	4698      	mov	r8, r3
 800806a:	ab0c      	add	r3, sp, #48	; 0x30
 800806c:	9201      	str	r2, [sp, #4]
 800806e:	cb04      	ldmia	r3!, {r2}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008070:	5c66      	ldrb	r6, [r4, r1]
{
 8008072:	8818      	ldrh	r0, [r3, #0]
 8008074:	4692      	mov	sl, r2
 8008076:	4683      	mov	fp, r0
 8008078:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 800807a:	2e20      	cmp	r6, #32
 800807c:	d000      	beq.n	8008080 <HAL_I2C_Mem_Read+0x2c>
 800807e:	e0a4      	b.n	80081ca <HAL_I2C_Mem_Read+0x176>
    if ((pData == NULL) || (Size == 0U))
 8008080:	2a00      	cmp	r2, #0
 8008082:	d100      	bne.n	8008086 <HAL_I2C_Mem_Read+0x32>
 8008084:	e096      	b.n	80081b4 <HAL_I2C_Mem_Read+0x160>
 8008086:	2800      	cmp	r0, #0
 8008088:	d100      	bne.n	800808c <HAL_I2C_Mem_Read+0x38>
 800808a:	e093      	b.n	80081b4 <HAL_I2C_Mem_Read+0x160>
    __HAL_LOCK(hi2c);
 800808c:	2040      	movs	r0, #64	; 0x40
 800808e:	5c22      	ldrb	r2, [r4, r0]
 8008090:	2a01      	cmp	r2, #1
 8008092:	d100      	bne.n	8008096 <HAL_I2C_Mem_Read+0x42>
 8008094:	e099      	b.n	80081ca <HAL_I2C_Mem_Read+0x176>
 8008096:	2101      	movs	r1, #1
 8008098:	5421      	strb	r1, [r4, r0]
    tickstart = HAL_GetTick();
 800809a:	f7ff fbc5 	bl	8007828 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800809e:	2680      	movs	r6, #128	; 0x80
    tickstart = HAL_GetTick();
 80080a0:	0007      	movs	r7, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80080a2:	0236      	lsls	r6, r6, #8
 80080a4:	e004      	b.n	80080b0 <HAL_I2C_Mem_Read+0x5c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80080a6:	f7ff fbbf 	bl	8007828 <HAL_GetTick>
 80080aa:	1bc1      	subs	r1, r0, r7
 80080ac:	2919      	cmp	r1, #25
 80080ae:	d874      	bhi.n	800819a <HAL_I2C_Mem_Read+0x146>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80080b0:	6822      	ldr	r2, [r4, #0]
 80080b2:	6993      	ldr	r3, [r2, #24]
 80080b4:	0019      	movs	r1, r3
 80080b6:	4031      	ands	r1, r6
 80080b8:	4233      	tst	r3, r6
 80080ba:	d1f4      	bne.n	80080a6 <HAL_I2C_Mem_Read+0x52>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80080bc:	2641      	movs	r6, #65	; 0x41
 80080be:	2022      	movs	r0, #34	; 0x22
 80080c0:	55a0      	strb	r0, [r4, r6]
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80080c2:	3601      	adds	r6, #1
 80080c4:	301e      	adds	r0, #30
 80080c6:	55a0      	strb	r0, [r4, r6]
    hi2c->pBuffPtr  = pData;
 80080c8:	4653      	mov	r3, sl
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80080ca:	6461      	str	r1, [r4, #68]	; 0x44
    hi2c->XferISR   = NULL;
 80080cc:	6361      	str	r1, [r4, #52]	; 0x34
  MODIFY_REG(hi2c->Instance->CR2,
 80080ce:	4649      	mov	r1, r9
    hi2c->XferCount = Size;
 80080d0:	465e      	mov	r6, fp
    hi2c->pBuffPtr  = pData;
 80080d2:	6263      	str	r3, [r4, #36]	; 0x24
  MODIFY_REG(hi2c->Instance->CR2,
 80080d4:	058b      	lsls	r3, r1, #22
    hi2c->XferCount = Size;
 80080d6:	8566      	strh	r6, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 80080d8:	0d9e      	lsrs	r6, r3, #22
 80080da:	46b1      	mov	r9, r6
 80080dc:	4643      	mov	r3, r8
 80080de:	b2de      	uxtb	r6, r3
 80080e0:	464b      	mov	r3, r9
 80080e2:	6850      	ldr	r0, [r2, #4]
 80080e4:	4979      	ldr	r1, [pc, #484]	; (80082cc <HAL_I2C_Mem_Read+0x278>)
 80080e6:	4008      	ands	r0, r1
 80080e8:	0431      	lsls	r1, r6, #16
 80080ea:	4308      	orrs	r0, r1
 80080ec:	4e78      	ldr	r6, [pc, #480]	; (80082d0 <HAL_I2C_Mem_Read+0x27c>)
 80080ee:	4318      	orrs	r0, r3
 80080f0:	4330      	orrs	r0, r6
 80080f2:	6050      	str	r0, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80080f4:	0029      	movs	r1, r5
 80080f6:	003a      	movs	r2, r7
 80080f8:	0020      	movs	r0, r4
 80080fa:	f7ff fd57 	bl	8007bac <I2C_WaitOnTXISFlagUntilTimeout>
 80080fe:	2800      	cmp	r0, #0
 8008100:	d000      	beq.n	8008104 <HAL_I2C_Mem_Read+0xb0>
 8008102:	e0cc      	b.n	800829e <HAL_I2C_Mem_Read+0x24a>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008104:	4642      	mov	r2, r8
 8008106:	2a01      	cmp	r2, #1
 8008108:	d000      	beq.n	800810c <HAL_I2C_Mem_Read+0xb8>
 800810a:	e07e      	b.n	800820a <HAL_I2C_Mem_Read+0x1b6>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800810c:	4668      	mov	r0, sp
 800810e:	6823      	ldr	r3, [r4, #0]
 8008110:	7906      	ldrb	r6, [r0, #4]
 8008112:	629e      	str	r6, [r3, #40]	; 0x28
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008114:	2640      	movs	r6, #64	; 0x40
 8008116:	1c6a      	adds	r2, r5, #1
 8008118:	d000      	beq.n	800811c <HAL_I2C_Mem_Read+0xc8>
 800811a:	e0aa      	b.n	8008272 <HAL_I2C_Mem_Read+0x21e>
 800811c:	2140      	movs	r1, #64	; 0x40
 800811e:	699e      	ldr	r6, [r3, #24]
 8008120:	4231      	tst	r1, r6
 8008122:	d0fc      	beq.n	800811e <HAL_I2C_Mem_Read+0xca>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8008124:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8008126:	28ff      	cmp	r0, #255	; 0xff
 8008128:	d800      	bhi.n	800812c <HAL_I2C_Mem_Read+0xd8>
 800812a:	e0bd      	b.n	80082a8 <HAL_I2C_Mem_Read+0x254>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800812c:	22ff      	movs	r2, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 800812e:	4649      	mov	r1, r9
 8008130:	685e      	ldr	r6, [r3, #4]
 8008132:	4866      	ldr	r0, [pc, #408]	; (80082cc <HAL_I2C_Mem_Read+0x278>)
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8008134:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8008136:	4006      	ands	r6, r0
 8008138:	4a66      	ldr	r2, [pc, #408]	; (80082d4 <HAL_I2C_Mem_Read+0x280>)
 800813a:	430e      	orrs	r6, r1
 800813c:	4316      	orrs	r6, r2
 800813e:	605e      	str	r6, [r3, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008140:	2604      	movs	r6, #4
 8008142:	46b0      	mov	r8, r6
 8008144:	2680      	movs	r6, #128	; 0x80
 8008146:	1c6a      	adds	r2, r5, #1
 8008148:	d11c      	bne.n	8008184 <HAL_I2C_Mem_Read+0x130>
 800814a:	4640      	mov	r0, r8
 800814c:	699a      	ldr	r2, [r3, #24]
 800814e:	4210      	tst	r0, r2
 8008150:	d0fb      	beq.n	800814a <HAL_I2C_Mem_Read+0xf6>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8008152:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8008154:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008156:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
 8008158:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800815a:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800815c:	8d20      	ldrh	r0, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
 800815e:	3201      	adds	r2, #1
      hi2c->XferCount--;
 8008160:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 8008162:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8008164:	b29a      	uxth	r2, r3
      hi2c->XferSize--;
 8008166:	3801      	subs	r0, #1
      hi2c->XferCount--;
 8008168:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800816a:	b281      	uxth	r1, r0
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800816c:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800816e:	8521      	strh	r1, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8008170:	2800      	cmp	r0, #0
 8008172:	d001      	beq.n	8008178 <HAL_I2C_Mem_Read+0x124>
 8008174:	2900      	cmp	r1, #0
 8008176:	d034      	beq.n	80081e2 <HAL_I2C_Mem_Read+0x18e>
    } while (hi2c->XferCount > 0U);
 8008178:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800817a:	2a00      	cmp	r2, #0
 800817c:	d054      	beq.n	8008228 <HAL_I2C_Mem_Read+0x1d4>
 800817e:	6823      	ldr	r3, [r4, #0]
 8008180:	1c6a      	adds	r2, r5, #1
 8008182:	d0e2      	beq.n	800814a <HAL_I2C_Mem_Read+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008184:	4641      	mov	r1, r8
 8008186:	6998      	ldr	r0, [r3, #24]
 8008188:	4201      	tst	r1, r0
 800818a:	d1e2      	bne.n	8008152 <HAL_I2C_Mem_Read+0xfe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800818c:	f7ff fb4c 	bl	8007828 <HAL_GetTick>
 8008190:	1bc3      	subs	r3, r0, r7
 8008192:	429d      	cmp	r5, r3
 8008194:	d301      	bcc.n	800819a <HAL_I2C_Mem_Read+0x146>
 8008196:	2d00      	cmp	r5, #0
 8008198:	d1f1      	bne.n	800817e <HAL_I2C_Mem_Read+0x12a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800819a:	2520      	movs	r5, #32
        hi2c->State = HAL_I2C_STATE_READY;
 800819c:	2341      	movs	r3, #65	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800819e:	2000      	movs	r0, #0
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80081a0:	6c67      	ldr	r7, [r4, #68]	; 0x44
 80081a2:	432f      	orrs	r7, r5
 80081a4:	6467      	str	r7, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80081a6:	54e5      	strb	r5, [r4, r3]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80081a8:	3522      	adds	r5, #34	; 0x22
 80081aa:	5560      	strb	r0, [r4, r5]
        __HAL_UNLOCK(hi2c);
 80081ac:	3d02      	subs	r5, #2
 80081ae:	5560      	strb	r0, [r4, r5]
          return HAL_ERROR;
 80081b0:	2001      	movs	r0, #1
 80081b2:	e003      	b.n	80081bc <HAL_I2C_Mem_Read+0x168>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80081b4:	2280      	movs	r2, #128	; 0x80
      return  HAL_ERROR;
 80081b6:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80081b8:	0096      	lsls	r6, r2, #2
 80081ba:	6466      	str	r6, [r4, #68]	; 0x44
}
 80081bc:	b003      	add	sp, #12
 80081be:	bcf0      	pop	{r4, r5, r6, r7}
 80081c0:	46bb      	mov	fp, r7
 80081c2:	46b2      	mov	sl, r6
 80081c4:	46a9      	mov	r9, r5
 80081c6:	46a0      	mov	r8, r4
 80081c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_BUSY;
 80081ca:	2002      	movs	r0, #2
 80081cc:	e7f6      	b.n	80081bc <HAL_I2C_Mem_Read+0x168>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80081ce:	6991      	ldr	r1, [r2, #24]
 80081d0:	420e      	tst	r6, r1
 80081d2:	d10c      	bne.n	80081ee <HAL_I2C_Mem_Read+0x19a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80081d4:	f7ff fb28 	bl	8007828 <HAL_GetTick>
 80081d8:	1bc3      	subs	r3, r0, r7
 80081da:	429d      	cmp	r5, r3
 80081dc:	d3dd      	bcc.n	800819a <HAL_I2C_Mem_Read+0x146>
 80081de:	2d00      	cmp	r5, #0
 80081e0:	d0db      	beq.n	800819a <HAL_I2C_Mem_Read+0x146>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80081e2:	6822      	ldr	r2, [r4, #0]
 80081e4:	1c6b      	adds	r3, r5, #1
 80081e6:	d1f2      	bne.n	80081ce <HAL_I2C_Mem_Read+0x17a>
 80081e8:	6990      	ldr	r0, [r2, #24]
 80081ea:	4206      	tst	r6, r0
 80081ec:	d0fc      	beq.n	80081e8 <HAL_I2C_Mem_Read+0x194>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80081ee:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 80081f0:	29ff      	cmp	r1, #255	; 0xff
 80081f2:	d92e      	bls.n	8008252 <HAL_I2C_Mem_Read+0x1fe>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80081f4:	20ff      	movs	r0, #255	; 0xff
 80081f6:	8520      	strh	r0, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 80081f8:	4648      	mov	r0, r9
 80081fa:	6853      	ldr	r3, [r2, #4]
 80081fc:	4936      	ldr	r1, [pc, #216]	; (80082d8 <HAL_I2C_Mem_Read+0x284>)
 80081fe:	400b      	ands	r3, r1
 8008200:	4936      	ldr	r1, [pc, #216]	; (80082dc <HAL_I2C_Mem_Read+0x288>)
 8008202:	4303      	orrs	r3, r0
 8008204:	430b      	orrs	r3, r1
 8008206:	6053      	str	r3, [r2, #4]
}
 8008208:	e7b6      	b.n	8008178 <HAL_I2C_Mem_Read+0x124>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800820a:	9e01      	ldr	r6, [sp, #4]
 800820c:	6820      	ldr	r0, [r4, #0]
 800820e:	0a31      	lsrs	r1, r6, #8
 8008210:	6281      	str	r1, [r0, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008212:	003a      	movs	r2, r7
 8008214:	0029      	movs	r1, r5
 8008216:	0020      	movs	r0, r4
 8008218:	f7ff fcc8 	bl	8007bac <I2C_WaitOnTXISFlagUntilTimeout>
 800821c:	2800      	cmp	r0, #0
 800821e:	d13e      	bne.n	800829e <HAL_I2C_Mem_Read+0x24a>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8008220:	6823      	ldr	r3, [r4, #0]
 8008222:	b2f2      	uxtb	r2, r6
 8008224:	629a      	str	r2, [r3, #40]	; 0x28
 8008226:	e775      	b.n	8008114 <HAL_I2C_Mem_Read+0xc0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008228:	003a      	movs	r2, r7
 800822a:	0029      	movs	r1, r5
 800822c:	0020      	movs	r0, r4
 800822e:	f7ff fd1f 	bl	8007c70 <I2C_WaitOnSTOPFlagUntilTimeout>
 8008232:	2800      	cmp	r0, #0
 8008234:	d147      	bne.n	80082c6 <HAL_I2C_Mem_Read+0x272>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008236:	2720      	movs	r7, #32
    hi2c->State = HAL_I2C_STATE_READY;
 8008238:	2141      	movs	r1, #65	; 0x41
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800823a:	6826      	ldr	r6, [r4, #0]
    I2C_RESET_CR2(hi2c);
 800823c:	4d28      	ldr	r5, [pc, #160]	; (80082e0 <HAL_I2C_Mem_Read+0x28c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800823e:	61f7      	str	r7, [r6, #28]
    I2C_RESET_CR2(hi2c);
 8008240:	6873      	ldr	r3, [r6, #4]
 8008242:	402b      	ands	r3, r5
 8008244:	6073      	str	r3, [r6, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8008246:	5467      	strb	r7, [r4, r1]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8008248:	3101      	adds	r1, #1
 800824a:	5460      	strb	r0, [r4, r1]
    __HAL_UNLOCK(hi2c);
 800824c:	3902      	subs	r1, #2
 800824e:	5460      	strb	r0, [r4, r1]
    return HAL_OK;
 8008250:	e7b4      	b.n	80081bc <HAL_I2C_Mem_Read+0x168>
          hi2c->XferSize = hi2c->XferCount;
 8008252:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 8008254:	4820      	ldr	r0, [pc, #128]	; (80082d8 <HAL_I2C_Mem_Read+0x284>)
 8008256:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
 8008258:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2,
 800825a:	4001      	ands	r1, r0
 800825c:	4648      	mov	r0, r9
          hi2c->XferSize = hi2c->XferCount;
 800825e:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8008260:	b2db      	uxtb	r3, r3
 8008262:	4301      	orrs	r1, r0
 8008264:	0418      	lsls	r0, r3, #16
 8008266:	4308      	orrs	r0, r1
 8008268:	2180      	movs	r1, #128	; 0x80
 800826a:	048b      	lsls	r3, r1, #18
 800826c:	4318      	orrs	r0, r3
 800826e:	6050      	str	r0, [r2, #4]
}
 8008270:	e782      	b.n	8008178 <HAL_I2C_Mem_Read+0x124>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008272:	6999      	ldr	r1, [r3, #24]
 8008274:	420e      	tst	r6, r1
 8008276:	d000      	beq.n	800827a <HAL_I2C_Mem_Read+0x226>
 8008278:	e754      	b.n	8008124 <HAL_I2C_Mem_Read+0xd0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800827a:	f7ff fad5 	bl	8007828 <HAL_GetTick>
 800827e:	1bc3      	subs	r3, r0, r7
 8008280:	429d      	cmp	r5, r3
 8008282:	d303      	bcc.n	800828c <HAL_I2C_Mem_Read+0x238>
 8008284:	2d00      	cmp	r5, #0
 8008286:	d001      	beq.n	800828c <HAL_I2C_Mem_Read+0x238>
 8008288:	6823      	ldr	r3, [r4, #0]
 800828a:	e744      	b.n	8008116 <HAL_I2C_Mem_Read+0xc2>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800828c:	2720      	movs	r7, #32
        hi2c->State = HAL_I2C_STATE_READY;
 800828e:	2041      	movs	r0, #65	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8008290:	2200      	movs	r2, #0
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8008292:	6c65      	ldr	r5, [r4, #68]	; 0x44
 8008294:	433d      	orrs	r5, r7
 8008296:	6465      	str	r5, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8008298:	5427      	strb	r7, [r4, r0]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800829a:	3001      	adds	r0, #1
 800829c:	5422      	strb	r2, [r4, r0]
      __HAL_UNLOCK(hi2c);
 800829e:	2040      	movs	r0, #64	; 0x40
 80082a0:	2200      	movs	r2, #0
 80082a2:	5422      	strb	r2, [r4, r0]
      return HAL_ERROR;
 80082a4:	2001      	movs	r0, #1
 80082a6:	e789      	b.n	80081bc <HAL_I2C_Mem_Read+0x168>
      hi2c->XferSize = hi2c->XferCount;
 80082a8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 80082aa:	4808      	ldr	r0, [pc, #32]	; (80082cc <HAL_I2C_Mem_Read+0x278>)
      hi2c->XferSize = hi2c->XferCount;
 80082ac:	b296      	uxth	r6, r2
  MODIFY_REG(hi2c->Instance->CR2,
 80082ae:	464a      	mov	r2, r9
 80082b0:	6859      	ldr	r1, [r3, #4]
      hi2c->XferSize = hi2c->XferCount;
 80082b2:	8526      	strh	r6, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 80082b4:	4001      	ands	r1, r0
 80082b6:	b2f6      	uxtb	r6, r6
 80082b8:	4311      	orrs	r1, r2
 80082ba:	0430      	lsls	r0, r6, #16
 80082bc:	4308      	orrs	r0, r1
 80082be:	4909      	ldr	r1, [pc, #36]	; (80082e4 <HAL_I2C_Mem_Read+0x290>)
 80082c0:	4308      	orrs	r0, r1
 80082c2:	6058      	str	r0, [r3, #4]
}
 80082c4:	e73c      	b.n	8008140 <HAL_I2C_Mem_Read+0xec>
      return HAL_ERROR;
 80082c6:	2001      	movs	r0, #1
 80082c8:	e778      	b.n	80081bc <HAL_I2C_Mem_Read+0x168>
 80082ca:	46c0      	nop			; (mov r8, r8)
 80082cc:	fc009800 	.word	0xfc009800
 80082d0:	80002000 	.word	0x80002000
 80082d4:	81ff2400 	.word	0x81ff2400
 80082d8:	fc009c00 	.word	0xfc009c00
 80082dc:	01ff0000 	.word	0x01ff0000
 80082e0:	fe00e800 	.word	0xfe00e800
 80082e4:	82002400 	.word	0x82002400

080082e8 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80082e8:	b5f0      	push	{r4, r5, r6, r7, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80082ea:	2541      	movs	r5, #65	; 0x41
 80082ec:	5d43      	ldrb	r3, [r0, r5]
{
 80082ee:	000a      	movs	r2, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 80082f0:	b2de      	uxtb	r6, r3
 80082f2:	2b20      	cmp	r3, #32
 80082f4:	d11b      	bne.n	800832e <HAL_I2CEx_ConfigAnalogFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80082f6:	2740      	movs	r7, #64	; 0x40
 80082f8:	5dc1      	ldrb	r1, [r0, r7]
 80082fa:	2901      	cmp	r1, #1
 80082fc:	d017      	beq.n	800832e <HAL_I2CEx_ConfigAnalogFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80082fe:	2101      	movs	r1, #1
    hi2c->State = HAL_I2C_STATE_BUSY;
 8008300:	2424      	movs	r4, #36	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 8008302:	468c      	mov	ip, r1
    hi2c->State = HAL_I2C_STATE_BUSY;
 8008304:	5544      	strb	r4, [r0, r5]
    __HAL_I2C_DISABLE(hi2c);
 8008306:	6803      	ldr	r3, [r0, #0]
 8008308:	681c      	ldr	r4, [r3, #0]
 800830a:	438c      	bics	r4, r1
 800830c:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 800830e:	681c      	ldr	r4, [r3, #0]
 8008310:	4908      	ldr	r1, [pc, #32]	; (8008334 <HAL_I2CEx_ConfigAnalogFilter+0x4c>)
 8008312:	400c      	ands	r4, r1

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;

    __HAL_I2C_ENABLE(hi2c);
 8008314:	4661      	mov	r1, ip
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8008316:	601c      	str	r4, [r3, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
 8008318:	681c      	ldr	r4, [r3, #0]
 800831a:	4314      	orrs	r4, r2
 800831c:	601c      	str	r4, [r3, #0]
    __HAL_I2C_ENABLE(hi2c);
 800831e:	681a      	ldr	r2, [r3, #0]
 8008320:	430a      	orrs	r2, r1
 8008322:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008324:	5546      	strb	r6, [r0, r5]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8008326:	2500      	movs	r5, #0
 8008328:	55c5      	strb	r5, [r0, r7]

    return HAL_OK;
 800832a:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800832c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_BUSY;
 800832e:	2002      	movs	r0, #2
 8008330:	e7fc      	b.n	800832c <HAL_I2CEx_ConfigAnalogFilter+0x44>
 8008332:	46c0      	nop			; (mov r8, r8)
 8008334:	ffffefff 	.word	0xffffefff

08008338 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8008338:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800833a:	2541      	movs	r5, #65	; 0x41
 800833c:	5d43      	ldrb	r3, [r0, r5]
 800833e:	b2de      	uxtb	r6, r3
 8008340:	2b20      	cmp	r3, #32
 8008342:	d11a      	bne.n	800837a <HAL_I2CEx_ConfigDigitalFilter+0x42>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8008344:	2740      	movs	r7, #64	; 0x40
 8008346:	5dc2      	ldrb	r2, [r0, r7]
 8008348:	2a01      	cmp	r2, #1
 800834a:	d016      	beq.n	800837a <HAL_I2CEx_ConfigDigitalFilter+0x42>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800834c:	2324      	movs	r3, #36	; 0x24
 800834e:	5543      	strb	r3, [r0, r5]

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8008350:	3b23      	subs	r3, #35	; 0x23
 8008352:	469c      	mov	ip, r3
 8008354:	6804      	ldr	r4, [r0, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8008356:	0209      	lsls	r1, r1, #8
    __HAL_I2C_DISABLE(hi2c);
 8008358:	6822      	ldr	r2, [r4, #0]
 800835a:	439a      	bics	r2, r3
 800835c:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->CR1;
 800835e:	6822      	ldr	r2, [r4, #0]
    tmpreg &= ~(I2C_CR1_DNF);
 8008360:	4b07      	ldr	r3, [pc, #28]	; (8008380 <HAL_I2CEx_ConfigDigitalFilter+0x48>)
 8008362:	401a      	ands	r2, r3
    tmpreg |= DigitalFilter << 8U;
 8008364:	4311      	orrs	r1, r2

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;

    __HAL_I2C_ENABLE(hi2c);
 8008366:	4662      	mov	r2, ip
    hi2c->Instance->CR1 = tmpreg;
 8008368:	6021      	str	r1, [r4, #0]
    __HAL_I2C_ENABLE(hi2c);
 800836a:	6823      	ldr	r3, [r4, #0]
 800836c:	4313      	orrs	r3, r2
 800836e:	6023      	str	r3, [r4, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008370:	5546      	strb	r6, [r0, r5]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8008372:	2500      	movs	r5, #0
 8008374:	55c5      	strb	r5, [r0, r7]

    return HAL_OK;
 8008376:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8008378:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_BUSY;
 800837a:	2002      	movs	r0, #2
 800837c:	e7fc      	b.n	8008378 <HAL_I2CEx_ConfigDigitalFilter+0x40>
 800837e:	46c0      	nop			; (mov r8, r8)
 8008380:	fffff0ff 	.word	0xfffff0ff

08008384 <HAL_IWDG_Init>:
  * @param  hiwdg  pointer to a IWDG_HandleTypeDef structure that contains
  *                the configuration information for the specified IWDG module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_IWDG_Init(IWDG_HandleTypeDef *hiwdg)
{
 8008384:	b570      	push	{r4, r5, r6, lr}
 8008386:	1e04      	subs	r4, r0, #0
  uint32_t tickstart;

  /* Check the IWDG handle allocation */
  if (hiwdg == NULL)
 8008388:	d01e      	beq.n	80083c8 <HAL_IWDG_Init+0x44>
  assert_param(IS_IWDG_PRESCALER(hiwdg->Init.Prescaler));
  assert_param(IS_IWDG_RELOAD(hiwdg->Init.Reload));
  assert_param(IS_IWDG_WINDOW(hiwdg->Init.Window));

  /* Enable IWDG. LSI is turned on automatically */
  __HAL_IWDG_START(hiwdg);
 800838a:	6803      	ldr	r3, [r0, #0]
  /* Enable write access to IWDG_PR, IWDG_RLR and IWDG_WINR registers by writing
  0x5555 in KR */
  IWDG_ENABLE_WRITE_ACCESS(hiwdg);

  /* Write to IWDG registers the Prescaler & Reload values to work with */
  hiwdg->Instance->PR = hiwdg->Init.Prescaler;
 800838c:	6861      	ldr	r1, [r4, #4]
  hiwdg->Instance->RLR = hiwdg->Init.Reload;
 800838e:	68a5      	ldr	r5, [r4, #8]
  __HAL_IWDG_START(hiwdg);
 8008390:	4a10      	ldr	r2, [pc, #64]	; (80083d4 <HAL_IWDG_Init+0x50>)
  IWDG_ENABLE_WRITE_ACCESS(hiwdg);
 8008392:	4811      	ldr	r0, [pc, #68]	; (80083d8 <HAL_IWDG_Init+0x54>)
  __HAL_IWDG_START(hiwdg);
 8008394:	601a      	str	r2, [r3, #0]
  IWDG_ENABLE_WRITE_ACCESS(hiwdg);
 8008396:	6018      	str	r0, [r3, #0]
  hiwdg->Instance->PR = hiwdg->Init.Prescaler;
 8008398:	6059      	str	r1, [r3, #4]
  hiwdg->Instance->RLR = hiwdg->Init.Reload;
 800839a:	609d      	str	r5, [r3, #8]

  /* Check pending flag, if previous update not done, return timeout */
  tickstart = HAL_GetTick();
 800839c:	f7ff fa44 	bl	8007828 <HAL_GetTick>
 80083a0:	0005      	movs	r5, r0

  /* Wait for register to be updated */
  while (hiwdg->Instance->SR != 0x00u)
 80083a2:	e004      	b.n	80083ae <HAL_IWDG_Init+0x2a>
  {
    if ((HAL_GetTick() - tickstart) > HAL_IWDG_DEFAULT_TIMEOUT)
 80083a4:	f7ff fa40 	bl	8007828 <HAL_GetTick>
 80083a8:	1b43      	subs	r3, r0, r5
 80083aa:	2b26      	cmp	r3, #38	; 0x26
 80083ac:	d80a      	bhi.n	80083c4 <HAL_IWDG_Init+0x40>
  while (hiwdg->Instance->SR != 0x00u)
 80083ae:	6823      	ldr	r3, [r4, #0]
 80083b0:	68da      	ldr	r2, [r3, #12]
 80083b2:	2a00      	cmp	r2, #0
 80083b4:	d1f6      	bne.n	80083a4 <HAL_IWDG_Init+0x20>
    }
  }

  /* If window parameter is different than current value, modify window
  register */
  if (hiwdg->Instance->WINR != hiwdg->Init.Window)
 80083b6:	6918      	ldr	r0, [r3, #16]
 80083b8:	68e4      	ldr	r4, [r4, #12]
 80083ba:	42a0      	cmp	r0, r4
 80083bc:	d006      	beq.n	80083cc <HAL_IWDG_Init+0x48>
    /* Reload IWDG counter with value defined in the reload register */
    __HAL_IWDG_RELOAD_COUNTER(hiwdg);
  }

  /* Return function status */
  return HAL_OK;
 80083be:	2000      	movs	r0, #0
    hiwdg->Instance->WINR = hiwdg->Init.Window;
 80083c0:	611c      	str	r4, [r3, #16]
}
 80083c2:	bd70      	pop	{r4, r5, r6, pc}
      return HAL_TIMEOUT;
 80083c4:	2003      	movs	r0, #3
 80083c6:	e7fc      	b.n	80083c2 <HAL_IWDG_Init+0x3e>
    return HAL_ERROR;
 80083c8:	2001      	movs	r0, #1
 80083ca:	e7fa      	b.n	80083c2 <HAL_IWDG_Init+0x3e>
    __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 80083cc:	4903      	ldr	r1, [pc, #12]	; (80083dc <HAL_IWDG_Init+0x58>)
  return HAL_OK;
 80083ce:	2000      	movs	r0, #0
    __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 80083d0:	6019      	str	r1, [r3, #0]
 80083d2:	e7f6      	b.n	80083c2 <HAL_IWDG_Init+0x3e>
 80083d4:	0000cccc 	.word	0x0000cccc
 80083d8:	00005555 	.word	0x00005555
 80083dc:	0000aaaa 	.word	0x0000aaaa

080083e0 <HAL_IWDG_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_IWDG_Refresh(IWDG_HandleTypeDef *hiwdg)
{
  /* Reload IWDG counter with value defined in the reload register */
  __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 80083e0:	6803      	ldr	r3, [r0, #0]
 80083e2:	4a02      	ldr	r2, [pc, #8]	; (80083ec <HAL_IWDG_Refresh+0xc>)

  /* Return function status */
  return HAL_OK;
}
 80083e4:	2000      	movs	r0, #0
  __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 80083e6:	601a      	str	r2, [r3, #0]
}
 80083e8:	4770      	bx	lr
 80083ea:	46c0      	nop			; (mov r8, r8)
 80083ec:	0000aaaa 	.word	0x0000aaaa

080083f0 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80083f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80083f2:	46ce      	mov	lr, r9
 80083f4:	4647      	mov	r7, r8
 80083f6:	b580      	push	{r7, lr}
 80083f8:	0004      	movs	r4, r0
 80083fa:	b083      	sub	sp, #12
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80083fc:	2800      	cmp	r0, #0
 80083fe:	d100      	bne.n	8008402 <HAL_RCC_OscConfig+0x12>
 8008400:	e118      	b.n	8008634 <HAL_RCC_OscConfig+0x244>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8008402:	6803      	ldr	r3, [r0, #0]
 8008404:	07da      	lsls	r2, r3, #31
 8008406:	d52f      	bpl.n	8008468 <HAL_RCC_OscConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8008408:	210c      	movs	r1, #12
 800840a:	48c2      	ldr	r0, [pc, #776]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 800840c:	6842      	ldr	r2, [r0, #4]
 800840e:	400a      	ands	r2, r1
 8008410:	2a04      	cmp	r2, #4
 8008412:	d100      	bne.n	8008416 <HAL_RCC_OscConfig+0x26>
 8008414:	e14c      	b.n	80086b0 <HAL_RCC_OscConfig+0x2c0>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8008416:	6845      	ldr	r5, [r0, #4]
 8008418:	4029      	ands	r1, r5
 800841a:	2908      	cmp	r1, #8
 800841c:	d100      	bne.n	8008420 <HAL_RCC_OscConfig+0x30>
 800841e:	e13e      	b.n	800869e <HAL_RCC_OscConfig+0x2ae>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008420:	6863      	ldr	r3, [r4, #4]
 8008422:	2b01      	cmp	r3, #1
 8008424:	d100      	bne.n	8008428 <HAL_RCC_OscConfig+0x38>
 8008426:	e14d      	b.n	80086c4 <HAL_RCC_OscConfig+0x2d4>
 8008428:	2b00      	cmp	r3, #0
 800842a:	d100      	bne.n	800842e <HAL_RCC_OscConfig+0x3e>
 800842c:	e163      	b.n	80086f6 <HAL_RCC_OscConfig+0x306>
 800842e:	2b05      	cmp	r3, #5
 8008430:	d100      	bne.n	8008434 <HAL_RCC_OscConfig+0x44>
 8008432:	e270      	b.n	8008916 <HAL_RCC_OscConfig+0x526>
 8008434:	4db7      	ldr	r5, [pc, #732]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 8008436:	4fb8      	ldr	r7, [pc, #736]	; (8008718 <HAL_RCC_OscConfig+0x328>)
 8008438:	682e      	ldr	r6, [r5, #0]
 800843a:	4ab8      	ldr	r2, [pc, #736]	; (800871c <HAL_RCC_OscConfig+0x32c>)
 800843c:	403e      	ands	r6, r7
 800843e:	602e      	str	r6, [r5, #0]
 8008440:	6828      	ldr	r0, [r5, #0]
 8008442:	4010      	ands	r0, r2
 8008444:	6028      	str	r0, [r5, #0]

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8008446:	f7ff f9ef 	bl	8007828 <HAL_GetTick>
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800844a:	2680      	movs	r6, #128	; 0x80
        tickstart = HAL_GetTick();
 800844c:	0005      	movs	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800844e:	4fb1      	ldr	r7, [pc, #708]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 8008450:	02b6      	lsls	r6, r6, #10
 8008452:	e005      	b.n	8008460 <HAL_RCC_OscConfig+0x70>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008454:	f7ff f9e8 	bl	8007828 <HAL_GetTick>
 8008458:	1b40      	subs	r0, r0, r5
 800845a:	2864      	cmp	r0, #100	; 0x64
 800845c:	d900      	bls.n	8008460 <HAL_RCC_OscConfig+0x70>
 800845e:	e148      	b.n	80086f2 <HAL_RCC_OscConfig+0x302>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008460:	683b      	ldr	r3, [r7, #0]
 8008462:	4233      	tst	r3, r6
 8008464:	d0f6      	beq.n	8008454 <HAL_RCC_OscConfig+0x64>
 8008466:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8008468:	079a      	lsls	r2, r3, #30
 800846a:	d529      	bpl.n	80084c0 <HAL_RCC_OscConfig+0xd0>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 800846c:	210c      	movs	r1, #12
 800846e:	4ea9      	ldr	r6, [pc, #676]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 8008470:	6877      	ldr	r7, [r6, #4]
 8008472:	4239      	tst	r1, r7
 8008474:	d100      	bne.n	8008478 <HAL_RCC_OscConfig+0x88>
 8008476:	e0ec      	b.n	8008652 <HAL_RCC_OscConfig+0x262>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8008478:	6870      	ldr	r0, [r6, #4]
 800847a:	4001      	ands	r1, r0
 800847c:	2908      	cmp	r1, #8
 800847e:	d100      	bne.n	8008482 <HAL_RCC_OscConfig+0x92>
 8008480:	e0de      	b.n	8008640 <HAL_RCC_OscConfig+0x250>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8008482:	68e3      	ldr	r3, [r4, #12]
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8008484:	4da3      	ldr	r5, [pc, #652]	; (8008714 <HAL_RCC_OscConfig+0x324>)
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8008486:	2b00      	cmp	r3, #0
 8008488:	d100      	bne.n	800848c <HAL_RCC_OscConfig+0x9c>
 800848a:	e175      	b.n	8008778 <HAL_RCC_OscConfig+0x388>
        __HAL_RCC_HSI_ENABLE();
 800848c:	2201      	movs	r2, #1
 800848e:	6828      	ldr	r0, [r5, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008490:	2702      	movs	r7, #2
        __HAL_RCC_HSI_ENABLE();
 8008492:	4310      	orrs	r0, r2
 8008494:	6028      	str	r0, [r5, #0]
        tickstart = HAL_GetTick();
 8008496:	f7ff f9c7 	bl	8007828 <HAL_GetTick>
 800849a:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800849c:	e005      	b.n	80084aa <HAL_RCC_OscConfig+0xba>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800849e:	f7ff f9c3 	bl	8007828 <HAL_GetTick>
 80084a2:	1b82      	subs	r2, r0, r6
 80084a4:	2a02      	cmp	r2, #2
 80084a6:	d900      	bls.n	80084aa <HAL_RCC_OscConfig+0xba>
 80084a8:	e123      	b.n	80086f2 <HAL_RCC_OscConfig+0x302>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80084aa:	6829      	ldr	r1, [r5, #0]
 80084ac:	420f      	tst	r7, r1
 80084ae:	d0f6      	beq.n	800849e <HAL_RCC_OscConfig+0xae>
            return HAL_TIMEOUT;
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80084b0:	20f8      	movs	r0, #248	; 0xf8
 80084b2:	682e      	ldr	r6, [r5, #0]
 80084b4:	6927      	ldr	r7, [r4, #16]
 80084b6:	4386      	bics	r6, r0
 80084b8:	00fb      	lsls	r3, r7, #3
 80084ba:	4333      	orrs	r3, r6
 80084bc:	602b      	str	r3, [r5, #0]
 80084be:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80084c0:	071a      	lsls	r2, r3, #28
 80084c2:	d42d      	bmi.n	8008520 <HAL_RCC_OscConfig+0x130>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80084c4:	075a      	lsls	r2, r3, #29
 80084c6:	d545      	bpl.n	8008554 <HAL_RCC_OscConfig+0x164>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80084c8:	2780      	movs	r7, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 80084ca:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80084cc:	4d91      	ldr	r5, [pc, #580]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 80084ce:	057a      	lsls	r2, r7, #21
 80084d0:	69ee      	ldr	r6, [r5, #28]
    FlagStatus       pwrclkchanged = RESET;
 80084d2:	4689      	mov	r9, r1
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80084d4:	4216      	tst	r6, r2
 80084d6:	d108      	bne.n	80084ea <HAL_RCC_OscConfig+0xfa>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80084d8:	69eb      	ldr	r3, [r5, #28]
 80084da:	4313      	orrs	r3, r2
 80084dc:	61eb      	str	r3, [r5, #28]
 80084de:	69e8      	ldr	r0, [r5, #28]
      pwrclkchanged = SET;
 80084e0:	2501      	movs	r5, #1
 80084e2:	46a9      	mov	r9, r5
      __HAL_RCC_PWR_CLK_ENABLE();
 80084e4:	4002      	ands	r2, r0
 80084e6:	9201      	str	r2, [sp, #4]
 80084e8:	9b01      	ldr	r3, [sp, #4]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80084ea:	2780      	movs	r7, #128	; 0x80
 80084ec:	4e8c      	ldr	r6, [pc, #560]	; (8008720 <HAL_RCC_OscConfig+0x330>)
 80084ee:	007f      	lsls	r7, r7, #1
 80084f0:	6832      	ldr	r2, [r6, #0]
 80084f2:	423a      	tst	r2, r7
 80084f4:	d100      	bne.n	80084f8 <HAL_RCC_OscConfig+0x108>
 80084f6:	e0ec      	b.n	80086d2 <HAL_RCC_OscConfig+0x2e2>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80084f8:	68a6      	ldr	r6, [r4, #8]
 80084fa:	2e01      	cmp	r6, #1
 80084fc:	d100      	bne.n	8008500 <HAL_RCC_OscConfig+0x110>
 80084fe:	e14e      	b.n	800879e <HAL_RCC_OscConfig+0x3ae>
 8008500:	2e00      	cmp	r6, #0
 8008502:	d100      	bne.n	8008506 <HAL_RCC_OscConfig+0x116>
 8008504:	e11a      	b.n	800873c <HAL_RCC_OscConfig+0x34c>
 8008506:	2e05      	cmp	r6, #5
 8008508:	d100      	bne.n	800850c <HAL_RCC_OscConfig+0x11c>
 800850a:	e1db      	b.n	80088c4 <HAL_RCC_OscConfig+0x4d4>
 800850c:	2701      	movs	r7, #1
 800850e:	4881      	ldr	r0, [pc, #516]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 8008510:	6a05      	ldr	r5, [r0, #32]
 8008512:	43bd      	bics	r5, r7
 8008514:	6205      	str	r5, [r0, #32]
 8008516:	6a02      	ldr	r2, [r0, #32]
 8008518:	3703      	adds	r7, #3
 800851a:	43ba      	bics	r2, r7
 800851c:	6202      	str	r2, [r0, #32]
 800851e:	e142      	b.n	80087a6 <HAL_RCC_OscConfig+0x3b6>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8008520:	69e3      	ldr	r3, [r4, #28]
      __HAL_RCC_LSI_ENABLE();
 8008522:	4d7c      	ldr	r5, [pc, #496]	; (8008714 <HAL_RCC_OscConfig+0x324>)
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8008524:	2b00      	cmp	r3, #0
 8008526:	d100      	bne.n	800852a <HAL_RCC_OscConfig+0x13a>
 8008528:	e0a6      	b.n	8008678 <HAL_RCC_OscConfig+0x288>
      __HAL_RCC_LSI_ENABLE();
 800852a:	2001      	movs	r0, #1
 800852c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800852e:	2702      	movs	r7, #2
      __HAL_RCC_LSI_ENABLE();
 8008530:	4303      	orrs	r3, r0
 8008532:	626b      	str	r3, [r5, #36]	; 0x24
      tickstart = HAL_GetTick();
 8008534:	f7ff f978 	bl	8007828 <HAL_GetTick>
 8008538:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800853a:	e005      	b.n	8008548 <HAL_RCC_OscConfig+0x158>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800853c:	f7ff f974 	bl	8007828 <HAL_GetTick>
 8008540:	1b81      	subs	r1, r0, r6
 8008542:	2902      	cmp	r1, #2
 8008544:	d900      	bls.n	8008548 <HAL_RCC_OscConfig+0x158>
 8008546:	e0d4      	b.n	80086f2 <HAL_RCC_OscConfig+0x302>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008548:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800854a:	4217      	tst	r7, r2
 800854c:	d0f6      	beq.n	800853c <HAL_RCC_OscConfig+0x14c>
 800854e:	6823      	ldr	r3, [r4, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8008550:	075a      	lsls	r2, r3, #29
 8008552:	d4b9      	bmi.n	80084c8 <HAL_RCC_OscConfig+0xd8>
      __HAL_RCC_PWR_CLK_DISABLE();
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8008554:	06da      	lsls	r2, r3, #27
 8008556:	d512      	bpl.n	800857e <HAL_RCC_OscConfig+0x18e>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8008558:	6960      	ldr	r0, [r4, #20]
 800855a:	2801      	cmp	r0, #1
 800855c:	d100      	bne.n	8008560 <HAL_RCC_OscConfig+0x170>
 800855e:	e1bb      	b.n	80088d8 <HAL_RCC_OscConfig+0x4e8>
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8008560:	1d42      	adds	r2, r0, #5
 8008562:	d000      	beq.n	8008566 <HAL_RCC_OscConfig+0x176>
 8008564:	e131      	b.n	80087ca <HAL_RCC_OscConfig+0x3da>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8008566:	2504      	movs	r5, #4
 8008568:	496a      	ldr	r1, [pc, #424]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 800856a:	6b4a      	ldr	r2, [r1, #52]	; 0x34
 800856c:	43aa      	bics	r2, r5
 800856e:	634a      	str	r2, [r1, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8008570:	22f8      	movs	r2, #248	; 0xf8
 8008572:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8008574:	69a7      	ldr	r7, [r4, #24]
 8008576:	4396      	bics	r6, r2
 8008578:	00f8      	lsls	r0, r7, #3
 800857a:	4330      	orrs	r0, r6
 800857c:	6348      	str	r0, [r1, #52]	; 0x34
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 800857e:	069b      	lsls	r3, r3, #26
 8008580:	d522      	bpl.n	80085c8 <HAL_RCC_OscConfig+0x1d8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* When the HSI48 is used as system clock it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 8008582:	200c      	movs	r0, #12
 8008584:	4e63      	ldr	r6, [pc, #396]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 8008586:	6875      	ldr	r5, [r6, #4]
 8008588:	4005      	ands	r5, r0
 800858a:	2d0c      	cmp	r5, #12
 800858c:	d100      	bne.n	8008590 <HAL_RCC_OscConfig+0x1a0>
 800858e:	e13c      	b.n	800880a <HAL_RCC_OscConfig+0x41a>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 8008590:	6877      	ldr	r7, [r6, #4]
 8008592:	4038      	ands	r0, r7
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 8008594:	2808      	cmp	r0, #8
 8008596:	d100      	bne.n	800859a <HAL_RCC_OscConfig+0x1aa>
 8008598:	e130      	b.n	80087fc <HAL_RCC_OscConfig+0x40c>
      }
    }
    else
    {
      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 800859a:	6a26      	ldr	r6, [r4, #32]
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 800859c:	4d5d      	ldr	r5, [pc, #372]	; (8008714 <HAL_RCC_OscConfig+0x324>)
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 800859e:	2e00      	cmp	r6, #0
 80085a0:	d100      	bne.n	80085a4 <HAL_RCC_OscConfig+0x1b4>
 80085a2:	e13c      	b.n	800881e <HAL_RCC_OscConfig+0x42e>
        __HAL_RCC_HSI48_ENABLE();
 80085a4:	2380      	movs	r3, #128	; 0x80
 80085a6:	6b68      	ldr	r0, [r5, #52]	; 0x34
 80085a8:	025e      	lsls	r6, r3, #9
 80085aa:	4330      	orrs	r0, r6
 80085ac:	6368      	str	r0, [r5, #52]	; 0x34

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80085ae:	f7ff f93b 	bl	8007828 <HAL_GetTick>
 80085b2:	0007      	movs	r7, r0
      
        /* Wait till HSI48 is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 80085b4:	e005      	b.n	80085c2 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80085b6:	f7ff f937 	bl	8007828 <HAL_GetTick>
 80085ba:	1bc1      	subs	r1, r0, r7
 80085bc:	2902      	cmp	r1, #2
 80085be:	d900      	bls.n	80085c2 <HAL_RCC_OscConfig+0x1d2>
 80085c0:	e097      	b.n	80086f2 <HAL_RCC_OscConfig+0x302>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 80085c2:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 80085c4:	4232      	tst	r2, r6
 80085c6:	d0f6      	beq.n	80085b6 <HAL_RCC_OscConfig+0x1c6>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80085c8:	6a67      	ldr	r7, [r4, #36]	; 0x24
 80085ca:	2f00      	cmp	r7, #0
 80085cc:	d01b      	beq.n	8008606 <HAL_RCC_OscConfig+0x216>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80085ce:	220c      	movs	r2, #12
 80085d0:	4e50      	ldr	r6, [pc, #320]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 80085d2:	6871      	ldr	r1, [r6, #4]
 80085d4:	400a      	ands	r2, r1
 80085d6:	2a08      	cmp	r2, #8
 80085d8:	d017      	beq.n	800860a <HAL_RCC_OscConfig+0x21a>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80085da:	2f02      	cmp	r7, #2
 80085dc:	d100      	bne.n	80085e0 <HAL_RCC_OscConfig+0x1f0>
 80085de:	e139      	b.n	8008854 <HAL_RCC_OscConfig+0x464>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80085e0:	6835      	ldr	r5, [r6, #0]
 80085e2:	4b50      	ldr	r3, [pc, #320]	; (8008724 <HAL_RCC_OscConfig+0x334>)
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80085e4:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 80085e6:	401d      	ands	r5, r3
 80085e8:	6035      	str	r5, [r6, #0]
        tickstart = HAL_GetTick();
 80085ea:	f7ff f91d 	bl	8007828 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80085ee:	04bd      	lsls	r5, r7, #18
        tickstart = HAL_GetTick();
 80085f0:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80085f2:	e005      	b.n	8008600 <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80085f4:	f7ff f918 	bl	8007828 <HAL_GetTick>
 80085f8:	1b01      	subs	r1, r0, r4
 80085fa:	2902      	cmp	r1, #2
 80085fc:	d900      	bls.n	8008600 <HAL_RCC_OscConfig+0x210>
 80085fe:	e078      	b.n	80086f2 <HAL_RCC_OscConfig+0x302>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8008600:	6832      	ldr	r2, [r6, #0]
 8008602:	422a      	tst	r2, r5
 8008604:	d1f6      	bne.n	80085f4 <HAL_RCC_OscConfig+0x204>
        }
      }
    }
  }

  return HAL_OK;
 8008606:	2000      	movs	r0, #0
 8008608:	e015      	b.n	8008636 <HAL_RCC_OscConfig+0x246>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800860a:	2f01      	cmp	r7, #1
 800860c:	d012      	beq.n	8008634 <HAL_RCC_OscConfig+0x244>
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 800860e:	20c0      	movs	r0, #192	; 0xc0
        pll_config  = RCC->CFGR;
 8008610:	6875      	ldr	r5, [r6, #4]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8008612:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8008614:	0243      	lsls	r3, r0, #9
        pll_config2 = RCC->CFGR2;
 8008616:	6af6      	ldr	r6, [r6, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8008618:	402b      	ands	r3, r5
 800861a:	42bb      	cmp	r3, r7
 800861c:	d10a      	bne.n	8008634 <HAL_RCC_OscConfig+0x244>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 800861e:	220f      	movs	r2, #15
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8008620:	6b21      	ldr	r1, [r4, #48]	; 0x30
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8008622:	4032      	ands	r2, r6
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8008624:	428a      	cmp	r2, r1
 8008626:	d105      	bne.n	8008634 <HAL_RCC_OscConfig+0x244>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8008628:	26f0      	movs	r6, #240	; 0xf0
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 800862a:	6ae4      	ldr	r4, [r4, #44]	; 0x2c
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 800862c:	03b0      	lsls	r0, r6, #14
 800862e:	4005      	ands	r5, r0
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8008630:	42a5      	cmp	r5, r4
 8008632:	d0e8      	beq.n	8008606 <HAL_RCC_OscConfig+0x216>
    return HAL_ERROR;
 8008634:	2001      	movs	r0, #1
}
 8008636:	b003      	add	sp, #12
 8008638:	bcc0      	pop	{r6, r7}
 800863a:	46b9      	mov	r9, r7
 800863c:	46b0      	mov	r8, r6
 800863e:	bdf0      	pop	{r4, r5, r6, r7, pc}
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8008640:	25c0      	movs	r5, #192	; 0xc0
 8008642:	2780      	movs	r7, #128	; 0x80
 8008644:	6872      	ldr	r2, [r6, #4]
 8008646:	026e      	lsls	r6, r5, #9
 8008648:	4032      	ands	r2, r6
 800864a:	0239      	lsls	r1, r7, #8
 800864c:	428a      	cmp	r2, r1
 800864e:	d000      	beq.n	8008652 <HAL_RCC_OscConfig+0x262>
 8008650:	e717      	b.n	8008482 <HAL_RCC_OscConfig+0x92>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008652:	4d30      	ldr	r5, [pc, #192]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 8008654:	6829      	ldr	r1, [r5, #0]
 8008656:	078a      	lsls	r2, r1, #30
 8008658:	d502      	bpl.n	8008660 <HAL_RCC_OscConfig+0x270>
 800865a:	68e0      	ldr	r0, [r4, #12]
 800865c:	2801      	cmp	r0, #1
 800865e:	d1e9      	bne.n	8008634 <HAL_RCC_OscConfig+0x244>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008660:	25f8      	movs	r5, #248	; 0xf8
 8008662:	4e2c      	ldr	r6, [pc, #176]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 8008664:	6922      	ldr	r2, [r4, #16]
 8008666:	6837      	ldr	r7, [r6, #0]
 8008668:	00d1      	lsls	r1, r2, #3
 800866a:	43af      	bics	r7, r5
 800866c:	4339      	orrs	r1, r7
 800866e:	6031      	str	r1, [r6, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8008670:	071a      	lsls	r2, r3, #28
 8008672:	d400      	bmi.n	8008676 <HAL_RCC_OscConfig+0x286>
 8008674:	e726      	b.n	80084c4 <HAL_RCC_OscConfig+0xd4>
 8008676:	e753      	b.n	8008520 <HAL_RCC_OscConfig+0x130>
      __HAL_RCC_LSI_DISABLE();
 8008678:	2601      	movs	r6, #1
 800867a:	6a68      	ldr	r0, [r5, #36]	; 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800867c:	2702      	movs	r7, #2
      __HAL_RCC_LSI_DISABLE();
 800867e:	43b0      	bics	r0, r6
 8008680:	6268      	str	r0, [r5, #36]	; 0x24
      tickstart = HAL_GetTick();
 8008682:	f7ff f8d1 	bl	8007828 <HAL_GetTick>
 8008686:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008688:	e004      	b.n	8008694 <HAL_RCC_OscConfig+0x2a4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800868a:	f7ff f8cd 	bl	8007828 <HAL_GetTick>
 800868e:	1b81      	subs	r1, r0, r6
 8008690:	2902      	cmp	r1, #2
 8008692:	d82e      	bhi.n	80086f2 <HAL_RCC_OscConfig+0x302>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008694:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8008696:	4217      	tst	r7, r2
 8008698:	d1f7      	bne.n	800868a <HAL_RCC_OscConfig+0x29a>
 800869a:	6823      	ldr	r3, [r4, #0]
 800869c:	e758      	b.n	8008550 <HAL_RCC_OscConfig+0x160>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 800869e:	27c0      	movs	r7, #192	; 0xc0
 80086a0:	2280      	movs	r2, #128	; 0x80
 80086a2:	6846      	ldr	r6, [r0, #4]
 80086a4:	0278      	lsls	r0, r7, #9
 80086a6:	4006      	ands	r6, r0
 80086a8:	0251      	lsls	r1, r2, #9
 80086aa:	428e      	cmp	r6, r1
 80086ac:	d000      	beq.n	80086b0 <HAL_RCC_OscConfig+0x2c0>
 80086ae:	e6b7      	b.n	8008420 <HAL_RCC_OscConfig+0x30>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80086b0:	4918      	ldr	r1, [pc, #96]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 80086b2:	680a      	ldr	r2, [r1, #0]
 80086b4:	0392      	lsls	r2, r2, #14
 80086b6:	d400      	bmi.n	80086ba <HAL_RCC_OscConfig+0x2ca>
 80086b8:	e6d6      	b.n	8008468 <HAL_RCC_OscConfig+0x78>
 80086ba:	6865      	ldr	r5, [r4, #4]
 80086bc:	2d00      	cmp	r5, #0
 80086be:	d000      	beq.n	80086c2 <HAL_RCC_OscConfig+0x2d2>
 80086c0:	e6d2      	b.n	8008468 <HAL_RCC_OscConfig+0x78>
 80086c2:	e7b7      	b.n	8008634 <HAL_RCC_OscConfig+0x244>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80086c4:	2280      	movs	r2, #128	; 0x80
 80086c6:	4813      	ldr	r0, [pc, #76]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 80086c8:	0255      	lsls	r5, r2, #9
 80086ca:	6801      	ldr	r1, [r0, #0]
 80086cc:	430d      	orrs	r5, r1
 80086ce:	6005      	str	r5, [r0, #0]
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80086d0:	e6b9      	b.n	8008446 <HAL_RCC_OscConfig+0x56>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80086d2:	6831      	ldr	r1, [r6, #0]
 80086d4:	4339      	orrs	r1, r7
 80086d6:	6031      	str	r1, [r6, #0]
      tickstart = HAL_GetTick();
 80086d8:	f7ff f8a6 	bl	8007828 <HAL_GetTick>
 80086dc:	0005      	movs	r5, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80086de:	e004      	b.n	80086ea <HAL_RCC_OscConfig+0x2fa>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80086e0:	f7ff f8a2 	bl	8007828 <HAL_GetTick>
 80086e4:	1b42      	subs	r2, r0, r5
 80086e6:	2a64      	cmp	r2, #100	; 0x64
 80086e8:	d803      	bhi.n	80086f2 <HAL_RCC_OscConfig+0x302>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80086ea:	6833      	ldr	r3, [r6, #0]
 80086ec:	423b      	tst	r3, r7
 80086ee:	d0f7      	beq.n	80086e0 <HAL_RCC_OscConfig+0x2f0>
 80086f0:	e702      	b.n	80084f8 <HAL_RCC_OscConfig+0x108>
            return HAL_TIMEOUT;
 80086f2:	2003      	movs	r0, #3
 80086f4:	e79f      	b.n	8008636 <HAL_RCC_OscConfig+0x246>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80086f6:	4d07      	ldr	r5, [pc, #28]	; (8008714 <HAL_RCC_OscConfig+0x324>)
 80086f8:	4907      	ldr	r1, [pc, #28]	; (8008718 <HAL_RCC_OscConfig+0x328>)
 80086fa:	682b      	ldr	r3, [r5, #0]
 80086fc:	4f07      	ldr	r7, [pc, #28]	; (800871c <HAL_RCC_OscConfig+0x32c>)
 80086fe:	400b      	ands	r3, r1
 8008700:	602b      	str	r3, [r5, #0]
 8008702:	682e      	ldr	r6, [r5, #0]
 8008704:	403e      	ands	r6, r7
 8008706:	602e      	str	r6, [r5, #0]
        tickstart = HAL_GetTick();
 8008708:	f7ff f88e 	bl	8007828 <HAL_GetTick>
 800870c:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800870e:	2080      	movs	r0, #128	; 0x80
 8008710:	0287      	lsls	r7, r0, #10
 8008712:	e00e      	b.n	8008732 <HAL_RCC_OscConfig+0x342>
 8008714:	40021000 	.word	0x40021000
 8008718:	fffeffff 	.word	0xfffeffff
 800871c:	fffbffff 	.word	0xfffbffff
 8008720:	40007000 	.word	0x40007000
 8008724:	feffffff 	.word	0xfeffffff
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008728:	f7ff f87e 	bl	8007828 <HAL_GetTick>
 800872c:	1b83      	subs	r3, r0, r6
 800872e:	2b64      	cmp	r3, #100	; 0x64
 8008730:	d8df      	bhi.n	80086f2 <HAL_RCC_OscConfig+0x302>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8008732:	682a      	ldr	r2, [r5, #0]
 8008734:	423a      	tst	r2, r7
 8008736:	d1f7      	bne.n	8008728 <HAL_RCC_OscConfig+0x338>
 8008738:	6823      	ldr	r3, [r4, #0]
 800873a:	e695      	b.n	8008468 <HAL_RCC_OscConfig+0x78>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800873c:	2701      	movs	r7, #1
 800873e:	4e7c      	ldr	r6, [pc, #496]	; (8008930 <HAL_RCC_OscConfig+0x540>)
 8008740:	6a35      	ldr	r5, [r6, #32]
 8008742:	43bd      	bics	r5, r7
 8008744:	6235      	str	r5, [r6, #32]
 8008746:	6a32      	ldr	r2, [r6, #32]
 8008748:	3703      	adds	r7, #3
 800874a:	43ba      	bics	r2, r7
 800874c:	6232      	str	r2, [r6, #32]
      tickstart = HAL_GetTick();
 800874e:	f7ff f86b 	bl	8007828 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008752:	2302      	movs	r3, #2
      tickstart = HAL_GetTick();
 8008754:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008756:	4698      	mov	r8, r3
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008758:	4d76      	ldr	r5, [pc, #472]	; (8008934 <HAL_RCC_OscConfig+0x544>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800875a:	e004      	b.n	8008766 <HAL_RCC_OscConfig+0x376>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800875c:	f7ff f864 	bl	8007828 <HAL_GetTick>
 8008760:	1bc2      	subs	r2, r0, r7
 8008762:	42aa      	cmp	r2, r5
 8008764:	d8c5      	bhi.n	80086f2 <HAL_RCC_OscConfig+0x302>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008766:	4640      	mov	r0, r8
 8008768:	6a31      	ldr	r1, [r6, #32]
 800876a:	4208      	tst	r0, r1
 800876c:	d1f6      	bne.n	800875c <HAL_RCC_OscConfig+0x36c>
    if(pwrclkchanged == SET)
 800876e:	464d      	mov	r5, r9
 8008770:	2d01      	cmp	r5, #1
 8008772:	d068      	beq.n	8008846 <HAL_RCC_OscConfig+0x456>
 8008774:	6823      	ldr	r3, [r4, #0]
 8008776:	e6ed      	b.n	8008554 <HAL_RCC_OscConfig+0x164>
        __HAL_RCC_HSI_DISABLE();
 8008778:	2201      	movs	r2, #1
 800877a:	6828      	ldr	r0, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800877c:	2702      	movs	r7, #2
        __HAL_RCC_HSI_DISABLE();
 800877e:	4390      	bics	r0, r2
 8008780:	6028      	str	r0, [r5, #0]
        tickstart = HAL_GetTick();
 8008782:	f7ff f851 	bl	8007828 <HAL_GetTick>
 8008786:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008788:	e004      	b.n	8008794 <HAL_RCC_OscConfig+0x3a4>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800878a:	f7ff f84d 	bl	8007828 <HAL_GetTick>
 800878e:	1b83      	subs	r3, r0, r6
 8008790:	2b02      	cmp	r3, #2
 8008792:	d8ae      	bhi.n	80086f2 <HAL_RCC_OscConfig+0x302>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008794:	6829      	ldr	r1, [r5, #0]
 8008796:	420f      	tst	r7, r1
 8008798:	d1f7      	bne.n	800878a <HAL_RCC_OscConfig+0x39a>
 800879a:	6823      	ldr	r3, [r4, #0]
 800879c:	e690      	b.n	80084c0 <HAL_RCC_OscConfig+0xd0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800879e:	4b64      	ldr	r3, [pc, #400]	; (8008930 <HAL_RCC_OscConfig+0x540>)
 80087a0:	6a19      	ldr	r1, [r3, #32]
 80087a2:	430e      	orrs	r6, r1
 80087a4:	621e      	str	r6, [r3, #32]
      tickstart = HAL_GetTick();
 80087a6:	f7ff f83f 	bl	8007828 <HAL_GetTick>
 80087aa:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80087ac:	4860      	ldr	r0, [pc, #384]	; (8008930 <HAL_RCC_OscConfig+0x540>)
 80087ae:	2702      	movs	r7, #2
 80087b0:	4680      	mov	r8, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80087b2:	4d60      	ldr	r5, [pc, #384]	; (8008934 <HAL_RCC_OscConfig+0x544>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80087b4:	e004      	b.n	80087c0 <HAL_RCC_OscConfig+0x3d0>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80087b6:	f7ff f837 	bl	8007828 <HAL_GetTick>
 80087ba:	1b83      	subs	r3, r0, r6
 80087bc:	42ab      	cmp	r3, r5
 80087be:	d898      	bhi.n	80086f2 <HAL_RCC_OscConfig+0x302>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80087c0:	4642      	mov	r2, r8
 80087c2:	6a13      	ldr	r3, [r2, #32]
 80087c4:	421f      	tst	r7, r3
 80087c6:	d0f6      	beq.n	80087b6 <HAL_RCC_OscConfig+0x3c6>
 80087c8:	e7d1      	b.n	800876e <HAL_RCC_OscConfig+0x37e>
      __HAL_RCC_HSI14ADC_DISABLE();
 80087ca:	2204      	movs	r2, #4
 80087cc:	4d58      	ldr	r5, [pc, #352]	; (8008930 <HAL_RCC_OscConfig+0x540>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80087ce:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 80087d0:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80087d2:	4313      	orrs	r3, r2
 80087d4:	636b      	str	r3, [r5, #52]	; 0x34
      __HAL_RCC_HSI14_DISABLE();
 80087d6:	6b6e      	ldr	r6, [r5, #52]	; 0x34
 80087d8:	3a03      	subs	r2, #3
 80087da:	4396      	bics	r6, r2
 80087dc:	636e      	str	r6, [r5, #52]	; 0x34
      tickstart = HAL_GetTick();
 80087de:	f7ff f823 	bl	8007828 <HAL_GetTick>
 80087e2:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80087e4:	e005      	b.n	80087f2 <HAL_RCC_OscConfig+0x402>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 80087e6:	f7ff f81f 	bl	8007828 <HAL_GetTick>
 80087ea:	1b80      	subs	r0, r0, r6
 80087ec:	2802      	cmp	r0, #2
 80087ee:	d900      	bls.n	80087f2 <HAL_RCC_OscConfig+0x402>
 80087f0:	e77f      	b.n	80086f2 <HAL_RCC_OscConfig+0x302>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80087f2:	6b69      	ldr	r1, [r5, #52]	; 0x34
 80087f4:	420f      	tst	r7, r1
 80087f6:	d1f6      	bne.n	80087e6 <HAL_RCC_OscConfig+0x3f6>
 80087f8:	6823      	ldr	r3, [r4, #0]
 80087fa:	e6c0      	b.n	800857e <HAL_RCC_OscConfig+0x18e>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 80087fc:	22c0      	movs	r2, #192	; 0xc0
 80087fe:	6873      	ldr	r3, [r6, #4]
 8008800:	0251      	lsls	r1, r2, #9
 8008802:	400b      	ands	r3, r1
 8008804:	428b      	cmp	r3, r1
 8008806:	d000      	beq.n	800880a <HAL_RCC_OscConfig+0x41a>
 8008808:	e6c7      	b.n	800859a <HAL_RCC_OscConfig+0x1aa>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_HSI48_ON))
 800880a:	4d49      	ldr	r5, [pc, #292]	; (8008930 <HAL_RCC_OscConfig+0x540>)
 800880c:	6b68      	ldr	r0, [r5, #52]	; 0x34
 800880e:	03c3      	lsls	r3, r0, #15
 8008810:	d400      	bmi.n	8008814 <HAL_RCC_OscConfig+0x424>
 8008812:	e6d9      	b.n	80085c8 <HAL_RCC_OscConfig+0x1d8>
 8008814:	6a23      	ldr	r3, [r4, #32]
 8008816:	2b01      	cmp	r3, #1
 8008818:	d000      	beq.n	800881c <HAL_RCC_OscConfig+0x42c>
 800881a:	e70b      	b.n	8008634 <HAL_RCC_OscConfig+0x244>
 800881c:	e6d4      	b.n	80085c8 <HAL_RCC_OscConfig+0x1d8>
        __HAL_RCC_HSI48_DISABLE();
 800881e:	6b68      	ldr	r0, [r5, #52]	; 0x34
 8008820:	4f45      	ldr	r7, [pc, #276]	; (8008938 <HAL_RCC_OscConfig+0x548>)
 8008822:	4038      	ands	r0, r7
 8008824:	6368      	str	r0, [r5, #52]	; 0x34
        tickstart = HAL_GetTick();
 8008826:	f7fe ffff 	bl	8007828 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 800882a:	2380      	movs	r3, #128	; 0x80
        tickstart = HAL_GetTick();
 800882c:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 800882e:	025f      	lsls	r7, r3, #9
 8008830:	e005      	b.n	800883e <HAL_RCC_OscConfig+0x44e>
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8008832:	f7fe fff9 	bl	8007828 <HAL_GetTick>
 8008836:	1b81      	subs	r1, r0, r6
 8008838:	2902      	cmp	r1, #2
 800883a:	d900      	bls.n	800883e <HAL_RCC_OscConfig+0x44e>
 800883c:	e759      	b.n	80086f2 <HAL_RCC_OscConfig+0x302>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 800883e:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 8008840:	423a      	tst	r2, r7
 8008842:	d1f6      	bne.n	8008832 <HAL_RCC_OscConfig+0x442>
 8008844:	e6c0      	b.n	80085c8 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_PWR_CLK_DISABLE();
 8008846:	4e3a      	ldr	r6, [pc, #232]	; (8008930 <HAL_RCC_OscConfig+0x540>)
 8008848:	493c      	ldr	r1, [pc, #240]	; (800893c <HAL_RCC_OscConfig+0x54c>)
 800884a:	69f7      	ldr	r7, [r6, #28]
 800884c:	400f      	ands	r7, r1
 800884e:	61f7      	str	r7, [r6, #28]
 8008850:	6823      	ldr	r3, [r4, #0]
 8008852:	e67f      	b.n	8008554 <HAL_RCC_OscConfig+0x164>
        __HAL_RCC_PLL_DISABLE();
 8008854:	6830      	ldr	r0, [r6, #0]
 8008856:	4b3a      	ldr	r3, [pc, #232]	; (8008940 <HAL_RCC_OscConfig+0x550>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8008858:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 800885a:	4018      	ands	r0, r3
 800885c:	6030      	str	r0, [r6, #0]
        tickstart = HAL_GetTick();
 800885e:	f7fe ffe3 	bl	8007828 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8008862:	04bf      	lsls	r7, r7, #18
        tickstart = HAL_GetTick();
 8008864:	0005      	movs	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8008866:	e005      	b.n	8008874 <HAL_RCC_OscConfig+0x484>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008868:	f7fe ffde 	bl	8007828 <HAL_GetTick>
 800886c:	1b41      	subs	r1, r0, r5
 800886e:	2902      	cmp	r1, #2
 8008870:	d900      	bls.n	8008874 <HAL_RCC_OscConfig+0x484>
 8008872:	e73e      	b.n	80086f2 <HAL_RCC_OscConfig+0x302>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8008874:	6832      	ldr	r2, [r6, #0]
 8008876:	423a      	tst	r2, r7
 8008878:	d1f6      	bne.n	8008868 <HAL_RCC_OscConfig+0x478>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800887a:	210f      	movs	r1, #15
 800887c:	6af5      	ldr	r5, [r6, #44]	; 0x2c
 800887e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008880:	438d      	bics	r5, r1
        __HAL_RCC_PLL_ENABLE();
 8008882:	2180      	movs	r1, #128	; 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8008884:	4305      	orrs	r5, r0
 8008886:	62f5      	str	r5, [r6, #44]	; 0x2c
 8008888:	6877      	ldr	r7, [r6, #4]
 800888a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800888c:	4a2d      	ldr	r2, [pc, #180]	; (8008944 <HAL_RCC_OscConfig+0x554>)
 800888e:	6aa4      	ldr	r4, [r4, #40]	; 0x28
 8008890:	4017      	ands	r7, r2
 8008892:	4323      	orrs	r3, r4
 8008894:	433b      	orrs	r3, r7
 8008896:	6073      	str	r3, [r6, #4]
        __HAL_RCC_PLL_ENABLE();
 8008898:	6835      	ldr	r5, [r6, #0]
 800889a:	0448      	lsls	r0, r1, #17
 800889c:	4328      	orrs	r0, r5
 800889e:	6030      	str	r0, [r6, #0]
        tickstart = HAL_GetTick();
 80088a0:	f7fe ffc2 	bl	8007828 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80088a4:	2780      	movs	r7, #128	; 0x80
        tickstart = HAL_GetTick();
 80088a6:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80088a8:	4e21      	ldr	r6, [pc, #132]	; (8008930 <HAL_RCC_OscConfig+0x540>)
 80088aa:	04bd      	lsls	r5, r7, #18
 80088ac:	e005      	b.n	80088ba <HAL_RCC_OscConfig+0x4ca>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80088ae:	f7fe ffbb 	bl	8007828 <HAL_GetTick>
 80088b2:	1b02      	subs	r2, r0, r4
 80088b4:	2a02      	cmp	r2, #2
 80088b6:	d900      	bls.n	80088ba <HAL_RCC_OscConfig+0x4ca>
 80088b8:	e71b      	b.n	80086f2 <HAL_RCC_OscConfig+0x302>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80088ba:	6833      	ldr	r3, [r6, #0]
 80088bc:	422b      	tst	r3, r5
 80088be:	d0f6      	beq.n	80088ae <HAL_RCC_OscConfig+0x4be>
  return HAL_OK;
 80088c0:	2000      	movs	r0, #0
 80088c2:	e6b8      	b.n	8008636 <HAL_RCC_OscConfig+0x246>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80088c4:	2104      	movs	r1, #4
 80088c6:	4b1a      	ldr	r3, [pc, #104]	; (8008930 <HAL_RCC_OscConfig+0x540>)
 80088c8:	6a1e      	ldr	r6, [r3, #32]
 80088ca:	430e      	orrs	r6, r1
 80088cc:	621e      	str	r6, [r3, #32]
 80088ce:	6a18      	ldr	r0, [r3, #32]
 80088d0:	3903      	subs	r1, #3
 80088d2:	4308      	orrs	r0, r1
 80088d4:	6218      	str	r0, [r3, #32]
 80088d6:	e766      	b.n	80087a6 <HAL_RCC_OscConfig+0x3b6>
      __HAL_RCC_HSI14ADC_DISABLE();
 80088d8:	2104      	movs	r1, #4
 80088da:	4e15      	ldr	r6, [pc, #84]	; (8008930 <HAL_RCC_OscConfig+0x540>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80088dc:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 80088de:	6b73      	ldr	r3, [r6, #52]	; 0x34
 80088e0:	430b      	orrs	r3, r1
 80088e2:	6373      	str	r3, [r6, #52]	; 0x34
      __HAL_RCC_HSI14_ENABLE();
 80088e4:	6b75      	ldr	r5, [r6, #52]	; 0x34
 80088e6:	4328      	orrs	r0, r5
 80088e8:	6370      	str	r0, [r6, #52]	; 0x34
      tickstart = HAL_GetTick();
 80088ea:	f7fe ff9d 	bl	8007828 <HAL_GetTick>
 80088ee:	0005      	movs	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80088f0:	e005      	b.n	80088fe <HAL_RCC_OscConfig+0x50e>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 80088f2:	f7fe ff99 	bl	8007828 <HAL_GetTick>
 80088f6:	1b40      	subs	r0, r0, r5
 80088f8:	2802      	cmp	r0, #2
 80088fa:	d900      	bls.n	80088fe <HAL_RCC_OscConfig+0x50e>
 80088fc:	e6f9      	b.n	80086f2 <HAL_RCC_OscConfig+0x302>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80088fe:	6b70      	ldr	r0, [r6, #52]	; 0x34
 8008900:	4207      	tst	r7, r0
 8008902:	d0f6      	beq.n	80088f2 <HAL_RCC_OscConfig+0x502>
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8008904:	21f8      	movs	r1, #248	; 0xf8
 8008906:	6b77      	ldr	r7, [r6, #52]	; 0x34
 8008908:	69a2      	ldr	r2, [r4, #24]
 800890a:	438f      	bics	r7, r1
 800890c:	00d3      	lsls	r3, r2, #3
 800890e:	433b      	orrs	r3, r7
 8008910:	6373      	str	r3, [r6, #52]	; 0x34
 8008912:	6823      	ldr	r3, [r4, #0]
 8008914:	e633      	b.n	800857e <HAL_RCC_OscConfig+0x18e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008916:	2580      	movs	r5, #128	; 0x80
 8008918:	2080      	movs	r0, #128	; 0x80
 800891a:	4b05      	ldr	r3, [pc, #20]	; (8008930 <HAL_RCC_OscConfig+0x540>)
 800891c:	02ee      	lsls	r6, r5, #11
 800891e:	6819      	ldr	r1, [r3, #0]
 8008920:	0242      	lsls	r2, r0, #9
 8008922:	430e      	orrs	r6, r1
 8008924:	601e      	str	r6, [r3, #0]
 8008926:	681f      	ldr	r7, [r3, #0]
 8008928:	433a      	orrs	r2, r7
 800892a:	601a      	str	r2, [r3, #0]
 800892c:	e58b      	b.n	8008446 <HAL_RCC_OscConfig+0x56>
 800892e:	46c0      	nop			; (mov r8, r8)
 8008930:	40021000 	.word	0x40021000
 8008934:	00001388 	.word	0x00001388
 8008938:	fffeffff 	.word	0xfffeffff
 800893c:	efffffff 	.word	0xefffffff
 8008940:	feffffff 	.word	0xfeffffff
 8008944:	ffc27fff 	.word	0xffc27fff

08008948 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8008948:	b570      	push	{r4, r5, r6, lr}
 800894a:	b088      	sub	sp, #32
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 800894c:	4669      	mov	r1, sp
 800894e:	000a      	movs	r2, r1
 8008950:	4b1b      	ldr	r3, [pc, #108]	; (80089c0 <HAL_RCC_GetSysClockFreq+0x78>)
 8008952:	cb31      	ldmia	r3!, {r0, r4, r5}
 8008954:	c231      	stmia	r2!, {r0, r4, r5}
 8008956:	6818      	ldr	r0, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 8008958:	4b1a      	ldr	r3, [pc, #104]	; (80089c4 <HAL_RCC_GetSysClockFreq+0x7c>)
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 800895a:	6010      	str	r0, [r2, #0]
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 800895c:	aa04      	add	r2, sp, #16
 800895e:	0010      	movs	r0, r2
 8008960:	cb70      	ldmia	r3!, {r4, r5, r6}
 8008962:	c070      	stmia	r0!, {r4, r5, r6}
 8008964:	681c      	ldr	r4, [r3, #0]
  uint32_t sysclockfreq = 0U;
  
  tmpreg = RCC->CFGR;
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8008966:	230c      	movs	r3, #12
  tmpreg = RCC->CFGR;
 8008968:	4d17      	ldr	r5, [pc, #92]	; (80089c8 <HAL_RCC_GetSysClockFreq+0x80>)
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 800896a:	6004      	str	r4, [r0, #0]
  tmpreg = RCC->CFGR;
 800896c:	686e      	ldr	r6, [r5, #4]
  switch (tmpreg & RCC_CFGR_SWS)
 800896e:	4033      	ands	r3, r6
 8008970:	2b08      	cmp	r3, #8
 8008972:	d00b      	beq.n	800898c <HAL_RCC_GetSysClockFreq+0x44>
 8008974:	3b0c      	subs	r3, #12
 8008976:	001e      	movs	r6, r3
 8008978:	4914      	ldr	r1, [pc, #80]	; (80089cc <HAL_RCC_GetSysClockFreq+0x84>)
 800897a:	1e73      	subs	r3, r6, #1
 800897c:	419e      	sbcs	r6, r3
 800897e:	468c      	mov	ip, r1
 8008980:	4c13      	ldr	r4, [pc, #76]	; (80089d0 <HAL_RCC_GetSysClockFreq+0x88>)
 8008982:	4270      	negs	r0, r6
 8008984:	4020      	ands	r0, r4
 8008986:	4460      	add	r0, ip
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8008988:	b008      	add	sp, #32
 800898a:	bd70      	pop	{r4, r5, r6, pc}
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 800898c:	230f      	movs	r3, #15
 800898e:	0cb0      	lsrs	r0, r6, #18
 8008990:	4018      	ands	r0, r3
 8008992:	5c0c      	ldrb	r4, [r1, r0]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8008994:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8008996:	2080      	movs	r0, #128	; 0x80
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8008998:	400b      	ands	r3, r1
 800899a:	5cd1      	ldrb	r1, [r2, r3]
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 800899c:	22c0      	movs	r2, #192	; 0xc0
 800899e:	0255      	lsls	r5, r2, #9
 80089a0:	402e      	ands	r6, r5
 80089a2:	0243      	lsls	r3, r0, #9
 80089a4:	429e      	cmp	r6, r3
 80089a6:	d001      	beq.n	80089ac <HAL_RCC_GetSysClockFreq+0x64>
      else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
 80089a8:	42ae      	cmp	r6, r5
 80089aa:	d004      	beq.n	80089b6 <HAL_RCC_GetSysClockFreq+0x6e>
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 80089ac:	4809      	ldr	r0, [pc, #36]	; (80089d4 <HAL_RCC_GetSysClockFreq+0x8c>)
 80089ae:	f7f7 fbc5 	bl	800013c <__udivsi3>
 80089b2:	4360      	muls	r0, r4
 80089b4:	e7e8      	b.n	8008988 <HAL_RCC_GetSysClockFreq+0x40>
        pllclk = (uint32_t)((uint64_t) HSI48_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 80089b6:	4805      	ldr	r0, [pc, #20]	; (80089cc <HAL_RCC_GetSysClockFreq+0x84>)
 80089b8:	f7f7 fbc0 	bl	800013c <__udivsi3>
 80089bc:	4360      	muls	r0, r4
 80089be:	e7e3      	b.n	8008988 <HAL_RCC_GetSysClockFreq+0x40>
 80089c0:	0800fba8 	.word	0x0800fba8
 80089c4:	0800fbbc 	.word	0x0800fbbc
 80089c8:	40021000 	.word	0x40021000
 80089cc:	02dc6c00 	.word	0x02dc6c00
 80089d0:	fd9da600 	.word	0xfd9da600
 80089d4:	007a1200 	.word	0x007a1200

080089d8 <HAL_RCC_ClockConfig>:
{
 80089d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80089da:	46ce      	mov	lr, r9
 80089dc:	4647      	mov	r7, r8
 80089de:	0004      	movs	r4, r0
 80089e0:	000d      	movs	r5, r1
 80089e2:	b580      	push	{r7, lr}
  if(RCC_ClkInitStruct == NULL)
 80089e4:	2800      	cmp	r0, #0
 80089e6:	d00d      	beq.n	8008a04 <HAL_RCC_ClockConfig+0x2c>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80089e8:	2301      	movs	r3, #1
 80089ea:	493f      	ldr	r1, [pc, #252]	; (8008ae8 <HAL_RCC_ClockConfig+0x110>)
 80089ec:	680a      	ldr	r2, [r1, #0]
 80089ee:	401a      	ands	r2, r3
 80089f0:	42aa      	cmp	r2, r5
 80089f2:	d20c      	bcs.n	8008a0e <HAL_RCC_ClockConfig+0x36>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80089f4:	6808      	ldr	r0, [r1, #0]
 80089f6:	4398      	bics	r0, r3
 80089f8:	4328      	orrs	r0, r5
 80089fa:	6008      	str	r0, [r1, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80089fc:	680e      	ldr	r6, [r1, #0]
 80089fe:	4033      	ands	r3, r6
 8008a00:	42ab      	cmp	r3, r5
 8008a02:	d004      	beq.n	8008a0e <HAL_RCC_ClockConfig+0x36>
    return HAL_ERROR;
 8008a04:	2001      	movs	r0, #1
}
 8008a06:	bcc0      	pop	{r6, r7}
 8008a08:	46b9      	mov	r9, r7
 8008a0a:	46b0      	mov	r8, r6
 8008a0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8008a0e:	6827      	ldr	r7, [r4, #0]
 8008a10:	07ba      	lsls	r2, r7, #30
 8008a12:	d50e      	bpl.n	8008a32 <HAL_RCC_ClockConfig+0x5a>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008a14:	077a      	lsls	r2, r7, #29
 8008a16:	d505      	bpl.n	8008a24 <HAL_RCC_ClockConfig+0x4c>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8008a18:	22e0      	movs	r2, #224	; 0xe0
 8008a1a:	4934      	ldr	r1, [pc, #208]	; (8008aec <HAL_RCC_ClockConfig+0x114>)
 8008a1c:	00d0      	lsls	r0, r2, #3
 8008a1e:	684b      	ldr	r3, [r1, #4]
 8008a20:	4318      	orrs	r0, r3
 8008a22:	6048      	str	r0, [r1, #4]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8008a24:	23f0      	movs	r3, #240	; 0xf0
 8008a26:	4e31      	ldr	r6, [pc, #196]	; (8008aec <HAL_RCC_ClockConfig+0x114>)
 8008a28:	68a2      	ldr	r2, [r4, #8]
 8008a2a:	6871      	ldr	r1, [r6, #4]
 8008a2c:	4399      	bics	r1, r3
 8008a2e:	4311      	orrs	r1, r2
 8008a30:	6071      	str	r1, [r6, #4]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008a32:	07fb      	lsls	r3, r7, #31
 8008a34:	d524      	bpl.n	8008a80 <HAL_RCC_ClockConfig+0xa8>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008a36:	6867      	ldr	r7, [r4, #4]
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008a38:	482c      	ldr	r0, [pc, #176]	; (8008aec <HAL_RCC_ClockConfig+0x114>)
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008a3a:	2f01      	cmp	r7, #1
 8008a3c:	d04a      	beq.n	8008ad4 <HAL_RCC_ClockConfig+0xfc>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8008a3e:	2f02      	cmp	r7, #2
 8008a40:	d044      	beq.n	8008acc <HAL_RCC_ClockConfig+0xf4>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 8008a42:	2f03      	cmp	r7, #3
 8008a44:	d04c      	beq.n	8008ae0 <HAL_RCC_ClockConfig+0x108>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008a46:	6806      	ldr	r6, [r0, #0]
 8008a48:	07b3      	lsls	r3, r6, #30
 8008a4a:	d5db      	bpl.n	8008a04 <HAL_RCC_ClockConfig+0x2c>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8008a4c:	2103      	movs	r1, #3
 8008a4e:	4e27      	ldr	r6, [pc, #156]	; (8008aec <HAL_RCC_ClockConfig+0x114>)
 8008a50:	6870      	ldr	r0, [r6, #4]
 8008a52:	4388      	bics	r0, r1
 8008a54:	4338      	orrs	r0, r7
 8008a56:	6070      	str	r0, [r6, #4]
    tickstart = HAL_GetTick();
 8008a58:	f7fe fee6 	bl	8007828 <HAL_GetTick>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008a5c:	230c      	movs	r3, #12
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008a5e:	4a24      	ldr	r2, [pc, #144]	; (8008af0 <HAL_RCC_ClockConfig+0x118>)
    tickstart = HAL_GetTick();
 8008a60:	0007      	movs	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008a62:	4698      	mov	r8, r3
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008a64:	4691      	mov	r9, r2
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008a66:	e004      	b.n	8008a72 <HAL_RCC_ClockConfig+0x9a>
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008a68:	f7fe fede 	bl	8007828 <HAL_GetTick>
 8008a6c:	1bc0      	subs	r0, r0, r7
 8008a6e:	4548      	cmp	r0, r9
 8008a70:	d834      	bhi.n	8008adc <HAL_RCC_ClockConfig+0x104>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008a72:	4641      	mov	r1, r8
 8008a74:	6870      	ldr	r0, [r6, #4]
 8008a76:	6863      	ldr	r3, [r4, #4]
 8008a78:	4008      	ands	r0, r1
 8008a7a:	009a      	lsls	r2, r3, #2
 8008a7c:	4290      	cmp	r0, r2
 8008a7e:	d1f3      	bne.n	8008a68 <HAL_RCC_ClockConfig+0x90>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8008a80:	2001      	movs	r0, #1
 8008a82:	4f19      	ldr	r7, [pc, #100]	; (8008ae8 <HAL_RCC_ClockConfig+0x110>)
 8008a84:	683e      	ldr	r6, [r7, #0]
 8008a86:	4006      	ands	r6, r0
 8008a88:	42ae      	cmp	r6, r5
 8008a8a:	d905      	bls.n	8008a98 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008a8c:	683d      	ldr	r5, [r7, #0]
 8008a8e:	4385      	bics	r5, r0
 8008a90:	603d      	str	r5, [r7, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8008a92:	6839      	ldr	r1, [r7, #0]
 8008a94:	4208      	tst	r0, r1
 8008a96:	d1b5      	bne.n	8008a04 <HAL_RCC_ClockConfig+0x2c>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008a98:	6823      	ldr	r3, [r4, #0]
 8008a9a:	075b      	lsls	r3, r3, #29
 8008a9c:	d506      	bpl.n	8008aac <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8008a9e:	4a13      	ldr	r2, [pc, #76]	; (8008aec <HAL_RCC_ClockConfig+0x114>)
 8008aa0:	4e14      	ldr	r6, [pc, #80]	; (8008af4 <HAL_RCC_ClockConfig+0x11c>)
 8008aa2:	6857      	ldr	r7, [r2, #4]
 8008aa4:	68e4      	ldr	r4, [r4, #12]
 8008aa6:	4037      	ands	r7, r6
 8008aa8:	4327      	orrs	r7, r4
 8008aaa:	6057      	str	r7, [r2, #4]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8008aac:	f7ff ff4c 	bl	8008948 <HAL_RCC_GetSysClockFreq>
 8008ab0:	4d0e      	ldr	r5, [pc, #56]	; (8008aec <HAL_RCC_ClockConfig+0x114>)
 8008ab2:	4a11      	ldr	r2, [pc, #68]	; (8008af8 <HAL_RCC_ClockConfig+0x120>)
 8008ab4:	6869      	ldr	r1, [r5, #4]
 8008ab6:	4c11      	ldr	r4, [pc, #68]	; (8008afc <HAL_RCC_ClockConfig+0x124>)
 8008ab8:	060b      	lsls	r3, r1, #24
 8008aba:	0f1f      	lsrs	r7, r3, #28
 8008abc:	5dd6      	ldrb	r6, [r2, r7]
 8008abe:	40f0      	lsrs	r0, r6
 8008ac0:	6020      	str	r0, [r4, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 8008ac2:	2000      	movs	r0, #0
 8008ac4:	f7fe fe6e 	bl	80077a4 <HAL_InitTick>
  return HAL_OK;
 8008ac8:	2000      	movs	r0, #0
 8008aca:	e79c      	b.n	8008a06 <HAL_RCC_ClockConfig+0x2e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008acc:	6803      	ldr	r3, [r0, #0]
 8008ace:	019b      	lsls	r3, r3, #6
 8008ad0:	d4bc      	bmi.n	8008a4c <HAL_RCC_ClockConfig+0x74>
 8008ad2:	e797      	b.n	8008a04 <HAL_RCC_ClockConfig+0x2c>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008ad4:	6802      	ldr	r2, [r0, #0]
 8008ad6:	0393      	lsls	r3, r2, #14
 8008ad8:	d4b8      	bmi.n	8008a4c <HAL_RCC_ClockConfig+0x74>
 8008ada:	e793      	b.n	8008a04 <HAL_RCC_ClockConfig+0x2c>
        return HAL_TIMEOUT;
 8008adc:	2003      	movs	r0, #3
 8008ade:	e792      	b.n	8008a06 <HAL_RCC_ClockConfig+0x2e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8008ae0:	6b41      	ldr	r1, [r0, #52]	; 0x34
 8008ae2:	03cb      	lsls	r3, r1, #15
 8008ae4:	d4b2      	bmi.n	8008a4c <HAL_RCC_ClockConfig+0x74>
 8008ae6:	e78d      	b.n	8008a04 <HAL_RCC_ClockConfig+0x2c>
 8008ae8:	40022000 	.word	0x40022000
 8008aec:	40021000 	.word	0x40021000
 8008af0:	00001388 	.word	0x00001388
 8008af4:	fffff8ff 	.word	0xfffff8ff
 8008af8:	0800fb90 	.word	0x0800fb90
 8008afc:	2000004c 	.word	0x2000004c

08008b00 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8008b00:	4b04      	ldr	r3, [pc, #16]	; (8008b14 <HAL_RCC_GetPCLK1Freq+0x14>)
 8008b02:	4a05      	ldr	r2, [pc, #20]	; (8008b18 <HAL_RCC_GetPCLK1Freq+0x18>)
 8008b04:	6858      	ldr	r0, [r3, #4]
 8008b06:	0541      	lsls	r1, r0, #21
 8008b08:	4804      	ldr	r0, [pc, #16]	; (8008b1c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8008b0a:	0f4b      	lsrs	r3, r1, #29
 8008b0c:	5cd1      	ldrb	r1, [r2, r3]
 8008b0e:	6800      	ldr	r0, [r0, #0]
 8008b10:	40c8      	lsrs	r0, r1
}    
 8008b12:	4770      	bx	lr
 8008b14:	40021000 	.word	0x40021000
 8008b18:	0800fba0 	.word	0x0800fba0
 8008b1c:	2000004c 	.word	0x2000004c

08008b20 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8008b20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b22:	46ce      	mov	lr, r9
 8008b24:	4647      	mov	r7, r8
 8008b26:	b580      	push	{r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  
  /*---------------------------- RTC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8008b28:	6805      	ldr	r5, [r0, #0]
{
 8008b2a:	0004      	movs	r4, r0
 8008b2c:	b083      	sub	sp, #12
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8008b2e:	03ea      	lsls	r2, r5, #15
 8008b30:	d533      	bpl.n	8008b9a <HAL_RCCEx_PeriphCLKConfig+0x7a>
    FlagStatus       pwrclkchanged = RESET;

    /* As soon as function is called to change RTC clock source, activation of the 
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008b32:	2280      	movs	r2, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 8008b34:	2000      	movs	r0, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008b36:	4b4e      	ldr	r3, [pc, #312]	; (8008c70 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8008b38:	0555      	lsls	r5, r2, #21
 8008b3a:	69d9      	ldr	r1, [r3, #28]
    FlagStatus       pwrclkchanged = RESET;
 8008b3c:	4680      	mov	r8, r0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008b3e:	4229      	tst	r1, r5
 8008b40:	d05e      	beq.n	8008c00 <HAL_RCCEx_PeriphCLKConfig+0xe0>
    {
    __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008b42:	2280      	movs	r2, #128	; 0x80
 8008b44:	4d4b      	ldr	r5, [pc, #300]	; (8008c74 <HAL_RCCEx_PeriphCLKConfig+0x154>)
 8008b46:	0056      	lsls	r6, r2, #1
 8008b48:	6829      	ldr	r1, [r5, #0]
 8008b4a:	4231      	tst	r1, r6
 8008b4c:	d067      	beq.n	8008c1e <HAL_RCCEx_PeriphCLKConfig+0xfe>
        }
      }
    }
    
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */ 
    temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8008b4e:	4d48      	ldr	r5, [pc, #288]	; (8008c70 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8008b50:	27c0      	movs	r7, #192	; 0xc0
 8008b52:	6a2e      	ldr	r6, [r5, #32]
 8008b54:	00ba      	lsls	r2, r7, #2
 8008b56:	0030      	movs	r0, r6
 8008b58:	4010      	ands	r0, r2
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8008b5a:	4216      	tst	r6, r2
 8008b5c:	d100      	bne.n	8008b60 <HAL_RCCEx_PeriphCLKConfig+0x40>
 8008b5e:	e07e      	b.n	8008c5e <HAL_RCCEx_PeriphCLKConfig+0x13e>
 8008b60:	6861      	ldr	r1, [r4, #4]
 8008b62:	400a      	ands	r2, r1
 8008b64:	4282      	cmp	r2, r0
 8008b66:	d00e      	beq.n	8008b86 <HAL_RCCEx_PeriphCLKConfig+0x66>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8008b68:	2280      	movs	r2, #128	; 0x80
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008b6a:	6a2f      	ldr	r7, [r5, #32]
      __HAL_RCC_BACKUPRESET_FORCE();
 8008b6c:	6a2e      	ldr	r6, [r5, #32]
 8008b6e:	0250      	lsls	r0, r2, #9
 8008b70:	4330      	orrs	r0, r6
 8008b72:	6228      	str	r0, [r5, #32]
      __HAL_RCC_BACKUPRESET_RELEASE();
 8008b74:	6a2a      	ldr	r2, [r5, #32]
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008b76:	4b40      	ldr	r3, [pc, #256]	; (8008c78 <HAL_RCCEx_PeriphCLKConfig+0x158>)
      __HAL_RCC_BACKUPRESET_RELEASE();
 8008b78:	4e40      	ldr	r6, [pc, #256]	; (8008c7c <HAL_RCCEx_PeriphCLKConfig+0x15c>)
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008b7a:	403b      	ands	r3, r7
      __HAL_RCC_BACKUPRESET_RELEASE();
 8008b7c:	4032      	ands	r2, r6
 8008b7e:	622a      	str	r2, [r5, #32]
      /* Restore the Content of BDCR register */
      RCC->BDCR = temp_reg;
 8008b80:	622b      	str	r3, [r5, #32]
      
      /* Wait for LSERDY if LSE was enabled */
      if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 8008b82:	07fb      	lsls	r3, r7, #31
 8008b84:	d45c      	bmi.n	8008c40 <HAL_RCCEx_PeriphCLKConfig+0x120>
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8008b86:	4642      	mov	r2, r8
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008b88:	4d39      	ldr	r5, [pc, #228]	; (8008c70 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8008b8a:	483b      	ldr	r0, [pc, #236]	; (8008c78 <HAL_RCCEx_PeriphCLKConfig+0x158>)
 8008b8c:	6a2f      	ldr	r7, [r5, #32]
 8008b8e:	4007      	ands	r7, r0
 8008b90:	430f      	orrs	r7, r1
 8008b92:	622f      	str	r7, [r5, #32]
    if(pwrclkchanged == SET)
 8008b94:	2a01      	cmp	r2, #1
 8008b96:	d064      	beq.n	8008c62 <HAL_RCCEx_PeriphCLKConfig+0x142>
 8008b98:	6825      	ldr	r5, [r4, #0]
      __HAL_RCC_PWR_CLK_DISABLE();
    }
  }

  /*------------------------------- USART1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8008b9a:	07ea      	lsls	r2, r5, #31
 8008b9c:	d506      	bpl.n	8008bac <HAL_RCCEx_PeriphCLKConfig+0x8c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
    
    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8008b9e:	2003      	movs	r0, #3
 8008ba0:	4933      	ldr	r1, [pc, #204]	; (8008c70 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8008ba2:	68a2      	ldr	r2, [r4, #8]
 8008ba4:	6b0f      	ldr	r7, [r1, #48]	; 0x30
 8008ba6:	4387      	bics	r7, r0
 8008ba8:	4317      	orrs	r7, r2
 8008baa:	630f      	str	r7, [r1, #48]	; 0x30
  }
  
#if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 || defined(STM32F091xC) || defined(STM32F098xx)
  /*----------------------------- USART2 Configuration --------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8008bac:	07aa      	lsls	r2, r5, #30
 8008bae:	d506      	bpl.n	8008bbe <HAL_RCCEx_PeriphCLKConfig+0x9e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));
    
    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8008bb0:	4e2f      	ldr	r6, [pc, #188]	; (8008c70 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8008bb2:	4933      	ldr	r1, [pc, #204]	; (8008c80 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8008bb4:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008bb6:	68e7      	ldr	r7, [r4, #12]
 8008bb8:	400b      	ands	r3, r1
 8008bba:	433b      	orrs	r3, r7
 8008bbc:	6333      	str	r3, [r6, #48]	; 0x30
#endif /* STM32F071xB || STM32F072xB || STM32F078xx || */
       /* STM32F091xC || STM32F098xx */

#if defined(STM32F091xC) || defined(STM32F098xx)
  /*----------------------------- USART3 Configuration --------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8008bbe:	036a      	lsls	r2, r5, #13
 8008bc0:	d506      	bpl.n	8008bd0 <HAL_RCCEx_PeriphCLKConfig+0xb0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));
    
    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8008bc2:	4e2b      	ldr	r6, [pc, #172]	; (8008c70 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8008bc4:	482f      	ldr	r0, [pc, #188]	; (8008c84 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8008bc6:	6b32      	ldr	r2, [r6, #48]	; 0x30
 8008bc8:	6923      	ldr	r3, [r4, #16]
 8008bca:	4002      	ands	r2, r0
 8008bcc:	431a      	orrs	r2, r3
 8008bce:	6332      	str	r2, [r6, #48]	; 0x30
  }
#endif /* STM32F091xC || STM32F098xx */  

  /*------------------------------ I2C1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8008bd0:	06aa      	lsls	r2, r5, #26
 8008bd2:	d506      	bpl.n	8008be2 <HAL_RCCEx_PeriphCLKConfig+0xc2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
    
    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8008bd4:	2610      	movs	r6, #16
 8008bd6:	4926      	ldr	r1, [pc, #152]	; (8008c70 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8008bd8:	6962      	ldr	r2, [r4, #20]
 8008bda:	6b0f      	ldr	r7, [r1, #48]	; 0x30
 8008bdc:	43b7      	bics	r7, r6
 8008bde:	4317      	orrs	r7, r2
 8008be0:	630f      	str	r7, [r1, #48]	; 0x30
#endif /* STM32F042x6 || STM32F048xx ||                */
       /* STM32F051x8 || STM32F058xx ||                */
       /* STM32F071xB || STM32F072xB || STM32F078xx || */
       /* STM32F091xC || STM32F098xx */
  
  return HAL_OK;
 8008be2:	2000      	movs	r0, #0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8008be4:	056b      	lsls	r3, r5, #21
 8008be6:	d506      	bpl.n	8008bf6 <HAL_RCCEx_PeriphCLKConfig+0xd6>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8008be8:	2140      	movs	r1, #64	; 0x40
 8008bea:	4d21      	ldr	r5, [pc, #132]	; (8008c70 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8008bec:	69a4      	ldr	r4, [r4, #24]
 8008bee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8008bf0:	438b      	bics	r3, r1
 8008bf2:	4323      	orrs	r3, r4
 8008bf4:	632b      	str	r3, [r5, #48]	; 0x30
}
 8008bf6:	b003      	add	sp, #12
 8008bf8:	bcc0      	pop	{r6, r7}
 8008bfa:	46b9      	mov	r9, r7
 8008bfc:	46b0      	mov	r8, r6
 8008bfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 8008c00:	69de      	ldr	r6, [r3, #28]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008c02:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_PWR_CLK_ENABLE();
 8008c04:	432e      	orrs	r6, r5
 8008c06:	61de      	str	r6, [r3, #28]
 8008c08:	69df      	ldr	r7, [r3, #28]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008c0a:	0056      	lsls	r6, r2, #1
    __HAL_RCC_PWR_CLK_ENABLE();
 8008c0c:	403d      	ands	r5, r7
 8008c0e:	9501      	str	r5, [sp, #4]
 8008c10:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8008c12:	2301      	movs	r3, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008c14:	4d17      	ldr	r5, [pc, #92]	; (8008c74 <HAL_RCCEx_PeriphCLKConfig+0x154>)
      pwrclkchanged = SET;
 8008c16:	4698      	mov	r8, r3
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008c18:	6829      	ldr	r1, [r5, #0]
 8008c1a:	4231      	tst	r1, r6
 8008c1c:	d197      	bne.n	8008b4e <HAL_RCCEx_PeriphCLKConfig+0x2e>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8008c1e:	6828      	ldr	r0, [r5, #0]
 8008c20:	4330      	orrs	r0, r6
 8008c22:	6028      	str	r0, [r5, #0]
      tickstart = HAL_GetTick();
 8008c24:	f7fe fe00 	bl	8007828 <HAL_GetTick>
 8008c28:	0007      	movs	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008c2a:	682b      	ldr	r3, [r5, #0]
 8008c2c:	4233      	tst	r3, r6
 8008c2e:	d000      	beq.n	8008c32 <HAL_RCCEx_PeriphCLKConfig+0x112>
 8008c30:	e78d      	b.n	8008b4e <HAL_RCCEx_PeriphCLKConfig+0x2e>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008c32:	f7fe fdf9 	bl	8007828 <HAL_GetTick>
 8008c36:	1bc2      	subs	r2, r0, r7
 8008c38:	2a64      	cmp	r2, #100	; 0x64
 8008c3a:	d9f6      	bls.n	8008c2a <HAL_RCCEx_PeriphCLKConfig+0x10a>
          return HAL_TIMEOUT;
 8008c3c:	2003      	movs	r0, #3
 8008c3e:	e7da      	b.n	8008bf6 <HAL_RCCEx_PeriphCLKConfig+0xd6>
        tickstart = HAL_GetTick();
 8008c40:	f7fe fdf2 	bl	8007828 <HAL_GetTick>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008c44:	4910      	ldr	r1, [pc, #64]	; (8008c88 <HAL_RCCEx_PeriphCLKConfig+0x168>)
        tickstart = HAL_GetTick();
 8008c46:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008c48:	2702      	movs	r7, #2
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008c4a:	4689      	mov	r9, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008c4c:	e004      	b.n	8008c58 <HAL_RCCEx_PeriphCLKConfig+0x138>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008c4e:	f7fe fdeb 	bl	8007828 <HAL_GetTick>
 8008c52:	1b80      	subs	r0, r0, r6
 8008c54:	4548      	cmp	r0, r9
 8008c56:	d8f1      	bhi.n	8008c3c <HAL_RCCEx_PeriphCLKConfig+0x11c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008c58:	6a2b      	ldr	r3, [r5, #32]
 8008c5a:	421f      	tst	r7, r3
 8008c5c:	d0f7      	beq.n	8008c4e <HAL_RCCEx_PeriphCLKConfig+0x12e>
 8008c5e:	6861      	ldr	r1, [r4, #4]
 8008c60:	e791      	b.n	8008b86 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PWR_CLK_DISABLE();
 8008c62:	69ee      	ldr	r6, [r5, #28]
 8008c64:	4b09      	ldr	r3, [pc, #36]	; (8008c8c <HAL_RCCEx_PeriphCLKConfig+0x16c>)
 8008c66:	401e      	ands	r6, r3
 8008c68:	61ee      	str	r6, [r5, #28]
 8008c6a:	6825      	ldr	r5, [r4, #0]
 8008c6c:	e795      	b.n	8008b9a <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8008c6e:	46c0      	nop			; (mov r8, r8)
 8008c70:	40021000 	.word	0x40021000
 8008c74:	40007000 	.word	0x40007000
 8008c78:	fffffcff 	.word	0xfffffcff
 8008c7c:	fffeffff 	.word	0xfffeffff
 8008c80:	fffcffff 	.word	0xfffcffff
 8008c84:	fff3ffff 	.word	0xfff3ffff
 8008c88:	00001388 	.word	0x00001388
 8008c8c:	efffffff 	.word	0xefffffff

08008c90 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008c90:	2201      	movs	r2, #1
{
 8008c92:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8008c94:	2573      	movs	r5, #115	; 0x73
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008c96:	6a03      	ldr	r3, [r0, #32]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008c98:	680e      	ldr	r6, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008c9a:	4393      	bics	r3, r2
 8008c9c:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8008c9e:	6a03      	ldr	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 8008ca0:	6842      	ldr	r2, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 8008ca2:	6984      	ldr	r4, [r0, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8008ca4:	43ac      	bics	r4, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8008ca6:	2502      	movs	r5, #2
  tmpccmrx |= OC_Config->OCMode;
 8008ca8:	4334      	orrs	r4, r6
  tmpccer &= ~TIM_CCER_CC1P;
 8008caa:	43ab      	bics	r3, r5
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8008cac:	688e      	ldr	r6, [r1, #8]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8008cae:	4d0f      	ldr	r5, [pc, #60]	; (8008cec <TIM_OC1_SetConfig+0x5c>)
  tmpccer |= OC_Config->OCPolarity;
 8008cb0:	4333      	orrs	r3, r6
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8008cb2:	42a8      	cmp	r0, r5
 8008cb4:	d008      	beq.n	8008cc8 <TIM_OC1_SetConfig+0x38>
 8008cb6:	4e0e      	ldr	r6, [pc, #56]	; (8008cf0 <TIM_OC1_SetConfig+0x60>)
 8008cb8:	42b0      	cmp	r0, r6
 8008cba:	d005      	beq.n	8008cc8 <TIM_OC1_SetConfig+0x38>
 8008cbc:	4d0d      	ldr	r5, [pc, #52]	; (8008cf4 <TIM_OC1_SetConfig+0x64>)
 8008cbe:	42a8      	cmp	r0, r5
 8008cc0:	d002      	beq.n	8008cc8 <TIM_OC1_SetConfig+0x38>
 8008cc2:	4e0d      	ldr	r6, [pc, #52]	; (8008cf8 <TIM_OC1_SetConfig+0x68>)
 8008cc4:	42b0      	cmp	r0, r6
 8008cc6:	d10b      	bne.n	8008ce0 <TIM_OC1_SetConfig+0x50>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8008cc8:	2508      	movs	r5, #8
 8008cca:	43ab      	bics	r3, r5
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8008ccc:	2504      	movs	r5, #4
    tmpccer |= OC_Config->OCNPolarity;
 8008cce:	68ce      	ldr	r6, [r1, #12]
 8008cd0:	4333      	orrs	r3, r6
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8008cd2:	4e0a      	ldr	r6, [pc, #40]	; (8008cfc <TIM_OC1_SetConfig+0x6c>)
    tmpccer &= ~TIM_CCER_CC1NE;
 8008cd4:	43ab      	bics	r3, r5
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8008cd6:	4032      	ands	r2, r6
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8008cd8:	694d      	ldr	r5, [r1, #20]
 8008cda:	698e      	ldr	r6, [r1, #24]
 8008cdc:	4335      	orrs	r5, r6
 8008cde:	432a      	orrs	r2, r5

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8008ce0:	6849      	ldr	r1, [r1, #4]
  TIMx->CR2 = tmpcr2;
 8008ce2:	6042      	str	r2, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8008ce4:	6184      	str	r4, [r0, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 8008ce6:	6341      	str	r1, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008ce8:	6203      	str	r3, [r0, #32]
}
 8008cea:	bd70      	pop	{r4, r5, r6, pc}
 8008cec:	40012c00 	.word	0x40012c00
 8008cf0:	40014000 	.word	0x40014000
 8008cf4:	40014400 	.word	0x40014400
 8008cf8:	40014800 	.word	0x40014800
 8008cfc:	fffffcff 	.word	0xfffffcff

08008d00 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8008d00:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8008d02:	2473      	movs	r4, #115	; 0x73
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8008d04:	6a03      	ldr	r3, [r0, #32]
 8008d06:	4a17      	ldr	r2, [pc, #92]	; (8008d64 <TIM_OC3_SetConfig+0x64>)
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008d08:	680e      	ldr	r6, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8008d0a:	4013      	ands	r3, r2
 8008d0c:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8008d0e:	6a03      	ldr	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 8008d10:	6842      	ldr	r2, [r0, #4]
  tmpccmrx = TIMx->CCMR2;
 8008d12:	69c5      	ldr	r5, [r0, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8008d14:	43a5      	bics	r5, r4
  tmpccmrx |= OC_Config->OCMode;
 8008d16:	4335      	orrs	r5, r6

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8008d18:	4c13      	ldr	r4, [pc, #76]	; (8008d68 <TIM_OC3_SetConfig+0x68>)
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8008d1a:	688e      	ldr	r6, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 8008d1c:	4023      	ands	r3, r4
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8008d1e:	0234      	lsls	r4, r6, #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8008d20:	4e12      	ldr	r6, [pc, #72]	; (8008d6c <TIM_OC3_SetConfig+0x6c>)
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8008d22:	4323      	orrs	r3, r4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8008d24:	42b0      	cmp	r0, r6
 8008d26:	d015      	beq.n	8008d54 <TIM_OC3_SetConfig+0x54>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008d28:	4c11      	ldr	r4, [pc, #68]	; (8008d70 <TIM_OC3_SetConfig+0x70>)
 8008d2a:	42a0      	cmp	r0, r4
 8008d2c:	d005      	beq.n	8008d3a <TIM_OC3_SetConfig+0x3a>
 8008d2e:	4e11      	ldr	r6, [pc, #68]	; (8008d74 <TIM_OC3_SetConfig+0x74>)
 8008d30:	42b0      	cmp	r0, r6
 8008d32:	d002      	beq.n	8008d3a <TIM_OC3_SetConfig+0x3a>
 8008d34:	4c10      	ldr	r4, [pc, #64]	; (8008d78 <TIM_OC3_SetConfig+0x78>)
 8008d36:	42a0      	cmp	r0, r4
 8008d38:	d106      	bne.n	8008d48 <TIM_OC3_SetConfig+0x48>
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8008d3a:	4c10      	ldr	r4, [pc, #64]	; (8008d7c <TIM_OC3_SetConfig+0x7c>)
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008d3c:	694e      	ldr	r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8008d3e:	4014      	ands	r4, r2
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008d40:	698a      	ldr	r2, [r1, #24]
 8008d42:	4332      	orrs	r2, r6
 8008d44:	0112      	lsls	r2, r2, #4
 8008d46:	4322      	orrs	r2, r4

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8008d48:	6849      	ldr	r1, [r1, #4]
  TIMx->CR2 = tmpcr2;
 8008d4a:	6042      	str	r2, [r0, #4]
  TIMx->CCMR2 = tmpccmrx;
 8008d4c:	61c5      	str	r5, [r0, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 8008d4e:	63c1      	str	r1, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008d50:	6203      	str	r3, [r0, #32]
}
 8008d52:	bd70      	pop	{r4, r5, r6, pc}
    tmpccer &= ~TIM_CCER_CC3NP;
 8008d54:	4e0a      	ldr	r6, [pc, #40]	; (8008d80 <TIM_OC3_SetConfig+0x80>)
    tmpccer &= ~TIM_CCER_CC3NE;
 8008d56:	4c0b      	ldr	r4, [pc, #44]	; (8008d84 <TIM_OC3_SetConfig+0x84>)
    tmpccer &= ~TIM_CCER_CC3NP;
 8008d58:	401e      	ands	r6, r3
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8008d5a:	68cb      	ldr	r3, [r1, #12]
 8008d5c:	021b      	lsls	r3, r3, #8
 8008d5e:	4333      	orrs	r3, r6
    tmpccer &= ~TIM_CCER_CC3NE;
 8008d60:	4023      	ands	r3, r4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008d62:	e7ea      	b.n	8008d3a <TIM_OC3_SetConfig+0x3a>
 8008d64:	fffffeff 	.word	0xfffffeff
 8008d68:	fffffdff 	.word	0xfffffdff
 8008d6c:	40012c00 	.word	0x40012c00
 8008d70:	40014000 	.word	0x40014000
 8008d74:	40014400 	.word	0x40014400
 8008d78:	40014800 	.word	0x40014800
 8008d7c:	ffffcfff 	.word	0xffffcfff
 8008d80:	fffff7ff 	.word	0xfffff7ff
 8008d84:	fffffbff 	.word	0xfffffbff

08008d88 <HAL_TIM_PWM_Init>:
{
 8008d88:	b510      	push	{r4, lr}
 8008d8a:	1e04      	subs	r4, r0, #0
  if (htim == NULL)
 8008d8c:	d06a      	beq.n	8008e64 <HAL_TIM_PWM_Init+0xdc>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008d8e:	233d      	movs	r3, #61	; 0x3d
 8008d90:	5cc0      	ldrb	r0, [r0, r3]
 8008d92:	b2c2      	uxtb	r2, r0
 8008d94:	2800      	cmp	r0, #0
 8008d96:	d02d      	beq.n	8008df4 <HAL_TIM_PWM_Init+0x6c>
  htim->State = HAL_TIM_STATE_BUSY;
 8008d98:	213d      	movs	r1, #61	; 0x3d
 8008d9a:	2302      	movs	r3, #2
 8008d9c:	5463      	strb	r3, [r4, r1]
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008d9e:	6820      	ldr	r0, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008da0:	4931      	ldr	r1, [pc, #196]	; (8008e68 <HAL_TIM_PWM_Init+0xe0>)
  tmpcr1 = TIMx->CR1;
 8008da2:	6802      	ldr	r2, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008da4:	4288      	cmp	r0, r1
 8008da6:	d032      	beq.n	8008e0e <HAL_TIM_PWM_Init+0x86>
 8008da8:	2380      	movs	r3, #128	; 0x80
 8008daa:	05d9      	lsls	r1, r3, #23
 8008dac:	4288      	cmp	r0, r1
 8008dae:	d018      	beq.n	8008de2 <HAL_TIM_PWM_Init+0x5a>
 8008db0:	4b2e      	ldr	r3, [pc, #184]	; (8008e6c <HAL_TIM_PWM_Init+0xe4>)
 8008db2:	4298      	cmp	r0, r3
 8008db4:	d015      	beq.n	8008de2 <HAL_TIM_PWM_Init+0x5a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8008db6:	492e      	ldr	r1, [pc, #184]	; (8008e70 <HAL_TIM_PWM_Init+0xe8>)
 8008db8:	4288      	cmp	r0, r1
 8008dba:	d016      	beq.n	8008dea <HAL_TIM_PWM_Init+0x62>
 8008dbc:	4b2d      	ldr	r3, [pc, #180]	; (8008e74 <HAL_TIM_PWM_Init+0xec>)
 8008dbe:	4298      	cmp	r0, r3
 8008dc0:	d029      	beq.n	8008e16 <HAL_TIM_PWM_Init+0x8e>
 8008dc2:	492d      	ldr	r1, [pc, #180]	; (8008e78 <HAL_TIM_PWM_Init+0xf0>)
 8008dc4:	4288      	cmp	r0, r1
 8008dc6:	d026      	beq.n	8008e16 <HAL_TIM_PWM_Init+0x8e>
 8008dc8:	4b2c      	ldr	r3, [pc, #176]	; (8008e7c <HAL_TIM_PWM_Init+0xf4>)
 8008dca:	4298      	cmp	r0, r3
 8008dcc:	d023      	beq.n	8008e16 <HAL_TIM_PWM_Init+0x8e>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008dce:	2180      	movs	r1, #128	; 0x80
 8008dd0:	69a3      	ldr	r3, [r4, #24]
 8008dd2:	438a      	bics	r2, r1
 8008dd4:	431a      	orrs	r2, r3
  TIMx->CR1 = tmpcr1;
 8008dd6:	6002      	str	r2, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008dd8:	68e2      	ldr	r2, [r4, #12]
 8008dda:	62c2      	str	r2, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8008ddc:	6861      	ldr	r1, [r4, #4]
 8008dde:	6281      	str	r1, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008de0:	e028      	b.n	8008e34 <HAL_TIM_PWM_Init+0xac>
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008de2:	2170      	movs	r1, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8008de4:	68a3      	ldr	r3, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008de6:	438a      	bics	r2, r1
    tmpcr1 |= Structure->CounterMode;
 8008de8:	431a      	orrs	r2, r3
    tmpcr1 &= ~TIM_CR1_CKD;
 8008dea:	4925      	ldr	r1, [pc, #148]	; (8008e80 <HAL_TIM_PWM_Init+0xf8>)
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008dec:	6923      	ldr	r3, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008dee:	400a      	ands	r2, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008df0:	431a      	orrs	r2, r3
 8008df2:	e7ec      	b.n	8008dce <HAL_TIM_PWM_Init+0x46>
    htim->Lock = HAL_UNLOCKED;
 8008df4:	303c      	adds	r0, #60	; 0x3c
 8008df6:	5422      	strb	r2, [r4, r0]
    HAL_TIM_PWM_MspInit(htim);
 8008df8:	0020      	movs	r0, r4
 8008dfa:	f7fe fc1b 	bl	8007634 <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8008dfe:	213d      	movs	r1, #61	; 0x3d
 8008e00:	2302      	movs	r3, #2
 8008e02:	5463      	strb	r3, [r4, r1]
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008e04:	6820      	ldr	r0, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008e06:	4918      	ldr	r1, [pc, #96]	; (8008e68 <HAL_TIM_PWM_Init+0xe0>)
  tmpcr1 = TIMx->CR1;
 8008e08:	6802      	ldr	r2, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008e0a:	4288      	cmp	r0, r1
 8008e0c:	d1cc      	bne.n	8008da8 <HAL_TIM_PWM_Init+0x20>
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008e0e:	2370      	movs	r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8008e10:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008e12:	439a      	bics	r2, r3
    tmpcr1 |= Structure->CounterMode;
 8008e14:	430a      	orrs	r2, r1
    tmpcr1 &= ~TIM_CR1_CKD;
 8008e16:	4b1a      	ldr	r3, [pc, #104]	; (8008e80 <HAL_TIM_PWM_Init+0xf8>)
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008e18:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008e1a:	401a      	ands	r2, r3
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008e1c:	2380      	movs	r3, #128	; 0x80
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008e1e:	430a      	orrs	r2, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008e20:	69a1      	ldr	r1, [r4, #24]
 8008e22:	439a      	bics	r2, r3
 8008e24:	430a      	orrs	r2, r1
  TIMx->CR1 = tmpcr1;
 8008e26:	6002      	str	r2, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008e28:	68e2      	ldr	r2, [r4, #12]
 8008e2a:	62c2      	str	r2, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8008e2c:	6863      	ldr	r3, [r4, #4]
 8008e2e:	6283      	str	r3, [r0, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 8008e30:	6961      	ldr	r1, [r4, #20]
 8008e32:	6301      	str	r1, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 8008e34:	2301      	movs	r3, #1
 8008e36:	6143      	str	r3, [r0, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008e38:	2046      	movs	r0, #70	; 0x46
 8008e3a:	5423      	strb	r3, [r4, r0]
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008e3c:	3808      	subs	r0, #8
 8008e3e:	5423      	strb	r3, [r4, r0]
 8008e40:	3001      	adds	r0, #1
 8008e42:	5423      	strb	r3, [r4, r0]
 8008e44:	3001      	adds	r0, #1
 8008e46:	5423      	strb	r3, [r4, r0]
 8008e48:	3001      	adds	r0, #1
 8008e4a:	5423      	strb	r3, [r4, r0]
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008e4c:	3001      	adds	r0, #1
 8008e4e:	5423      	strb	r3, [r4, r0]
 8008e50:	3001      	adds	r0, #1
 8008e52:	5423      	strb	r3, [r4, r0]
 8008e54:	3001      	adds	r0, #1
 8008e56:	5423      	strb	r3, [r4, r0]
 8008e58:	3001      	adds	r0, #1
 8008e5a:	5423      	strb	r3, [r4, r0]
  htim->State = HAL_TIM_STATE_READY;
 8008e5c:	3808      	subs	r0, #8
 8008e5e:	5423      	strb	r3, [r4, r0]
  return HAL_OK;
 8008e60:	2000      	movs	r0, #0
}
 8008e62:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008e64:	2001      	movs	r0, #1
 8008e66:	e7fc      	b.n	8008e62 <HAL_TIM_PWM_Init+0xda>
 8008e68:	40012c00 	.word	0x40012c00
 8008e6c:	40000400 	.word	0x40000400
 8008e70:	40002000 	.word	0x40002000
 8008e74:	40014000 	.word	0x40014000
 8008e78:	40014400 	.word	0x40014400
 8008e7c:	40014800 	.word	0x40014800
 8008e80:	fffffcff 	.word	0xfffffcff

08008e84 <HAL_TIM_PWM_Start>:
 8008e84:	2900      	cmp	r1, #0
 8008e86:	d12c      	bne.n	8008ee2 <HAL_TIM_PWM_Start+0x5e>
 8008e88:	233e      	movs	r3, #62	; 0x3e
 8008e8a:	5cc2      	ldrb	r2, [r0, r3]
 8008e8c:	2a01      	cmp	r2, #1
 8008e8e:	d130      	bne.n	8008ef2 <HAL_TIM_PWM_Start+0x6e>
 8008e90:	2202      	movs	r2, #2
 8008e92:	54c2      	strb	r2, [r0, r3]
 8008e94:	231f      	movs	r3, #31
 8008e96:	4019      	ands	r1, r3
 8008e98:	3b1e      	subs	r3, #30
 8008e9a:	408b      	lsls	r3, r1
 8008e9c:	6800      	ldr	r0, [r0, #0]
 8008e9e:	6a01      	ldr	r1, [r0, #32]
 8008ea0:	4399      	bics	r1, r3
 8008ea2:	6201      	str	r1, [r0, #32]
 8008ea4:	6a02      	ldr	r2, [r0, #32]
 8008ea6:	4313      	orrs	r3, r2
 8008ea8:	6203      	str	r3, [r0, #32]
 8008eaa:	4b21      	ldr	r3, [pc, #132]	; (8008f30 <HAL_TIM_PWM_Start+0xac>)
 8008eac:	4298      	cmp	r0, r3
 8008eae:	d022      	beq.n	8008ef6 <HAL_TIM_PWM_Start+0x72>
 8008eb0:	4920      	ldr	r1, [pc, #128]	; (8008f34 <HAL_TIM_PWM_Start+0xb0>)
 8008eb2:	4288      	cmp	r0, r1
 8008eb4:	d02b      	beq.n	8008f0e <HAL_TIM_PWM_Start+0x8a>
 8008eb6:	4a20      	ldr	r2, [pc, #128]	; (8008f38 <HAL_TIM_PWM_Start+0xb4>)
 8008eb8:	4290      	cmp	r0, r2
 8008eba:	d028      	beq.n	8008f0e <HAL_TIM_PWM_Start+0x8a>
 8008ebc:	4b1f      	ldr	r3, [pc, #124]	; (8008f3c <HAL_TIM_PWM_Start+0xb8>)
 8008ebe:	4298      	cmp	r0, r3
 8008ec0:	d025      	beq.n	8008f0e <HAL_TIM_PWM_Start+0x8a>
 8008ec2:	2180      	movs	r1, #128	; 0x80
 8008ec4:	05ca      	lsls	r2, r1, #23
 8008ec6:	4290      	cmp	r0, r2
 8008ec8:	d01a      	beq.n	8008f00 <HAL_TIM_PWM_Start+0x7c>
 8008eca:	4b1d      	ldr	r3, [pc, #116]	; (8008f40 <HAL_TIM_PWM_Start+0xbc>)
 8008ecc:	4298      	cmp	r0, r3
 8008ece:	d017      	beq.n	8008f00 <HAL_TIM_PWM_Start+0x7c>
 8008ed0:	4918      	ldr	r1, [pc, #96]	; (8008f34 <HAL_TIM_PWM_Start+0xb0>)
 8008ed2:	4288      	cmp	r0, r1
 8008ed4:	d014      	beq.n	8008f00 <HAL_TIM_PWM_Start+0x7c>
 8008ed6:	2101      	movs	r1, #1
 8008ed8:	6803      	ldr	r3, [r0, #0]
 8008eda:	430b      	orrs	r3, r1
 8008edc:	6003      	str	r3, [r0, #0]
 8008ede:	2000      	movs	r0, #0
 8008ee0:	e008      	b.n	8008ef4 <HAL_TIM_PWM_Start+0x70>
 8008ee2:	2904      	cmp	r1, #4
 8008ee4:	d019      	beq.n	8008f1a <HAL_TIM_PWM_Start+0x96>
 8008ee6:	2908      	cmp	r1, #8
 8008ee8:	d01c      	beq.n	8008f24 <HAL_TIM_PWM_Start+0xa0>
 8008eea:	2341      	movs	r3, #65	; 0x41
 8008eec:	5cc2      	ldrb	r2, [r0, r3]
 8008eee:	2a01      	cmp	r2, #1
 8008ef0:	d0ce      	beq.n	8008e90 <HAL_TIM_PWM_Start+0xc>
 8008ef2:	2001      	movs	r0, #1
 8008ef4:	4770      	bx	lr
 8008ef6:	2280      	movs	r2, #128	; 0x80
 8008ef8:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8008efa:	0211      	lsls	r1, r2, #8
 8008efc:	4319      	orrs	r1, r3
 8008efe:	6441      	str	r1, [r0, #68]	; 0x44
 8008f00:	2207      	movs	r2, #7
 8008f02:	6883      	ldr	r3, [r0, #8]
 8008f04:	401a      	ands	r2, r3
 8008f06:	2a06      	cmp	r2, #6
 8008f08:	d1e5      	bne.n	8008ed6 <HAL_TIM_PWM_Start+0x52>
 8008f0a:	2000      	movs	r0, #0
 8008f0c:	e7f2      	b.n	8008ef4 <HAL_TIM_PWM_Start+0x70>
 8008f0e:	2280      	movs	r2, #128	; 0x80
 8008f10:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8008f12:	0213      	lsls	r3, r2, #8
 8008f14:	430b      	orrs	r3, r1
 8008f16:	6443      	str	r3, [r0, #68]	; 0x44
 8008f18:	e7d3      	b.n	8008ec2 <HAL_TIM_PWM_Start+0x3e>
 8008f1a:	233f      	movs	r3, #63	; 0x3f
 8008f1c:	5cc2      	ldrb	r2, [r0, r3]
 8008f1e:	2a01      	cmp	r2, #1
 8008f20:	d0b6      	beq.n	8008e90 <HAL_TIM_PWM_Start+0xc>
 8008f22:	e7e6      	b.n	8008ef2 <HAL_TIM_PWM_Start+0x6e>
 8008f24:	2340      	movs	r3, #64	; 0x40
 8008f26:	5cc2      	ldrb	r2, [r0, r3]
 8008f28:	2a01      	cmp	r2, #1
 8008f2a:	d0b1      	beq.n	8008e90 <HAL_TIM_PWM_Start+0xc>
 8008f2c:	e7e1      	b.n	8008ef2 <HAL_TIM_PWM_Start+0x6e>
 8008f2e:	46c0      	nop			; (mov r8, r8)
 8008f30:	40012c00 	.word	0x40012c00
 8008f34:	40014000 	.word	0x40014000
 8008f38:	40014400 	.word	0x40014400
 8008f3c:	40014800 	.word	0x40014800
 8008f40:	40000400 	.word	0x40000400

08008f44 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8008f44:	2210      	movs	r2, #16
 8008f46:	6a03      	ldr	r3, [r0, #32]
{
 8008f48:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8008f4a:	4393      	bics	r3, r2
 8008f4c:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8008f4e:	6a02      	ldr	r2, [r0, #32]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8008f50:	4c16      	ldr	r4, [pc, #88]	; (8008fac <TIM_OC2_SetConfig+0x68>)
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008f52:	680e      	ldr	r6, [r1, #0]
  tmpcr2 =  TIMx->CR2;
 8008f54:	6843      	ldr	r3, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 8008f56:	6985      	ldr	r5, [r0, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8008f58:	4025      	ands	r5, r4
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008f5a:	0234      	lsls	r4, r6, #8
  tmpccer &= ~TIM_CCER_CC2P;
 8008f5c:	2620      	movs	r6, #32
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008f5e:	4325      	orrs	r5, r4
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8008f60:	688c      	ldr	r4, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 8008f62:	43b2      	bics	r2, r6
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8008f64:	0126      	lsls	r6, r4, #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8008f66:	4c12      	ldr	r4, [pc, #72]	; (8008fb0 <TIM_OC2_SetConfig+0x6c>)
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8008f68:	4332      	orrs	r2, r6
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8008f6a:	42a0      	cmp	r0, r4
 8008f6c:	d015      	beq.n	8008f9a <TIM_OC2_SetConfig+0x56>
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008f6e:	4e11      	ldr	r6, [pc, #68]	; (8008fb4 <TIM_OC2_SetConfig+0x70>)
 8008f70:	42b0      	cmp	r0, r6
 8008f72:	d005      	beq.n	8008f80 <TIM_OC2_SetConfig+0x3c>
 8008f74:	4c10      	ldr	r4, [pc, #64]	; (8008fb8 <TIM_OC2_SetConfig+0x74>)
 8008f76:	42a0      	cmp	r0, r4
 8008f78:	d002      	beq.n	8008f80 <TIM_OC2_SetConfig+0x3c>
 8008f7a:	4e10      	ldr	r6, [pc, #64]	; (8008fbc <TIM_OC2_SetConfig+0x78>)
 8008f7c:	42b0      	cmp	r0, r6
 8008f7e:	d106      	bne.n	8008f8e <TIM_OC2_SetConfig+0x4a>
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8008f80:	4c0f      	ldr	r4, [pc, #60]	; (8008fc0 <TIM_OC2_SetConfig+0x7c>)
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8008f82:	694e      	ldr	r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8008f84:	401c      	ands	r4, r3
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8008f86:	698b      	ldr	r3, [r1, #24]
 8008f88:	4333      	orrs	r3, r6
 8008f8a:	009b      	lsls	r3, r3, #2
 8008f8c:	4323      	orrs	r3, r4
  TIMx->CCR2 = OC_Config->Pulse;
 8008f8e:	6849      	ldr	r1, [r1, #4]
  TIMx->CR2 = tmpcr2;
 8008f90:	6043      	str	r3, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8008f92:	6185      	str	r5, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 8008f94:	6381      	str	r1, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 8008f96:	6202      	str	r2, [r0, #32]
}
 8008f98:	bd70      	pop	{r4, r5, r6, pc}
    tmpccer &= ~TIM_CCER_CC2NP;
 8008f9a:	2480      	movs	r4, #128	; 0x80
 8008f9c:	43a2      	bics	r2, r4
 8008f9e:	0016      	movs	r6, r2
    tmpccer &= ~TIM_CCER_CC2NE;
 8008fa0:	2440      	movs	r4, #64	; 0x40
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8008fa2:	68ca      	ldr	r2, [r1, #12]
 8008fa4:	0112      	lsls	r2, r2, #4
 8008fa6:	4332      	orrs	r2, r6
    tmpccer &= ~TIM_CCER_CC2NE;
 8008fa8:	43a2      	bics	r2, r4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008faa:	e7e9      	b.n	8008f80 <TIM_OC2_SetConfig+0x3c>
 8008fac:	ffff8cff 	.word	0xffff8cff
 8008fb0:	40012c00 	.word	0x40012c00
 8008fb4:	40014000 	.word	0x40014000
 8008fb8:	40014400 	.word	0x40014400
 8008fbc:	40014800 	.word	0x40014800
 8008fc0:	fffff3ff 	.word	0xfffff3ff

08008fc4 <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 8008fc4:	233c      	movs	r3, #60	; 0x3c
{
 8008fc6:	b570      	push	{r4, r5, r6, lr}
 8008fc8:	0014      	movs	r4, r2
  __HAL_LOCK(htim);
 8008fca:	5cc2      	ldrb	r2, [r0, r3]
{
 8008fcc:	0005      	movs	r5, r0
 8008fce:	000e      	movs	r6, r1
  __HAL_LOCK(htim);
 8008fd0:	2a01      	cmp	r2, #1
 8008fd2:	d100      	bne.n	8008fd6 <HAL_TIM_PWM_ConfigChannel+0x12>
 8008fd4:	e079      	b.n	80090ca <HAL_TIM_PWM_ConfigChannel+0x106>
 8008fd6:	2001      	movs	r0, #1
 8008fd8:	54e8      	strb	r0, [r5, r3]
  switch (Channel)
 8008fda:	2c08      	cmp	r4, #8
 8008fdc:	d065      	beq.n	80090aa <HAL_TIM_PWM_ConfigChannel+0xe6>
 8008fde:	d81a      	bhi.n	8009016 <HAL_TIM_PWM_ConfigChannel+0x52>
 8008fe0:	2c00      	cmp	r4, #0
 8008fe2:	d051      	beq.n	8009088 <HAL_TIM_PWM_ConfigChannel+0xc4>
 8008fe4:	2c04      	cmp	r4, #4
 8008fe6:	d111      	bne.n	800900c <HAL_TIM_PWM_ConfigChannel+0x48>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8008fe8:	6828      	ldr	r0, [r5, #0]
 8008fea:	f7ff ffab 	bl	8008f44 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8008fee:	2280      	movs	r2, #128	; 0x80
 8008ff0:	682b      	ldr	r3, [r5, #0]
 8008ff2:	0111      	lsls	r1, r2, #4
 8008ff4:	6998      	ldr	r0, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8008ff6:	6936      	ldr	r6, [r6, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8008ff8:	4301      	orrs	r1, r0
 8008ffa:	6199      	str	r1, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8008ffc:	699c      	ldr	r4, [r3, #24]
 8008ffe:	4834      	ldr	r0, [pc, #208]	; (80090d0 <HAL_TIM_PWM_ConfigChannel+0x10c>)
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8009000:	0232      	lsls	r2, r6, #8
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8009002:	4004      	ands	r4, r0
 8009004:	619c      	str	r4, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8009006:	6999      	ldr	r1, [r3, #24]
 8009008:	430a      	orrs	r2, r1
 800900a:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800900c:	233c      	movs	r3, #60	; 0x3c
 800900e:	2400      	movs	r4, #0
  return HAL_OK;
 8009010:	2000      	movs	r0, #0
  __HAL_UNLOCK(htim);
 8009012:	54ec      	strb	r4, [r5, r3]
}
 8009014:	bd70      	pop	{r4, r5, r6, pc}
  switch (Channel)
 8009016:	2c0c      	cmp	r4, #12
 8009018:	d1f8      	bne.n	800900c <HAL_TIM_PWM_ConfigChannel+0x48>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800901a:	682b      	ldr	r3, [r5, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800901c:	492d      	ldr	r1, [pc, #180]	; (80090d4 <HAL_TIM_PWM_ConfigChannel+0x110>)
 800901e:	6a1c      	ldr	r4, [r3, #32]
 8009020:	400c      	ands	r4, r1
 8009022:	621c      	str	r4, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009024:	6a19      	ldr	r1, [r3, #32]
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8009026:	4c2c      	ldr	r4, [pc, #176]	; (80090d8 <HAL_TIM_PWM_ConfigChannel+0x114>)
  tmpcr2 =  TIMx->CR2;
 8009028:	685a      	ldr	r2, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800902a:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800902c:	4020      	ands	r0, r4

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800902e:	6834      	ldr	r4, [r6, #0]
 8009030:	0224      	lsls	r4, r4, #8
 8009032:	4320      	orrs	r0, r4

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8009034:	4c29      	ldr	r4, [pc, #164]	; (80090dc <HAL_TIM_PWM_ConfigChannel+0x118>)
 8009036:	400c      	ands	r4, r1
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8009038:	68b1      	ldr	r1, [r6, #8]
 800903a:	0309      	lsls	r1, r1, #12
 800903c:	4321      	orrs	r1, r4

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800903e:	4c28      	ldr	r4, [pc, #160]	; (80090e0 <HAL_TIM_PWM_ConfigChannel+0x11c>)
 8009040:	42a3      	cmp	r3, r4
 8009042:	d008      	beq.n	8009056 <HAL_TIM_PWM_ConfigChannel+0x92>
 8009044:	4c27      	ldr	r4, [pc, #156]	; (80090e4 <HAL_TIM_PWM_ConfigChannel+0x120>)
 8009046:	42a3      	cmp	r3, r4
 8009048:	d005      	beq.n	8009056 <HAL_TIM_PWM_ConfigChannel+0x92>
 800904a:	4c27      	ldr	r4, [pc, #156]	; (80090e8 <HAL_TIM_PWM_ConfigChannel+0x124>)
 800904c:	42a3      	cmp	r3, r4
 800904e:	d002      	beq.n	8009056 <HAL_TIM_PWM_ConfigChannel+0x92>
 8009050:	4c26      	ldr	r4, [pc, #152]	; (80090ec <HAL_TIM_PWM_ConfigChannel+0x128>)
 8009052:	42a3      	cmp	r3, r4
 8009054:	d104      	bne.n	8009060 <HAL_TIM_PWM_ConfigChannel+0x9c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8009056:	4c26      	ldr	r4, [pc, #152]	; (80090f0 <HAL_TIM_PWM_ConfigChannel+0x12c>)
 8009058:	4022      	ands	r2, r4

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800905a:	6974      	ldr	r4, [r6, #20]
 800905c:	01a4      	lsls	r4, r4, #6
 800905e:	4322      	orrs	r2, r4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009060:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8009062:	6872      	ldr	r2, [r6, #4]
  TIMx->CCMR2 = tmpccmrx;
 8009064:	61d8      	str	r0, [r3, #28]
  TIMx->CCR4 = OC_Config->Pulse;
 8009066:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009068:	6219      	str	r1, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800906a:	2180      	movs	r1, #128	; 0x80
 800906c:	69d8      	ldr	r0, [r3, #28]
 800906e:	010c      	lsls	r4, r1, #4
 8009070:	4304      	orrs	r4, r0
 8009072:	61dc      	str	r4, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8009074:	69da      	ldr	r2, [r3, #28]
 8009076:	4816      	ldr	r0, [pc, #88]	; (80090d0 <HAL_TIM_PWM_ConfigChannel+0x10c>)
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8009078:	6936      	ldr	r6, [r6, #16]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800907a:	4002      	ands	r2, r0
 800907c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800907e:	69d9      	ldr	r1, [r3, #28]
 8009080:	0234      	lsls	r4, r6, #8
 8009082:	430c      	orrs	r4, r1
 8009084:	61dc      	str	r4, [r3, #28]
      break;
 8009086:	e7c1      	b.n	800900c <HAL_TIM_PWM_ConfigChannel+0x48>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8009088:	6828      	ldr	r0, [r5, #0]
 800908a:	f7ff fe01 	bl	8008c90 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800908e:	2008      	movs	r0, #8
 8009090:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8009092:	6936      	ldr	r6, [r6, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8009094:	699a      	ldr	r2, [r3, #24]
 8009096:	4302      	orrs	r2, r0
 8009098:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800909a:	6999      	ldr	r1, [r3, #24]
 800909c:	3804      	subs	r0, #4
 800909e:	4381      	bics	r1, r0
 80090a0:	6199      	str	r1, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 80090a2:	699c      	ldr	r4, [r3, #24]
 80090a4:	4334      	orrs	r4, r6
 80090a6:	619c      	str	r4, [r3, #24]
      break;
 80090a8:	e7b0      	b.n	800900c <HAL_TIM_PWM_ConfigChannel+0x48>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80090aa:	6828      	ldr	r0, [r5, #0]
 80090ac:	f7ff fe28 	bl	8008d00 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80090b0:	2204      	movs	r2, #4
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80090b2:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80090b4:	6936      	ldr	r6, [r6, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80090b6:	69d9      	ldr	r1, [r3, #28]
 80090b8:	430c      	orrs	r4, r1
 80090ba:	61dc      	str	r4, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80090bc:	69dc      	ldr	r4, [r3, #28]
 80090be:	4394      	bics	r4, r2
 80090c0:	61dc      	str	r4, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80090c2:	69d8      	ldr	r0, [r3, #28]
 80090c4:	4330      	orrs	r0, r6
 80090c6:	61d8      	str	r0, [r3, #28]
      break;
 80090c8:	e7a0      	b.n	800900c <HAL_TIM_PWM_ConfigChannel+0x48>
  __HAL_LOCK(htim);
 80090ca:	2002      	movs	r0, #2
 80090cc:	e7a2      	b.n	8009014 <HAL_TIM_PWM_ConfigChannel+0x50>
 80090ce:	46c0      	nop			; (mov r8, r8)
 80090d0:	fffffbff 	.word	0xfffffbff
 80090d4:	ffffefff 	.word	0xffffefff
 80090d8:	ffff8cff 	.word	0xffff8cff
 80090dc:	ffffdfff 	.word	0xffffdfff
 80090e0:	40012c00 	.word	0x40012c00
 80090e4:	40014000 	.word	0x40014000
 80090e8:	40014400 	.word	0x40014400
 80090ec:	40014800 	.word	0x40014800
 80090f0:	ffffbfff 	.word	0xffffbfff

080090f4 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80090f4:	233c      	movs	r3, #60	; 0x3c
{
 80090f6:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(htim);
 80090f8:	5cc2      	ldrb	r2, [r0, r3]
 80090fa:	2a01      	cmp	r2, #1
 80090fc:	d024      	beq.n	8009148 <HAL_TIMEx_MasterConfigSynchronization+0x54>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80090fe:	243d      	movs	r4, #61	; 0x3d
 8009100:	2502      	movs	r5, #2
 8009102:	5505      	strb	r5, [r0, r4]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8009104:	2570      	movs	r5, #112	; 0x70
  tmpcr2 = htim->Instance->CR2;
 8009106:	6803      	ldr	r3, [r0, #0]
 8009108:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 800910a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800910c:	43aa      	bics	r2, r5
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800910e:	680d      	ldr	r5, [r1, #0]
 8009110:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8009112:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009114:	4a0d      	ldr	r2, [pc, #52]	; (800914c <HAL_TIMEx_MasterConfigSynchronization+0x58>)
 8009116:	4293      	cmp	r3, r2
 8009118:	d009      	beq.n	800912e <HAL_TIMEx_MasterConfigSynchronization+0x3a>
 800911a:	2580      	movs	r5, #128	; 0x80
 800911c:	05ea      	lsls	r2, r5, #23
 800911e:	4293      	cmp	r3, r2
 8009120:	d005      	beq.n	800912e <HAL_TIMEx_MasterConfigSynchronization+0x3a>
 8009122:	4d0b      	ldr	r5, [pc, #44]	; (8009150 <HAL_TIMEx_MasterConfigSynchronization+0x5c>)
 8009124:	42ab      	cmp	r3, r5
 8009126:	d002      	beq.n	800912e <HAL_TIMEx_MasterConfigSynchronization+0x3a>
 8009128:	4a0a      	ldr	r2, [pc, #40]	; (8009154 <HAL_TIMEx_MasterConfigSynchronization+0x60>)
 800912a:	4293      	cmp	r3, r2
 800912c:	d104      	bne.n	8009138 <HAL_TIMEx_MasterConfigSynchronization+0x44>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 800912e:	2580      	movs	r5, #128	; 0x80
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8009130:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8009132:	43ac      	bics	r4, r5
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8009134:	430c      	orrs	r4, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8009136:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8009138:	233d      	movs	r3, #61	; 0x3d
 800913a:	2401      	movs	r4, #1

  __HAL_UNLOCK(htim);
 800913c:	2200      	movs	r2, #0
  htim->State = HAL_TIM_STATE_READY;
 800913e:	54c4      	strb	r4, [r0, r3]
  __HAL_UNLOCK(htim);
 8009140:	3b01      	subs	r3, #1
 8009142:	54c2      	strb	r2, [r0, r3]

  return HAL_OK;
 8009144:	2000      	movs	r0, #0
}
 8009146:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(htim);
 8009148:	2002      	movs	r0, #2
 800914a:	e7fc      	b.n	8009146 <HAL_TIMEx_MasterConfigSynchronization+0x52>
 800914c:	40012c00 	.word	0x40012c00
 8009150:	40000400 	.word	0x40000400
 8009154:	40014000 	.word	0x40014000

08009158 <HAL_UART_TxCpltCallback>:
 8009158:	4770      	bx	lr
 800915a:	46c0      	nop			; (mov r8, r8)

0800915c <HAL_UART_ErrorCallback>:
 800915c:	4770      	bx	lr
 800915e:	46c0      	nop			; (mov r8, r8)

08009160 <UART_DMAAbortOnError>:
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
  huart->RxXferCount = 0U;
 8009160:	2300      	movs	r3, #0
 8009162:	225a      	movs	r2, #90	; 0x5a
{
 8009164:	b510      	push	{r4, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8009166:	6a40      	ldr	r0, [r0, #36]	; 0x24
  huart->RxXferCount = 0U;
 8009168:	5283      	strh	r3, [r0, r2]
  huart->TxXferCount = 0U;
 800916a:	3a08      	subs	r2, #8
 800916c:	5283      	strh	r3, [r0, r2]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 800916e:	f7ff fff5 	bl	800915c <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8009172:	bd10      	pop	{r4, pc}

08009174 <HAL_UARTEx_RxEventCallback>:
}
 8009174:	4770      	bx	lr
 8009176:	46c0      	nop			; (mov r8, r8)

08009178 <HAL_UART_IRQHandler>:
{
 8009178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800917a:	46ce      	mov	lr, r9
 800917c:	4647      	mov	r7, r8
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 800917e:	6802      	ldr	r2, [r0, #0]
{
 8009180:	0004      	movs	r4, r0
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8009182:	69d3      	ldr	r3, [r2, #28]
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 8009184:	4895      	ldr	r0, [pc, #596]	; (80093dc <HAL_UART_IRQHandler+0x264>)
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8009186:	6811      	ldr	r1, [r2, #0]
{
 8009188:	b580      	push	{r7, lr}
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 800918a:	6895      	ldr	r5, [r2, #8]
  if (errorflags == 0U)
 800918c:	4203      	tst	r3, r0
 800918e:	d161      	bne.n	8009254 <HAL_UART_IRQHandler+0xdc>
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8009190:	2720      	movs	r7, #32
 8009192:	421f      	tst	r7, r3
 8009194:	d002      	beq.n	800919c <HAL_UART_IRQHandler+0x24>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8009196:	420f      	tst	r7, r1
 8009198:	d000      	beq.n	800919c <HAL_UART_IRQHandler+0x24>
 800919a:	e0d9      	b.n	8009350 <HAL_UART_IRQHandler+0x1d8>
  if (  (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800919c:	6e26      	ldr	r6, [r4, #96]	; 0x60
 800919e:	2e01      	cmp	r6, #1
 80091a0:	d01b      	beq.n	80091da <HAL_UART_IRQHandler+0x62>
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 80091a2:	2080      	movs	r0, #128	; 0x80
 80091a4:	0346      	lsls	r6, r0, #13
 80091a6:	4233      	tst	r3, r6
 80091a8:	d002      	beq.n	80091b0 <HAL_UART_IRQHandler+0x38>
 80091aa:	026d      	lsls	r5, r5, #9
 80091ac:	d500      	bpl.n	80091b0 <HAL_UART_IRQHandler+0x38>
 80091ae:	e0d4      	b.n	800935a <HAL_UART_IRQHandler+0x1e2>
  if (((isrflags & USART_ISR_TXE) != 0U)
 80091b0:	2580      	movs	r5, #128	; 0x80
 80091b2:	421d      	tst	r5, r3
 80091b4:	d109      	bne.n	80091ca <HAL_UART_IRQHandler+0x52>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 80091b6:	2740      	movs	r7, #64	; 0x40
 80091b8:	421f      	tst	r7, r3
 80091ba:	d002      	beq.n	80091c2 <HAL_UART_IRQHandler+0x4a>
 80091bc:	420f      	tst	r7, r1
 80091be:	d000      	beq.n	80091c2 <HAL_UART_IRQHandler+0x4a>
 80091c0:	e0d4      	b.n	800936c <HAL_UART_IRQHandler+0x1f4>
}
 80091c2:	bcc0      	pop	{r6, r7}
 80091c4:	46b9      	mov	r9, r7
 80091c6:	46b0      	mov	r8, r6
 80091c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 80091ca:	420d      	tst	r5, r1
 80091cc:	d0f3      	beq.n	80091b6 <HAL_UART_IRQHandler+0x3e>
    if (huart->TxISR != NULL)
 80091ce:	6ea6      	ldr	r6, [r4, #104]	; 0x68
 80091d0:	2e00      	cmp	r6, #0
 80091d2:	d0f6      	beq.n	80091c2 <HAL_UART_IRQHandler+0x4a>
      huart->TxISR(huart);
 80091d4:	0020      	movs	r0, r4
 80091d6:	47b0      	blx	r6
 80091d8:	e7f3      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
      &&((isrflags & USART_ISR_IDLE) != 0U)
 80091da:	2710      	movs	r7, #16
 80091dc:	421f      	tst	r7, r3
 80091de:	d0e0      	beq.n	80091a2 <HAL_UART_IRQHandler+0x2a>
      &&((cr1its & USART_ISR_IDLE) != 0U))
 80091e0:	420f      	tst	r7, r1
 80091e2:	d0de      	beq.n	80091a2 <HAL_UART_IRQHandler+0x2a>
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80091e4:	2340      	movs	r3, #64	; 0x40
 80091e6:	0018      	movs	r0, r3
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 80091e8:	6217      	str	r7, [r2, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80091ea:	6895      	ldr	r5, [r2, #8]
 80091ec:	4028      	ands	r0, r5
 80091ee:	422b      	tst	r3, r5
 80091f0:	d100      	bne.n	80091f4 <HAL_UART_IRQHandler+0x7c>
 80091f2:	e0cd      	b.n	8009390 <HAL_UART_IRQHandler+0x218>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 80091f4:	6f20      	ldr	r0, [r4, #112]	; 0x70
 80091f6:	6801      	ldr	r1, [r0, #0]
 80091f8:	684d      	ldr	r5, [r1, #4]
 80091fa:	b2a9      	uxth	r1, r5
      if (  (nb_remaining_rx_data > 0U)
 80091fc:	2900      	cmp	r1, #0
 80091fe:	d0e0      	beq.n	80091c2 <HAL_UART_IRQHandler+0x4a>
          &&(nb_remaining_rx_data < huart->RxXferSize))
 8009200:	2558      	movs	r5, #88	; 0x58
 8009202:	46a8      	mov	r8, r5
 8009204:	5b65      	ldrh	r5, [r4, r5]
 8009206:	46a9      	mov	r9, r5
 8009208:	428d      	cmp	r5, r1
 800920a:	d9da      	bls.n	80091c2 <HAL_UART_IRQHandler+0x4a>
        huart->RxXferCount = nb_remaining_rx_data;
 800920c:	255a      	movs	r5, #90	; 0x5a
 800920e:	5361      	strh	r1, [r4, r5]
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8009210:	6981      	ldr	r1, [r0, #24]
 8009212:	2920      	cmp	r1, #32
 8009214:	d015      	beq.n	8009242 <HAL_UART_IRQHandler+0xca>
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8009216:	6811      	ldr	r1, [r2, #0]
 8009218:	4d71      	ldr	r5, [pc, #452]	; (80093e0 <HAL_UART_IRQHandler+0x268>)
 800921a:	4029      	ands	r1, r5
 800921c:	6011      	str	r1, [r2, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800921e:	6891      	ldr	r1, [r2, #8]
 8009220:	43b1      	bics	r1, r6
 8009222:	6091      	str	r1, [r2, #8]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8009224:	6896      	ldr	r6, [r2, #8]
 8009226:	439e      	bics	r6, r3
          huart->RxState = HAL_UART_STATE_READY;
 8009228:	3b20      	subs	r3, #32
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800922a:	6096      	str	r6, [r2, #8]
          huart->RxState = HAL_UART_STATE_READY;
 800922c:	67e3      	str	r3, [r4, #124]	; 0x7c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800922e:	2300      	movs	r3, #0
 8009230:	6623      	str	r3, [r4, #96]	; 0x60
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8009232:	6815      	ldr	r5, [r2, #0]
 8009234:	43bd      	bics	r5, r7
 8009236:	4647      	mov	r7, r8
 8009238:	6015      	str	r5, [r2, #0]
          (void)HAL_DMA_Abort(huart->hdmarx);
 800923a:	f7fe fb65 	bl	8007908 <HAL_DMA_Abort>
 800923e:	5be2      	ldrh	r2, [r4, r7]
 8009240:	4691      	mov	r9, r2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8009242:	205a      	movs	r0, #90	; 0x5a
 8009244:	464e      	mov	r6, r9
 8009246:	5a21      	ldrh	r1, [r4, r0]
 8009248:	0020      	movs	r0, r4
 800924a:	1a73      	subs	r3, r6, r1
 800924c:	b299      	uxth	r1, r3
 800924e:	f7ff ff91 	bl	8009174 <HAL_UARTEx_RxEventCallback>
 8009252:	e7b6      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
      && (((cr3its & USART_CR3_EIE) != 0U)
 8009254:	2601      	movs	r6, #1
 8009256:	0037      	movs	r7, r6
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8009258:	4862      	ldr	r0, [pc, #392]	; (80093e4 <HAL_UART_IRQHandler+0x26c>)
      && (((cr3its & USART_CR3_EIE) != 0U)
 800925a:	402f      	ands	r7, r5
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 800925c:	4008      	ands	r0, r1
 800925e:	4338      	orrs	r0, r7
 8009260:	d09c      	beq.n	800919c <HAL_UART_IRQHandler+0x24>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8009262:	421e      	tst	r6, r3
 8009264:	d006      	beq.n	8009274 <HAL_UART_IRQHandler+0xfc>
 8009266:	05c8      	lsls	r0, r1, #23
 8009268:	d504      	bpl.n	8009274 <HAL_UART_IRQHandler+0xfc>
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800926a:	2580      	movs	r5, #128	; 0x80
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 800926c:	6216      	str	r6, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800926e:	5960      	ldr	r0, [r4, r5]
 8009270:	4306      	orrs	r6, r0
 8009272:	5166      	str	r6, [r4, r5]
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8009274:	2602      	movs	r6, #2
 8009276:	421e      	tst	r6, r3
 8009278:	d05e      	beq.n	8009338 <HAL_UART_IRQHandler+0x1c0>
 800927a:	2f00      	cmp	r7, #0
 800927c:	d007      	beq.n	800928e <HAL_UART_IRQHandler+0x116>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 800927e:	6216      	str	r6, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8009280:	2680      	movs	r6, #128	; 0x80
 8009282:	2504      	movs	r5, #4
 8009284:	59a0      	ldr	r0, [r4, r6]
 8009286:	4328      	orrs	r0, r5
 8009288:	51a0      	str	r0, [r4, r6]
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 800928a:	421d      	tst	r5, r3
 800928c:	d158      	bne.n	8009340 <HAL_UART_IRQHandler+0x1c8>
    if (((isrflags & USART_ISR_ORE) != 0U)
 800928e:	2508      	movs	r5, #8
 8009290:	421d      	tst	r5, r3
 8009292:	d008      	beq.n	80092a6 <HAL_UART_IRQHandler+0x12e>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8009294:	2020      	movs	r0, #32
 8009296:	4008      	ands	r0, r1
 8009298:	4307      	orrs	r7, r0
 800929a:	d004      	beq.n	80092a6 <HAL_UART_IRQHandler+0x12e>
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 800929c:	2780      	movs	r7, #128	; 0x80
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800929e:	6215      	str	r5, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80092a0:	59e6      	ldr	r6, [r4, r7]
 80092a2:	4335      	orrs	r5, r6
 80092a4:	51e5      	str	r5, [r4, r7]
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 80092a6:	2580      	movs	r5, #128	; 0x80
 80092a8:	0128      	lsls	r0, r5, #4
 80092aa:	4203      	tst	r3, r0
 80092ac:	d007      	beq.n	80092be <HAL_UART_IRQHandler+0x146>
 80092ae:	014d      	lsls	r5, r1, #5
 80092b0:	d505      	bpl.n	80092be <HAL_UART_IRQHandler+0x146>
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 80092b2:	2780      	movs	r7, #128	; 0x80
 80092b4:	2620      	movs	r6, #32
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80092b6:	6210      	str	r0, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 80092b8:	59e5      	ldr	r5, [r4, r7]
 80092ba:	4335      	orrs	r5, r6
 80092bc:	51e5      	str	r5, [r4, r7]
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80092be:	2080      	movs	r0, #128	; 0x80
 80092c0:	5827      	ldr	r7, [r4, r0]
 80092c2:	2f00      	cmp	r7, #0
 80092c4:	d100      	bne.n	80092c8 <HAL_UART_IRQHandler+0x150>
 80092c6:	e77c      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 80092c8:	2520      	movs	r5, #32
 80092ca:	421d      	tst	r5, r3
 80092cc:	d001      	beq.n	80092d2 <HAL_UART_IRQHandler+0x15a>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80092ce:	420d      	tst	r5, r1
 80092d0:	d157      	bne.n	8009382 <HAL_UART_IRQHandler+0x20a>
      errorcode = huart->ErrorCode;
 80092d2:	2680      	movs	r6, #128	; 0x80
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80092d4:	2740      	movs	r7, #64	; 0x40
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 80092d6:	2528      	movs	r5, #40	; 0x28
      errorcode = huart->ErrorCode;
 80092d8:	59a1      	ldr	r1, [r4, r6]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80092da:	6890      	ldr	r0, [r2, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 80092dc:	400d      	ands	r5, r1
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80092de:	4007      	ands	r7, r0
 80092e0:	432f      	orrs	r7, r5
 80092e2:	d075      	beq.n	80093d0 <HAL_UART_IRQHandler+0x258>
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80092e4:	6813      	ldr	r3, [r2, #0]
 80092e6:	4e40      	ldr	r6, [pc, #256]	; (80093e8 <HAL_UART_IRQHandler+0x270>)
 80092e8:	4033      	ands	r3, r6
 80092ea:	6013      	str	r3, [r2, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80092ec:	6891      	ldr	r1, [r2, #8]
 80092ee:	3623      	adds	r6, #35	; 0x23
 80092f0:	36ff      	adds	r6, #255	; 0xff
 80092f2:	43b1      	bics	r1, r6
 80092f4:	6091      	str	r1, [r2, #8]
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80092f6:	6e20      	ldr	r0, [r4, #96]	; 0x60
 80092f8:	2801      	cmp	r0, #1
 80092fa:	d103      	bne.n	8009304 <HAL_UART_IRQHandler+0x18c>
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80092fc:	6817      	ldr	r7, [r2, #0]
 80092fe:	360f      	adds	r6, #15
 8009300:	43b7      	bics	r7, r6
 8009302:	6017      	str	r7, [r2, #0]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8009304:	2300      	movs	r3, #0
  huart->RxState = HAL_UART_STATE_READY;
 8009306:	2520      	movs	r5, #32
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009308:	2140      	movs	r1, #64	; 0x40
  huart->RxState = HAL_UART_STATE_READY;
 800930a:	67e5      	str	r5, [r4, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800930c:	6623      	str	r3, [r4, #96]	; 0x60
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800930e:	6896      	ldr	r6, [r2, #8]
  huart->RxISR = NULL;
 8009310:	6663      	str	r3, [r4, #100]	; 0x64
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009312:	4231      	tst	r1, r6
 8009314:	d026      	beq.n	8009364 <HAL_UART_IRQHandler+0x1ec>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8009316:	6890      	ldr	r0, [r2, #8]
 8009318:	4388      	bics	r0, r1
 800931a:	6090      	str	r0, [r2, #8]
          if (huart->hdmarx != NULL)
 800931c:	6f20      	ldr	r0, [r4, #112]	; 0x70
 800931e:	2800      	cmp	r0, #0
 8009320:	d020      	beq.n	8009364 <HAL_UART_IRQHandler+0x1ec>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8009322:	4a32      	ldr	r2, [pc, #200]	; (80093ec <HAL_UART_IRQHandler+0x274>)
 8009324:	6342      	str	r2, [r0, #52]	; 0x34
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8009326:	f7fe fb0f 	bl	8007948 <HAL_DMA_Abort_IT>
 800932a:	2800      	cmp	r0, #0
 800932c:	d100      	bne.n	8009330 <HAL_UART_IRQHandler+0x1b8>
 800932e:	e748      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8009330:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8009332:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8009334:	47a0      	blx	r4
 8009336:	e744      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8009338:	0758      	lsls	r0, r3, #29
 800933a:	d5a8      	bpl.n	800928e <HAL_UART_IRQHandler+0x116>
 800933c:	2f00      	cmp	r7, #0
 800933e:	d0a6      	beq.n	800928e <HAL_UART_IRQHandler+0x116>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8009340:	2604      	movs	r6, #4
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8009342:	2580      	movs	r5, #128	; 0x80
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8009344:	6216      	str	r6, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8009346:	2602      	movs	r6, #2
 8009348:	5960      	ldr	r0, [r4, r5]
 800934a:	4330      	orrs	r0, r6
 800934c:	5160      	str	r0, [r4, r5]
 800934e:	e79e      	b.n	800928e <HAL_UART_IRQHandler+0x116>
      if (huart->RxISR != NULL)
 8009350:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8009352:	2e00      	cmp	r6, #0
 8009354:	d000      	beq.n	8009358 <HAL_UART_IRQHandler+0x1e0>
 8009356:	e73d      	b.n	80091d4 <HAL_UART_IRQHandler+0x5c>
 8009358:	e733      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
    HAL_UARTEx_WakeupCallback(huart);
 800935a:	0020      	movs	r0, r4
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 800935c:	6216      	str	r6, [r2, #32]
    HAL_UARTEx_WakeupCallback(huart);
 800935e:	f000 fb71 	bl	8009a44 <HAL_UARTEx_WakeupCallback>
    return;
 8009362:	e72e      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
            HAL_UART_ErrorCallback(huart);
 8009364:	0020      	movs	r0, r4
 8009366:	f7ff fef9 	bl	800915c <HAL_UART_ErrorCallback>
 800936a:	e72a      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800936c:	6813      	ldr	r3, [r2, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 800936e:	2120      	movs	r1, #32
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8009370:	43bb      	bics	r3, r7
 8009372:	6013      	str	r3, [r2, #0]

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 8009374:	2200      	movs	r2, #0
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8009376:	0020      	movs	r0, r4
  huart->gState = HAL_UART_STATE_READY;
 8009378:	67a1      	str	r1, [r4, #120]	; 0x78
  huart->TxISR = NULL;
 800937a:	66a2      	str	r2, [r4, #104]	; 0x68
  HAL_UART_TxCpltCallback(huart);
 800937c:	f7ff feec 	bl	8009158 <HAL_UART_TxCpltCallback>
    return;
 8009380:	e71f      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
        if (huart->RxISR != NULL)
 8009382:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009384:	2b00      	cmp	r3, #0
 8009386:	d0a4      	beq.n	80092d2 <HAL_UART_IRQHandler+0x15a>
          huart->RxISR(huart);
 8009388:	0020      	movs	r0, r4
 800938a:	4798      	blx	r3
 800938c:	6822      	ldr	r2, [r4, #0]
 800938e:	e7a0      	b.n	80092d2 <HAL_UART_IRQHandler+0x15a>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8009390:	215a      	movs	r1, #90	; 0x5a
 8009392:	5a65      	ldrh	r5, [r4, r1]
      if (  (huart->RxXferCount > 0U)
 8009394:	5a61      	ldrh	r1, [r4, r1]
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8009396:	b2ab      	uxth	r3, r5
      if (  (huart->RxXferCount > 0U)
 8009398:	2900      	cmp	r1, #0
 800939a:	d100      	bne.n	800939e <HAL_UART_IRQHandler+0x226>
 800939c:	e711      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800939e:	2558      	movs	r5, #88	; 0x58
 80093a0:	5b61      	ldrh	r1, [r4, r5]
 80093a2:	1acb      	subs	r3, r1, r3
 80093a4:	b299      	uxth	r1, r3
          &&(nb_rx_data > 0U) )
 80093a6:	2900      	cmp	r1, #0
 80093a8:	d100      	bne.n	80093ac <HAL_UART_IRQHandler+0x234>
 80093aa:	e70a      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80093ac:	6813      	ldr	r3, [r2, #0]
 80093ae:	4d0e      	ldr	r5, [pc, #56]	; (80093e8 <HAL_UART_IRQHandler+0x270>)
 80093b0:	402b      	ands	r3, r5
 80093b2:	6013      	str	r3, [r2, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80093b4:	6893      	ldr	r3, [r2, #8]
 80093b6:	43b3      	bics	r3, r6
        huart->RxState = HAL_UART_STATE_READY;
 80093b8:	2620      	movs	r6, #32
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80093ba:	6093      	str	r3, [r2, #8]
        huart->RxState = HAL_UART_STATE_READY;
 80093bc:	67e6      	str	r6, [r4, #124]	; 0x7c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80093be:	6620      	str	r0, [r4, #96]	; 0x60
        huart->RxISR = NULL;
 80093c0:	6660      	str	r0, [r4, #100]	; 0x64
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80093c2:	6810      	ldr	r0, [r2, #0]
 80093c4:	43b8      	bics	r0, r7
 80093c6:	6010      	str	r0, [r2, #0]
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 80093c8:	0020      	movs	r0, r4
 80093ca:	f7ff fed3 	bl	8009174 <HAL_UARTEx_RxEventCallback>
 80093ce:	e6f8      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
        HAL_UART_ErrorCallback(huart);
 80093d0:	0020      	movs	r0, r4
 80093d2:	f7ff fec3 	bl	800915c <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 80093d6:	51a7      	str	r7, [r4, r6]
 80093d8:	e6f3      	b.n	80091c2 <HAL_UART_IRQHandler+0x4a>
 80093da:	46c0      	nop			; (mov r8, r8)
 80093dc:	0000080f 	.word	0x0000080f
 80093e0:	fffffeff 	.word	0xfffffeff
 80093e4:	04000120 	.word	0x04000120
 80093e8:	fffffedf 	.word	0xfffffedf
 80093ec:	08009161 	.word	0x08009161

080093f0 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 80093f0:	6a43      	ldr	r3, [r0, #36]	; 0x24
{
 80093f2:	b530      	push	{r4, r5, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 80093f4:	07da      	lsls	r2, r3, #31
 80093f6:	d506      	bpl.n	8009406 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 80093f8:	6801      	ldr	r1, [r0, #0]
 80093fa:	4c28      	ldr	r4, [pc, #160]	; (800949c <UART_AdvFeatureConfig+0xac>)
 80093fc:	684a      	ldr	r2, [r1, #4]
 80093fe:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8009400:	4022      	ands	r2, r4
 8009402:	432a      	orrs	r2, r5
 8009404:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8009406:	079a      	lsls	r2, r3, #30
 8009408:	d506      	bpl.n	8009418 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800940a:	6801      	ldr	r1, [r0, #0]
 800940c:	4c24      	ldr	r4, [pc, #144]	; (80094a0 <UART_AdvFeatureConfig+0xb0>)
 800940e:	684a      	ldr	r2, [r1, #4]
 8009410:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
 8009412:	4022      	ands	r2, r4
 8009414:	432a      	orrs	r2, r5
 8009416:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8009418:	075a      	lsls	r2, r3, #29
 800941a:	d506      	bpl.n	800942a <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800941c:	6801      	ldr	r1, [r0, #0]
 800941e:	4c21      	ldr	r4, [pc, #132]	; (80094a4 <UART_AdvFeatureConfig+0xb4>)
 8009420:	684a      	ldr	r2, [r1, #4]
 8009422:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8009424:	4022      	ands	r2, r4
 8009426:	432a      	orrs	r2, r5
 8009428:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800942a:	071a      	lsls	r2, r3, #28
 800942c:	d506      	bpl.n	800943c <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800942e:	6801      	ldr	r1, [r0, #0]
 8009430:	4c1d      	ldr	r4, [pc, #116]	; (80094a8 <UART_AdvFeatureConfig+0xb8>)
 8009432:	684a      	ldr	r2, [r1, #4]
 8009434:	6b45      	ldr	r5, [r0, #52]	; 0x34
 8009436:	4022      	ands	r2, r4
 8009438:	432a      	orrs	r2, r5
 800943a:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 800943c:	06da      	lsls	r2, r3, #27
 800943e:	d506      	bpl.n	800944e <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8009440:	6801      	ldr	r1, [r0, #0]
 8009442:	4c1a      	ldr	r4, [pc, #104]	; (80094ac <UART_AdvFeatureConfig+0xbc>)
 8009444:	688a      	ldr	r2, [r1, #8]
 8009446:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8009448:	4022      	ands	r2, r4
 800944a:	432a      	orrs	r2, r5
 800944c:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800944e:	069a      	lsls	r2, r3, #26
 8009450:	d506      	bpl.n	8009460 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8009452:	6801      	ldr	r1, [r0, #0]
 8009454:	4c16      	ldr	r4, [pc, #88]	; (80094b0 <UART_AdvFeatureConfig+0xc0>)
 8009456:	688a      	ldr	r2, [r1, #8]
 8009458:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800945a:	4022      	ands	r2, r4
 800945c:	432a      	orrs	r2, r5
 800945e:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8009460:	065a      	lsls	r2, r3, #25
 8009462:	d50a      	bpl.n	800947a <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8009464:	6801      	ldr	r1, [r0, #0]
 8009466:	4d13      	ldr	r5, [pc, #76]	; (80094b4 <UART_AdvFeatureConfig+0xc4>)
 8009468:	684a      	ldr	r2, [r1, #4]
 800946a:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800946c:	402a      	ands	r2, r5
 800946e:	4322      	orrs	r2, r4
 8009470:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8009472:	2280      	movs	r2, #128	; 0x80
 8009474:	0355      	lsls	r5, r2, #13
 8009476:	42ac      	cmp	r4, r5
 8009478:	d009      	beq.n	800948e <UART_AdvFeatureConfig+0x9e>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800947a:	061b      	lsls	r3, r3, #24
 800947c:	d506      	bpl.n	800948c <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800947e:	6802      	ldr	r2, [r0, #0]
 8009480:	490d      	ldr	r1, [pc, #52]	; (80094b8 <UART_AdvFeatureConfig+0xc8>)
 8009482:	6853      	ldr	r3, [r2, #4]
 8009484:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8009486:	400b      	ands	r3, r1
 8009488:	4303      	orrs	r3, r0
 800948a:	6053      	str	r3, [r2, #4]
}
 800948c:	bd30      	pop	{r4, r5, pc}
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800948e:	684a      	ldr	r2, [r1, #4]
 8009490:	4c0a      	ldr	r4, [pc, #40]	; (80094bc <UART_AdvFeatureConfig+0xcc>)
 8009492:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8009494:	4022      	ands	r2, r4
 8009496:	432a      	orrs	r2, r5
 8009498:	604a      	str	r2, [r1, #4]
 800949a:	e7ee      	b.n	800947a <UART_AdvFeatureConfig+0x8a>
 800949c:	fffdffff 	.word	0xfffdffff
 80094a0:	fffeffff 	.word	0xfffeffff
 80094a4:	fffbffff 	.word	0xfffbffff
 80094a8:	ffff7fff 	.word	0xffff7fff
 80094ac:	ffffefff 	.word	0xffffefff
 80094b0:	ffffdfff 	.word	0xffffdfff
 80094b4:	ffefffff 	.word	0xffefffff
 80094b8:	fff7ffff 	.word	0xfff7ffff
 80094bc:	ff9fffff 	.word	0xff9fffff

080094c0 <UART_CheckIdleState>:
{
 80094c0:	b5f0      	push	{r4, r5, r6, r7, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80094c2:	2380      	movs	r3, #128	; 0x80
{
 80094c4:	46c6      	mov	lr, r8
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80094c6:	2200      	movs	r2, #0
{
 80094c8:	0004      	movs	r4, r0
 80094ca:	b500      	push	{lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80094cc:	50c2      	str	r2, [r0, r3]
  tickstart = HAL_GetTick();
 80094ce:	f7fe f9ab 	bl	8007828 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80094d2:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 80094d4:	0005      	movs	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80094d6:	6818      	ldr	r0, [r3, #0]
 80094d8:	0702      	lsls	r2, r0, #28
 80094da:	d40d      	bmi.n	80094f8 <UART_CheckIdleState+0x38>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 80094dc:	681e      	ldr	r6, [r3, #0]
 80094de:	0772      	lsls	r2, r6, #29
 80094e0:	d433      	bmi.n	800954a <UART_CheckIdleState+0x8a>
  huart->gState = HAL_UART_STATE_READY;
 80094e2:	2520      	movs	r5, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80094e4:	2700      	movs	r7, #0
  __HAL_UNLOCK(huart);
 80094e6:	2674      	movs	r6, #116	; 0x74
  return HAL_OK;
 80094e8:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 80094ea:	67a5      	str	r5, [r4, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 80094ec:	67e5      	str	r5, [r4, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80094ee:	6627      	str	r7, [r4, #96]	; 0x60
  __HAL_UNLOCK(huart);
 80094f0:	55a7      	strb	r7, [r4, r6]
}
 80094f2:	bc80      	pop	{r7}
 80094f4:	46b8      	mov	r8, r7
 80094f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80094f8:	69d9      	ldr	r1, [r3, #28]
 80094fa:	028a      	lsls	r2, r1, #10
 80094fc:	d4ee      	bmi.n	80094dc <UART_CheckIdleState+0x1c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80094fe:	2680      	movs	r6, #128	; 0x80
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009500:	2380      	movs	r3, #128	; 0x80
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009502:	04b7      	lsls	r7, r6, #18
 8009504:	46b8      	mov	r8, r7
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009506:	011e      	lsls	r6, r3, #4
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8009508:	2704      	movs	r7, #4
 800950a:	e007      	b.n	800951c <UART_CheckIdleState+0x5c>
 800950c:	4217      	tst	r7, r2
 800950e:	d002      	beq.n	8009516 <UART_CheckIdleState+0x56>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009510:	69da      	ldr	r2, [r3, #28]
 8009512:	4232      	tst	r2, r6
 8009514:	d133      	bne.n	800957e <UART_CheckIdleState+0xbe>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8009516:	69d9      	ldr	r1, [r3, #28]
 8009518:	028a      	lsls	r2, r1, #10
 800951a:	d4df      	bmi.n	80094dc <UART_CheckIdleState+0x1c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800951c:	f7fe f984 	bl	8007828 <HAL_GetTick>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8009520:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009522:	1b40      	subs	r0, r0, r5
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8009524:	681a      	ldr	r2, [r3, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009526:	4540      	cmp	r0, r8
 8009528:	d3f0      	bcc.n	800950c <UART_CheckIdleState+0x4c>
        huart->gState = HAL_UART_STATE_READY;
 800952a:	2020      	movs	r0, #32
        __HAL_UNLOCK(huart);
 800952c:	2100      	movs	r1, #0
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800952e:	4e1e      	ldr	r6, [pc, #120]	; (80095a8 <UART_CheckIdleState+0xe8>)
 8009530:	4032      	ands	r2, r6
 8009532:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009534:	689a      	ldr	r2, [r3, #8]
 8009536:	36a3      	adds	r6, #163	; 0xa3
 8009538:	36ff      	adds	r6, #255	; 0xff
 800953a:	43b2      	bics	r2, r6
 800953c:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 800953e:	67a0      	str	r0, [r4, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8009540:	67e0      	str	r0, [r4, #124]	; 0x7c
        __HAL_UNLOCK(huart);
 8009542:	3054      	adds	r0, #84	; 0x54
 8009544:	5421      	strb	r1, [r4, r0]
      return HAL_TIMEOUT;
 8009546:	2003      	movs	r0, #3
 8009548:	e7d3      	b.n	80094f2 <UART_CheckIdleState+0x32>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800954a:	69df      	ldr	r7, [r3, #28]
 800954c:	027b      	lsls	r3, r7, #9
 800954e:	d4c8      	bmi.n	80094e2 <UART_CheckIdleState+0x22>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009550:	2380      	movs	r3, #128	; 0x80
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009552:	2280      	movs	r2, #128	; 0x80
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009554:	0498      	lsls	r0, r3, #18
 8009556:	4680      	mov	r8, r0
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8009558:	2704      	movs	r7, #4
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800955a:	0116      	lsls	r6, r2, #4
 800955c:	e007      	b.n	800956e <UART_CheckIdleState+0xae>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 800955e:	4217      	tst	r7, r2
 8009560:	d002      	beq.n	8009568 <UART_CheckIdleState+0xa8>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009562:	69d8      	ldr	r0, [r3, #28]
 8009564:	4230      	tst	r0, r6
 8009566:	d10a      	bne.n	800957e <UART_CheckIdleState+0xbe>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8009568:	69d9      	ldr	r1, [r3, #28]
 800956a:	024b      	lsls	r3, r1, #9
 800956c:	d4b9      	bmi.n	80094e2 <UART_CheckIdleState+0x22>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800956e:	f7fe f95b 	bl	8007828 <HAL_GetTick>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8009572:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009574:	1b41      	subs	r1, r0, r5
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8009576:	681a      	ldr	r2, [r3, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009578:	4541      	cmp	r1, r8
 800957a:	d3f0      	bcc.n	800955e <UART_CheckIdleState+0x9e>
 800957c:	e7d5      	b.n	800952a <UART_CheckIdleState+0x6a>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800957e:	621e      	str	r6, [r3, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8009580:	681a      	ldr	r2, [r3, #0]
 8009582:	4809      	ldr	r0, [pc, #36]	; (80095a8 <UART_CheckIdleState+0xe8>)
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8009584:	2580      	movs	r5, #128	; 0x80
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8009586:	4002      	ands	r2, r0
 8009588:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800958a:	6899      	ldr	r1, [r3, #8]
 800958c:	30a3      	adds	r0, #163	; 0xa3
 800958e:	30ff      	adds	r0, #255	; 0xff
 8009590:	4381      	bics	r1, r0
 8009592:	6099      	str	r1, [r3, #8]
          huart->gState = HAL_UART_STATE_READY;
 8009594:	2320      	movs	r3, #32
          __HAL_UNLOCK(huart);
 8009596:	2700      	movs	r7, #0
          huart->gState = HAL_UART_STATE_READY;
 8009598:	67a3      	str	r3, [r4, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 800959a:	67e3      	str	r3, [r4, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 800959c:	5163      	str	r3, [r4, r5]
          __HAL_UNLOCK(huart);
 800959e:	3354      	adds	r3, #84	; 0x54
      return HAL_TIMEOUT;
 80095a0:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 80095a2:	54e7      	strb	r7, [r4, r3]
          return HAL_TIMEOUT;
 80095a4:	e7a5      	b.n	80094f2 <UART_CheckIdleState+0x32>
 80095a6:	46c0      	nop			; (mov r8, r8)
 80095a8:	fffffe5f 	.word	0xfffffe5f

080095ac <HAL_UART_Init>:
{
 80095ac:	b570      	push	{r4, r5, r6, lr}
 80095ae:	1e04      	subs	r4, r0, #0
  if (huart == NULL)
 80095b0:	d100      	bne.n	80095b4 <HAL_UART_Init+0x8>
 80095b2:	e0d8      	b.n	8009766 <HAL_UART_Init+0x1ba>
  if (huart->gState == HAL_UART_STATE_RESET)
 80095b4:	6f83      	ldr	r3, [r0, #120]	; 0x78
 80095b6:	2b00      	cmp	r3, #0
 80095b8:	d100      	bne.n	80095bc <HAL_UART_Init+0x10>
 80095ba:	e074      	b.n	80096a6 <HAL_UART_Init+0xfa>
  huart->gState = HAL_UART_STATE_BUSY;
 80095bc:	2024      	movs	r0, #36	; 0x24
  __HAL_UART_DISABLE(huart);
 80095be:	2101      	movs	r1, #1
 80095c0:	6823      	ldr	r3, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 80095c2:	67a0      	str	r0, [r4, #120]	; 0x78
  __HAL_UART_DISABLE(huart);
 80095c4:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80095c6:	6920      	ldr	r0, [r4, #16]
 80095c8:	68a2      	ldr	r2, [r4, #8]
  __HAL_UART_DISABLE(huart);
 80095ca:	438d      	bics	r5, r1
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80095cc:	4302      	orrs	r2, r0
 80095ce:	6960      	ldr	r0, [r4, #20]
  __HAL_UART_DISABLE(huart);
 80095d0:	601d      	str	r5, [r3, #0]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80095d2:	6819      	ldr	r1, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80095d4:	69e5      	ldr	r5, [r4, #28]
 80095d6:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80095d8:	487a      	ldr	r0, [pc, #488]	; (80097c4 <HAL_UART_Init+0x218>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80095da:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80095dc:	4001      	ands	r1, r0
 80095de:	430a      	orrs	r2, r1
 80095e0:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80095e2:	685a      	ldr	r2, [r3, #4]
 80095e4:	4978      	ldr	r1, [pc, #480]	; (80097c8 <HAL_UART_Init+0x21c>)
 80095e6:	68e0      	ldr	r0, [r4, #12]
 80095e8:	400a      	ands	r2, r1
 80095ea:	4302      	orrs	r2, r0
 80095ec:	605a      	str	r2, [r3, #4]
  tmpreg |= huart->Init.OneBitSampling;
 80095ee:	6a20      	ldr	r0, [r4, #32]
 80095f0:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80095f2:	6899      	ldr	r1, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 80095f4:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80095f6:	4875      	ldr	r0, [pc, #468]	; (80097cc <HAL_UART_Init+0x220>)
 80095f8:	4001      	ands	r1, r0
 80095fa:	430a      	orrs	r2, r1
  UART_GETCLOCKSOURCE(huart, clocksource);
 80095fc:	4974      	ldr	r1, [pc, #464]	; (80097d0 <HAL_UART_Init+0x224>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80095fe:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8009600:	428b      	cmp	r3, r1
 8009602:	d01a      	beq.n	800963a <HAL_UART_Init+0x8e>
 8009604:	4a73      	ldr	r2, [pc, #460]	; (80097d4 <HAL_UART_Init+0x228>)
 8009606:	4293      	cmp	r3, r2
 8009608:	d052      	beq.n	80096b0 <HAL_UART_Init+0x104>
 800960a:	4873      	ldr	r0, [pc, #460]	; (80097d8 <HAL_UART_Init+0x22c>)
 800960c:	4283      	cmp	r3, r0
 800960e:	d100      	bne.n	8009612 <HAL_UART_Init+0x66>
 8009610:	e0ab      	b.n	800976a <HAL_UART_Init+0x1be>
 8009612:	4972      	ldr	r1, [pc, #456]	; (80097dc <HAL_UART_Init+0x230>)
 8009614:	428b      	cmp	r3, r1
 8009616:	d017      	beq.n	8009648 <HAL_UART_Init+0x9c>
 8009618:	4a71      	ldr	r2, [pc, #452]	; (80097e0 <HAL_UART_Init+0x234>)
 800961a:	4293      	cmp	r3, r2
 800961c:	d014      	beq.n	8009648 <HAL_UART_Init+0x9c>
 800961e:	4871      	ldr	r0, [pc, #452]	; (80097e4 <HAL_UART_Init+0x238>)
 8009620:	4283      	cmp	r3, r0
 8009622:	d011      	beq.n	8009648 <HAL_UART_Init+0x9c>
 8009624:	4970      	ldr	r1, [pc, #448]	; (80097e8 <HAL_UART_Init+0x23c>)
 8009626:	428b      	cmp	r3, r1
 8009628:	d00e      	beq.n	8009648 <HAL_UART_Init+0x9c>
 800962a:	4a70      	ldr	r2, [pc, #448]	; (80097ec <HAL_UART_Init+0x240>)
 800962c:	4293      	cmp	r3, r2
 800962e:	d00b      	beq.n	8009648 <HAL_UART_Init+0x9c>
  huart->RxISR = NULL;
 8009630:	2000      	movs	r0, #0
 8009632:	6660      	str	r0, [r4, #100]	; 0x64
  huart->TxISR = NULL;
 8009634:	66a0      	str	r0, [r4, #104]	; 0x68
    return HAL_ERROR;
 8009636:	2001      	movs	r0, #1
}
 8009638:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 800963a:	2003      	movs	r0, #3
 800963c:	496c      	ldr	r1, [pc, #432]	; (80097f0 <HAL_UART_Init+0x244>)
 800963e:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8009640:	4010      	ands	r0, r2
 8009642:	3801      	subs	r0, #1
 8009644:	2802      	cmp	r0, #2
 8009646:	d955      	bls.n	80096f4 <HAL_UART_Init+0x148>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8009648:	2380      	movs	r3, #128	; 0x80
 800964a:	0219      	lsls	r1, r3, #8
 800964c:	428d      	cmp	r5, r1
 800964e:	d100      	bne.n	8009652 <HAL_UART_Init+0xa6>
 8009650:	e0a5      	b.n	800979e <HAL_UART_Init+0x1f2>
        pclk = HAL_RCC_GetPCLK1Freq();
 8009652:	f7ff fa55 	bl	8008b00 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8009656:	2800      	cmp	r0, #0
 8009658:	d042      	beq.n	80096e0 <HAL_UART_Init+0x134>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 800965a:	6862      	ldr	r2, [r4, #4]
 800965c:	6861      	ldr	r1, [r4, #4]
 800965e:	0855      	lsrs	r5, r2, #1
 8009660:	1828      	adds	r0, r5, r0
 8009662:	f7f6 fd6b 	bl	800013c <__udivsi3>
 8009666:	0400      	lsls	r0, r0, #16
 8009668:	0c01      	lsrs	r1, r0, #16
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800966a:	000a      	movs	r2, r1
 800966c:	4b61      	ldr	r3, [pc, #388]	; (80097f4 <HAL_UART_Init+0x248>)
 800966e:	3a10      	subs	r2, #16
 8009670:	429a      	cmp	r2, r3
 8009672:	d8dd      	bhi.n	8009630 <HAL_UART_Init+0x84>
  huart->RxISR = NULL;
 8009674:	2000      	movs	r0, #0
        huart->Instance->BRR = usartdiv;
 8009676:	6825      	ldr	r5, [r4, #0]
 8009678:	60e9      	str	r1, [r5, #12]
  huart->RxISR = NULL;
 800967a:	6660      	str	r0, [r4, #100]	; 0x64
  huart->TxISR = NULL;
 800967c:	66a0      	str	r0, [r4, #104]	; 0x68
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800967e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009680:	2b00      	cmp	r3, #0
 8009682:	d133      	bne.n	80096ec <HAL_UART_Init+0x140>
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8009684:	232a      	movs	r3, #42	; 0x2a
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8009686:	6825      	ldr	r5, [r4, #0]
 8009688:	495b      	ldr	r1, [pc, #364]	; (80097f8 <HAL_UART_Init+0x24c>)
 800968a:	686a      	ldr	r2, [r5, #4]
 800968c:	400a      	ands	r2, r1
 800968e:	606a      	str	r2, [r5, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8009690:	68a8      	ldr	r0, [r5, #8]
 8009692:	4398      	bics	r0, r3
 8009694:	60a8      	str	r0, [r5, #8]
  __HAL_UART_ENABLE(huart);
 8009696:	682a      	ldr	r2, [r5, #0]
 8009698:	3b29      	subs	r3, #41	; 0x29
 800969a:	431a      	orrs	r2, r3
  return (UART_CheckIdleState(huart));
 800969c:	0020      	movs	r0, r4
  __HAL_UART_ENABLE(huart);
 800969e:	602a      	str	r2, [r5, #0]
  return (UART_CheckIdleState(huart));
 80096a0:	f7ff ff0e 	bl	80094c0 <UART_CheckIdleState>
 80096a4:	e7c8      	b.n	8009638 <HAL_UART_Init+0x8c>
    huart->Lock = HAL_UNLOCKED;
 80096a6:	2274      	movs	r2, #116	; 0x74
 80096a8:	5483      	strb	r3, [r0, r2]
    HAL_UART_MspInit(huart);
 80096aa:	f7fe f805 	bl	80076b8 <HAL_UART_MspInit>
 80096ae:	e785      	b.n	80095bc <HAL_UART_Init+0x10>
  UART_GETCLOCKSOURCE(huart, clocksource);
 80096b0:	21c0      	movs	r1, #192	; 0xc0
 80096b2:	2380      	movs	r3, #128	; 0x80
 80096b4:	484e      	ldr	r0, [pc, #312]	; (80097f0 <HAL_UART_Init+0x244>)
 80096b6:	028a      	lsls	r2, r1, #10
 80096b8:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80096ba:	0299      	lsls	r1, r3, #10
 80096bc:	4010      	ands	r0, r2
 80096be:	4288      	cmp	r0, r1
 80096c0:	d065      	beq.n	800978e <HAL_UART_Init+0x1e2>
 80096c2:	d847      	bhi.n	8009754 <HAL_UART_Init+0x1a8>
 80096c4:	2800      	cmp	r0, #0
 80096c6:	d0bf      	beq.n	8009648 <HAL_UART_Init+0x9c>
 80096c8:	2180      	movs	r1, #128	; 0x80
 80096ca:	024a      	lsls	r2, r1, #9
 80096cc:	4290      	cmp	r0, r2
 80096ce:	d1af      	bne.n	8009630 <HAL_UART_Init+0x84>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80096d0:	2080      	movs	r0, #128	; 0x80
 80096d2:	0203      	lsls	r3, r0, #8
 80096d4:	429d      	cmp	r5, r3
 80096d6:	d020      	beq.n	800971a <HAL_UART_Init+0x16e>
        pclk = HAL_RCC_GetSysClockFreq();
 80096d8:	f7ff f936 	bl	8008948 <HAL_RCC_GetSysClockFreq>
    if (pclk != 0U)
 80096dc:	2800      	cmp	r0, #0
 80096de:	d1bc      	bne.n	800965a <HAL_UART_Init+0xae>
  huart->RxISR = NULL;
 80096e0:	2100      	movs	r1, #0
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80096e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
  huart->RxISR = NULL;
 80096e4:	6661      	str	r1, [r4, #100]	; 0x64
  huart->TxISR = NULL;
 80096e6:	66a1      	str	r1, [r4, #104]	; 0x68
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80096e8:	2b00      	cmp	r3, #0
 80096ea:	d0cb      	beq.n	8009684 <HAL_UART_Init+0xd8>
    UART_AdvFeatureConfig(huart);
 80096ec:	0020      	movs	r0, r4
 80096ee:	f7ff fe7f 	bl	80093f0 <UART_AdvFeatureConfig>
 80096f2:	e7c7      	b.n	8009684 <HAL_UART_Init+0xd8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80096f4:	2280      	movs	r2, #128	; 0x80
 80096f6:	4b41      	ldr	r3, [pc, #260]	; (80097fc <HAL_UART_Init+0x250>)
 80096f8:	5c19      	ldrb	r1, [r3, r0]
 80096fa:	0210      	lsls	r0, r2, #8
 80096fc:	4285      	cmp	r5, r0
 80096fe:	d051      	beq.n	80097a4 <HAL_UART_Init+0x1f8>
    switch (clocksource)
 8009700:	2904      	cmp	r1, #4
 8009702:	d0e9      	beq.n	80096d8 <HAL_UART_Init+0x12c>
 8009704:	d806      	bhi.n	8009714 <HAL_UART_Init+0x168>
 8009706:	2900      	cmp	r1, #0
 8009708:	d0a3      	beq.n	8009652 <HAL_UART_Init+0xa6>
 800970a:	2902      	cmp	r1, #2
 800970c:	d000      	beq.n	8009710 <HAL_UART_Init+0x164>
 800970e:	e78f      	b.n	8009630 <HAL_UART_Init+0x84>
 8009710:	483b      	ldr	r0, [pc, #236]	; (8009800 <HAL_UART_Init+0x254>)
 8009712:	e7a2      	b.n	800965a <HAL_UART_Init+0xae>
 8009714:	2908      	cmp	r1, #8
 8009716:	d0a0      	beq.n	800965a <HAL_UART_Init+0xae>
 8009718:	e78a      	b.n	8009630 <HAL_UART_Init+0x84>
        pclk = HAL_RCC_GetSysClockFreq();
 800971a:	f7ff f915 	bl	8008948 <HAL_RCC_GetSysClockFreq>
    if (pclk != 0U)
 800971e:	2800      	cmp	r0, #0
 8009720:	d0de      	beq.n	80096e0 <HAL_UART_Init+0x134>
 8009722:	0040      	lsls	r0, r0, #1
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8009724:	6862      	ldr	r2, [r4, #4]
 8009726:	6861      	ldr	r1, [r4, #4]
 8009728:	0853      	lsrs	r3, r2, #1
 800972a:	1818      	adds	r0, r3, r0
 800972c:	f7f6 fd06 	bl	800013c <__udivsi3>
 8009730:	0405      	lsls	r5, r0, #16
 8009732:	0c2a      	lsrs	r2, r5, #16
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8009734:	492f      	ldr	r1, [pc, #188]	; (80097f4 <HAL_UART_Init+0x248>)
 8009736:	3a10      	subs	r2, #16
 8009738:	428a      	cmp	r2, r1
 800973a:	d900      	bls.n	800973e <HAL_UART_Init+0x192>
 800973c:	e778      	b.n	8009630 <HAL_UART_Init+0x84>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800973e:	4b31      	ldr	r3, [pc, #196]	; (8009804 <HAL_UART_Init+0x258>)
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8009740:	032d      	lsls	r5, r5, #12
        huart->Instance->BRR = brrtemp;
 8009742:	6822      	ldr	r2, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8009744:	4018      	ands	r0, r3
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8009746:	0f69      	lsrs	r1, r5, #29
        huart->Instance->BRR = brrtemp;
 8009748:	4308      	orrs	r0, r1
 800974a:	60d0      	str	r0, [r2, #12]
  huart->RxISR = NULL;
 800974c:	2000      	movs	r0, #0
 800974e:	6660      	str	r0, [r4, #100]	; 0x64
  huart->TxISR = NULL;
 8009750:	66a0      	str	r0, [r4, #104]	; 0x68
  return ret;
 8009752:	e794      	b.n	800967e <HAL_UART_Init+0xd2>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8009754:	4290      	cmp	r0, r2
 8009756:	d000      	beq.n	800975a <HAL_UART_Init+0x1ae>
 8009758:	e76a      	b.n	8009630 <HAL_UART_Init+0x84>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800975a:	2080      	movs	r0, #128	; 0x80
 800975c:	0203      	lsls	r3, r0, #8
 800975e:	429d      	cmp	r5, r3
 8009760:	d1d6      	bne.n	8009710 <HAL_UART_Init+0x164>
    switch (clocksource)
 8009762:	4829      	ldr	r0, [pc, #164]	; (8009808 <HAL_UART_Init+0x25c>)
 8009764:	e7de      	b.n	8009724 <HAL_UART_Init+0x178>
    return HAL_ERROR;
 8009766:	2001      	movs	r0, #1
 8009768:	e766      	b.n	8009638 <HAL_UART_Init+0x8c>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800976a:	4b21      	ldr	r3, [pc, #132]	; (80097f0 <HAL_UART_Init+0x244>)
 800976c:	21c0      	movs	r1, #192	; 0xc0
 800976e:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8009770:	2380      	movs	r3, #128	; 0x80
 8009772:	030a      	lsls	r2, r1, #12
 8009774:	4010      	ands	r0, r2
 8009776:	0319      	lsls	r1, r3, #12
 8009778:	4288      	cmp	r0, r1
 800977a:	d008      	beq.n	800978e <HAL_UART_Init+0x1e2>
 800977c:	d8ea      	bhi.n	8009754 <HAL_UART_Init+0x1a8>
 800977e:	2800      	cmp	r0, #0
 8009780:	d100      	bne.n	8009784 <HAL_UART_Init+0x1d8>
 8009782:	e761      	b.n	8009648 <HAL_UART_Init+0x9c>
 8009784:	2280      	movs	r2, #128	; 0x80
 8009786:	02d3      	lsls	r3, r2, #11
 8009788:	4298      	cmp	r0, r3
 800978a:	d0a1      	beq.n	80096d0 <HAL_UART_Init+0x124>
 800978c:	e750      	b.n	8009630 <HAL_UART_Init+0x84>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800978e:	2280      	movs	r2, #128	; 0x80
 8009790:	0210      	lsls	r0, r2, #8
 8009792:	4285      	cmp	r5, r0
 8009794:	d000      	beq.n	8009798 <HAL_UART_Init+0x1ec>
 8009796:	e760      	b.n	800965a <HAL_UART_Init+0xae>
 8009798:	2580      	movs	r5, #128	; 0x80
 800979a:	0268      	lsls	r0, r5, #9
 800979c:	e7c2      	b.n	8009724 <HAL_UART_Init+0x178>
        pclk = HAL_RCC_GetPCLK1Freq();
 800979e:	f7ff f9af 	bl	8008b00 <HAL_RCC_GetPCLK1Freq>
        break;
 80097a2:	e7bc      	b.n	800971e <HAL_UART_Init+0x172>
    switch (clocksource)
 80097a4:	2904      	cmp	r1, #4
 80097a6:	d0b8      	beq.n	800971a <HAL_UART_Init+0x16e>
 80097a8:	d806      	bhi.n	80097b8 <HAL_UART_Init+0x20c>
 80097aa:	2900      	cmp	r1, #0
 80097ac:	d0f7      	beq.n	800979e <HAL_UART_Init+0x1f2>
 80097ae:	2902      	cmp	r1, #2
 80097b0:	d000      	beq.n	80097b4 <HAL_UART_Init+0x208>
 80097b2:	e73d      	b.n	8009630 <HAL_UART_Init+0x84>
 80097b4:	4814      	ldr	r0, [pc, #80]	; (8009808 <HAL_UART_Init+0x25c>)
 80097b6:	e7b5      	b.n	8009724 <HAL_UART_Init+0x178>
 80097b8:	2580      	movs	r5, #128	; 0x80
 80097ba:	0268      	lsls	r0, r5, #9
 80097bc:	2908      	cmp	r1, #8
 80097be:	d0b1      	beq.n	8009724 <HAL_UART_Init+0x178>
 80097c0:	e736      	b.n	8009630 <HAL_UART_Init+0x84>
 80097c2:	46c0      	nop			; (mov r8, r8)
 80097c4:	efff69f3 	.word	0xefff69f3
 80097c8:	ffffcfff 	.word	0xffffcfff
 80097cc:	fffff4ff 	.word	0xfffff4ff
 80097d0:	40013800 	.word	0x40013800
 80097d4:	40004400 	.word	0x40004400
 80097d8:	40004800 	.word	0x40004800
 80097dc:	40004c00 	.word	0x40004c00
 80097e0:	40005000 	.word	0x40005000
 80097e4:	40011400 	.word	0x40011400
 80097e8:	40011800 	.word	0x40011800
 80097ec:	40011c00 	.word	0x40011c00
 80097f0:	40021000 	.word	0x40021000
 80097f4:	0000ffef 	.word	0x0000ffef
 80097f8:	ffffb7ff 	.word	0xffffb7ff
 80097fc:	0800fbd0 	.word	0x0800fbd0
 8009800:	007a1200 	.word	0x007a1200
 8009804:	0000fff0 	.word	0x0000fff0
 8009808:	00f42400 	.word	0x00f42400

0800980c <UART_WaitOnFlagUntilTimeout>:
{
 800980c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800980e:	464f      	mov	r7, r9
 8009810:	4646      	mov	r6, r8
 8009812:	46d6      	mov	lr, sl
 8009814:	000c      	movs	r4, r1
 8009816:	b5c0      	push	{r6, r7, lr}
 8009818:	6801      	ldr	r1, [r0, #0]
 800981a:	0007      	movs	r7, r0
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800981c:	2080      	movs	r0, #128	; 0x80
{
 800981e:	4698      	mov	r8, r3
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8009820:	2304      	movs	r3, #4
{
 8009822:	0015      	movs	r5, r2
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009824:	0102      	lsls	r2, r0, #4
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8009826:	4699      	mov	r9, r3
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009828:	4692      	mov	sl, r2
{
 800982a:	9e08      	ldr	r6, [sp, #32]
 800982c:	1c73      	adds	r3, r6, #1
 800982e:	d10c      	bne.n	800984a <UART_WaitOnFlagUntilTimeout+0x3e>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8009830:	69cf      	ldr	r7, [r1, #28]
 8009832:	4027      	ands	r7, r4
 8009834:	1b38      	subs	r0, r7, r4
 8009836:	4242      	negs	r2, r0
 8009838:	4150      	adcs	r0, r2
 800983a:	4285      	cmp	r5, r0
 800983c:	d0f8      	beq.n	8009830 <UART_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 800983e:	2000      	movs	r0, #0
}
 8009840:	bce0      	pop	{r5, r6, r7}
 8009842:	46ba      	mov	sl, r7
 8009844:	46b1      	mov	r9, r6
 8009846:	46a8      	mov	r8, r5
 8009848:	bdf0      	pop	{r4, r5, r6, r7, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800984a:	69c9      	ldr	r1, [r1, #28]
 800984c:	4021      	ands	r1, r4
 800984e:	1b0b      	subs	r3, r1, r4
 8009850:	425a      	negs	r2, r3
 8009852:	4153      	adcs	r3, r2
 8009854:	429d      	cmp	r5, r3
 8009856:	d1f2      	bne.n	800983e <UART_WaitOnFlagUntilTimeout+0x32>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009858:	f7fd ffe6 	bl	8007828 <HAL_GetTick>
 800985c:	4642      	mov	r2, r8
 800985e:	1a80      	subs	r0, r0, r2
 8009860:	42b0      	cmp	r0, r6
 8009862:	d81e      	bhi.n	80098a2 <UART_WaitOnFlagUntilTimeout+0x96>
 8009864:	2e00      	cmp	r6, #0
 8009866:	d01c      	beq.n	80098a2 <UART_WaitOnFlagUntilTimeout+0x96>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8009868:	464a      	mov	r2, r9
 800986a:	6839      	ldr	r1, [r7, #0]
 800986c:	680b      	ldr	r3, [r1, #0]
 800986e:	421a      	tst	r2, r3
 8009870:	d0dc      	beq.n	800982c <UART_WaitOnFlagUntilTimeout+0x20>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009872:	4653      	mov	r3, sl
 8009874:	69c8      	ldr	r0, [r1, #28]
 8009876:	4218      	tst	r0, r3
 8009878:	d0d8      	beq.n	800982c <UART_WaitOnFlagUntilTimeout+0x20>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800987a:	620b      	str	r3, [r1, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800987c:	680d      	ldr	r5, [r1, #0]
 800987e:	4e12      	ldr	r6, [pc, #72]	; (80098c8 <UART_WaitOnFlagUntilTimeout+0xbc>)
          __HAL_UNLOCK(huart);
 8009880:	2000      	movs	r0, #0
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8009882:	4035      	ands	r5, r6
 8009884:	600d      	str	r5, [r1, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009886:	688a      	ldr	r2, [r1, #8]
 8009888:	36a3      	adds	r6, #163	; 0xa3
 800988a:	36ff      	adds	r6, #255	; 0xff
 800988c:	43b2      	bics	r2, r6
 800988e:	608a      	str	r2, [r1, #8]
          huart->gState = HAL_UART_STATE_READY;
 8009890:	2120      	movs	r1, #32
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8009892:	367f      	adds	r6, #127	; 0x7f
          huart->gState = HAL_UART_STATE_READY;
 8009894:	67b9      	str	r1, [r7, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8009896:	67f9      	str	r1, [r7, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8009898:	51b9      	str	r1, [r7, r6]
          __HAL_UNLOCK(huart);
 800989a:	3154      	adds	r1, #84	; 0x54
 800989c:	5478      	strb	r0, [r7, r1]
          return HAL_TIMEOUT;
 800989e:	2003      	movs	r0, #3
 80098a0:	e7ce      	b.n	8009840 <UART_WaitOnFlagUntilTimeout+0x34>
        huart->gState = HAL_UART_STATE_READY;
 80098a2:	2120      	movs	r1, #32
        __HAL_UNLOCK(huart);
 80098a4:	2200      	movs	r2, #0
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80098a6:	683b      	ldr	r3, [r7, #0]
 80098a8:	4d07      	ldr	r5, [pc, #28]	; (80098c8 <UART_WaitOnFlagUntilTimeout+0xbc>)
 80098aa:	681c      	ldr	r4, [r3, #0]
        __HAL_UNLOCK(huart);
 80098ac:	2003      	movs	r0, #3
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80098ae:	402c      	ands	r4, r5
 80098b0:	601c      	str	r4, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80098b2:	689e      	ldr	r6, [r3, #8]
 80098b4:	35a3      	adds	r5, #163	; 0xa3
 80098b6:	35ff      	adds	r5, #255	; 0xff
 80098b8:	43ae      	bics	r6, r5
 80098ba:	609e      	str	r6, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 80098bc:	67b9      	str	r1, [r7, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 80098be:	67f9      	str	r1, [r7, #124]	; 0x7c
        __HAL_UNLOCK(huart);
 80098c0:	3154      	adds	r1, #84	; 0x54
 80098c2:	547a      	strb	r2, [r7, r1]
        return HAL_TIMEOUT;
 80098c4:	e7bc      	b.n	8009840 <UART_WaitOnFlagUntilTimeout+0x34>
 80098c6:	46c0      	nop			; (mov r8, r8)
 80098c8:	fffffe5f 	.word	0xfffffe5f

080098cc <HAL_UART_Transmit>:
{
 80098cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80098ce:	4657      	mov	r7, sl
 80098d0:	464e      	mov	r6, r9
 80098d2:	4645      	mov	r5, r8
 80098d4:	46de      	mov	lr, fp
 80098d6:	b5e0      	push	{r5, r6, r7, lr}
 80098d8:	001e      	movs	r6, r3
  if (huart->gState == HAL_UART_STATE_READY)
 80098da:	6f83      	ldr	r3, [r0, #120]	; 0x78
{
 80098dc:	0004      	movs	r4, r0
 80098de:	000d      	movs	r5, r1
 80098e0:	0017      	movs	r7, r2
 80098e2:	b083      	sub	sp, #12
  if (huart->gState == HAL_UART_STATE_READY)
 80098e4:	2b20      	cmp	r3, #32
 80098e6:	d000      	beq.n	80098ea <HAL_UART_Transmit+0x1e>
 80098e8:	e08e      	b.n	8009a08 <HAL_UART_Transmit+0x13c>
    if ((pData == NULL) || (Size == 0U))
 80098ea:	2900      	cmp	r1, #0
 80098ec:	d050      	beq.n	8009990 <HAL_UART_Transmit+0xc4>
 80098ee:	2a00      	cmp	r2, #0
 80098f0:	d04e      	beq.n	8009990 <HAL_UART_Transmit+0xc4>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80098f2:	2080      	movs	r0, #128	; 0x80
 80098f4:	68a2      	ldr	r2, [r4, #8]
 80098f6:	0141      	lsls	r1, r0, #5
 80098f8:	428a      	cmp	r2, r1
 80098fa:	d044      	beq.n	8009986 <HAL_UART_Transmit+0xba>
    __HAL_LOCK(huart);
 80098fc:	2074      	movs	r0, #116	; 0x74
 80098fe:	5c21      	ldrb	r1, [r4, r0]
 8009900:	2901      	cmp	r1, #1
 8009902:	d100      	bne.n	8009906 <HAL_UART_Transmit+0x3a>
 8009904:	e080      	b.n	8009a08 <HAL_UART_Transmit+0x13c>
 8009906:	2201      	movs	r2, #1
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009908:	2300      	movs	r3, #0
    __HAL_LOCK(huart);
 800990a:	5422      	strb	r2, [r4, r0]
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800990c:	300c      	adds	r0, #12
 800990e:	5023      	str	r3, [r4, r0]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8009910:	385f      	subs	r0, #95	; 0x5f
 8009912:	67a0      	str	r0, [r4, #120]	; 0x78
    tickstart = HAL_GetTick();
 8009914:	f7fd ff88 	bl	8007828 <HAL_GetTick>
 8009918:	4681      	mov	r9, r0
    huart->TxXferSize  = Size;
 800991a:	2050      	movs	r0, #80	; 0x50
 800991c:	5227      	strh	r7, [r4, r0]
    huart->TxXferCount = Size;
 800991e:	3002      	adds	r0, #2
      pdata16bits = NULL;
 8009920:	2200      	movs	r2, #0
    huart->TxXferCount = Size;
 8009922:	5227      	strh	r7, [r4, r0]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009924:	2780      	movs	r7, #128	; 0x80
 8009926:	68a3      	ldr	r3, [r4, #8]
      pdata16bits = NULL;
 8009928:	4692      	mov	sl, r2
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800992a:	0179      	lsls	r1, r7, #5
 800992c:	428b      	cmp	r3, r1
 800992e:	d100      	bne.n	8009932 <HAL_UART_Transmit+0x66>
 8009930:	e06c      	b.n	8009a0c <HAL_UART_Transmit+0x140>
    __HAL_UNLOCK(huart);
 8009932:	2774      	movs	r7, #116	; 0x74
 8009934:	2100      	movs	r1, #0
 8009936:	55e1      	strb	r1, [r4, r7]
    while (huart->TxXferCount > 0U)
 8009938:	3f22      	subs	r7, #34	; 0x22
 800993a:	5be2      	ldrh	r2, [r4, r7]
 800993c:	2a00      	cmp	r2, #0
 800993e:	d016      	beq.n	800996e <HAL_UART_Transmit+0xa2>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8009940:	2780      	movs	r7, #128	; 0x80
 8009942:	6823      	ldr	r3, [r4, #0]
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009944:	2080      	movs	r0, #128	; 0x80
 8009946:	0101      	lsls	r1, r0, #4
 8009948:	4688      	mov	r8, r1
 800994a:	1c72      	adds	r2, r6, #1
 800994c:	d128      	bne.n	80099a0 <HAL_UART_Transmit+0xd4>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800994e:	69da      	ldr	r2, [r3, #28]
 8009950:	4217      	tst	r7, r2
 8009952:	d0fc      	beq.n	800994e <HAL_UART_Transmit+0x82>
      if (pdata8bits == NULL)
 8009954:	2d00      	cmp	r5, #0
 8009956:	d04e      	beq.n	80099f6 <HAL_UART_Transmit+0x12a>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8009958:	7829      	ldrb	r1, [r5, #0]
        pdata8bits++;
 800995a:	3501      	adds	r5, #1
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 800995c:	8519      	strh	r1, [r3, #40]	; 0x28
      huart->TxXferCount--;
 800995e:	2152      	movs	r1, #82	; 0x52
 8009960:	5a60      	ldrh	r0, [r4, r1]
 8009962:	3801      	subs	r0, #1
 8009964:	b282      	uxth	r2, r0
 8009966:	5262      	strh	r2, [r4, r1]
    while (huart->TxXferCount > 0U)
 8009968:	5a61      	ldrh	r1, [r4, r1]
 800996a:	2900      	cmp	r1, #0
 800996c:	d1ea      	bne.n	8009944 <HAL_UART_Transmit+0x78>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 800996e:	464b      	mov	r3, r9
 8009970:	2200      	movs	r2, #0
 8009972:	2140      	movs	r1, #64	; 0x40
 8009974:	0020      	movs	r0, r4
 8009976:	9600      	str	r6, [sp, #0]
 8009978:	f7ff ff48 	bl	800980c <UART_WaitOnFlagUntilTimeout>
 800997c:	2800      	cmp	r0, #0
 800997e:	d15c      	bne.n	8009a3a <HAL_UART_Transmit+0x16e>
    huart->gState = HAL_UART_STATE_READY;
 8009980:	2320      	movs	r3, #32
 8009982:	67a3      	str	r3, [r4, #120]	; 0x78
    return HAL_OK;
 8009984:	e005      	b.n	8009992 <HAL_UART_Transmit+0xc6>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009986:	6923      	ldr	r3, [r4, #16]
 8009988:	2b00      	cmp	r3, #0
 800998a:	d1b7      	bne.n	80098fc <HAL_UART_Transmit+0x30>
      if ((((uint32_t)pData) & 1U) != 0U)
 800998c:	07eb      	lsls	r3, r5, #31
 800998e:	d5b5      	bpl.n	80098fc <HAL_UART_Transmit+0x30>
      return  HAL_ERROR;
 8009990:	2001      	movs	r0, #1
}
 8009992:	b003      	add	sp, #12
 8009994:	bcf0      	pop	{r4, r5, r6, r7}
 8009996:	46bb      	mov	fp, r7
 8009998:	46b2      	mov	sl, r6
 800999a:	46a9      	mov	r9, r5
 800999c:	46a0      	mov	r8, r4
 800999e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80099a0:	0038      	movs	r0, r7
 80099a2:	69da      	ldr	r2, [r3, #28]
 80099a4:	4010      	ands	r0, r2
 80099a6:	4683      	mov	fp, r0
 80099a8:	4217      	tst	r7, r2
 80099aa:	d1d3      	bne.n	8009954 <HAL_UART_Transmit+0x88>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099ac:	f7fd ff3c 	bl	8007828 <HAL_GetTick>
 80099b0:	464b      	mov	r3, r9
 80099b2:	1ac1      	subs	r1, r0, r3
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80099b4:	6823      	ldr	r3, [r4, #0]
 80099b6:	681a      	ldr	r2, [r3, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099b8:	428e      	cmp	r6, r1
 80099ba:	d32e      	bcc.n	8009a1a <HAL_UART_Transmit+0x14e>
 80099bc:	2e00      	cmp	r6, #0
 80099be:	d02c      	beq.n	8009a1a <HAL_UART_Transmit+0x14e>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 80099c0:	2004      	movs	r0, #4
 80099c2:	4210      	tst	r0, r2
 80099c4:	d0c1      	beq.n	800994a <HAL_UART_Transmit+0x7e>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 80099c6:	4641      	mov	r1, r8
 80099c8:	69da      	ldr	r2, [r3, #28]
 80099ca:	420a      	tst	r2, r1
 80099cc:	d0bd      	beq.n	800994a <HAL_UART_Transmit+0x7e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80099ce:	6219      	str	r1, [r3, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80099d0:	681e      	ldr	r6, [r3, #0]
 80099d2:	4f1b      	ldr	r7, [pc, #108]	; (8009a40 <HAL_UART_Transmit+0x174>)
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80099d4:	2280      	movs	r2, #128	; 0x80
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80099d6:	403e      	ands	r6, r7
 80099d8:	601e      	str	r6, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80099da:	6898      	ldr	r0, [r3, #8]
 80099dc:	37a3      	adds	r7, #163	; 0xa3
 80099de:	37ff      	adds	r7, #255	; 0xff
 80099e0:	43b8      	bics	r0, r7
 80099e2:	6098      	str	r0, [r3, #8]
          huart->gState = HAL_UART_STATE_READY;
 80099e4:	2320      	movs	r3, #32
          __HAL_UNLOCK(huart);
 80099e6:	4659      	mov	r1, fp
          huart->gState = HAL_UART_STATE_READY;
 80099e8:	67a3      	str	r3, [r4, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 80099ea:	67e3      	str	r3, [r4, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80099ec:	50a3      	str	r3, [r4, r2]
          __HAL_UNLOCK(huart);
 80099ee:	3354      	adds	r3, #84	; 0x54
        return HAL_TIMEOUT;
 80099f0:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 80099f2:	54e1      	strb	r1, [r4, r3]
          return HAL_TIMEOUT;
 80099f4:	e7cd      	b.n	8009992 <HAL_UART_Transmit+0xc6>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80099f6:	4650      	mov	r0, sl
 80099f8:	8802      	ldrh	r2, [r0, #0]
 80099fa:	05d1      	lsls	r1, r2, #23
        pdata16bits++;
 80099fc:	2202      	movs	r2, #2
 80099fe:	4694      	mov	ip, r2
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8009a00:	0dc8      	lsrs	r0, r1, #23
 8009a02:	8518      	strh	r0, [r3, #40]	; 0x28
        pdata16bits++;
 8009a04:	44e2      	add	sl, ip
      huart->TxXferCount--;
 8009a06:	e7aa      	b.n	800995e <HAL_UART_Transmit+0x92>
    return HAL_BUSY;
 8009a08:	2002      	movs	r0, #2
 8009a0a:	e7c2      	b.n	8009992 <HAL_UART_Transmit+0xc6>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009a0c:	6920      	ldr	r0, [r4, #16]
 8009a0e:	2800      	cmp	r0, #0
 8009a10:	d000      	beq.n	8009a14 <HAL_UART_Transmit+0x148>
 8009a12:	e78e      	b.n	8009932 <HAL_UART_Transmit+0x66>
 8009a14:	46aa      	mov	sl, r5
      pdata8bits  = NULL;
 8009a16:	2500      	movs	r5, #0
 8009a18:	e78b      	b.n	8009932 <HAL_UART_Transmit+0x66>
        huart->gState = HAL_UART_STATE_READY;
 8009a1a:	2720      	movs	r7, #32
        __HAL_UNLOCK(huart);
 8009a1c:	2000      	movs	r0, #0
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8009a1e:	4d08      	ldr	r5, [pc, #32]	; (8009a40 <HAL_UART_Transmit+0x174>)
 8009a20:	402a      	ands	r2, r5
 8009a22:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009a24:	689e      	ldr	r6, [r3, #8]
 8009a26:	35a3      	adds	r5, #163	; 0xa3
 8009a28:	35ff      	adds	r5, #255	; 0xff
 8009a2a:	43ae      	bics	r6, r5
 8009a2c:	609e      	str	r6, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 8009a2e:	67a7      	str	r7, [r4, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8009a30:	67e7      	str	r7, [r4, #124]	; 0x7c
        __HAL_UNLOCK(huart);
 8009a32:	3754      	adds	r7, #84	; 0x54
 8009a34:	55e0      	strb	r0, [r4, r7]
        return HAL_TIMEOUT;
 8009a36:	2003      	movs	r0, #3
 8009a38:	e7ab      	b.n	8009992 <HAL_UART_Transmit+0xc6>
      return HAL_TIMEOUT;
 8009a3a:	2003      	movs	r0, #3
 8009a3c:	e7a9      	b.n	8009992 <HAL_UART_Transmit+0xc6>
 8009a3e:	46c0      	nop			; (mov r8, r8)
 8009a40:	fffffe5f 	.word	0xfffffe5f

08009a44 <HAL_UARTEx_WakeupCallback>:
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_WakeupCallback can be implemented in the user file.
   */
}
 8009a44:	4770      	bx	lr
 8009a46:	46c0      	nop			; (mov r8, r8)

08009a48 <_Z12MPU6050_InitP19__I2C_HandleTypeDef>:
#define GYRO_SCALE 2000.0*DEG_TO_RAD/(1<<15)
#define ACCE_SCALE 16.0/(1<<15)


uint8_t MPU6050_Init(I2C_HandleTypeDef *I2Cx)
{
 8009a48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a4a:	46c6      	mov	lr, r8
    uint8_t check;
    HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, WHO_AM_I_REG, 1, &check, 1, I2C_TIMEOUT);
 8009a4c:	27fa      	movs	r7, #250	; 0xfa
 8009a4e:	2416      	movs	r4, #22
 8009a50:	2601      	movs	r6, #1
{
 8009a52:	b500      	push	{lr}
 8009a54:	b086      	sub	sp, #24
    HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, WHO_AM_I_REG, 1, &check, 1, I2C_TIMEOUT);
 8009a56:	446c      	add	r4, sp
 8009a58:	00bf      	lsls	r7, r7, #2
 8009a5a:	2301      	movs	r3, #1
 8009a5c:	2275      	movs	r2, #117	; 0x75
 8009a5e:	21d0      	movs	r1, #208	; 0xd0
 8009a60:	9702      	str	r7, [sp, #8]
 8009a62:	9601      	str	r6, [sp, #4]
 8009a64:	9400      	str	r4, [sp, #0]
{
 8009a66:	0005      	movs	r5, r0
    HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, WHO_AM_I_REG, 1, &check, 1, I2C_TIMEOUT);
 8009a68:	f7fe faf4 	bl	8008054 <HAL_I2C_Mem_Read>

    if(check != 0x68){
 8009a6c:	7823      	ldrb	r3, [r4, #0]
    	return -1;
 8009a6e:	20ff      	movs	r0, #255	; 0xff
    if(check != 0x68){
 8009a70:	2b68      	cmp	r3, #104	; 0x68
 8009a72:	d163      	bne.n	8009b3c <_Z12MPU6050_InitP19__I2C_HandleTypeDef+0xf4>
    }

    uint8_t Data;
	HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, PWR_MGMT_1_REG, 1, &(Data=0x00), 1, I2C_TIMEOUT);
 8009a74:	2300      	movs	r3, #0
 8009a76:	2417      	movs	r4, #23
 8009a78:	4698      	mov	r8, r3
 8009a7a:	446c      	add	r4, sp
 8009a7c:	7023      	strb	r3, [r4, #0]
 8009a7e:	226b      	movs	r2, #107	; 0x6b
 8009a80:	21d0      	movs	r1, #208	; 0xd0
 8009a82:	3301      	adds	r3, #1
 8009a84:	0028      	movs	r0, r5
 8009a86:	9702      	str	r7, [sp, #8]
 8009a88:	9601      	str	r6, [sp, #4]
 8009a8a:	9400      	str	r4, [sp, #0]
 8009a8c:	f7fe f9b2 	bl	8007df4 <HAL_I2C_Mem_Write>
	HAL_Delay(100);
 8009a90:	2064      	movs	r0, #100	; 0x64
 8009a92:	f7fd fecf 	bl	8007834 <HAL_Delay>

	// if dlpf is enabled => Gyroscope Output Rate = 1khz
//	HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &(Data=0x07), 1, I2C_TIMEOUT);
	HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &(Data=0x00), 1, I2C_TIMEOUT);
 8009a96:	4643      	mov	r3, r8
 8009a98:	2219      	movs	r2, #25
 8009a9a:	7023      	strb	r3, [r4, #0]
 8009a9c:	21d0      	movs	r1, #208	; 0xd0
 8009a9e:	3301      	adds	r3, #1
 8009aa0:	0028      	movs	r0, r5
 8009aa2:	9702      	str	r7, [sp, #8]
 8009aa4:	9601      	str	r6, [sp, #4]
 8009aa6:	9400      	str	r4, [sp, #0]
 8009aa8:	f7fe f9a4 	bl	8007df4 <HAL_I2C_Mem_Write>

	HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, ACCEL_CONFIG_REG, 1, &Data, 1, I2C_TIMEOUT);
 8009aac:	2301      	movs	r3, #1
 8009aae:	221c      	movs	r2, #28
 8009ab0:	21d0      	movs	r1, #208	; 0xd0
 8009ab2:	0028      	movs	r0, r5
 8009ab4:	9702      	str	r7, [sp, #8]
 8009ab6:	9601      	str	r6, [sp, #4]
 8009ab8:	9400      	str	r4, [sp, #0]
 8009aba:	f7fe facb 	bl	8008054 <HAL_I2C_Mem_Read>
	HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, ACCEL_CONFIG_REG, 1, &(Data|=0b000'11'000), 1, I2C_TIMEOUT);
 8009abe:	2018      	movs	r0, #24
 8009ac0:	4680      	mov	r8, r0
 8009ac2:	4642      	mov	r2, r8
 8009ac4:	7821      	ldrb	r1, [r4, #0]
 8009ac6:	2301      	movs	r3, #1
 8009ac8:	4311      	orrs	r1, r2
 8009aca:	7021      	strb	r1, [r4, #0]
 8009acc:	221c      	movs	r2, #28
 8009ace:	21d0      	movs	r1, #208	; 0xd0
 8009ad0:	0028      	movs	r0, r5
 8009ad2:	9702      	str	r7, [sp, #8]
 8009ad4:	9601      	str	r6, [sp, #4]
 8009ad6:	9400      	str	r4, [sp, #0]
 8009ad8:	f7fe f98c 	bl	8007df4 <HAL_I2C_Mem_Write>

	HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &Data, 1, I2C_TIMEOUT);
 8009adc:	2301      	movs	r3, #1
 8009ade:	221b      	movs	r2, #27
 8009ae0:	21d0      	movs	r1, #208	; 0xd0
 8009ae2:	0028      	movs	r0, r5
 8009ae4:	9702      	str	r7, [sp, #8]
 8009ae6:	9601      	str	r6, [sp, #4]
 8009ae8:	9400      	str	r4, [sp, #0]
 8009aea:	f7fe fab3 	bl	8008054 <HAL_I2C_Mem_Read>
	HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &(Data|=0b000'11'000), 1, I2C_TIMEOUT);
 8009aee:	4640      	mov	r0, r8
 8009af0:	7823      	ldrb	r3, [r4, #0]
 8009af2:	221b      	movs	r2, #27
 8009af4:	4303      	orrs	r3, r0
 8009af6:	7023      	strb	r3, [r4, #0]
 8009af8:	21d0      	movs	r1, #208	; 0xd0
 8009afa:	2301      	movs	r3, #1
 8009afc:	0028      	movs	r0, r5
 8009afe:	9702      	str	r7, [sp, #8]
 8009b00:	9601      	str	r6, [sp, #4]
 8009b02:	9400      	str	r4, [sp, #0]
 8009b04:	f7fe f976 	bl	8007df4 <HAL_I2C_Mem_Write>

	HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, DLPF_CONFIG_REG, 1, &Data, 1, I2C_TIMEOUT);
 8009b08:	2301      	movs	r3, #1
 8009b0a:	221a      	movs	r2, #26
 8009b0c:	21d0      	movs	r1, #208	; 0xd0
 8009b0e:	0028      	movs	r0, r5
 8009b10:	9702      	str	r7, [sp, #8]
 8009b12:	9601      	str	r6, [sp, #4]
 8009b14:	9400      	str	r4, [sp, #0]
 8009b16:	f7fe fa9d 	bl	8008054 <HAL_I2C_Mem_Read>
	HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, DLPF_CONFIG_REG, 1, &(Data|=0b00000'010), 1, I2C_TIMEOUT);
 8009b1a:	2202      	movs	r2, #2
 8009b1c:	7821      	ldrb	r1, [r4, #0]
 8009b1e:	2301      	movs	r3, #1
 8009b20:	4311      	orrs	r1, r2
 8009b22:	7021      	strb	r1, [r4, #0]
 8009b24:	221a      	movs	r2, #26
 8009b26:	21d0      	movs	r1, #208	; 0xd0
 8009b28:	0028      	movs	r0, r5
 8009b2a:	9702      	str	r7, [sp, #8]
 8009b2c:	9601      	str	r6, [sp, #4]
 8009b2e:	9400      	str	r4, [sp, #0]
 8009b30:	f7fe f960 	bl	8007df4 <HAL_I2C_Mem_Write>

	HAL_Delay(100);
 8009b34:	2064      	movs	r0, #100	; 0x64
 8009b36:	f7fd fe7d 	bl	8007834 <HAL_Delay>
    return 0;
 8009b3a:	2000      	movs	r0, #0
}
 8009b3c:	b006      	add	sp, #24
 8009b3e:	bc80      	pop	{r7}
 8009b40:	46b8      	mov	r8, r7
 8009b42:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009b44 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t>:
}

int MPU6050_Read_All(I2C_HandleTypeDef *I2Cx, MPU6050_t *DataStruct)
{
    uint8_t Rec_Data[14];
    auto status = HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 14, I2C_TIMEOUT);
 8009b44:	23fa      	movs	r3, #250	; 0xfa
{
 8009b46:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009b48:	46d6      	mov	lr, sl
 8009b4a:	464f      	mov	r7, r9
 8009b4c:	4646      	mov	r6, r8
 8009b4e:	000c      	movs	r4, r1
    auto status = HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 14, I2C_TIMEOUT);
 8009b50:	0099      	lsls	r1, r3, #2
 8009b52:	230e      	movs	r3, #14
{
 8009b54:	b5c0      	push	{r6, r7, lr}
 8009b56:	b088      	sub	sp, #32
    auto status = HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 14, I2C_TIMEOUT);
 8009b58:	ad04      	add	r5, sp, #16
 8009b5a:	9102      	str	r1, [sp, #8]
 8009b5c:	9301      	str	r3, [sp, #4]
 8009b5e:	223b      	movs	r2, #59	; 0x3b
 8009b60:	21d0      	movs	r1, #208	; 0xd0
 8009b62:	9500      	str	r5, [sp, #0]
 8009b64:	3b0d      	subs	r3, #13
 8009b66:	f7fe fa75 	bl	8008054 <HAL_I2C_Mem_Read>

    if(status != HAL_OK){
 8009b6a:	2800      	cmp	r0, #0
 8009b6c:	d000      	beq.n	8009b70 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x2c>
 8009b6e:	e09f      	b.n	8009cb0 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x16c>
    	return -1;
    }

    DataStruct->Accel_X_RAW = (int16_t)(Rec_Data[0] << 8 | Rec_Data[1]);
 8009b70:	7828      	ldrb	r0, [r5, #0]
 8009b72:	786e      	ldrb	r6, [r5, #1]
 8009b74:	0202      	lsls	r2, r0, #8
 8009b76:	4316      	orrs	r6, r2
 8009b78:	b230      	sxth	r0, r6
 8009b7a:	8020      	strh	r0, [r4, #0]
    DataStruct->Accel_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data[3]);
 8009b7c:	78af      	ldrb	r7, [r5, #2]
 8009b7e:	78eb      	ldrb	r3, [r5, #3]
 8009b80:	0239      	lsls	r1, r7, #8
 8009b82:	430b      	orrs	r3, r1
 8009b84:	b21a      	sxth	r2, r3
 8009b86:	8062      	strh	r2, [r4, #2]
    DataStruct->Accel_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data[5]);
 8009b88:	792e      	ldrb	r6, [r5, #4]
 8009b8a:	796f      	ldrb	r7, [r5, #5]
 8009b8c:	0231      	lsls	r1, r6, #8
 8009b8e:	430f      	orrs	r7, r1
 8009b90:	b23f      	sxth	r7, r7
 8009b92:	80a7      	strh	r7, [r4, #4]
    DataStruct->Temp_RAW = (int16_t)(Rec_Data[6] << 8 | Rec_Data[7]);
 8009b94:	79ab      	ldrb	r3, [r5, #6]
 8009b96:	79ee      	ldrb	r6, [r5, #7]
    DataStruct->Accel_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data[3]);
 8009b98:	4690      	mov	r8, r2
    DataStruct->Temp_RAW = (int16_t)(Rec_Data[6] << 8 | Rec_Data[7]);
 8009b9a:	021a      	lsls	r2, r3, #8
 8009b9c:	4316      	orrs	r6, r2
 8009b9e:	b236      	sxth	r6, r6
 8009ba0:	8526      	strh	r6, [r4, #40]	; 0x28
    DataStruct->Gyro_X_RAW = (int16_t)(Rec_Data[8] << 8 | Rec_Data[9]);
 8009ba2:	7a29      	ldrb	r1, [r5, #8]
 8009ba4:	7a6b      	ldrb	r3, [r5, #9]
 8009ba6:	020a      	lsls	r2, r1, #8
 8009ba8:	4313      	orrs	r3, r2
 8009baa:	b219      	sxth	r1, r3
 8009bac:	82a1      	strh	r1, [r4, #20]
    DataStruct->Gyro_Y_RAW = (int16_t)(Rec_Data[10] << 8 | Rec_Data[11]);
 8009bae:	7aaa      	ldrb	r2, [r5, #10]
 8009bb0:	7aeb      	ldrb	r3, [r5, #11]
    DataStruct->Gyro_X_RAW = (int16_t)(Rec_Data[8] << 8 | Rec_Data[9]);
 8009bb2:	4689      	mov	r9, r1
    DataStruct->Gyro_Y_RAW = (int16_t)(Rec_Data[10] << 8 | Rec_Data[11]);
 8009bb4:	0211      	lsls	r1, r2, #8
 8009bb6:	430b      	orrs	r3, r1
 8009bb8:	b21a      	sxth	r2, r3
 8009bba:	82e2      	strh	r2, [r4, #22]
    DataStruct->Gyro_Z_RAW = (int16_t)(Rec_Data[12] << 8 | Rec_Data[13]);
 8009bbc:	7b29      	ldrb	r1, [r5, #12]
 8009bbe:	7b6d      	ldrb	r5, [r5, #13]
 8009bc0:	020b      	lsls	r3, r1, #8
 8009bc2:	431d      	orrs	r5, r3
 8009bc4:	b22d      	sxth	r5, r5
    DataStruct->Gyro_Y_RAW = (int16_t)(Rec_Data[10] << 8 | Rec_Data[11]);
 8009bc6:	4692      	mov	sl, r2
    DataStruct->Gyro_Z_RAW = (int16_t)(Rec_Data[12] << 8 | Rec_Data[13]);
 8009bc8:	8325      	strh	r5, [r4, #24]

    if(DataStruct->Temp_RAW==0){
 8009bca:	2e00      	cmp	r6, #0
 8009bcc:	d100      	bne.n	8009bd0 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x8c>
 8009bce:	e06f      	b.n	8009cb0 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x16c>
void MPU6050_Calc_Temp(MPU6050_t *DataStruct){
    DataStruct->Temperature = (float)((int16_t)DataStruct->Temp_RAW / (float)340.0 + (float)36.53);
}

void MPU6050_Calc_Accel(MPU6050_t *DataStruct){
    DataStruct->Ax = DataStruct->Accel_X_RAW * ACCE_SCALE;
 8009bd0:	f7f9 f9ec 	bl	8002fac <__aeabi_i2d>
 8009bd4:	23fd      	movs	r3, #253	; 0xfd
 8009bd6:	2200      	movs	r2, #0
 8009bd8:	059b      	lsls	r3, r3, #22
 8009bda:	f7f8 fb95 	bl	8002308 <__aeabi_dmul>
 8009bde:	f7f9 fa83 	bl	80030e8 <__aeabi_d2f>
 8009be2:	60a0      	str	r0, [r4, #8]
    DataStruct->Ay = DataStruct->Accel_Y_RAW * ACCE_SCALE;
 8009be4:	4640      	mov	r0, r8
 8009be6:	f7f9 f9e1 	bl	8002fac <__aeabi_i2d>
 8009bea:	23fd      	movs	r3, #253	; 0xfd
 8009bec:	2200      	movs	r2, #0
 8009bee:	059b      	lsls	r3, r3, #22
 8009bf0:	f7f8 fb8a 	bl	8002308 <__aeabi_dmul>
 8009bf4:	f7f9 fa78 	bl	80030e8 <__aeabi_d2f>
 8009bf8:	60e0      	str	r0, [r4, #12]
    DataStruct->Az = DataStruct->Accel_Z_RAW * ACCE_SCALE;
 8009bfa:	0038      	movs	r0, r7
 8009bfc:	27fd      	movs	r7, #253	; 0xfd
 8009bfe:	f7f9 f9d5 	bl	8002fac <__aeabi_i2d>
 8009c02:	05bb      	lsls	r3, r7, #22
 8009c04:	2200      	movs	r2, #0
 8009c06:	f7f8 fb7f 	bl	8002308 <__aeabi_dmul>
 8009c0a:	f7f9 fa6d 	bl	80030e8 <__aeabi_d2f>
 8009c0e:	6120      	str	r0, [r4, #16]
    DataStruct->Temperature = (float)((int16_t)DataStruct->Temp_RAW / (float)340.0 + (float)36.53);
 8009c10:	0030      	movs	r0, r6
 8009c12:	f7f7 fb87 	bl	8001324 <__aeabi_i2f>
 8009c16:	4928      	ldr	r1, [pc, #160]	; (8009cb8 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x174>)
 8009c18:	f7f7 f86c 	bl	8000cf4 <__aeabi_fmul>
 8009c1c:	4927      	ldr	r1, [pc, #156]	; (8009cbc <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x178>)
 8009c1e:	f7f6 fd03 	bl	8000628 <__aeabi_fadd>
 8009c22:	62e0      	str	r0, [r4, #44]	; 0x2c
    DataStruct->Gx = DataStruct->Gyro_X_RAW * GYRO_SCALE - DataStruct->Gx_bias;
 8009c24:	4648      	mov	r0, r9
 8009c26:	f7f9 f9c1 	bl	8002fac <__aeabi_i2d>
 8009c2a:	4a25      	ldr	r2, [pc, #148]	; (8009cc0 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x17c>)
 8009c2c:	4b25      	ldr	r3, [pc, #148]	; (8009cc4 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x180>)
 8009c2e:	f7f8 fb6b 	bl	8002308 <__aeabi_dmul>
 8009c32:	0006      	movs	r6, r0
 8009c34:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009c36:	000f      	movs	r7, r1
 8009c38:	f7f9 fa0e 	bl	8003058 <__aeabi_f2d>
 8009c3c:	0002      	movs	r2, r0
 8009c3e:	000b      	movs	r3, r1
 8009c40:	0030      	movs	r0, r6
 8009c42:	0039      	movs	r1, r7
 8009c44:	f7f8 fdcc 	bl	80027e0 <__aeabi_dsub>
 8009c48:	f7f9 fa4e 	bl	80030e8 <__aeabi_d2f>
 8009c4c:	61e0      	str	r0, [r4, #28]
    DataStruct->Gy = DataStruct->Gyro_Y_RAW * GYRO_SCALE - DataStruct->Gy_bias;
 8009c4e:	4650      	mov	r0, sl
 8009c50:	f7f9 f9ac 	bl	8002fac <__aeabi_i2d>
 8009c54:	4a1a      	ldr	r2, [pc, #104]	; (8009cc0 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x17c>)
 8009c56:	4b1b      	ldr	r3, [pc, #108]	; (8009cc4 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x180>)
 8009c58:	f7f8 fb56 	bl	8002308 <__aeabi_dmul>
 8009c5c:	0006      	movs	r6, r0
 8009c5e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009c60:	000f      	movs	r7, r1
 8009c62:	f7f9 f9f9 	bl	8003058 <__aeabi_f2d>
 8009c66:	0002      	movs	r2, r0
 8009c68:	000b      	movs	r3, r1
 8009c6a:	0030      	movs	r0, r6
 8009c6c:	0039      	movs	r1, r7
 8009c6e:	f7f8 fdb7 	bl	80027e0 <__aeabi_dsub>
 8009c72:	f7f9 fa39 	bl	80030e8 <__aeabi_d2f>
 8009c76:	6220      	str	r0, [r4, #32]
    DataStruct->Gz = DataStruct->Gyro_Z_RAW * GYRO_SCALE - DataStruct->Gz_bias;
 8009c78:	0028      	movs	r0, r5
 8009c7a:	f7f9 f997 	bl	8002fac <__aeabi_i2d>
 8009c7e:	4a10      	ldr	r2, [pc, #64]	; (8009cc0 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x17c>)
 8009c80:	4b10      	ldr	r3, [pc, #64]	; (8009cc4 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x180>)
 8009c82:	f7f8 fb41 	bl	8002308 <__aeabi_dmul>
 8009c86:	0005      	movs	r5, r0
 8009c88:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009c8a:	000e      	movs	r6, r1
 8009c8c:	f7f9 f9e4 	bl	8003058 <__aeabi_f2d>
 8009c90:	0002      	movs	r2, r0
 8009c92:	000b      	movs	r3, r1
 8009c94:	0028      	movs	r0, r5
 8009c96:	0031      	movs	r1, r6
 8009c98:	f7f8 fda2 	bl	80027e0 <__aeabi_dsub>
 8009c9c:	f7f9 fa24 	bl	80030e8 <__aeabi_d2f>
 8009ca0:	6260      	str	r0, [r4, #36]	; 0x24
    return 0;
 8009ca2:	2000      	movs	r0, #0
}
 8009ca4:	b008      	add	sp, #32
 8009ca6:	bce0      	pop	{r5, r6, r7}
 8009ca8:	46ba      	mov	sl, r7
 8009caa:	46b1      	mov	r9, r6
 8009cac:	46a8      	mov	r8, r5
 8009cae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    	return -1;
 8009cb0:	2401      	movs	r4, #1
 8009cb2:	4260      	negs	r0, r4
 8009cb4:	e7f6      	b.n	8009ca4 <_Z16MPU6050_Read_AllP19__I2C_HandleTypeDefP9MPU6050_t+0x160>
 8009cb6:	46c0      	nop			; (mov r8, r8)
 8009cb8:	3b40c0c1 	.word	0x3b40c0c1
 8009cbc:	42121eb8 	.word	0x42121eb8
 8009cc0:	fa84ad8a 	.word	0xfa84ad8a
 8009cc4:	3f51740a 	.word	0x3f51740a

08009cc8 <_Z18PIDController_InitP13PIDController>:
#include <math.h>

void PIDController_Init(PIDController *pid) {

	/* Clear controller variables */
	pid->integrator = 0.0f;
 8009cc8:	2300      	movs	r3, #0
 8009cca:	6283      	str	r3, [r0, #40]	; 0x28
	pid->prevError  = 0.0f;
 8009ccc:	62c3      	str	r3, [r0, #44]	; 0x2c

	pid->proportional = 0.0f;
 8009cce:	6243      	str	r3, [r0, #36]	; 0x24
	pid->differentiator  = 0.0f;
 8009cd0:	6303      	str	r3, [r0, #48]	; 0x30
	pid->prevMeasurement = 0.0f;
 8009cd2:	6343      	str	r3, [r0, #52]	; 0x34

	pid->out = 0.0f;
 8009cd4:	6383      	str	r3, [r0, #56]	; 0x38

}
 8009cd6:	4770      	bx	lr

08009cd8 <_Z20PIDController_UpdateP13PIDControllerfffb>:

float PIDController_Update(PIDController *pid, float setpoint, float measurement, float dt, bool foo) {
 8009cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009cda:	4645      	mov	r5, r8
 8009cdc:	4698      	mov	r8, r3
 8009cde:	46de      	mov	lr, fp
 8009ce0:	4657      	mov	r7, sl
 8009ce2:	464e      	mov	r6, r9
 8009ce4:	0004      	movs	r4, r0
 8009ce6:	1c08      	adds	r0, r1, #0

	/*
	 * dt
	 */
	pid->T = dt;
 8009ce8:	4641      	mov	r1, r8
float PIDController_Update(PIDController *pid, float setpoint, float measurement, float dt, bool foo) {
 8009cea:	b5e0      	push	{r5, r6, r7, lr}
	pid->T = dt;
 8009cec:	6221      	str	r1, [r4, #32]
float PIDController_Update(PIDController *pid, float setpoint, float measurement, float dt, bool foo) {
 8009cee:	ab0a      	add	r3, sp, #40	; 0x28

	/*
	* Error signal
	*/
    float error = setpoint - measurement;
 8009cf0:	1c11      	adds	r1, r2, #0
float PIDController_Update(PIDController *pid, float setpoint, float measurement, float dt, bool foo) {
 8009cf2:	781f      	ldrb	r7, [r3, #0]
 8009cf4:	1c16      	adds	r6, r2, #0
    float error = setpoint - measurement;
 8009cf6:	f7f7 f917 	bl	8000f28 <__aeabi_fsub>
 8009cfa:	1c05      	adds	r5, r0, #0

    if(foo) if(-3 < error && error < 3){
 8009cfc:	2f00      	cmp	r7, #0
 8009cfe:	d004      	beq.n	8009d0a <_Z20PIDController_UpdateP13PIDControllerfffb+0x32>
 8009d00:	4942      	ldr	r1, [pc, #264]	; (8009e0c <_Z20PIDController_UpdateP13PIDControllerfffb+0x134>)
 8009d02:	f7f6 fbf5 	bl	80004f0 <__aeabi_fcmpgt>
 8009d06:	2800      	cmp	r0, #0
 8009d08:	d16e      	bne.n	8009de8 <_Z20PIDController_UpdateP13PIDControllerfffb+0x110>


	/*
	* Proportional
	*/
    pid->proportional = pid->Kp * error;
 8009d0a:	6821      	ldr	r1, [r4, #0]
 8009d0c:	1c28      	adds	r0, r5, #0
 8009d0e:	f7f6 fff1 	bl	8000cf4 <__aeabi_fmul>


//	/*
//	* Integral
//	*/
    pid->integrator = pid->integrator + 0.5f * pid->Ki * pid->T * (error + pid->prevError);
 8009d12:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    pid->proportional = pid->Kp * error;
 8009d14:	6260      	str	r0, [r4, #36]	; 0x24
 8009d16:	4681      	mov	r9, r0
    pid->integrator = pid->integrator + 0.5f * pid->Ki * pid->T * (error + pid->prevError);
 8009d18:	1c28      	adds	r0, r5, #0
 8009d1a:	f7f6 fc85 	bl	8000628 <__aeabi_fadd>
 8009d1e:	22fc      	movs	r2, #252	; 0xfc
 8009d20:	6867      	ldr	r7, [r4, #4]
 8009d22:	0591      	lsls	r1, r2, #22
 8009d24:	4682      	mov	sl, r0
 8009d26:	4640      	mov	r0, r8
 8009d28:	f7f6 ffe4 	bl	8000cf4 <__aeabi_fmul>
 8009d2c:	1c39      	adds	r1, r7, #0
 8009d2e:	f7f6 ffe1 	bl	8000cf4 <__aeabi_fmul>
 8009d32:	1c01      	adds	r1, r0, #0
 8009d34:	4650      	mov	r0, sl
 8009d36:	f7f6 ffdd 	bl	8000cf4 <__aeabi_fmul>
 8009d3a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8009d3c:	f7f6 fc74 	bl	8000628 <__aeabi_fadd>

	/* Anti-wind-up via integrator clamping */
    if(pid->Ki == 0){
 8009d40:	2100      	movs	r1, #0
    pid->integrator = pid->integrator + 0.5f * pid->Ki * pid->T * (error + pid->prevError);
 8009d42:	4682      	mov	sl, r0
 8009d44:	62a0      	str	r0, [r4, #40]	; 0x28
    if(pid->Ki == 0){
 8009d46:	1c38      	adds	r0, r7, #0
 8009d48:	468b      	mov	fp, r1
 8009d4a:	f7f6 fbb7 	bl	80004bc <__aeabi_fcmpeq>
 8009d4e:	2800      	cmp	r0, #0
 8009d50:	d03f      	beq.n	8009dd2 <_Z20PIDController_UpdateP13PIDControllerfffb+0xfa>
    	pid->integrator = 0;
 8009d52:	4658      	mov	r0, fp
 8009d54:	62a0      	str	r0, [r4, #40]	; 0x28
	*/
		
//    pid->differentiator = (-2.0f * pid->Kd * (measurement - pid->prevMeasurement) + (2.0f * pid->tau - pid->T) * pid->differentiator)
//                        		/ (2.0f * pid->tau + pid->T);

    pid->differentiator = (pid->Kd * (measurement - pid->prevMeasurement) + pid->tau*pid->differentiator)/(pid->tau + pid->T);
 8009d56:	68e2      	ldr	r2, [r4, #12]
 8009d58:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009d5a:	1c30      	adds	r0, r6, #0
 8009d5c:	4693      	mov	fp, r2
 8009d5e:	f7f7 f8e3 	bl	8000f28 <__aeabi_fsub>
 8009d62:	68a1      	ldr	r1, [r4, #8]
 8009d64:	f7f6 ffc6 	bl	8000cf4 <__aeabi_fmul>
 8009d68:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009d6a:	4682      	mov	sl, r0
 8009d6c:	4658      	mov	r0, fp
 8009d6e:	f7f6 ffc1 	bl	8000cf4 <__aeabi_fmul>
 8009d72:	1c01      	adds	r1, r0, #0
 8009d74:	4650      	mov	r0, sl
 8009d76:	f7f6 fc57 	bl	8000628 <__aeabi_fadd>
 8009d7a:	4641      	mov	r1, r8
 8009d7c:	4682      	mov	sl, r0
 8009d7e:	4658      	mov	r0, fp
 8009d80:	f7f6 fc52 	bl	8000628 <__aeabi_fadd>
 8009d84:	1c01      	adds	r1, r0, #0
 8009d86:	4650      	mov	r0, sl
 8009d88:	f7f6 fdea 	bl	8000960 <__aeabi_fdiv>
 8009d8c:	1c01      	adds	r1, r0, #0
 8009d8e:	6320      	str	r0, [r4, #48]	; 0x30

	/*
	* Compute output and apply limits
	*/
    pid->out = pid->proportional + pid->integrator + pid->differentiator;
 8009d90:	4648      	mov	r0, r9
 8009d92:	f7f6 fc49 	bl	8000628 <__aeabi_fadd>
 8009d96:	1c39      	adds	r1, r7, #0
 8009d98:	f7f6 fc46 	bl	8000628 <__aeabi_fadd>

    if (pid->out > pid->limMax) {
 8009d9c:	6963      	ldr	r3, [r4, #20]
    pid->out = pid->proportional + pid->integrator + pid->differentiator;
 8009d9e:	63a0      	str	r0, [r4, #56]	; 0x38
    if (pid->out > pid->limMax) {
 8009da0:	1c19      	adds	r1, r3, #0
 8009da2:	4698      	mov	r8, r3
    pid->out = pid->proportional + pid->integrator + pid->differentiator;
 8009da4:	1c07      	adds	r7, r0, #0
    if (pid->out > pid->limMax) {
 8009da6:	f7f6 fba3 	bl	80004f0 <__aeabi_fcmpgt>
 8009daa:	2800      	cmp	r0, #0
 8009dac:	d106      	bne.n	8009dbc <_Z20PIDController_UpdateP13PIDControllerfffb+0xe4>
//        pid->integrator += pid->limMax - pid->out;
        pid->out = pid->limMax;
    } else if (pid->out < pid->limMin) {
 8009dae:	6921      	ldr	r1, [r4, #16]
 8009db0:	1c38      	adds	r0, r7, #0
 8009db2:	4688      	mov	r8, r1
 8009db4:	f7f6 fb88 	bl	80004c8 <__aeabi_fcmplt>
 8009db8:	2800      	cmp	r0, #0
 8009dba:	d013      	beq.n	8009de4 <_Z20PIDController_UpdateP13PIDControllerfffb+0x10c>
//        pid->integrator += pid->limMin - pid->out;
        pid->out = pid->limMin;
 8009dbc:	4640      	mov	r0, r8
 8009dbe:	63a0      	str	r0, [r4, #56]	; 0x38
    pid->prevMeasurement = measurement;

	/* Return controller output */
    return pid->out;

}
 8009dc0:	4640      	mov	r0, r8
    pid->prevError       = error;
 8009dc2:	62e5      	str	r5, [r4, #44]	; 0x2c
    pid->prevMeasurement = measurement;
 8009dc4:	6366      	str	r6, [r4, #52]	; 0x34
}
 8009dc6:	bcf0      	pop	{r4, r5, r6, r7}
 8009dc8:	46bb      	mov	fp, r7
 8009dca:	46b2      	mov	sl, r6
 8009dcc:	46a9      	mov	r9, r5
 8009dce:	46a0      	mov	r8, r4
 8009dd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if (pid->integrator > pid->limMaxInt) {
 8009dd2:	69e7      	ldr	r7, [r4, #28]
 8009dd4:	4650      	mov	r0, sl
 8009dd6:	1c39      	adds	r1, r7, #0
 8009dd8:	f7f6 fb8a 	bl	80004f0 <__aeabi_fcmpgt>
 8009ddc:	2800      	cmp	r0, #0
 8009dde:	d00c      	beq.n	8009dfa <_Z20PIDController_UpdateP13PIDControllerfffb+0x122>
        pid->integrator = pid->limMinInt;
 8009de0:	62a7      	str	r7, [r4, #40]	; 0x28
 8009de2:	e7b8      	b.n	8009d56 <_Z20PIDController_UpdateP13PIDControllerfffb+0x7e>
 8009de4:	46b8      	mov	r8, r7
 8009de6:	e7eb      	b.n	8009dc0 <_Z20PIDController_UpdateP13PIDControllerfffb+0xe8>
    if(foo) if(-3 < error && error < 3){
 8009de8:	4909      	ldr	r1, [pc, #36]	; (8009e10 <_Z20PIDController_UpdateP13PIDControllerfffb+0x138>)
 8009dea:	1c28      	adds	r0, r5, #0
 8009dec:	f7f6 fb6c 	bl	80004c8 <__aeabi_fcmplt>
 8009df0:	2800      	cmp	r0, #0
 8009df2:	d100      	bne.n	8009df6 <_Z20PIDController_UpdateP13PIDControllerfffb+0x11e>
 8009df4:	e789      	b.n	8009d0a <_Z20PIDController_UpdateP13PIDControllerfffb+0x32>
    	error = 0;
 8009df6:	2500      	movs	r5, #0
 8009df8:	e787      	b.n	8009d0a <_Z20PIDController_UpdateP13PIDControllerfffb+0x32>
    } else if (pid->integrator < pid->limMinInt) {
 8009dfa:	69a7      	ldr	r7, [r4, #24]
 8009dfc:	4650      	mov	r0, sl
 8009dfe:	1c39      	adds	r1, r7, #0
 8009e00:	f7f6 fb62 	bl	80004c8 <__aeabi_fcmplt>
 8009e04:	2800      	cmp	r0, #0
 8009e06:	d1eb      	bne.n	8009de0 <_Z20PIDController_UpdateP13PIDControllerfffb+0x108>
 8009e08:	4657      	mov	r7, sl
 8009e0a:	e7a4      	b.n	8009d56 <_Z20PIDController_UpdateP13PIDControllerfffb+0x7e>
 8009e0c:	c0400000 	.word	0xc0400000
 8009e10:	40400000 	.word	0x40400000

08009e14 <cosf>:
 8009e14:	b507      	push	{r0, r1, r2, lr}
 8009e16:	4a18      	ldr	r2, [pc, #96]	; (8009e78 <cosf+0x64>)
 8009e18:	0043      	lsls	r3, r0, #1
 8009e1a:	2100      	movs	r1, #0
 8009e1c:	085b      	lsrs	r3, r3, #1
 8009e1e:	4293      	cmp	r3, r2
 8009e20:	dd14      	ble.n	8009e4c <cosf+0x38>
 8009e22:	22ff      	movs	r2, #255	; 0xff
 8009e24:	05d2      	lsls	r2, r2, #23
 8009e26:	4293      	cmp	r3, r2
 8009e28:	db03      	blt.n	8009e32 <cosf+0x1e>
 8009e2a:	1c01      	adds	r1, r0, #0
 8009e2c:	f7f7 f87c 	bl	8000f28 <__aeabi_fsub>
 8009e30:	bd0e      	pop	{r1, r2, r3, pc}
 8009e32:	4669      	mov	r1, sp
 8009e34:	f000 fad0 	bl	800a3d8 <__ieee754_rem_pio2f>
 8009e38:	2203      	movs	r2, #3
 8009e3a:	4002      	ands	r2, r0
 8009e3c:	2a01      	cmp	r2, #1
 8009e3e:	d008      	beq.n	8009e52 <cosf+0x3e>
 8009e40:	2a02      	cmp	r2, #2
 8009e42:	d00e      	beq.n	8009e62 <cosf+0x4e>
 8009e44:	2a00      	cmp	r2, #0
 8009e46:	d111      	bne.n	8009e6c <cosf+0x58>
 8009e48:	9901      	ldr	r1, [sp, #4]
 8009e4a:	9800      	ldr	r0, [sp, #0]
 8009e4c:	f000 fc78 	bl	800a740 <__kernel_cosf>
 8009e50:	e7ee      	b.n	8009e30 <cosf+0x1c>
 8009e52:	9901      	ldr	r1, [sp, #4]
 8009e54:	9800      	ldr	r0, [sp, #0]
 8009e56:	f000 ffab 	bl	800adb0 <__kernel_sinf>
 8009e5a:	2380      	movs	r3, #128	; 0x80
 8009e5c:	061b      	lsls	r3, r3, #24
 8009e5e:	18c0      	adds	r0, r0, r3
 8009e60:	e7e6      	b.n	8009e30 <cosf+0x1c>
 8009e62:	9901      	ldr	r1, [sp, #4]
 8009e64:	9800      	ldr	r0, [sp, #0]
 8009e66:	f000 fc6b 	bl	800a740 <__kernel_cosf>
 8009e6a:	e7f6      	b.n	8009e5a <cosf+0x46>
 8009e6c:	2201      	movs	r2, #1
 8009e6e:	9901      	ldr	r1, [sp, #4]
 8009e70:	9800      	ldr	r0, [sp, #0]
 8009e72:	f000 ff9d 	bl	800adb0 <__kernel_sinf>
 8009e76:	e7db      	b.n	8009e30 <cosf+0x1c>
 8009e78:	3f490fd8 	.word	0x3f490fd8

08009e7c <sinf>:
 8009e7c:	b507      	push	{r0, r1, r2, lr}
 8009e7e:	4a1a      	ldr	r2, [pc, #104]	; (8009ee8 <sinf+0x6c>)
 8009e80:	0043      	lsls	r3, r0, #1
 8009e82:	085b      	lsrs	r3, r3, #1
 8009e84:	4293      	cmp	r3, r2
 8009e86:	dc04      	bgt.n	8009e92 <sinf+0x16>
 8009e88:	2200      	movs	r2, #0
 8009e8a:	2100      	movs	r1, #0
 8009e8c:	f000 ff90 	bl	800adb0 <__kernel_sinf>
 8009e90:	e006      	b.n	8009ea0 <sinf+0x24>
 8009e92:	22ff      	movs	r2, #255	; 0xff
 8009e94:	05d2      	lsls	r2, r2, #23
 8009e96:	4293      	cmp	r3, r2
 8009e98:	db03      	blt.n	8009ea2 <sinf+0x26>
 8009e9a:	1c01      	adds	r1, r0, #0
 8009e9c:	f7f7 f844 	bl	8000f28 <__aeabi_fsub>
 8009ea0:	bd0e      	pop	{r1, r2, r3, pc}
 8009ea2:	4669      	mov	r1, sp
 8009ea4:	f000 fa98 	bl	800a3d8 <__ieee754_rem_pio2f>
 8009ea8:	2303      	movs	r3, #3
 8009eaa:	4018      	ands	r0, r3
 8009eac:	2801      	cmp	r0, #1
 8009eae:	d007      	beq.n	8009ec0 <sinf+0x44>
 8009eb0:	2802      	cmp	r0, #2
 8009eb2:	d00a      	beq.n	8009eca <sinf+0x4e>
 8009eb4:	2800      	cmp	r0, #0
 8009eb6:	d111      	bne.n	8009edc <sinf+0x60>
 8009eb8:	2201      	movs	r2, #1
 8009eba:	9901      	ldr	r1, [sp, #4]
 8009ebc:	9800      	ldr	r0, [sp, #0]
 8009ebe:	e7e5      	b.n	8009e8c <sinf+0x10>
 8009ec0:	9901      	ldr	r1, [sp, #4]
 8009ec2:	9800      	ldr	r0, [sp, #0]
 8009ec4:	f000 fc3c 	bl	800a740 <__kernel_cosf>
 8009ec8:	e7ea      	b.n	8009ea0 <sinf+0x24>
 8009eca:	2201      	movs	r2, #1
 8009ecc:	9901      	ldr	r1, [sp, #4]
 8009ece:	9800      	ldr	r0, [sp, #0]
 8009ed0:	f000 ff6e 	bl	800adb0 <__kernel_sinf>
 8009ed4:	2380      	movs	r3, #128	; 0x80
 8009ed6:	061b      	lsls	r3, r3, #24
 8009ed8:	18c0      	adds	r0, r0, r3
 8009eda:	e7e1      	b.n	8009ea0 <sinf+0x24>
 8009edc:	9901      	ldr	r1, [sp, #4]
 8009ede:	9800      	ldr	r0, [sp, #0]
 8009ee0:	f000 fc2e 	bl	800a740 <__kernel_cosf>
 8009ee4:	e7f6      	b.n	8009ed4 <sinf+0x58>
 8009ee6:	46c0      	nop			; (mov r8, r8)
 8009ee8:	3f490fd8 	.word	0x3f490fd8

08009eec <sqrt>:
 8009eec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009eee:	0004      	movs	r4, r0
 8009ef0:	000d      	movs	r5, r1
 8009ef2:	f000 f875 	bl	8009fe0 <__ieee754_sqrt>
 8009ef6:	4b13      	ldr	r3, [pc, #76]	; (8009f44 <sqrt+0x58>)
 8009ef8:	0006      	movs	r6, r0
 8009efa:	781b      	ldrb	r3, [r3, #0]
 8009efc:	000f      	movs	r7, r1
 8009efe:	b25b      	sxtb	r3, r3
 8009f00:	3301      	adds	r3, #1
 8009f02:	d01b      	beq.n	8009f3c <sqrt+0x50>
 8009f04:	0022      	movs	r2, r4
 8009f06:	002b      	movs	r3, r5
 8009f08:	0020      	movs	r0, r4
 8009f0a:	0029      	movs	r1, r5
 8009f0c:	f7f8 fffa 	bl	8002f04 <__aeabi_dcmpun>
 8009f10:	2800      	cmp	r0, #0
 8009f12:	d113      	bne.n	8009f3c <sqrt+0x50>
 8009f14:	2200      	movs	r2, #0
 8009f16:	2300      	movs	r3, #0
 8009f18:	0020      	movs	r0, r4
 8009f1a:	0029      	movs	r1, r5
 8009f1c:	f7f6 fa9a 	bl	8000454 <__aeabi_dcmplt>
 8009f20:	2800      	cmp	r0, #0
 8009f22:	d00b      	beq.n	8009f3c <sqrt+0x50>
 8009f24:	f001 f858 	bl	800afd8 <__errno>
 8009f28:	2321      	movs	r3, #33	; 0x21
 8009f2a:	2200      	movs	r2, #0
 8009f2c:	6003      	str	r3, [r0, #0]
 8009f2e:	2300      	movs	r3, #0
 8009f30:	0010      	movs	r0, r2
 8009f32:	0019      	movs	r1, r3
 8009f34:	f7f7 fde2 	bl	8001afc <__aeabi_ddiv>
 8009f38:	0006      	movs	r6, r0
 8009f3a:	000f      	movs	r7, r1
 8009f3c:	0030      	movs	r0, r6
 8009f3e:	0039      	movs	r1, r7
 8009f40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009f42:	46c0      	nop			; (mov r8, r8)
 8009f44:	20000058 	.word	0x20000058

08009f48 <asinf>:
 8009f48:	b570      	push	{r4, r5, r6, lr}
 8009f4a:	1c05      	adds	r5, r0, #0
 8009f4c:	f000 f8fc 	bl	800a148 <__ieee754_asinf>
 8009f50:	4b0f      	ldr	r3, [pc, #60]	; (8009f90 <asinf+0x48>)
 8009f52:	1c04      	adds	r4, r0, #0
 8009f54:	781b      	ldrb	r3, [r3, #0]
 8009f56:	b25b      	sxtb	r3, r3
 8009f58:	3301      	adds	r3, #1
 8009f5a:	d016      	beq.n	8009f8a <asinf+0x42>
 8009f5c:	1c29      	adds	r1, r5, #0
 8009f5e:	1c28      	adds	r0, r5, #0
 8009f60:	f7f7 f9aa 	bl	80012b8 <__aeabi_fcmpun>
 8009f64:	2800      	cmp	r0, #0
 8009f66:	d110      	bne.n	8009f8a <asinf+0x42>
 8009f68:	1c28      	adds	r0, r5, #0
 8009f6a:	f000 ff95 	bl	800ae98 <fabsf>
 8009f6e:	21fe      	movs	r1, #254	; 0xfe
 8009f70:	0589      	lsls	r1, r1, #22
 8009f72:	f7f6 fabd 	bl	80004f0 <__aeabi_fcmpgt>
 8009f76:	2800      	cmp	r0, #0
 8009f78:	d007      	beq.n	8009f8a <asinf+0x42>
 8009f7a:	f001 f82d 	bl	800afd8 <__errno>
 8009f7e:	2321      	movs	r3, #33	; 0x21
 8009f80:	6003      	str	r3, [r0, #0]
 8009f82:	4804      	ldr	r0, [pc, #16]	; (8009f94 <asinf+0x4c>)
 8009f84:	f000 ffca 	bl	800af1c <nanf>
 8009f88:	1c04      	adds	r4, r0, #0
 8009f8a:	1c20      	adds	r0, r4, #0
 8009f8c:	bd70      	pop	{r4, r5, r6, pc}
 8009f8e:	46c0      	nop			; (mov r8, r8)
 8009f90:	20000058 	.word	0x20000058
 8009f94:	08010458 	.word	0x08010458

08009f98 <sqrtf>:
 8009f98:	b570      	push	{r4, r5, r6, lr}
 8009f9a:	1c05      	adds	r5, r0, #0
 8009f9c:	f000 fb78 	bl	800a690 <__ieee754_sqrtf>
 8009fa0:	4b0e      	ldr	r3, [pc, #56]	; (8009fdc <sqrtf+0x44>)
 8009fa2:	1c04      	adds	r4, r0, #0
 8009fa4:	781b      	ldrb	r3, [r3, #0]
 8009fa6:	b25b      	sxtb	r3, r3
 8009fa8:	3301      	adds	r3, #1
 8009faa:	d014      	beq.n	8009fd6 <sqrtf+0x3e>
 8009fac:	1c29      	adds	r1, r5, #0
 8009fae:	1c28      	adds	r0, r5, #0
 8009fb0:	f7f7 f982 	bl	80012b8 <__aeabi_fcmpun>
 8009fb4:	2800      	cmp	r0, #0
 8009fb6:	d10e      	bne.n	8009fd6 <sqrtf+0x3e>
 8009fb8:	2100      	movs	r1, #0
 8009fba:	1c28      	adds	r0, r5, #0
 8009fbc:	f7f6 fa84 	bl	80004c8 <__aeabi_fcmplt>
 8009fc0:	2800      	cmp	r0, #0
 8009fc2:	d008      	beq.n	8009fd6 <sqrtf+0x3e>
 8009fc4:	f001 f808 	bl	800afd8 <__errno>
 8009fc8:	2321      	movs	r3, #33	; 0x21
 8009fca:	2100      	movs	r1, #0
 8009fcc:	6003      	str	r3, [r0, #0]
 8009fce:	1c08      	adds	r0, r1, #0
 8009fd0:	f7f6 fcc6 	bl	8000960 <__aeabi_fdiv>
 8009fd4:	1c04      	adds	r4, r0, #0
 8009fd6:	1c20      	adds	r0, r4, #0
 8009fd8:	bd70      	pop	{r4, r5, r6, pc}
 8009fda:	46c0      	nop			; (mov r8, r8)
 8009fdc:	20000058 	.word	0x20000058

08009fe0 <__ieee754_sqrt>:
 8009fe0:	4b56      	ldr	r3, [pc, #344]	; (800a13c <__ieee754_sqrt+0x15c>)
 8009fe2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009fe4:	0002      	movs	r2, r0
 8009fe6:	0005      	movs	r5, r0
 8009fe8:	0018      	movs	r0, r3
 8009fea:	000c      	movs	r4, r1
 8009fec:	b085      	sub	sp, #20
 8009fee:	4008      	ands	r0, r1
 8009ff0:	4298      	cmp	r0, r3
 8009ff2:	d10f      	bne.n	800a014 <__ieee754_sqrt+0x34>
 8009ff4:	000b      	movs	r3, r1
 8009ff6:	0028      	movs	r0, r5
 8009ff8:	f7f8 f986 	bl	8002308 <__aeabi_dmul>
 8009ffc:	0002      	movs	r2, r0
 8009ffe:	000b      	movs	r3, r1
 800a000:	0028      	movs	r0, r5
 800a002:	0021      	movs	r1, r4
 800a004:	f7f7 fa10 	bl	8001428 <__aeabi_dadd>
 800a008:	0005      	movs	r5, r0
 800a00a:	000c      	movs	r4, r1
 800a00c:	0028      	movs	r0, r5
 800a00e:	0021      	movs	r1, r4
 800a010:	b005      	add	sp, #20
 800a012:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a014:	2900      	cmp	r1, #0
 800a016:	dc10      	bgt.n	800a03a <__ieee754_sqrt+0x5a>
 800a018:	004b      	lsls	r3, r1, #1
 800a01a:	085b      	lsrs	r3, r3, #1
 800a01c:	432b      	orrs	r3, r5
 800a01e:	d0f5      	beq.n	800a00c <__ieee754_sqrt+0x2c>
 800a020:	2000      	movs	r0, #0
 800a022:	4281      	cmp	r1, r0
 800a024:	d100      	bne.n	800a028 <__ieee754_sqrt+0x48>
 800a026:	e080      	b.n	800a12a <__ieee754_sqrt+0x14a>
 800a028:	000b      	movs	r3, r1
 800a02a:	0028      	movs	r0, r5
 800a02c:	f7f8 fbd8 	bl	80027e0 <__aeabi_dsub>
 800a030:	0002      	movs	r2, r0
 800a032:	000b      	movs	r3, r1
 800a034:	f7f7 fd62 	bl	8001afc <__aeabi_ddiv>
 800a038:	e7e6      	b.n	800a008 <__ieee754_sqrt+0x28>
 800a03a:	1508      	asrs	r0, r1, #20
 800a03c:	d075      	beq.n	800a12a <__ieee754_sqrt+0x14a>
 800a03e:	4b40      	ldr	r3, [pc, #256]	; (800a140 <__ieee754_sqrt+0x160>)
 800a040:	0309      	lsls	r1, r1, #12
 800a042:	18c4      	adds	r4, r0, r3
 800a044:	2380      	movs	r3, #128	; 0x80
 800a046:	0b09      	lsrs	r1, r1, #12
 800a048:	035b      	lsls	r3, r3, #13
 800a04a:	4319      	orrs	r1, r3
 800a04c:	07c3      	lsls	r3, r0, #31
 800a04e:	d403      	bmi.n	800a058 <__ieee754_sqrt+0x78>
 800a050:	0fd3      	lsrs	r3, r2, #31
 800a052:	0049      	lsls	r1, r1, #1
 800a054:	18c9      	adds	r1, r1, r3
 800a056:	0052      	lsls	r2, r2, #1
 800a058:	1063      	asrs	r3, r4, #1
 800a05a:	2400      	movs	r4, #0
 800a05c:	0049      	lsls	r1, r1, #1
 800a05e:	9303      	str	r3, [sp, #12]
 800a060:	0fd3      	lsrs	r3, r2, #31
 800a062:	18cb      	adds	r3, r1, r3
 800a064:	2180      	movs	r1, #128	; 0x80
 800a066:	2516      	movs	r5, #22
 800a068:	0020      	movs	r0, r4
 800a06a:	0052      	lsls	r2, r2, #1
 800a06c:	0389      	lsls	r1, r1, #14
 800a06e:	1846      	adds	r6, r0, r1
 800a070:	429e      	cmp	r6, r3
 800a072:	dc02      	bgt.n	800a07a <__ieee754_sqrt+0x9a>
 800a074:	1870      	adds	r0, r6, r1
 800a076:	1b9b      	subs	r3, r3, r6
 800a078:	1864      	adds	r4, r4, r1
 800a07a:	0fd6      	lsrs	r6, r2, #31
 800a07c:	005b      	lsls	r3, r3, #1
 800a07e:	3d01      	subs	r5, #1
 800a080:	18f3      	adds	r3, r6, r3
 800a082:	0052      	lsls	r2, r2, #1
 800a084:	0849      	lsrs	r1, r1, #1
 800a086:	2d00      	cmp	r5, #0
 800a088:	d1f1      	bne.n	800a06e <__ieee754_sqrt+0x8e>
 800a08a:	2620      	movs	r6, #32
 800a08c:	2780      	movs	r7, #128	; 0x80
 800a08e:	0029      	movs	r1, r5
 800a090:	9601      	str	r6, [sp, #4]
 800a092:	063f      	lsls	r7, r7, #24
 800a094:	197e      	adds	r6, r7, r5
 800a096:	46b4      	mov	ip, r6
 800a098:	4283      	cmp	r3, r0
 800a09a:	dc02      	bgt.n	800a0a2 <__ieee754_sqrt+0xc2>
 800a09c:	d114      	bne.n	800a0c8 <__ieee754_sqrt+0xe8>
 800a09e:	4296      	cmp	r6, r2
 800a0a0:	d812      	bhi.n	800a0c8 <__ieee754_sqrt+0xe8>
 800a0a2:	4665      	mov	r5, ip
 800a0a4:	4666      	mov	r6, ip
 800a0a6:	19ed      	adds	r5, r5, r7
 800a0a8:	9002      	str	r0, [sp, #8]
 800a0aa:	2e00      	cmp	r6, #0
 800a0ac:	da03      	bge.n	800a0b6 <__ieee754_sqrt+0xd6>
 800a0ae:	43ee      	mvns	r6, r5
 800a0b0:	0ff6      	lsrs	r6, r6, #31
 800a0b2:	1986      	adds	r6, r0, r6
 800a0b4:	9602      	str	r6, [sp, #8]
 800a0b6:	1a1b      	subs	r3, r3, r0
 800a0b8:	4562      	cmp	r2, ip
 800a0ba:	4180      	sbcs	r0, r0
 800a0bc:	4240      	negs	r0, r0
 800a0be:	1a1b      	subs	r3, r3, r0
 800a0c0:	4660      	mov	r0, ip
 800a0c2:	1a12      	subs	r2, r2, r0
 800a0c4:	9802      	ldr	r0, [sp, #8]
 800a0c6:	19c9      	adds	r1, r1, r7
 800a0c8:	0fd6      	lsrs	r6, r2, #31
 800a0ca:	005b      	lsls	r3, r3, #1
 800a0cc:	18f3      	adds	r3, r6, r3
 800a0ce:	9e01      	ldr	r6, [sp, #4]
 800a0d0:	0052      	lsls	r2, r2, #1
 800a0d2:	3e01      	subs	r6, #1
 800a0d4:	087f      	lsrs	r7, r7, #1
 800a0d6:	9601      	str	r6, [sp, #4]
 800a0d8:	2e00      	cmp	r6, #0
 800a0da:	d1db      	bne.n	800a094 <__ieee754_sqrt+0xb4>
 800a0dc:	4313      	orrs	r3, r2
 800a0de:	d003      	beq.n	800a0e8 <__ieee754_sqrt+0x108>
 800a0e0:	1c4b      	adds	r3, r1, #1
 800a0e2:	d127      	bne.n	800a134 <__ieee754_sqrt+0x154>
 800a0e4:	0031      	movs	r1, r6
 800a0e6:	3401      	adds	r4, #1
 800a0e8:	4b16      	ldr	r3, [pc, #88]	; (800a144 <__ieee754_sqrt+0x164>)
 800a0ea:	1060      	asrs	r0, r4, #1
 800a0ec:	18c0      	adds	r0, r0, r3
 800a0ee:	0849      	lsrs	r1, r1, #1
 800a0f0:	07e3      	lsls	r3, r4, #31
 800a0f2:	d502      	bpl.n	800a0fa <__ieee754_sqrt+0x11a>
 800a0f4:	2380      	movs	r3, #128	; 0x80
 800a0f6:	061b      	lsls	r3, r3, #24
 800a0f8:	4319      	orrs	r1, r3
 800a0fa:	9b03      	ldr	r3, [sp, #12]
 800a0fc:	000d      	movs	r5, r1
 800a0fe:	051c      	lsls	r4, r3, #20
 800a100:	1823      	adds	r3, r4, r0
 800a102:	001c      	movs	r4, r3
 800a104:	e782      	b.n	800a00c <__ieee754_sqrt+0x2c>
 800a106:	0ad1      	lsrs	r1, r2, #11
 800a108:	3b15      	subs	r3, #21
 800a10a:	0552      	lsls	r2, r2, #21
 800a10c:	2900      	cmp	r1, #0
 800a10e:	d0fa      	beq.n	800a106 <__ieee754_sqrt+0x126>
 800a110:	2480      	movs	r4, #128	; 0x80
 800a112:	0364      	lsls	r4, r4, #13
 800a114:	4221      	tst	r1, r4
 800a116:	d00a      	beq.n	800a12e <__ieee754_sqrt+0x14e>
 800a118:	2420      	movs	r4, #32
 800a11a:	0016      	movs	r6, r2
 800a11c:	1a24      	subs	r4, r4, r0
 800a11e:	40e6      	lsrs	r6, r4
 800a120:	1e45      	subs	r5, r0, #1
 800a122:	4082      	lsls	r2, r0
 800a124:	4331      	orrs	r1, r6
 800a126:	1b58      	subs	r0, r3, r5
 800a128:	e789      	b.n	800a03e <__ieee754_sqrt+0x5e>
 800a12a:	2300      	movs	r3, #0
 800a12c:	e7ee      	b.n	800a10c <__ieee754_sqrt+0x12c>
 800a12e:	0049      	lsls	r1, r1, #1
 800a130:	3001      	adds	r0, #1
 800a132:	e7ef      	b.n	800a114 <__ieee754_sqrt+0x134>
 800a134:	2301      	movs	r3, #1
 800a136:	3101      	adds	r1, #1
 800a138:	4399      	bics	r1, r3
 800a13a:	e7d5      	b.n	800a0e8 <__ieee754_sqrt+0x108>
 800a13c:	7ff00000 	.word	0x7ff00000
 800a140:	fffffc01 	.word	0xfffffc01
 800a144:	3fe00000 	.word	0x3fe00000

0800a148 <__ieee754_asinf>:
 800a148:	23fe      	movs	r3, #254	; 0xfe
 800a14a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a14c:	0046      	lsls	r6, r0, #1
 800a14e:	b085      	sub	sp, #20
 800a150:	1c04      	adds	r4, r0, #0
 800a152:	9002      	str	r0, [sp, #8]
 800a154:	0876      	lsrs	r6, r6, #1
 800a156:	059b      	lsls	r3, r3, #22
 800a158:	429e      	cmp	r6, r3
 800a15a:	d10c      	bne.n	800a176 <__ieee754_asinf+0x2e>
 800a15c:	498e      	ldr	r1, [pc, #568]	; (800a398 <__ieee754_asinf+0x250>)
 800a15e:	f7f6 fdc9 	bl	8000cf4 <__aeabi_fmul>
 800a162:	498e      	ldr	r1, [pc, #568]	; (800a39c <__ieee754_asinf+0x254>)
 800a164:	1c05      	adds	r5, r0, #0
 800a166:	1c20      	adds	r0, r4, #0
 800a168:	f7f6 fdc4 	bl	8000cf4 <__aeabi_fmul>
 800a16c:	1c01      	adds	r1, r0, #0
 800a16e:	1c28      	adds	r0, r5, #0
 800a170:	f7f6 fa5a 	bl	8000628 <__aeabi_fadd>
 800a174:	e007      	b.n	800a186 <__ieee754_asinf+0x3e>
 800a176:	429e      	cmp	r6, r3
 800a178:	dd09      	ble.n	800a18e <__ieee754_asinf+0x46>
 800a17a:	1c01      	adds	r1, r0, #0
 800a17c:	f7f6 fed4 	bl	8000f28 <__aeabi_fsub>
 800a180:	1c01      	adds	r1, r0, #0
 800a182:	f7f6 fbed 	bl	8000960 <__aeabi_fdiv>
 800a186:	1c04      	adds	r4, r0, #0
 800a188:	1c20      	adds	r0, r4, #0
 800a18a:	b005      	add	sp, #20
 800a18c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a18e:	23fc      	movs	r3, #252	; 0xfc
 800a190:	059b      	lsls	r3, r3, #22
 800a192:	429e      	cmp	r6, r3
 800a194:	da0c      	bge.n	800a1b0 <__ieee754_asinf+0x68>
 800a196:	23c8      	movs	r3, #200	; 0xc8
 800a198:	059b      	lsls	r3, r3, #22
 800a19a:	429e      	cmp	r6, r3
 800a19c:	da76      	bge.n	800a28c <__ieee754_asinf+0x144>
 800a19e:	4980      	ldr	r1, [pc, #512]	; (800a3a0 <__ieee754_asinf+0x258>)
 800a1a0:	f7f6 fa42 	bl	8000628 <__aeabi_fadd>
 800a1a4:	21fe      	movs	r1, #254	; 0xfe
 800a1a6:	0589      	lsls	r1, r1, #22
 800a1a8:	f7f6 f9a2 	bl	80004f0 <__aeabi_fcmpgt>
 800a1ac:	2800      	cmp	r0, #0
 800a1ae:	d1eb      	bne.n	800a188 <__ieee754_asinf+0x40>
 800a1b0:	1c20      	adds	r0, r4, #0
 800a1b2:	f000 fe71 	bl	800ae98 <fabsf>
 800a1b6:	1c01      	adds	r1, r0, #0
 800a1b8:	20fe      	movs	r0, #254	; 0xfe
 800a1ba:	0580      	lsls	r0, r0, #22
 800a1bc:	f7f6 feb4 	bl	8000f28 <__aeabi_fsub>
 800a1c0:	21fc      	movs	r1, #252	; 0xfc
 800a1c2:	0589      	lsls	r1, r1, #22
 800a1c4:	f7f6 fd96 	bl	8000cf4 <__aeabi_fmul>
 800a1c8:	4976      	ldr	r1, [pc, #472]	; (800a3a4 <__ieee754_asinf+0x25c>)
 800a1ca:	1c04      	adds	r4, r0, #0
 800a1cc:	f7f6 fd92 	bl	8000cf4 <__aeabi_fmul>
 800a1d0:	4975      	ldr	r1, [pc, #468]	; (800a3a8 <__ieee754_asinf+0x260>)
 800a1d2:	f7f6 fa29 	bl	8000628 <__aeabi_fadd>
 800a1d6:	1c21      	adds	r1, r4, #0
 800a1d8:	f7f6 fd8c 	bl	8000cf4 <__aeabi_fmul>
 800a1dc:	4973      	ldr	r1, [pc, #460]	; (800a3ac <__ieee754_asinf+0x264>)
 800a1de:	f7f6 fea3 	bl	8000f28 <__aeabi_fsub>
 800a1e2:	1c21      	adds	r1, r4, #0
 800a1e4:	f7f6 fd86 	bl	8000cf4 <__aeabi_fmul>
 800a1e8:	4971      	ldr	r1, [pc, #452]	; (800a3b0 <__ieee754_asinf+0x268>)
 800a1ea:	f7f6 fa1d 	bl	8000628 <__aeabi_fadd>
 800a1ee:	1c21      	adds	r1, r4, #0
 800a1f0:	f7f6 fd80 	bl	8000cf4 <__aeabi_fmul>
 800a1f4:	496f      	ldr	r1, [pc, #444]	; (800a3b4 <__ieee754_asinf+0x26c>)
 800a1f6:	f7f6 fe97 	bl	8000f28 <__aeabi_fsub>
 800a1fa:	1c21      	adds	r1, r4, #0
 800a1fc:	f7f6 fd7a 	bl	8000cf4 <__aeabi_fmul>
 800a200:	496d      	ldr	r1, [pc, #436]	; (800a3b8 <__ieee754_asinf+0x270>)
 800a202:	f7f6 fa11 	bl	8000628 <__aeabi_fadd>
 800a206:	1c21      	adds	r1, r4, #0
 800a208:	f7f6 fd74 	bl	8000cf4 <__aeabi_fmul>
 800a20c:	496b      	ldr	r1, [pc, #428]	; (800a3bc <__ieee754_asinf+0x274>)
 800a20e:	9001      	str	r0, [sp, #4]
 800a210:	1c20      	adds	r0, r4, #0
 800a212:	f7f6 fd6f 	bl	8000cf4 <__aeabi_fmul>
 800a216:	496a      	ldr	r1, [pc, #424]	; (800a3c0 <__ieee754_asinf+0x278>)
 800a218:	f7f6 fe86 	bl	8000f28 <__aeabi_fsub>
 800a21c:	1c21      	adds	r1, r4, #0
 800a21e:	f7f6 fd69 	bl	8000cf4 <__aeabi_fmul>
 800a222:	4968      	ldr	r1, [pc, #416]	; (800a3c4 <__ieee754_asinf+0x27c>)
 800a224:	f7f6 fa00 	bl	8000628 <__aeabi_fadd>
 800a228:	1c21      	adds	r1, r4, #0
 800a22a:	f7f6 fd63 	bl	8000cf4 <__aeabi_fmul>
 800a22e:	4966      	ldr	r1, [pc, #408]	; (800a3c8 <__ieee754_asinf+0x280>)
 800a230:	f7f6 fe7a 	bl	8000f28 <__aeabi_fsub>
 800a234:	1c21      	adds	r1, r4, #0
 800a236:	f7f6 fd5d 	bl	8000cf4 <__aeabi_fmul>
 800a23a:	21fe      	movs	r1, #254	; 0xfe
 800a23c:	0589      	lsls	r1, r1, #22
 800a23e:	f7f6 f9f3 	bl	8000628 <__aeabi_fadd>
 800a242:	1c07      	adds	r7, r0, #0
 800a244:	1c20      	adds	r0, r4, #0
 800a246:	f000 fa23 	bl	800a690 <__ieee754_sqrtf>
 800a24a:	4b60      	ldr	r3, [pc, #384]	; (800a3cc <__ieee754_asinf+0x284>)
 800a24c:	1c05      	adds	r5, r0, #0
 800a24e:	429e      	cmp	r6, r3
 800a250:	dd66      	ble.n	800a320 <__ieee754_asinf+0x1d8>
 800a252:	1c39      	adds	r1, r7, #0
 800a254:	9801      	ldr	r0, [sp, #4]
 800a256:	f7f6 fb83 	bl	8000960 <__aeabi_fdiv>
 800a25a:	1c29      	adds	r1, r5, #0
 800a25c:	f7f6 fd4a 	bl	8000cf4 <__aeabi_fmul>
 800a260:	1c29      	adds	r1, r5, #0
 800a262:	f7f6 f9e1 	bl	8000628 <__aeabi_fadd>
 800a266:	1c01      	adds	r1, r0, #0
 800a268:	f7f6 f9de 	bl	8000628 <__aeabi_fadd>
 800a26c:	4958      	ldr	r1, [pc, #352]	; (800a3d0 <__ieee754_asinf+0x288>)
 800a26e:	f7f6 f9db 	bl	8000628 <__aeabi_fadd>
 800a272:	1c01      	adds	r1, r0, #0
 800a274:	4848      	ldr	r0, [pc, #288]	; (800a398 <__ieee754_asinf+0x250>)
 800a276:	f7f6 fe57 	bl	8000f28 <__aeabi_fsub>
 800a27a:	9b02      	ldr	r3, [sp, #8]
 800a27c:	1c04      	adds	r4, r0, #0
 800a27e:	2b00      	cmp	r3, #0
 800a280:	dd00      	ble.n	800a284 <__ieee754_asinf+0x13c>
 800a282:	e781      	b.n	800a188 <__ieee754_asinf+0x40>
 800a284:	2380      	movs	r3, #128	; 0x80
 800a286:	061b      	lsls	r3, r3, #24
 800a288:	18c4      	adds	r4, r0, r3
 800a28a:	e77d      	b.n	800a188 <__ieee754_asinf+0x40>
 800a28c:	1c01      	adds	r1, r0, #0
 800a28e:	f7f6 fd31 	bl	8000cf4 <__aeabi_fmul>
 800a292:	4944      	ldr	r1, [pc, #272]	; (800a3a4 <__ieee754_asinf+0x25c>)
 800a294:	1c05      	adds	r5, r0, #0
 800a296:	f7f6 fd2d 	bl	8000cf4 <__aeabi_fmul>
 800a29a:	4943      	ldr	r1, [pc, #268]	; (800a3a8 <__ieee754_asinf+0x260>)
 800a29c:	f7f6 f9c4 	bl	8000628 <__aeabi_fadd>
 800a2a0:	1c29      	adds	r1, r5, #0
 800a2a2:	f7f6 fd27 	bl	8000cf4 <__aeabi_fmul>
 800a2a6:	4941      	ldr	r1, [pc, #260]	; (800a3ac <__ieee754_asinf+0x264>)
 800a2a8:	f7f6 fe3e 	bl	8000f28 <__aeabi_fsub>
 800a2ac:	1c29      	adds	r1, r5, #0
 800a2ae:	f7f6 fd21 	bl	8000cf4 <__aeabi_fmul>
 800a2b2:	493f      	ldr	r1, [pc, #252]	; (800a3b0 <__ieee754_asinf+0x268>)
 800a2b4:	f7f6 f9b8 	bl	8000628 <__aeabi_fadd>
 800a2b8:	1c29      	adds	r1, r5, #0
 800a2ba:	f7f6 fd1b 	bl	8000cf4 <__aeabi_fmul>
 800a2be:	493d      	ldr	r1, [pc, #244]	; (800a3b4 <__ieee754_asinf+0x26c>)
 800a2c0:	f7f6 fe32 	bl	8000f28 <__aeabi_fsub>
 800a2c4:	1c29      	adds	r1, r5, #0
 800a2c6:	f7f6 fd15 	bl	8000cf4 <__aeabi_fmul>
 800a2ca:	493b      	ldr	r1, [pc, #236]	; (800a3b8 <__ieee754_asinf+0x270>)
 800a2cc:	f7f6 f9ac 	bl	8000628 <__aeabi_fadd>
 800a2d0:	1c29      	adds	r1, r5, #0
 800a2d2:	f7f6 fd0f 	bl	8000cf4 <__aeabi_fmul>
 800a2d6:	4939      	ldr	r1, [pc, #228]	; (800a3bc <__ieee754_asinf+0x274>)
 800a2d8:	1c06      	adds	r6, r0, #0
 800a2da:	1c28      	adds	r0, r5, #0
 800a2dc:	f7f6 fd0a 	bl	8000cf4 <__aeabi_fmul>
 800a2e0:	4937      	ldr	r1, [pc, #220]	; (800a3c0 <__ieee754_asinf+0x278>)
 800a2e2:	f7f6 fe21 	bl	8000f28 <__aeabi_fsub>
 800a2e6:	1c29      	adds	r1, r5, #0
 800a2e8:	f7f6 fd04 	bl	8000cf4 <__aeabi_fmul>
 800a2ec:	4935      	ldr	r1, [pc, #212]	; (800a3c4 <__ieee754_asinf+0x27c>)
 800a2ee:	f7f6 f99b 	bl	8000628 <__aeabi_fadd>
 800a2f2:	1c29      	adds	r1, r5, #0
 800a2f4:	f7f6 fcfe 	bl	8000cf4 <__aeabi_fmul>
 800a2f8:	4933      	ldr	r1, [pc, #204]	; (800a3c8 <__ieee754_asinf+0x280>)
 800a2fa:	f7f6 fe15 	bl	8000f28 <__aeabi_fsub>
 800a2fe:	1c29      	adds	r1, r5, #0
 800a300:	f7f6 fcf8 	bl	8000cf4 <__aeabi_fmul>
 800a304:	21fe      	movs	r1, #254	; 0xfe
 800a306:	0589      	lsls	r1, r1, #22
 800a308:	f7f6 f98e 	bl	8000628 <__aeabi_fadd>
 800a30c:	1c01      	adds	r1, r0, #0
 800a30e:	1c30      	adds	r0, r6, #0
 800a310:	f7f6 fb26 	bl	8000960 <__aeabi_fdiv>
 800a314:	1c21      	adds	r1, r4, #0
 800a316:	f7f6 fced 	bl	8000cf4 <__aeabi_fmul>
 800a31a:	1c01      	adds	r1, r0, #0
 800a31c:	1c20      	adds	r0, r4, #0
 800a31e:	e727      	b.n	800a170 <__ieee754_asinf+0x28>
 800a320:	1c01      	adds	r1, r0, #0
 800a322:	0b06      	lsrs	r6, r0, #12
 800a324:	f7f6 f980 	bl	8000628 <__aeabi_fadd>
 800a328:	1c39      	adds	r1, r7, #0
 800a32a:	9003      	str	r0, [sp, #12]
 800a32c:	9801      	ldr	r0, [sp, #4]
 800a32e:	f7f6 fb17 	bl	8000960 <__aeabi_fdiv>
 800a332:	1c01      	adds	r1, r0, #0
 800a334:	9803      	ldr	r0, [sp, #12]
 800a336:	f7f6 fcdd 	bl	8000cf4 <__aeabi_fmul>
 800a33a:	0336      	lsls	r6, r6, #12
 800a33c:	1c07      	adds	r7, r0, #0
 800a33e:	1c31      	adds	r1, r6, #0
 800a340:	1c30      	adds	r0, r6, #0
 800a342:	f7f6 fcd7 	bl	8000cf4 <__aeabi_fmul>
 800a346:	1c01      	adds	r1, r0, #0
 800a348:	1c20      	adds	r0, r4, #0
 800a34a:	f7f6 fded 	bl	8000f28 <__aeabi_fsub>
 800a34e:	1c31      	adds	r1, r6, #0
 800a350:	1c04      	adds	r4, r0, #0
 800a352:	1c28      	adds	r0, r5, #0
 800a354:	f7f6 f968 	bl	8000628 <__aeabi_fadd>
 800a358:	1c01      	adds	r1, r0, #0
 800a35a:	1c20      	adds	r0, r4, #0
 800a35c:	f7f6 fb00 	bl	8000960 <__aeabi_fdiv>
 800a360:	1c01      	adds	r1, r0, #0
 800a362:	f7f6 f961 	bl	8000628 <__aeabi_fadd>
 800a366:	1c01      	adds	r1, r0, #0
 800a368:	480c      	ldr	r0, [pc, #48]	; (800a39c <__ieee754_asinf+0x254>)
 800a36a:	f7f6 fddd 	bl	8000f28 <__aeabi_fsub>
 800a36e:	1c01      	adds	r1, r0, #0
 800a370:	1c38      	adds	r0, r7, #0
 800a372:	f7f6 fdd9 	bl	8000f28 <__aeabi_fsub>
 800a376:	1c31      	adds	r1, r6, #0
 800a378:	1c04      	adds	r4, r0, #0
 800a37a:	1c30      	adds	r0, r6, #0
 800a37c:	f7f6 f954 	bl	8000628 <__aeabi_fadd>
 800a380:	1c01      	adds	r1, r0, #0
 800a382:	4814      	ldr	r0, [pc, #80]	; (800a3d4 <__ieee754_asinf+0x28c>)
 800a384:	f7f6 fdd0 	bl	8000f28 <__aeabi_fsub>
 800a388:	1c01      	adds	r1, r0, #0
 800a38a:	1c20      	adds	r0, r4, #0
 800a38c:	f7f6 fdcc 	bl	8000f28 <__aeabi_fsub>
 800a390:	1c01      	adds	r1, r0, #0
 800a392:	4810      	ldr	r0, [pc, #64]	; (800a3d4 <__ieee754_asinf+0x28c>)
 800a394:	e76f      	b.n	800a276 <__ieee754_asinf+0x12e>
 800a396:	46c0      	nop			; (mov r8, r8)
 800a398:	3fc90fdb 	.word	0x3fc90fdb
 800a39c:	b33bbd2e 	.word	0xb33bbd2e
 800a3a0:	7149f2ca 	.word	0x7149f2ca
 800a3a4:	3811ef08 	.word	0x3811ef08
 800a3a8:	3a4f7f04 	.word	0x3a4f7f04
 800a3ac:	3d241146 	.word	0x3d241146
 800a3b0:	3e4e0aa8 	.word	0x3e4e0aa8
 800a3b4:	3ea6b090 	.word	0x3ea6b090
 800a3b8:	3e2aaaab 	.word	0x3e2aaaab
 800a3bc:	3d9dc62e 	.word	0x3d9dc62e
 800a3c0:	3f303361 	.word	0x3f303361
 800a3c4:	4001572d 	.word	0x4001572d
 800a3c8:	4019d139 	.word	0x4019d139
 800a3cc:	3f799999 	.word	0x3f799999
 800a3d0:	333bbd2e 	.word	0x333bbd2e
 800a3d4:	3f490fdb 	.word	0x3f490fdb

0800a3d8 <__ieee754_rem_pio2f>:
 800a3d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a3da:	4ba0      	ldr	r3, [pc, #640]	; (800a65c <__ieee754_rem_pio2f+0x284>)
 800a3dc:	b08b      	sub	sp, #44	; 0x2c
 800a3de:	0045      	lsls	r5, r0, #1
 800a3e0:	000c      	movs	r4, r1
 800a3e2:	9005      	str	r0, [sp, #20]
 800a3e4:	086d      	lsrs	r5, r5, #1
 800a3e6:	429d      	cmp	r5, r3
 800a3e8:	dc04      	bgt.n	800a3f4 <__ieee754_rem_pio2f+0x1c>
 800a3ea:	2300      	movs	r3, #0
 800a3ec:	6008      	str	r0, [r1, #0]
 800a3ee:	604b      	str	r3, [r1, #4]
 800a3f0:	2700      	movs	r7, #0
 800a3f2:	e01a      	b.n	800a42a <__ieee754_rem_pio2f+0x52>
 800a3f4:	4b9a      	ldr	r3, [pc, #616]	; (800a660 <__ieee754_rem_pio2f+0x288>)
 800a3f6:	429d      	cmp	r5, r3
 800a3f8:	dc4a      	bgt.n	800a490 <__ieee754_rem_pio2f+0xb8>
 800a3fa:	230f      	movs	r3, #15
 800a3fc:	4e99      	ldr	r6, [pc, #612]	; (800a664 <__ieee754_rem_pio2f+0x28c>)
 800a3fe:	499a      	ldr	r1, [pc, #616]	; (800a668 <__ieee754_rem_pio2f+0x290>)
 800a400:	439d      	bics	r5, r3
 800a402:	2800      	cmp	r0, #0
 800a404:	dd22      	ble.n	800a44c <__ieee754_rem_pio2f+0x74>
 800a406:	f7f6 fd8f 	bl	8000f28 <__aeabi_fsub>
 800a40a:	1c07      	adds	r7, r0, #0
 800a40c:	42b5      	cmp	r5, r6
 800a40e:	d00f      	beq.n	800a430 <__ieee754_rem_pio2f+0x58>
 800a410:	4996      	ldr	r1, [pc, #600]	; (800a66c <__ieee754_rem_pio2f+0x294>)
 800a412:	f7f6 fd89 	bl	8000f28 <__aeabi_fsub>
 800a416:	1c01      	adds	r1, r0, #0
 800a418:	6020      	str	r0, [r4, #0]
 800a41a:	1c38      	adds	r0, r7, #0
 800a41c:	f7f6 fd84 	bl	8000f28 <__aeabi_fsub>
 800a420:	4992      	ldr	r1, [pc, #584]	; (800a66c <__ieee754_rem_pio2f+0x294>)
 800a422:	f7f6 fd81 	bl	8000f28 <__aeabi_fsub>
 800a426:	2701      	movs	r7, #1
 800a428:	6060      	str	r0, [r4, #4]
 800a42a:	0038      	movs	r0, r7
 800a42c:	b00b      	add	sp, #44	; 0x2c
 800a42e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a430:	498f      	ldr	r1, [pc, #572]	; (800a670 <__ieee754_rem_pio2f+0x298>)
 800a432:	f7f6 fd79 	bl	8000f28 <__aeabi_fsub>
 800a436:	498f      	ldr	r1, [pc, #572]	; (800a674 <__ieee754_rem_pio2f+0x29c>)
 800a438:	1c05      	adds	r5, r0, #0
 800a43a:	f7f6 fd75 	bl	8000f28 <__aeabi_fsub>
 800a43e:	1c01      	adds	r1, r0, #0
 800a440:	6020      	str	r0, [r4, #0]
 800a442:	1c28      	adds	r0, r5, #0
 800a444:	f7f6 fd70 	bl	8000f28 <__aeabi_fsub>
 800a448:	498a      	ldr	r1, [pc, #552]	; (800a674 <__ieee754_rem_pio2f+0x29c>)
 800a44a:	e7ea      	b.n	800a422 <__ieee754_rem_pio2f+0x4a>
 800a44c:	f7f6 f8ec 	bl	8000628 <__aeabi_fadd>
 800a450:	1c07      	adds	r7, r0, #0
 800a452:	42b5      	cmp	r5, r6
 800a454:	d00e      	beq.n	800a474 <__ieee754_rem_pio2f+0x9c>
 800a456:	4985      	ldr	r1, [pc, #532]	; (800a66c <__ieee754_rem_pio2f+0x294>)
 800a458:	f7f6 f8e6 	bl	8000628 <__aeabi_fadd>
 800a45c:	1c01      	adds	r1, r0, #0
 800a45e:	6020      	str	r0, [r4, #0]
 800a460:	1c38      	adds	r0, r7, #0
 800a462:	f7f6 fd61 	bl	8000f28 <__aeabi_fsub>
 800a466:	4981      	ldr	r1, [pc, #516]	; (800a66c <__ieee754_rem_pio2f+0x294>)
 800a468:	f7f6 f8de 	bl	8000628 <__aeabi_fadd>
 800a46c:	2701      	movs	r7, #1
 800a46e:	6060      	str	r0, [r4, #4]
 800a470:	427f      	negs	r7, r7
 800a472:	e7da      	b.n	800a42a <__ieee754_rem_pio2f+0x52>
 800a474:	497e      	ldr	r1, [pc, #504]	; (800a670 <__ieee754_rem_pio2f+0x298>)
 800a476:	f7f6 f8d7 	bl	8000628 <__aeabi_fadd>
 800a47a:	497e      	ldr	r1, [pc, #504]	; (800a674 <__ieee754_rem_pio2f+0x29c>)
 800a47c:	1c05      	adds	r5, r0, #0
 800a47e:	f7f6 f8d3 	bl	8000628 <__aeabi_fadd>
 800a482:	1c01      	adds	r1, r0, #0
 800a484:	6020      	str	r0, [r4, #0]
 800a486:	1c28      	adds	r0, r5, #0
 800a488:	f7f6 fd4e 	bl	8000f28 <__aeabi_fsub>
 800a48c:	4979      	ldr	r1, [pc, #484]	; (800a674 <__ieee754_rem_pio2f+0x29c>)
 800a48e:	e7eb      	b.n	800a468 <__ieee754_rem_pio2f+0x90>
 800a490:	4b79      	ldr	r3, [pc, #484]	; (800a678 <__ieee754_rem_pio2f+0x2a0>)
 800a492:	429d      	cmp	r5, r3
 800a494:	dd00      	ble.n	800a498 <__ieee754_rem_pio2f+0xc0>
 800a496:	e091      	b.n	800a5bc <__ieee754_rem_pio2f+0x1e4>
 800a498:	f000 fcfe 	bl	800ae98 <fabsf>
 800a49c:	4977      	ldr	r1, [pc, #476]	; (800a67c <__ieee754_rem_pio2f+0x2a4>)
 800a49e:	1c06      	adds	r6, r0, #0
 800a4a0:	f7f6 fc28 	bl	8000cf4 <__aeabi_fmul>
 800a4a4:	21fc      	movs	r1, #252	; 0xfc
 800a4a6:	0589      	lsls	r1, r1, #22
 800a4a8:	f7f6 f8be 	bl	8000628 <__aeabi_fadd>
 800a4ac:	f7f6 ff1a 	bl	80012e4 <__aeabi_f2iz>
 800a4b0:	0007      	movs	r7, r0
 800a4b2:	f7f6 ff37 	bl	8001324 <__aeabi_i2f>
 800a4b6:	496c      	ldr	r1, [pc, #432]	; (800a668 <__ieee754_rem_pio2f+0x290>)
 800a4b8:	9003      	str	r0, [sp, #12]
 800a4ba:	f7f6 fc1b 	bl	8000cf4 <__aeabi_fmul>
 800a4be:	1c01      	adds	r1, r0, #0
 800a4c0:	1c30      	adds	r0, r6, #0
 800a4c2:	f7f6 fd31 	bl	8000f28 <__aeabi_fsub>
 800a4c6:	4969      	ldr	r1, [pc, #420]	; (800a66c <__ieee754_rem_pio2f+0x294>)
 800a4c8:	9002      	str	r0, [sp, #8]
 800a4ca:	9803      	ldr	r0, [sp, #12]
 800a4cc:	f7f6 fc12 	bl	8000cf4 <__aeabi_fmul>
 800a4d0:	1c06      	adds	r6, r0, #0
 800a4d2:	2f1f      	cmp	r7, #31
 800a4d4:	dc0d      	bgt.n	800a4f2 <__ieee754_rem_pio2f+0x11a>
 800a4d6:	23ff      	movs	r3, #255	; 0xff
 800a4d8:	002a      	movs	r2, r5
 800a4da:	4969      	ldr	r1, [pc, #420]	; (800a680 <__ieee754_rem_pio2f+0x2a8>)
 800a4dc:	439a      	bics	r2, r3
 800a4de:	1e7b      	subs	r3, r7, #1
 800a4e0:	009b      	lsls	r3, r3, #2
 800a4e2:	585b      	ldr	r3, [r3, r1]
 800a4e4:	429a      	cmp	r2, r3
 800a4e6:	d004      	beq.n	800a4f2 <__ieee754_rem_pio2f+0x11a>
 800a4e8:	9802      	ldr	r0, [sp, #8]
 800a4ea:	1c31      	adds	r1, r6, #0
 800a4ec:	f7f6 fd1c 	bl	8000f28 <__aeabi_fsub>
 800a4f0:	e00c      	b.n	800a50c <__ieee754_rem_pio2f+0x134>
 800a4f2:	9802      	ldr	r0, [sp, #8]
 800a4f4:	1c31      	adds	r1, r6, #0
 800a4f6:	f7f6 fd17 	bl	8000f28 <__aeabi_fsub>
 800a4fa:	22ff      	movs	r2, #255	; 0xff
 800a4fc:	15eb      	asrs	r3, r5, #23
 800a4fe:	9304      	str	r3, [sp, #16]
 800a500:	0dc3      	lsrs	r3, r0, #23
 800a502:	4013      	ands	r3, r2
 800a504:	9a04      	ldr	r2, [sp, #16]
 800a506:	1ad3      	subs	r3, r2, r3
 800a508:	2b08      	cmp	r3, #8
 800a50a:	dc01      	bgt.n	800a510 <__ieee754_rem_pio2f+0x138>
 800a50c:	6020      	str	r0, [r4, #0]
 800a50e:	e026      	b.n	800a55e <__ieee754_rem_pio2f+0x186>
 800a510:	4957      	ldr	r1, [pc, #348]	; (800a670 <__ieee754_rem_pio2f+0x298>)
 800a512:	9803      	ldr	r0, [sp, #12]
 800a514:	f7f6 fbee 	bl	8000cf4 <__aeabi_fmul>
 800a518:	1c06      	adds	r6, r0, #0
 800a51a:	1c01      	adds	r1, r0, #0
 800a51c:	9802      	ldr	r0, [sp, #8]
 800a51e:	f7f6 fd03 	bl	8000f28 <__aeabi_fsub>
 800a522:	1c01      	adds	r1, r0, #0
 800a524:	1c05      	adds	r5, r0, #0
 800a526:	9802      	ldr	r0, [sp, #8]
 800a528:	f7f6 fcfe 	bl	8000f28 <__aeabi_fsub>
 800a52c:	1c31      	adds	r1, r6, #0
 800a52e:	f7f6 fcfb 	bl	8000f28 <__aeabi_fsub>
 800a532:	4950      	ldr	r1, [pc, #320]	; (800a674 <__ieee754_rem_pio2f+0x29c>)
 800a534:	1c06      	adds	r6, r0, #0
 800a536:	9803      	ldr	r0, [sp, #12]
 800a538:	f7f6 fbdc 	bl	8000cf4 <__aeabi_fmul>
 800a53c:	1c31      	adds	r1, r6, #0
 800a53e:	f7f6 fcf3 	bl	8000f28 <__aeabi_fsub>
 800a542:	1c01      	adds	r1, r0, #0
 800a544:	1c06      	adds	r6, r0, #0
 800a546:	1c28      	adds	r0, r5, #0
 800a548:	f7f6 fcee 	bl	8000f28 <__aeabi_fsub>
 800a54c:	22ff      	movs	r2, #255	; 0xff
 800a54e:	0dc3      	lsrs	r3, r0, #23
 800a550:	4013      	ands	r3, r2
 800a552:	9a04      	ldr	r2, [sp, #16]
 800a554:	1ad3      	subs	r3, r2, r3
 800a556:	2b19      	cmp	r3, #25
 800a558:	dc15      	bgt.n	800a586 <__ieee754_rem_pio2f+0x1ae>
 800a55a:	6020      	str	r0, [r4, #0]
 800a55c:	9502      	str	r5, [sp, #8]
 800a55e:	6825      	ldr	r5, [r4, #0]
 800a560:	9802      	ldr	r0, [sp, #8]
 800a562:	1c29      	adds	r1, r5, #0
 800a564:	f7f6 fce0 	bl	8000f28 <__aeabi_fsub>
 800a568:	1c31      	adds	r1, r6, #0
 800a56a:	f7f6 fcdd 	bl	8000f28 <__aeabi_fsub>
 800a56e:	9b05      	ldr	r3, [sp, #20]
 800a570:	6060      	str	r0, [r4, #4]
 800a572:	2b00      	cmp	r3, #0
 800a574:	db00      	blt.n	800a578 <__ieee754_rem_pio2f+0x1a0>
 800a576:	e758      	b.n	800a42a <__ieee754_rem_pio2f+0x52>
 800a578:	2380      	movs	r3, #128	; 0x80
 800a57a:	061b      	lsls	r3, r3, #24
 800a57c:	18ed      	adds	r5, r5, r3
 800a57e:	18c0      	adds	r0, r0, r3
 800a580:	6025      	str	r5, [r4, #0]
 800a582:	6060      	str	r0, [r4, #4]
 800a584:	e774      	b.n	800a470 <__ieee754_rem_pio2f+0x98>
 800a586:	493f      	ldr	r1, [pc, #252]	; (800a684 <__ieee754_rem_pio2f+0x2ac>)
 800a588:	9803      	ldr	r0, [sp, #12]
 800a58a:	f7f6 fbb3 	bl	8000cf4 <__aeabi_fmul>
 800a58e:	1c06      	adds	r6, r0, #0
 800a590:	1c01      	adds	r1, r0, #0
 800a592:	1c28      	adds	r0, r5, #0
 800a594:	f7f6 fcc8 	bl	8000f28 <__aeabi_fsub>
 800a598:	1c01      	adds	r1, r0, #0
 800a59a:	9002      	str	r0, [sp, #8]
 800a59c:	1c28      	adds	r0, r5, #0
 800a59e:	f7f6 fcc3 	bl	8000f28 <__aeabi_fsub>
 800a5a2:	1c31      	adds	r1, r6, #0
 800a5a4:	f7f6 fcc0 	bl	8000f28 <__aeabi_fsub>
 800a5a8:	4937      	ldr	r1, [pc, #220]	; (800a688 <__ieee754_rem_pio2f+0x2b0>)
 800a5aa:	1c05      	adds	r5, r0, #0
 800a5ac:	9803      	ldr	r0, [sp, #12]
 800a5ae:	f7f6 fba1 	bl	8000cf4 <__aeabi_fmul>
 800a5b2:	1c29      	adds	r1, r5, #0
 800a5b4:	f7f6 fcb8 	bl	8000f28 <__aeabi_fsub>
 800a5b8:	1c06      	adds	r6, r0, #0
 800a5ba:	e795      	b.n	800a4e8 <__ieee754_rem_pio2f+0x110>
 800a5bc:	23ff      	movs	r3, #255	; 0xff
 800a5be:	05db      	lsls	r3, r3, #23
 800a5c0:	429d      	cmp	r5, r3
 800a5c2:	db05      	blt.n	800a5d0 <__ieee754_rem_pio2f+0x1f8>
 800a5c4:	1c01      	adds	r1, r0, #0
 800a5c6:	f7f6 fcaf 	bl	8000f28 <__aeabi_fsub>
 800a5ca:	6060      	str	r0, [r4, #4]
 800a5cc:	6020      	str	r0, [r4, #0]
 800a5ce:	e70f      	b.n	800a3f0 <__ieee754_rem_pio2f+0x18>
 800a5d0:	15ee      	asrs	r6, r5, #23
 800a5d2:	3e86      	subs	r6, #134	; 0x86
 800a5d4:	05f3      	lsls	r3, r6, #23
 800a5d6:	1aed      	subs	r5, r5, r3
 800a5d8:	1c28      	adds	r0, r5, #0
 800a5da:	f7f6 fe83 	bl	80012e4 <__aeabi_f2iz>
 800a5de:	f7f6 fea1 	bl	8001324 <__aeabi_i2f>
 800a5e2:	1c01      	adds	r1, r0, #0
 800a5e4:	9007      	str	r0, [sp, #28]
 800a5e6:	1c28      	adds	r0, r5, #0
 800a5e8:	f7f6 fc9e 	bl	8000f28 <__aeabi_fsub>
 800a5ec:	2187      	movs	r1, #135	; 0x87
 800a5ee:	05c9      	lsls	r1, r1, #23
 800a5f0:	f7f6 fb80 	bl	8000cf4 <__aeabi_fmul>
 800a5f4:	1c07      	adds	r7, r0, #0
 800a5f6:	f7f6 fe75 	bl	80012e4 <__aeabi_f2iz>
 800a5fa:	f7f6 fe93 	bl	8001324 <__aeabi_i2f>
 800a5fe:	1c01      	adds	r1, r0, #0
 800a600:	9008      	str	r0, [sp, #32]
 800a602:	1c05      	adds	r5, r0, #0
 800a604:	1c38      	adds	r0, r7, #0
 800a606:	f7f6 fc8f 	bl	8000f28 <__aeabi_fsub>
 800a60a:	2187      	movs	r1, #135	; 0x87
 800a60c:	05c9      	lsls	r1, r1, #23
 800a60e:	f7f6 fb71 	bl	8000cf4 <__aeabi_fmul>
 800a612:	2100      	movs	r1, #0
 800a614:	9009      	str	r0, [sp, #36]	; 0x24
 800a616:	f7f5 ff51 	bl	80004bc <__aeabi_fcmpeq>
 800a61a:	2303      	movs	r3, #3
 800a61c:	2800      	cmp	r0, #0
 800a61e:	d006      	beq.n	800a62e <__ieee754_rem_pio2f+0x256>
 800a620:	2100      	movs	r1, #0
 800a622:	1c28      	adds	r0, r5, #0
 800a624:	f7f5 ff4a 	bl	80004bc <__aeabi_fcmpeq>
 800a628:	4243      	negs	r3, r0
 800a62a:	4143      	adcs	r3, r0
 800a62c:	3301      	adds	r3, #1
 800a62e:	4a17      	ldr	r2, [pc, #92]	; (800a68c <__ieee754_rem_pio2f+0x2b4>)
 800a630:	0021      	movs	r1, r4
 800a632:	9201      	str	r2, [sp, #4]
 800a634:	2202      	movs	r2, #2
 800a636:	a807      	add	r0, sp, #28
 800a638:	9200      	str	r2, [sp, #0]
 800a63a:	0032      	movs	r2, r6
 800a63c:	f000 f900 	bl	800a840 <__kernel_rem_pio2f>
 800a640:	9b05      	ldr	r3, [sp, #20]
 800a642:	0007      	movs	r7, r0
 800a644:	2b00      	cmp	r3, #0
 800a646:	db00      	blt.n	800a64a <__ieee754_rem_pio2f+0x272>
 800a648:	e6ef      	b.n	800a42a <__ieee754_rem_pio2f+0x52>
 800a64a:	2280      	movs	r2, #128	; 0x80
 800a64c:	6823      	ldr	r3, [r4, #0]
 800a64e:	0612      	lsls	r2, r2, #24
 800a650:	189b      	adds	r3, r3, r2
 800a652:	6023      	str	r3, [r4, #0]
 800a654:	6863      	ldr	r3, [r4, #4]
 800a656:	189b      	adds	r3, r3, r2
 800a658:	6063      	str	r3, [r4, #4]
 800a65a:	e709      	b.n	800a470 <__ieee754_rem_pio2f+0x98>
 800a65c:	3f490fd8 	.word	0x3f490fd8
 800a660:	4016cbe3 	.word	0x4016cbe3
 800a664:	3fc90fd0 	.word	0x3fc90fd0
 800a668:	3fc90f80 	.word	0x3fc90f80
 800a66c:	37354443 	.word	0x37354443
 800a670:	37354400 	.word	0x37354400
 800a674:	2e85a308 	.word	0x2e85a308
 800a678:	43490f80 	.word	0x43490f80
 800a67c:	3f22f984 	.word	0x3f22f984
 800a680:	0800fbd4 	.word	0x0800fbd4
 800a684:	2e85a300 	.word	0x2e85a300
 800a688:	248d3132 	.word	0x248d3132
 800a68c:	0800fc54 	.word	0x0800fc54

0800a690 <__ieee754_sqrtf>:
 800a690:	0042      	lsls	r2, r0, #1
 800a692:	0003      	movs	r3, r0
 800a694:	b570      	push	{r4, r5, r6, lr}
 800a696:	1c04      	adds	r4, r0, #0
 800a698:	20ff      	movs	r0, #255	; 0xff
 800a69a:	0852      	lsrs	r2, r2, #1
 800a69c:	05c0      	lsls	r0, r0, #23
 800a69e:	4282      	cmp	r2, r0
 800a6a0:	d30a      	bcc.n	800a6b8 <__ieee754_sqrtf+0x28>
 800a6a2:	1c21      	adds	r1, r4, #0
 800a6a4:	1c20      	adds	r0, r4, #0
 800a6a6:	f7f6 fb25 	bl	8000cf4 <__aeabi_fmul>
 800a6aa:	1c01      	adds	r1, r0, #0
 800a6ac:	1c20      	adds	r0, r4, #0
 800a6ae:	f7f5 ffbb 	bl	8000628 <__aeabi_fadd>
 800a6b2:	1c04      	adds	r4, r0, #0
 800a6b4:	1c20      	adds	r0, r4, #0
 800a6b6:	bd70      	pop	{r4, r5, r6, pc}
 800a6b8:	2a00      	cmp	r2, #0
 800a6ba:	d0fb      	beq.n	800a6b4 <__ieee754_sqrtf+0x24>
 800a6bc:	2c00      	cmp	r4, #0
 800a6be:	da07      	bge.n	800a6d0 <__ieee754_sqrtf+0x40>
 800a6c0:	1c21      	adds	r1, r4, #0
 800a6c2:	1c20      	adds	r0, r4, #0
 800a6c4:	f7f6 fc30 	bl	8000f28 <__aeabi_fsub>
 800a6c8:	1c01      	adds	r1, r0, #0
 800a6ca:	f7f6 f949 	bl	8000960 <__aeabi_fdiv>
 800a6ce:	e7f0      	b.n	800a6b2 <__ieee754_sqrtf+0x22>
 800a6d0:	0022      	movs	r2, r4
 800a6d2:	15e1      	asrs	r1, r4, #23
 800a6d4:	4002      	ands	r2, r0
 800a6d6:	4204      	tst	r4, r0
 800a6d8:	d02e      	beq.n	800a738 <__ieee754_sqrtf+0xa8>
 800a6da:	2280      	movs	r2, #128	; 0x80
 800a6dc:	000c      	movs	r4, r1
 800a6de:	025b      	lsls	r3, r3, #9
 800a6e0:	0a5b      	lsrs	r3, r3, #9
 800a6e2:	0412      	lsls	r2, r2, #16
 800a6e4:	3c7f      	subs	r4, #127	; 0x7f
 800a6e6:	4313      	orrs	r3, r2
 800a6e8:	07ca      	lsls	r2, r1, #31
 800a6ea:	d400      	bmi.n	800a6ee <__ieee754_sqrtf+0x5e>
 800a6ec:	005b      	lsls	r3, r3, #1
 800a6ee:	2200      	movs	r2, #0
 800a6f0:	2180      	movs	r1, #128	; 0x80
 800a6f2:	2019      	movs	r0, #25
 800a6f4:	0016      	movs	r6, r2
 800a6f6:	1064      	asrs	r4, r4, #1
 800a6f8:	005b      	lsls	r3, r3, #1
 800a6fa:	0449      	lsls	r1, r1, #17
 800a6fc:	1875      	adds	r5, r6, r1
 800a6fe:	429d      	cmp	r5, r3
 800a700:	dc02      	bgt.n	800a708 <__ieee754_sqrtf+0x78>
 800a702:	186e      	adds	r6, r5, r1
 800a704:	1b5b      	subs	r3, r3, r5
 800a706:	1852      	adds	r2, r2, r1
 800a708:	3801      	subs	r0, #1
 800a70a:	005b      	lsls	r3, r3, #1
 800a70c:	0849      	lsrs	r1, r1, #1
 800a70e:	2800      	cmp	r0, #0
 800a710:	d1f4      	bne.n	800a6fc <__ieee754_sqrtf+0x6c>
 800a712:	2b00      	cmp	r3, #0
 800a714:	d002      	beq.n	800a71c <__ieee754_sqrtf+0x8c>
 800a716:	2301      	movs	r3, #1
 800a718:	3201      	adds	r2, #1
 800a71a:	439a      	bics	r2, r3
 800a71c:	23fc      	movs	r3, #252	; 0xfc
 800a71e:	1052      	asrs	r2, r2, #1
 800a720:	059b      	lsls	r3, r3, #22
 800a722:	18d2      	adds	r2, r2, r3
 800a724:	05e4      	lsls	r4, r4, #23
 800a726:	18a4      	adds	r4, r4, r2
 800a728:	e7c4      	b.n	800a6b4 <__ieee754_sqrtf+0x24>
 800a72a:	005b      	lsls	r3, r3, #1
 800a72c:	3201      	adds	r2, #1
 800a72e:	4203      	tst	r3, r0
 800a730:	d0fb      	beq.n	800a72a <__ieee754_sqrtf+0x9a>
 800a732:	3a01      	subs	r2, #1
 800a734:	1a89      	subs	r1, r1, r2
 800a736:	e7d0      	b.n	800a6da <__ieee754_sqrtf+0x4a>
 800a738:	2080      	movs	r0, #128	; 0x80
 800a73a:	0400      	lsls	r0, r0, #16
 800a73c:	e7f7      	b.n	800a72e <__ieee754_sqrtf+0x9e>
	...

0800a740 <__kernel_cosf>:
 800a740:	23c8      	movs	r3, #200	; 0xc8
 800a742:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a744:	0044      	lsls	r4, r0, #1
 800a746:	1c06      	adds	r6, r0, #0
 800a748:	9101      	str	r1, [sp, #4]
 800a74a:	0864      	lsrs	r4, r4, #1
 800a74c:	059b      	lsls	r3, r3, #22
 800a74e:	429c      	cmp	r4, r3
 800a750:	da03      	bge.n	800a75a <__kernel_cosf+0x1a>
 800a752:	f7f6 fdc7 	bl	80012e4 <__aeabi_f2iz>
 800a756:	2800      	cmp	r0, #0
 800a758:	d05d      	beq.n	800a816 <__kernel_cosf+0xd6>
 800a75a:	1c31      	adds	r1, r6, #0
 800a75c:	1c30      	adds	r0, r6, #0
 800a75e:	f7f6 fac9 	bl	8000cf4 <__aeabi_fmul>
 800a762:	21fc      	movs	r1, #252	; 0xfc
 800a764:	0589      	lsls	r1, r1, #22
 800a766:	1c05      	adds	r5, r0, #0
 800a768:	f7f6 fac4 	bl	8000cf4 <__aeabi_fmul>
 800a76c:	492b      	ldr	r1, [pc, #172]	; (800a81c <__kernel_cosf+0xdc>)
 800a76e:	1c07      	adds	r7, r0, #0
 800a770:	1c28      	adds	r0, r5, #0
 800a772:	f7f6 fabf 	bl	8000cf4 <__aeabi_fmul>
 800a776:	492a      	ldr	r1, [pc, #168]	; (800a820 <__kernel_cosf+0xe0>)
 800a778:	f7f5 ff56 	bl	8000628 <__aeabi_fadd>
 800a77c:	1c29      	adds	r1, r5, #0
 800a77e:	f7f6 fab9 	bl	8000cf4 <__aeabi_fmul>
 800a782:	4928      	ldr	r1, [pc, #160]	; (800a824 <__kernel_cosf+0xe4>)
 800a784:	f7f6 fbd0 	bl	8000f28 <__aeabi_fsub>
 800a788:	1c29      	adds	r1, r5, #0
 800a78a:	f7f6 fab3 	bl	8000cf4 <__aeabi_fmul>
 800a78e:	4926      	ldr	r1, [pc, #152]	; (800a828 <__kernel_cosf+0xe8>)
 800a790:	f7f5 ff4a 	bl	8000628 <__aeabi_fadd>
 800a794:	1c29      	adds	r1, r5, #0
 800a796:	f7f6 faad 	bl	8000cf4 <__aeabi_fmul>
 800a79a:	4924      	ldr	r1, [pc, #144]	; (800a82c <__kernel_cosf+0xec>)
 800a79c:	f7f6 fbc4 	bl	8000f28 <__aeabi_fsub>
 800a7a0:	1c29      	adds	r1, r5, #0
 800a7a2:	f7f6 faa7 	bl	8000cf4 <__aeabi_fmul>
 800a7a6:	4922      	ldr	r1, [pc, #136]	; (800a830 <__kernel_cosf+0xf0>)
 800a7a8:	f7f5 ff3e 	bl	8000628 <__aeabi_fadd>
 800a7ac:	1c29      	adds	r1, r5, #0
 800a7ae:	f7f6 faa1 	bl	8000cf4 <__aeabi_fmul>
 800a7b2:	1c29      	adds	r1, r5, #0
 800a7b4:	f7f6 fa9e 	bl	8000cf4 <__aeabi_fmul>
 800a7b8:	9901      	ldr	r1, [sp, #4]
 800a7ba:	1c05      	adds	r5, r0, #0
 800a7bc:	1c30      	adds	r0, r6, #0
 800a7be:	f7f6 fa99 	bl	8000cf4 <__aeabi_fmul>
 800a7c2:	1c01      	adds	r1, r0, #0
 800a7c4:	1c28      	adds	r0, r5, #0
 800a7c6:	f7f6 fbaf 	bl	8000f28 <__aeabi_fsub>
 800a7ca:	4b1a      	ldr	r3, [pc, #104]	; (800a834 <__kernel_cosf+0xf4>)
 800a7cc:	1c05      	adds	r5, r0, #0
 800a7ce:	429c      	cmp	r4, r3
 800a7d0:	dc09      	bgt.n	800a7e6 <__kernel_cosf+0xa6>
 800a7d2:	1c01      	adds	r1, r0, #0
 800a7d4:	1c38      	adds	r0, r7, #0
 800a7d6:	f7f6 fba7 	bl	8000f28 <__aeabi_fsub>
 800a7da:	1c01      	adds	r1, r0, #0
 800a7dc:	20fe      	movs	r0, #254	; 0xfe
 800a7de:	0580      	lsls	r0, r0, #22
 800a7e0:	f7f6 fba2 	bl	8000f28 <__aeabi_fsub>
 800a7e4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800a7e6:	4b14      	ldr	r3, [pc, #80]	; (800a838 <__kernel_cosf+0xf8>)
 800a7e8:	429c      	cmp	r4, r3
 800a7ea:	dc12      	bgt.n	800a812 <__kernel_cosf+0xd2>
 800a7ec:	23ff      	movs	r3, #255	; 0xff
 800a7ee:	061b      	lsls	r3, r3, #24
 800a7f0:	18e4      	adds	r4, r4, r3
 800a7f2:	20fe      	movs	r0, #254	; 0xfe
 800a7f4:	1c21      	adds	r1, r4, #0
 800a7f6:	0580      	lsls	r0, r0, #22
 800a7f8:	f7f6 fb96 	bl	8000f28 <__aeabi_fsub>
 800a7fc:	1c21      	adds	r1, r4, #0
 800a7fe:	1c06      	adds	r6, r0, #0
 800a800:	1c38      	adds	r0, r7, #0
 800a802:	f7f6 fb91 	bl	8000f28 <__aeabi_fsub>
 800a806:	1c29      	adds	r1, r5, #0
 800a808:	f7f6 fb8e 	bl	8000f28 <__aeabi_fsub>
 800a80c:	1c01      	adds	r1, r0, #0
 800a80e:	1c30      	adds	r0, r6, #0
 800a810:	e7e6      	b.n	800a7e0 <__kernel_cosf+0xa0>
 800a812:	4c0a      	ldr	r4, [pc, #40]	; (800a83c <__kernel_cosf+0xfc>)
 800a814:	e7ed      	b.n	800a7f2 <__kernel_cosf+0xb2>
 800a816:	20fe      	movs	r0, #254	; 0xfe
 800a818:	0580      	lsls	r0, r0, #22
 800a81a:	e7e3      	b.n	800a7e4 <__kernel_cosf+0xa4>
 800a81c:	ad47d74e 	.word	0xad47d74e
 800a820:	310f74f6 	.word	0x310f74f6
 800a824:	3493f27c 	.word	0x3493f27c
 800a828:	37d00d01 	.word	0x37d00d01
 800a82c:	3ab60b61 	.word	0x3ab60b61
 800a830:	3d2aaaab 	.word	0x3d2aaaab
 800a834:	3e999999 	.word	0x3e999999
 800a838:	3f480000 	.word	0x3f480000
 800a83c:	3e900000 	.word	0x3e900000

0800a840 <__kernel_rem_pio2f>:
 800a840:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a842:	b0df      	sub	sp, #380	; 0x17c
 800a844:	930a      	str	r3, [sp, #40]	; 0x28
 800a846:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a848:	9207      	str	r2, [sp, #28]
 800a84a:	009a      	lsls	r2, r3, #2
 800a84c:	4bcb      	ldr	r3, [pc, #812]	; (800ab7c <__kernel_rem_pio2f+0x33c>)
 800a84e:	9009      	str	r0, [sp, #36]	; 0x24
 800a850:	58d3      	ldr	r3, [r2, r3]
 800a852:	9103      	str	r1, [sp, #12]
 800a854:	9304      	str	r3, [sp, #16]
 800a856:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a858:	3b01      	subs	r3, #1
 800a85a:	9306      	str	r3, [sp, #24]
 800a85c:	2300      	movs	r3, #0
 800a85e:	9302      	str	r3, [sp, #8]
 800a860:	9b07      	ldr	r3, [sp, #28]
 800a862:	3304      	adds	r3, #4
 800a864:	db07      	blt.n	800a876 <__kernel_rem_pio2f+0x36>
 800a866:	2107      	movs	r1, #7
 800a868:	9b07      	ldr	r3, [sp, #28]
 800a86a:	1eda      	subs	r2, r3, #3
 800a86c:	17d3      	asrs	r3, r2, #31
 800a86e:	400b      	ands	r3, r1
 800a870:	189b      	adds	r3, r3, r2
 800a872:	10db      	asrs	r3, r3, #3
 800a874:	9302      	str	r3, [sp, #8]
 800a876:	9b02      	ldr	r3, [sp, #8]
 800a878:	ae22      	add	r6, sp, #136	; 0x88
 800a87a:	1c59      	adds	r1, r3, #1
 800a87c:	00cb      	lsls	r3, r1, #3
 800a87e:	9308      	str	r3, [sp, #32]
 800a880:	9a08      	ldr	r2, [sp, #32]
 800a882:	9b07      	ldr	r3, [sp, #28]
 800a884:	1a9b      	subs	r3, r3, r2
 800a886:	9301      	str	r3, [sp, #4]
 800a888:	9a06      	ldr	r2, [sp, #24]
 800a88a:	9b02      	ldr	r3, [sp, #8]
 800a88c:	1a9d      	subs	r5, r3, r2
 800a88e:	002c      	movs	r4, r5
 800a890:	9b04      	ldr	r3, [sp, #16]
 800a892:	189f      	adds	r7, r3, r2
 800a894:	1b63      	subs	r3, r4, r5
 800a896:	429f      	cmp	r7, r3
 800a898:	da0e      	bge.n	800a8b8 <__kernel_rem_pio2f+0x78>
 800a89a:	2700      	movs	r7, #0
 800a89c:	9b06      	ldr	r3, [sp, #24]
 800a89e:	9305      	str	r3, [sp, #20]
 800a8a0:	ab23      	add	r3, sp, #140	; 0x8c
 800a8a2:	930b      	str	r3, [sp, #44]	; 0x2c
 800a8a4:	9b04      	ldr	r3, [sp, #16]
 800a8a6:	429f      	cmp	r7, r3
 800a8a8:	dc2b      	bgt.n	800a902 <__kernel_rem_pio2f+0xc2>
 800a8aa:	9b05      	ldr	r3, [sp, #20]
 800a8ac:	2400      	movs	r4, #0
 800a8ae:	009d      	lsls	r5, r3, #2
 800a8b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a8b2:	2600      	movs	r6, #0
 800a8b4:	195d      	adds	r5, r3, r5
 800a8b6:	e016      	b.n	800a8e6 <__kernel_rem_pio2f+0xa6>
 800a8b8:	2000      	movs	r0, #0
 800a8ba:	2c00      	cmp	r4, #0
 800a8bc:	db04      	blt.n	800a8c8 <__kernel_rem_pio2f+0x88>
 800a8be:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800a8c0:	00a3      	lsls	r3, r4, #2
 800a8c2:	58d0      	ldr	r0, [r2, r3]
 800a8c4:	f7f6 fd2e 	bl	8001324 <__aeabi_i2f>
 800a8c8:	c601      	stmia	r6!, {r0}
 800a8ca:	3401      	adds	r4, #1
 800a8cc:	e7e2      	b.n	800a894 <__kernel_rem_pio2f+0x54>
 800a8ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a8d0:	00b3      	lsls	r3, r6, #2
 800a8d2:	6829      	ldr	r1, [r5, #0]
 800a8d4:	58d0      	ldr	r0, [r2, r3]
 800a8d6:	f7f6 fa0d 	bl	8000cf4 <__aeabi_fmul>
 800a8da:	1c01      	adds	r1, r0, #0
 800a8dc:	1c20      	adds	r0, r4, #0
 800a8de:	f7f5 fea3 	bl	8000628 <__aeabi_fadd>
 800a8e2:	3601      	adds	r6, #1
 800a8e4:	1c04      	adds	r4, r0, #0
 800a8e6:	9b06      	ldr	r3, [sp, #24]
 800a8e8:	3d04      	subs	r5, #4
 800a8ea:	429e      	cmp	r6, r3
 800a8ec:	ddef      	ble.n	800a8ce <__kernel_rem_pio2f+0x8e>
 800a8ee:	21f0      	movs	r1, #240	; 0xf0
 800a8f0:	aa0e      	add	r2, sp, #56	; 0x38
 800a8f2:	00bb      	lsls	r3, r7, #2
 800a8f4:	1852      	adds	r2, r2, r1
 800a8f6:	50d4      	str	r4, [r2, r3]
 800a8f8:	9b05      	ldr	r3, [sp, #20]
 800a8fa:	3701      	adds	r7, #1
 800a8fc:	3301      	adds	r3, #1
 800a8fe:	9305      	str	r3, [sp, #20]
 800a900:	e7d0      	b.n	800a8a4 <__kernel_rem_pio2f+0x64>
 800a902:	9b04      	ldr	r3, [sp, #16]
 800a904:	aa0e      	add	r2, sp, #56	; 0x38
 800a906:	009b      	lsls	r3, r3, #2
 800a908:	189b      	adds	r3, r3, r2
 800a90a:	930c      	str	r3, [sp, #48]	; 0x30
 800a90c:	9b02      	ldr	r3, [sp, #8]
 800a90e:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800a910:	009b      	lsls	r3, r3, #2
 800a912:	18d3      	adds	r3, r2, r3
 800a914:	9e04      	ldr	r6, [sp, #16]
 800a916:	930b      	str	r3, [sp, #44]	; 0x2c
 800a918:	0035      	movs	r5, r6
 800a91a:	aa4a      	add	r2, sp, #296	; 0x128
 800a91c:	00b3      	lsls	r3, r6, #2
 800a91e:	af0e      	add	r7, sp, #56	; 0x38
 800a920:	589c      	ldr	r4, [r3, r2]
 800a922:	9702      	str	r7, [sp, #8]
 800a924:	920d      	str	r2, [sp, #52]	; 0x34
 800a926:	2d00      	cmp	r5, #0
 800a928:	dc64      	bgt.n	800a9f4 <__kernel_rem_pio2f+0x1b4>
 800a92a:	9901      	ldr	r1, [sp, #4]
 800a92c:	1c20      	adds	r0, r4, #0
 800a92e:	f000 faf9 	bl	800af24 <scalbnf>
 800a932:	21f8      	movs	r1, #248	; 0xf8
 800a934:	0589      	lsls	r1, r1, #22
 800a936:	1c04      	adds	r4, r0, #0
 800a938:	f7f6 f9dc 	bl	8000cf4 <__aeabi_fmul>
 800a93c:	f000 fab0 	bl	800aea0 <floorf>
 800a940:	2182      	movs	r1, #130	; 0x82
 800a942:	05c9      	lsls	r1, r1, #23
 800a944:	f7f6 f9d6 	bl	8000cf4 <__aeabi_fmul>
 800a948:	1c01      	adds	r1, r0, #0
 800a94a:	1c20      	adds	r0, r4, #0
 800a94c:	f7f6 faec 	bl	8000f28 <__aeabi_fsub>
 800a950:	1c04      	adds	r4, r0, #0
 800a952:	f7f6 fcc7 	bl	80012e4 <__aeabi_f2iz>
 800a956:	9005      	str	r0, [sp, #20]
 800a958:	f7f6 fce4 	bl	8001324 <__aeabi_i2f>
 800a95c:	1c01      	adds	r1, r0, #0
 800a95e:	1c20      	adds	r0, r4, #0
 800a960:	f7f6 fae2 	bl	8000f28 <__aeabi_fsub>
 800a964:	9b01      	ldr	r3, [sp, #4]
 800a966:	1c04      	adds	r4, r0, #0
 800a968:	2b00      	cmp	r3, #0
 800a96a:	dd63      	ble.n	800aa34 <__kernel_rem_pio2f+0x1f4>
 800a96c:	2108      	movs	r1, #8
 800a96e:	1e73      	subs	r3, r6, #1
 800a970:	009b      	lsls	r3, r3, #2
 800a972:	aa0e      	add	r2, sp, #56	; 0x38
 800a974:	589a      	ldr	r2, [r3, r2]
 800a976:	9801      	ldr	r0, [sp, #4]
 800a978:	9d05      	ldr	r5, [sp, #20]
 800a97a:	1a09      	subs	r1, r1, r0
 800a97c:	0010      	movs	r0, r2
 800a97e:	4108      	asrs	r0, r1
 800a980:	182d      	adds	r5, r5, r0
 800a982:	4088      	lsls	r0, r1
 800a984:	a90e      	add	r1, sp, #56	; 0x38
 800a986:	1a12      	subs	r2, r2, r0
 800a988:	505a      	str	r2, [r3, r1]
 800a98a:	2307      	movs	r3, #7
 800a98c:	9901      	ldr	r1, [sp, #4]
 800a98e:	9505      	str	r5, [sp, #20]
 800a990:	1a5b      	subs	r3, r3, r1
 800a992:	411a      	asrs	r2, r3
 800a994:	9202      	str	r2, [sp, #8]
 800a996:	9b02      	ldr	r3, [sp, #8]
 800a998:	2b00      	cmp	r3, #0
 800a99a:	dd5c      	ble.n	800aa56 <__kernel_rem_pio2f+0x216>
 800a99c:	9b05      	ldr	r3, [sp, #20]
 800a99e:	2200      	movs	r2, #0
 800a9a0:	3301      	adds	r3, #1
 800a9a2:	9305      	str	r3, [sp, #20]
 800a9a4:	2301      	movs	r3, #1
 800a9a6:	2080      	movs	r0, #128	; 0x80
 800a9a8:	0015      	movs	r5, r2
 800a9aa:	21ff      	movs	r1, #255	; 0xff
 800a9ac:	469c      	mov	ip, r3
 800a9ae:	0040      	lsls	r0, r0, #1
 800a9b0:	4296      	cmp	r6, r2
 800a9b2:	dd00      	ble.n	800a9b6 <__kernel_rem_pio2f+0x176>
 800a9b4:	e08f      	b.n	800aad6 <__kernel_rem_pio2f+0x296>
 800a9b6:	9b01      	ldr	r3, [sp, #4]
 800a9b8:	2b00      	cmp	r3, #0
 800a9ba:	dd05      	ble.n	800a9c8 <__kernel_rem_pio2f+0x188>
 800a9bc:	2b01      	cmp	r3, #1
 800a9be:	d100      	bne.n	800a9c2 <__kernel_rem_pio2f+0x182>
 800a9c0:	e099      	b.n	800aaf6 <__kernel_rem_pio2f+0x2b6>
 800a9c2:	2b02      	cmp	r3, #2
 800a9c4:	d100      	bne.n	800a9c8 <__kernel_rem_pio2f+0x188>
 800a9c6:	e0a1      	b.n	800ab0c <__kernel_rem_pio2f+0x2cc>
 800a9c8:	9b02      	ldr	r3, [sp, #8]
 800a9ca:	2b02      	cmp	r3, #2
 800a9cc:	d143      	bne.n	800aa56 <__kernel_rem_pio2f+0x216>
 800a9ce:	20fe      	movs	r0, #254	; 0xfe
 800a9d0:	1c21      	adds	r1, r4, #0
 800a9d2:	0580      	lsls	r0, r0, #22
 800a9d4:	f7f6 faa8 	bl	8000f28 <__aeabi_fsub>
 800a9d8:	1c04      	adds	r4, r0, #0
 800a9da:	2d00      	cmp	r5, #0
 800a9dc:	d03b      	beq.n	800aa56 <__kernel_rem_pio2f+0x216>
 800a9de:	20fe      	movs	r0, #254	; 0xfe
 800a9e0:	9901      	ldr	r1, [sp, #4]
 800a9e2:	0580      	lsls	r0, r0, #22
 800a9e4:	f000 fa9e 	bl	800af24 <scalbnf>
 800a9e8:	1c01      	adds	r1, r0, #0
 800a9ea:	1c20      	adds	r0, r4, #0
 800a9ec:	f7f6 fa9c 	bl	8000f28 <__aeabi_fsub>
 800a9f0:	1c04      	adds	r4, r0, #0
 800a9f2:	e030      	b.n	800aa56 <__kernel_rem_pio2f+0x216>
 800a9f4:	21ee      	movs	r1, #238	; 0xee
 800a9f6:	1c20      	adds	r0, r4, #0
 800a9f8:	0589      	lsls	r1, r1, #22
 800a9fa:	f7f6 f97b 	bl	8000cf4 <__aeabi_fmul>
 800a9fe:	f7f6 fc71 	bl	80012e4 <__aeabi_f2iz>
 800aa02:	f7f6 fc8f 	bl	8001324 <__aeabi_i2f>
 800aa06:	2187      	movs	r1, #135	; 0x87
 800aa08:	05c9      	lsls	r1, r1, #23
 800aa0a:	9005      	str	r0, [sp, #20]
 800aa0c:	f7f6 f972 	bl	8000cf4 <__aeabi_fmul>
 800aa10:	1c01      	adds	r1, r0, #0
 800aa12:	1c20      	adds	r0, r4, #0
 800aa14:	f7f6 fa88 	bl	8000f28 <__aeabi_fsub>
 800aa18:	f7f6 fc64 	bl	80012e4 <__aeabi_f2iz>
 800aa1c:	9b02      	ldr	r3, [sp, #8]
 800aa1e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800aa20:	c301      	stmia	r3!, {r0}
 800aa22:	3d01      	subs	r5, #1
 800aa24:	9302      	str	r3, [sp, #8]
 800aa26:	00ab      	lsls	r3, r5, #2
 800aa28:	5899      	ldr	r1, [r3, r2]
 800aa2a:	9805      	ldr	r0, [sp, #20]
 800aa2c:	f7f5 fdfc 	bl	8000628 <__aeabi_fadd>
 800aa30:	1c04      	adds	r4, r0, #0
 800aa32:	e778      	b.n	800a926 <__kernel_rem_pio2f+0xe6>
 800aa34:	9b01      	ldr	r3, [sp, #4]
 800aa36:	2b00      	cmp	r3, #0
 800aa38:	d106      	bne.n	800aa48 <__kernel_rem_pio2f+0x208>
 800aa3a:	1e73      	subs	r3, r6, #1
 800aa3c:	009b      	lsls	r3, r3, #2
 800aa3e:	aa0e      	add	r2, sp, #56	; 0x38
 800aa40:	5898      	ldr	r0, [r3, r2]
 800aa42:	1203      	asrs	r3, r0, #8
 800aa44:	9302      	str	r3, [sp, #8]
 800aa46:	e7a6      	b.n	800a996 <__kernel_rem_pio2f+0x156>
 800aa48:	21fc      	movs	r1, #252	; 0xfc
 800aa4a:	0589      	lsls	r1, r1, #22
 800aa4c:	f7f5 fd5a 	bl	8000504 <__aeabi_fcmpge>
 800aa50:	2800      	cmp	r0, #0
 800aa52:	d13d      	bne.n	800aad0 <__kernel_rem_pio2f+0x290>
 800aa54:	9002      	str	r0, [sp, #8]
 800aa56:	2100      	movs	r1, #0
 800aa58:	1c20      	adds	r0, r4, #0
 800aa5a:	f7f5 fd2f 	bl	80004bc <__aeabi_fcmpeq>
 800aa5e:	2800      	cmp	r0, #0
 800aa60:	d100      	bne.n	800aa64 <__kernel_rem_pio2f+0x224>
 800aa62:	e09d      	b.n	800aba0 <__kernel_rem_pio2f+0x360>
 800aa64:	1e77      	subs	r7, r6, #1
 800aa66:	003b      	movs	r3, r7
 800aa68:	2200      	movs	r2, #0
 800aa6a:	9904      	ldr	r1, [sp, #16]
 800aa6c:	428b      	cmp	r3, r1
 800aa6e:	da54      	bge.n	800ab1a <__kernel_rem_pio2f+0x2da>
 800aa70:	2a00      	cmp	r2, #0
 800aa72:	d100      	bne.n	800aa76 <__kernel_rem_pio2f+0x236>
 800aa74:	e06b      	b.n	800ab4e <__kernel_rem_pio2f+0x30e>
 800aa76:	9b01      	ldr	r3, [sp, #4]
 800aa78:	aa0e      	add	r2, sp, #56	; 0x38
 800aa7a:	3b08      	subs	r3, #8
 800aa7c:	9301      	str	r3, [sp, #4]
 800aa7e:	00bb      	lsls	r3, r7, #2
 800aa80:	589b      	ldr	r3, [r3, r2]
 800aa82:	2b00      	cmp	r3, #0
 800aa84:	d100      	bne.n	800aa88 <__kernel_rem_pio2f+0x248>
 800aa86:	e089      	b.n	800ab9c <__kernel_rem_pio2f+0x35c>
 800aa88:	20fe      	movs	r0, #254	; 0xfe
 800aa8a:	9901      	ldr	r1, [sp, #4]
 800aa8c:	0580      	lsls	r0, r0, #22
 800aa8e:	f000 fa49 	bl	800af24 <scalbnf>
 800aa92:	003d      	movs	r5, r7
 800aa94:	1c04      	adds	r4, r0, #0
 800aa96:	2d00      	cmp	r5, #0
 800aa98:	db00      	blt.n	800aa9c <__kernel_rem_pio2f+0x25c>
 800aa9a:	e0b8      	b.n	800ac0e <__kernel_rem_pio2f+0x3ce>
 800aa9c:	00ba      	lsls	r2, r7, #2
 800aa9e:	4694      	mov	ip, r2
 800aaa0:	2400      	movs	r4, #0
 800aaa2:	00bb      	lsls	r3, r7, #2
 800aaa4:	9306      	str	r3, [sp, #24]
 800aaa6:	ab4a      	add	r3, sp, #296	; 0x128
 800aaa8:	4463      	add	r3, ip
 800aaaa:	9301      	str	r3, [sp, #4]
 800aaac:	1b3b      	subs	r3, r7, r4
 800aaae:	d400      	bmi.n	800aab2 <__kernel_rem_pio2f+0x272>
 800aab0:	e0dd      	b.n	800ac6e <__kernel_rem_pio2f+0x42e>
 800aab2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800aab4:	2b02      	cmp	r3, #2
 800aab6:	dd00      	ble.n	800aaba <__kernel_rem_pio2f+0x27a>
 800aab8:	e0dc      	b.n	800ac74 <__kernel_rem_pio2f+0x434>
 800aaba:	2b00      	cmp	r3, #0
 800aabc:	dd00      	ble.n	800aac0 <__kernel_rem_pio2f+0x280>
 800aabe:	e130      	b.n	800ad22 <__kernel_rem_pio2f+0x4e2>
 800aac0:	d100      	bne.n	800aac4 <__kernel_rem_pio2f+0x284>
 800aac2:	e10a      	b.n	800acda <__kernel_rem_pio2f+0x49a>
 800aac4:	2007      	movs	r0, #7
 800aac6:	9b05      	ldr	r3, [sp, #20]
 800aac8:	4003      	ands	r3, r0
 800aaca:	0018      	movs	r0, r3
 800aacc:	b05f      	add	sp, #380	; 0x17c
 800aace:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aad0:	2302      	movs	r3, #2
 800aad2:	9302      	str	r3, [sp, #8]
 800aad4:	e762      	b.n	800a99c <__kernel_rem_pio2f+0x15c>
 800aad6:	683b      	ldr	r3, [r7, #0]
 800aad8:	2d00      	cmp	r5, #0
 800aada:	d108      	bne.n	800aaee <__kernel_rem_pio2f+0x2ae>
 800aadc:	2b00      	cmp	r3, #0
 800aade:	d002      	beq.n	800aae6 <__kernel_rem_pio2f+0x2a6>
 800aae0:	1ac3      	subs	r3, r0, r3
 800aae2:	603b      	str	r3, [r7, #0]
 800aae4:	4663      	mov	r3, ip
 800aae6:	001d      	movs	r5, r3
 800aae8:	3201      	adds	r2, #1
 800aaea:	3704      	adds	r7, #4
 800aaec:	e760      	b.n	800a9b0 <__kernel_rem_pio2f+0x170>
 800aaee:	1acb      	subs	r3, r1, r3
 800aaf0:	603b      	str	r3, [r7, #0]
 800aaf2:	002b      	movs	r3, r5
 800aaf4:	e7f7      	b.n	800aae6 <__kernel_rem_pio2f+0x2a6>
 800aaf6:	1e73      	subs	r3, r6, #1
 800aaf8:	009b      	lsls	r3, r3, #2
 800aafa:	aa0e      	add	r2, sp, #56	; 0x38
 800aafc:	589a      	ldr	r2, [r3, r2]
 800aafe:	920d      	str	r2, [sp, #52]	; 0x34
 800ab00:	227f      	movs	r2, #127	; 0x7f
 800ab02:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ab04:	400a      	ands	r2, r1
 800ab06:	a90e      	add	r1, sp, #56	; 0x38
 800ab08:	505a      	str	r2, [r3, r1]
 800ab0a:	e75d      	b.n	800a9c8 <__kernel_rem_pio2f+0x188>
 800ab0c:	1e73      	subs	r3, r6, #1
 800ab0e:	009b      	lsls	r3, r3, #2
 800ab10:	aa0e      	add	r2, sp, #56	; 0x38
 800ab12:	589a      	ldr	r2, [r3, r2]
 800ab14:	920d      	str	r2, [sp, #52]	; 0x34
 800ab16:	223f      	movs	r2, #63	; 0x3f
 800ab18:	e7f3      	b.n	800ab02 <__kernel_rem_pio2f+0x2c2>
 800ab1a:	0099      	lsls	r1, r3, #2
 800ab1c:	a80e      	add	r0, sp, #56	; 0x38
 800ab1e:	5809      	ldr	r1, [r1, r0]
 800ab20:	3b01      	subs	r3, #1
 800ab22:	430a      	orrs	r2, r1
 800ab24:	e7a1      	b.n	800aa6a <__kernel_rem_pio2f+0x22a>
 800ab26:	3301      	adds	r3, #1
 800ab28:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ab2a:	009a      	lsls	r2, r3, #2
 800ab2c:	4252      	negs	r2, r2
 800ab2e:	588a      	ldr	r2, [r1, r2]
 800ab30:	2a00      	cmp	r2, #0
 800ab32:	d0f8      	beq.n	800ab26 <__kernel_rem_pio2f+0x2e6>
 800ab34:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ab36:	18f3      	adds	r3, r6, r3
 800ab38:	18b4      	adds	r4, r6, r2
 800ab3a:	00a4      	lsls	r4, r4, #2
 800ab3c:	aa22      	add	r2, sp, #136	; 0x88
 800ab3e:	1c75      	adds	r5, r6, #1
 800ab40:	1914      	adds	r4, r2, r4
 800ab42:	9302      	str	r3, [sp, #8]
 800ab44:	9b02      	ldr	r3, [sp, #8]
 800ab46:	42ab      	cmp	r3, r5
 800ab48:	da03      	bge.n	800ab52 <__kernel_rem_pio2f+0x312>
 800ab4a:	001e      	movs	r6, r3
 800ab4c:	e6e4      	b.n	800a918 <__kernel_rem_pio2f+0xd8>
 800ab4e:	2301      	movs	r3, #1
 800ab50:	e7ea      	b.n	800ab28 <__kernel_rem_pio2f+0x2e8>
 800ab52:	00ab      	lsls	r3, r5, #2
 800ab54:	9305      	str	r3, [sp, #20]
 800ab56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ab58:	00aa      	lsls	r2, r5, #2
 800ab5a:	5898      	ldr	r0, [r3, r2]
 800ab5c:	f7f6 fbe2 	bl	8001324 <__aeabi_i2f>
 800ab60:	2700      	movs	r7, #0
 800ab62:	2600      	movs	r6, #0
 800ab64:	6020      	str	r0, [r4, #0]
 800ab66:	9b06      	ldr	r3, [sp, #24]
 800ab68:	429f      	cmp	r7, r3
 800ab6a:	dd09      	ble.n	800ab80 <__kernel_rem_pio2f+0x340>
 800ab6c:	21f0      	movs	r1, #240	; 0xf0
 800ab6e:	9a05      	ldr	r2, [sp, #20]
 800ab70:	ab0e      	add	r3, sp, #56	; 0x38
 800ab72:	185b      	adds	r3, r3, r1
 800ab74:	509e      	str	r6, [r3, r2]
 800ab76:	3501      	adds	r5, #1
 800ab78:	3404      	adds	r4, #4
 800ab7a:	e7e3      	b.n	800ab44 <__kernel_rem_pio2f+0x304>
 800ab7c:	0800ff98 	.word	0x0800ff98
 800ab80:	00bb      	lsls	r3, r7, #2
 800ab82:	425a      	negs	r2, r3
 800ab84:	58a1      	ldr	r1, [r4, r2]
 800ab86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ab88:	3701      	adds	r7, #1
 800ab8a:	58d0      	ldr	r0, [r2, r3]
 800ab8c:	f7f6 f8b2 	bl	8000cf4 <__aeabi_fmul>
 800ab90:	1c01      	adds	r1, r0, #0
 800ab92:	1c30      	adds	r0, r6, #0
 800ab94:	f7f5 fd48 	bl	8000628 <__aeabi_fadd>
 800ab98:	1c06      	adds	r6, r0, #0
 800ab9a:	e7e4      	b.n	800ab66 <__kernel_rem_pio2f+0x326>
 800ab9c:	3f01      	subs	r7, #1
 800ab9e:	e76a      	b.n	800aa76 <__kernel_rem_pio2f+0x236>
 800aba0:	9b08      	ldr	r3, [sp, #32]
 800aba2:	9a07      	ldr	r2, [sp, #28]
 800aba4:	1c20      	adds	r0, r4, #0
 800aba6:	1a99      	subs	r1, r3, r2
 800aba8:	f000 f9bc 	bl	800af24 <scalbnf>
 800abac:	2187      	movs	r1, #135	; 0x87
 800abae:	05c9      	lsls	r1, r1, #23
 800abb0:	1c04      	adds	r4, r0, #0
 800abb2:	f7f5 fca7 	bl	8000504 <__aeabi_fcmpge>
 800abb6:	2800      	cmp	r0, #0
 800abb8:	d021      	beq.n	800abfe <__kernel_rem_pio2f+0x3be>
 800abba:	21ee      	movs	r1, #238	; 0xee
 800abbc:	1c20      	adds	r0, r4, #0
 800abbe:	0589      	lsls	r1, r1, #22
 800abc0:	f7f6 f898 	bl	8000cf4 <__aeabi_fmul>
 800abc4:	f7f6 fb8e 	bl	80012e4 <__aeabi_f2iz>
 800abc8:	f7f6 fbac 	bl	8001324 <__aeabi_i2f>
 800abcc:	2187      	movs	r1, #135	; 0x87
 800abce:	05c9      	lsls	r1, r1, #23
 800abd0:	1c05      	adds	r5, r0, #0
 800abd2:	f7f6 f88f 	bl	8000cf4 <__aeabi_fmul>
 800abd6:	1c01      	adds	r1, r0, #0
 800abd8:	1c20      	adds	r0, r4, #0
 800abda:	f7f6 f9a5 	bl	8000f28 <__aeabi_fsub>
 800abde:	f7f6 fb81 	bl	80012e4 <__aeabi_f2iz>
 800abe2:	00b7      	lsls	r7, r6, #2
 800abe4:	ab0e      	add	r3, sp, #56	; 0x38
 800abe6:	51d8      	str	r0, [r3, r7]
 800abe8:	9b01      	ldr	r3, [sp, #4]
 800abea:	1c28      	adds	r0, r5, #0
 800abec:	3308      	adds	r3, #8
 800abee:	9301      	str	r3, [sp, #4]
 800abf0:	f7f6 fb78 	bl	80012e4 <__aeabi_f2iz>
 800abf4:	1c77      	adds	r7, r6, #1
 800abf6:	00bc      	lsls	r4, r7, #2
 800abf8:	ab0e      	add	r3, sp, #56	; 0x38
 800abfa:	5118      	str	r0, [r3, r4]
 800abfc:	e744      	b.n	800aa88 <__kernel_rem_pio2f+0x248>
 800abfe:	1c20      	adds	r0, r4, #0
 800ac00:	f7f6 fb70 	bl	80012e4 <__aeabi_f2iz>
 800ac04:	00b5      	lsls	r5, r6, #2
 800ac06:	ab0e      	add	r3, sp, #56	; 0x38
 800ac08:	0037      	movs	r7, r6
 800ac0a:	5158      	str	r0, [r3, r5]
 800ac0c:	e73c      	b.n	800aa88 <__kernel_rem_pio2f+0x248>
 800ac0e:	ab0e      	add	r3, sp, #56	; 0x38
 800ac10:	00ae      	lsls	r6, r5, #2
 800ac12:	58f0      	ldr	r0, [r6, r3]
 800ac14:	f7f6 fb86 	bl	8001324 <__aeabi_i2f>
 800ac18:	1c21      	adds	r1, r4, #0
 800ac1a:	f7f6 f86b 	bl	8000cf4 <__aeabi_fmul>
 800ac1e:	22f0      	movs	r2, #240	; 0xf0
 800ac20:	21ee      	movs	r1, #238	; 0xee
 800ac22:	ab0e      	add	r3, sp, #56	; 0x38
 800ac24:	189b      	adds	r3, r3, r2
 800ac26:	5198      	str	r0, [r3, r6]
 800ac28:	0589      	lsls	r1, r1, #22
 800ac2a:	1c20      	adds	r0, r4, #0
 800ac2c:	f7f6 f862 	bl	8000cf4 <__aeabi_fmul>
 800ac30:	3d01      	subs	r5, #1
 800ac32:	1c04      	adds	r4, r0, #0
 800ac34:	e72f      	b.n	800aa96 <__kernel_rem_pio2f+0x256>
 800ac36:	9a01      	ldr	r2, [sp, #4]
 800ac38:	00b3      	lsls	r3, r6, #2
 800ac3a:	58d1      	ldr	r1, [r2, r3]
 800ac3c:	4a5b      	ldr	r2, [pc, #364]	; (800adac <__kernel_rem_pio2f+0x56c>)
 800ac3e:	3601      	adds	r6, #1
 800ac40:	5898      	ldr	r0, [r3, r2]
 800ac42:	f7f6 f857 	bl	8000cf4 <__aeabi_fmul>
 800ac46:	1c01      	adds	r1, r0, #0
 800ac48:	1c28      	adds	r0, r5, #0
 800ac4a:	f7f5 fced 	bl	8000628 <__aeabi_fadd>
 800ac4e:	1c05      	adds	r5, r0, #0
 800ac50:	9b04      	ldr	r3, [sp, #16]
 800ac52:	429e      	cmp	r6, r3
 800ac54:	dc01      	bgt.n	800ac5a <__kernel_rem_pio2f+0x41a>
 800ac56:	42b4      	cmp	r4, r6
 800ac58:	daed      	bge.n	800ac36 <__kernel_rem_pio2f+0x3f6>
 800ac5a:	21a0      	movs	r1, #160	; 0xa0
 800ac5c:	aa0e      	add	r2, sp, #56	; 0x38
 800ac5e:	00a3      	lsls	r3, r4, #2
 800ac60:	1852      	adds	r2, r2, r1
 800ac62:	50d5      	str	r5, [r2, r3]
 800ac64:	9b01      	ldr	r3, [sp, #4]
 800ac66:	3401      	adds	r4, #1
 800ac68:	3b04      	subs	r3, #4
 800ac6a:	9301      	str	r3, [sp, #4]
 800ac6c:	e71e      	b.n	800aaac <__kernel_rem_pio2f+0x26c>
 800ac6e:	2500      	movs	r5, #0
 800ac70:	2600      	movs	r6, #0
 800ac72:	e7ed      	b.n	800ac50 <__kernel_rem_pio2f+0x410>
 800ac74:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ac76:	2b03      	cmp	r3, #3
 800ac78:	d000      	beq.n	800ac7c <__kernel_rem_pio2f+0x43c>
 800ac7a:	e723      	b.n	800aac4 <__kernel_rem_pio2f+0x284>
 800ac7c:	aa36      	add	r2, sp, #216	; 0xd8
 800ac7e:	4694      	mov	ip, r2
 800ac80:	9b06      	ldr	r3, [sp, #24]
 800ac82:	9701      	str	r7, [sp, #4]
 800ac84:	4463      	add	r3, ip
 800ac86:	001d      	movs	r5, r3
 800ac88:	001c      	movs	r4, r3
 800ac8a:	9b01      	ldr	r3, [sp, #4]
 800ac8c:	3c04      	subs	r4, #4
 800ac8e:	2b00      	cmp	r3, #0
 800ac90:	dc51      	bgt.n	800ad36 <__kernel_rem_pio2f+0x4f6>
 800ac92:	9701      	str	r7, [sp, #4]
 800ac94:	9b01      	ldr	r3, [sp, #4]
 800ac96:	3d04      	subs	r5, #4
 800ac98:	2b01      	cmp	r3, #1
 800ac9a:	dc62      	bgt.n	800ad62 <__kernel_rem_pio2f+0x522>
 800ac9c:	2000      	movs	r0, #0
 800ac9e:	ac36      	add	r4, sp, #216	; 0xd8
 800aca0:	2f01      	cmp	r7, #1
 800aca2:	dc73      	bgt.n	800ad8c <__kernel_rem_pio2f+0x54c>
 800aca4:	9902      	ldr	r1, [sp, #8]
 800aca6:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 800aca8:	6863      	ldr	r3, [r4, #4]
 800acaa:	2900      	cmp	r1, #0
 800acac:	d174      	bne.n	800ad98 <__kernel_rem_pio2f+0x558>
 800acae:	9903      	ldr	r1, [sp, #12]
 800acb0:	604b      	str	r3, [r1, #4]
 800acb2:	000b      	movs	r3, r1
 800acb4:	600a      	str	r2, [r1, #0]
 800acb6:	6098      	str	r0, [r3, #8]
 800acb8:	e704      	b.n	800aac4 <__kernel_rem_pio2f+0x284>
 800acba:	00bb      	lsls	r3, r7, #2
 800acbc:	5919      	ldr	r1, [r3, r4]
 800acbe:	f7f5 fcb3 	bl	8000628 <__aeabi_fadd>
 800acc2:	3f01      	subs	r7, #1
 800acc4:	2f00      	cmp	r7, #0
 800acc6:	daf8      	bge.n	800acba <__kernel_rem_pio2f+0x47a>
 800acc8:	9b02      	ldr	r3, [sp, #8]
 800acca:	2b00      	cmp	r3, #0
 800accc:	d002      	beq.n	800acd4 <__kernel_rem_pio2f+0x494>
 800acce:	2380      	movs	r3, #128	; 0x80
 800acd0:	061b      	lsls	r3, r3, #24
 800acd2:	18c0      	adds	r0, r0, r3
 800acd4:	9b03      	ldr	r3, [sp, #12]
 800acd6:	6018      	str	r0, [r3, #0]
 800acd8:	e6f4      	b.n	800aac4 <__kernel_rem_pio2f+0x284>
 800acda:	2000      	movs	r0, #0
 800acdc:	ac36      	add	r4, sp, #216	; 0xd8
 800acde:	e7f1      	b.n	800acc4 <__kernel_rem_pio2f+0x484>
 800ace0:	00a3      	lsls	r3, r4, #2
 800ace2:	5959      	ldr	r1, [r3, r5]
 800ace4:	f7f5 fca0 	bl	8000628 <__aeabi_fadd>
 800ace8:	3c01      	subs	r4, #1
 800acea:	2c00      	cmp	r4, #0
 800acec:	daf8      	bge.n	800ace0 <__kernel_rem_pio2f+0x4a0>
 800acee:	9a02      	ldr	r2, [sp, #8]
 800acf0:	1c03      	adds	r3, r0, #0
 800acf2:	2a00      	cmp	r2, #0
 800acf4:	d002      	beq.n	800acfc <__kernel_rem_pio2f+0x4bc>
 800acf6:	2380      	movs	r3, #128	; 0x80
 800acf8:	061b      	lsls	r3, r3, #24
 800acfa:	18c3      	adds	r3, r0, r3
 800acfc:	9a03      	ldr	r2, [sp, #12]
 800acfe:	1c01      	adds	r1, r0, #0
 800ad00:	6013      	str	r3, [r2, #0]
 800ad02:	9836      	ldr	r0, [sp, #216]	; 0xd8
 800ad04:	f7f6 f910 	bl	8000f28 <__aeabi_fsub>
 800ad08:	2401      	movs	r4, #1
 800ad0a:	ad36      	add	r5, sp, #216	; 0xd8
 800ad0c:	42a7      	cmp	r7, r4
 800ad0e:	da0c      	bge.n	800ad2a <__kernel_rem_pio2f+0x4ea>
 800ad10:	9b02      	ldr	r3, [sp, #8]
 800ad12:	2b00      	cmp	r3, #0
 800ad14:	d002      	beq.n	800ad1c <__kernel_rem_pio2f+0x4dc>
 800ad16:	2380      	movs	r3, #128	; 0x80
 800ad18:	061b      	lsls	r3, r3, #24
 800ad1a:	18c0      	adds	r0, r0, r3
 800ad1c:	9b03      	ldr	r3, [sp, #12]
 800ad1e:	6058      	str	r0, [r3, #4]
 800ad20:	e6d0      	b.n	800aac4 <__kernel_rem_pio2f+0x284>
 800ad22:	003c      	movs	r4, r7
 800ad24:	2000      	movs	r0, #0
 800ad26:	ad36      	add	r5, sp, #216	; 0xd8
 800ad28:	e7df      	b.n	800acea <__kernel_rem_pio2f+0x4aa>
 800ad2a:	00a3      	lsls	r3, r4, #2
 800ad2c:	5959      	ldr	r1, [r3, r5]
 800ad2e:	f7f5 fc7b 	bl	8000628 <__aeabi_fadd>
 800ad32:	3401      	adds	r4, #1
 800ad34:	e7ea      	b.n	800ad0c <__kernel_rem_pio2f+0x4cc>
 800ad36:	9b01      	ldr	r3, [sp, #4]
 800ad38:	6826      	ldr	r6, [r4, #0]
 800ad3a:	3b01      	subs	r3, #1
 800ad3c:	9301      	str	r3, [sp, #4]
 800ad3e:	6863      	ldr	r3, [r4, #4]
 800ad40:	1c30      	adds	r0, r6, #0
 800ad42:	1c19      	adds	r1, r3, #0
 800ad44:	9304      	str	r3, [sp, #16]
 800ad46:	f7f5 fc6f 	bl	8000628 <__aeabi_fadd>
 800ad4a:	1c01      	adds	r1, r0, #0
 800ad4c:	9006      	str	r0, [sp, #24]
 800ad4e:	1c30      	adds	r0, r6, #0
 800ad50:	f7f6 f8ea 	bl	8000f28 <__aeabi_fsub>
 800ad54:	9904      	ldr	r1, [sp, #16]
 800ad56:	f7f5 fc67 	bl	8000628 <__aeabi_fadd>
 800ad5a:	9b06      	ldr	r3, [sp, #24]
 800ad5c:	6060      	str	r0, [r4, #4]
 800ad5e:	6023      	str	r3, [r4, #0]
 800ad60:	e793      	b.n	800ac8a <__kernel_rem_pio2f+0x44a>
 800ad62:	682c      	ldr	r4, [r5, #0]
 800ad64:	686e      	ldr	r6, [r5, #4]
 800ad66:	9b01      	ldr	r3, [sp, #4]
 800ad68:	1c31      	adds	r1, r6, #0
 800ad6a:	3b01      	subs	r3, #1
 800ad6c:	1c20      	adds	r0, r4, #0
 800ad6e:	9301      	str	r3, [sp, #4]
 800ad70:	f7f5 fc5a 	bl	8000628 <__aeabi_fadd>
 800ad74:	1c01      	adds	r1, r0, #0
 800ad76:	9004      	str	r0, [sp, #16]
 800ad78:	1c20      	adds	r0, r4, #0
 800ad7a:	f7f6 f8d5 	bl	8000f28 <__aeabi_fsub>
 800ad7e:	1c31      	adds	r1, r6, #0
 800ad80:	f7f5 fc52 	bl	8000628 <__aeabi_fadd>
 800ad84:	9b04      	ldr	r3, [sp, #16]
 800ad86:	6068      	str	r0, [r5, #4]
 800ad88:	602b      	str	r3, [r5, #0]
 800ad8a:	e783      	b.n	800ac94 <__kernel_rem_pio2f+0x454>
 800ad8c:	00bb      	lsls	r3, r7, #2
 800ad8e:	58e1      	ldr	r1, [r4, r3]
 800ad90:	f7f5 fc4a 	bl	8000628 <__aeabi_fadd>
 800ad94:	3f01      	subs	r7, #1
 800ad96:	e783      	b.n	800aca0 <__kernel_rem_pio2f+0x460>
 800ad98:	2180      	movs	r1, #128	; 0x80
 800ad9a:	9c03      	ldr	r4, [sp, #12]
 800ad9c:	0609      	lsls	r1, r1, #24
 800ad9e:	185b      	adds	r3, r3, r1
 800ada0:	1852      	adds	r2, r2, r1
 800ada2:	6063      	str	r3, [r4, #4]
 800ada4:	6022      	str	r2, [r4, #0]
 800ada6:	0023      	movs	r3, r4
 800ada8:	1840      	adds	r0, r0, r1
 800adaa:	e784      	b.n	800acb6 <__kernel_rem_pio2f+0x476>
 800adac:	0800ff6c 	.word	0x0800ff6c

0800adb0 <__kernel_sinf>:
 800adb0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800adb2:	9201      	str	r2, [sp, #4]
 800adb4:	22c8      	movs	r2, #200	; 0xc8
 800adb6:	0043      	lsls	r3, r0, #1
 800adb8:	1c04      	adds	r4, r0, #0
 800adba:	9100      	str	r1, [sp, #0]
 800adbc:	085b      	lsrs	r3, r3, #1
 800adbe:	0592      	lsls	r2, r2, #22
 800adc0:	4293      	cmp	r3, r2
 800adc2:	da03      	bge.n	800adcc <__kernel_sinf+0x1c>
 800adc4:	f7f6 fa8e 	bl	80012e4 <__aeabi_f2iz>
 800adc8:	2800      	cmp	r0, #0
 800adca:	d035      	beq.n	800ae38 <__kernel_sinf+0x88>
 800adcc:	1c21      	adds	r1, r4, #0
 800adce:	1c20      	adds	r0, r4, #0
 800add0:	f7f5 ff90 	bl	8000cf4 <__aeabi_fmul>
 800add4:	1c05      	adds	r5, r0, #0
 800add6:	1c01      	adds	r1, r0, #0
 800add8:	1c20      	adds	r0, r4, #0
 800adda:	f7f5 ff8b 	bl	8000cf4 <__aeabi_fmul>
 800adde:	4928      	ldr	r1, [pc, #160]	; (800ae80 <__kernel_sinf+0xd0>)
 800ade0:	1c06      	adds	r6, r0, #0
 800ade2:	1c28      	adds	r0, r5, #0
 800ade4:	f7f5 ff86 	bl	8000cf4 <__aeabi_fmul>
 800ade8:	4926      	ldr	r1, [pc, #152]	; (800ae84 <__kernel_sinf+0xd4>)
 800adea:	f7f6 f89d 	bl	8000f28 <__aeabi_fsub>
 800adee:	1c29      	adds	r1, r5, #0
 800adf0:	f7f5 ff80 	bl	8000cf4 <__aeabi_fmul>
 800adf4:	4924      	ldr	r1, [pc, #144]	; (800ae88 <__kernel_sinf+0xd8>)
 800adf6:	f7f5 fc17 	bl	8000628 <__aeabi_fadd>
 800adfa:	1c29      	adds	r1, r5, #0
 800adfc:	f7f5 ff7a 	bl	8000cf4 <__aeabi_fmul>
 800ae00:	4922      	ldr	r1, [pc, #136]	; (800ae8c <__kernel_sinf+0xdc>)
 800ae02:	f7f6 f891 	bl	8000f28 <__aeabi_fsub>
 800ae06:	1c29      	adds	r1, r5, #0
 800ae08:	f7f5 ff74 	bl	8000cf4 <__aeabi_fmul>
 800ae0c:	4920      	ldr	r1, [pc, #128]	; (800ae90 <__kernel_sinf+0xe0>)
 800ae0e:	f7f5 fc0b 	bl	8000628 <__aeabi_fadd>
 800ae12:	9b01      	ldr	r3, [sp, #4]
 800ae14:	1c07      	adds	r7, r0, #0
 800ae16:	2b00      	cmp	r3, #0
 800ae18:	d110      	bne.n	800ae3c <__kernel_sinf+0x8c>
 800ae1a:	1c01      	adds	r1, r0, #0
 800ae1c:	1c28      	adds	r0, r5, #0
 800ae1e:	f7f5 ff69 	bl	8000cf4 <__aeabi_fmul>
 800ae22:	491c      	ldr	r1, [pc, #112]	; (800ae94 <__kernel_sinf+0xe4>)
 800ae24:	f7f6 f880 	bl	8000f28 <__aeabi_fsub>
 800ae28:	1c31      	adds	r1, r6, #0
 800ae2a:	f7f5 ff63 	bl	8000cf4 <__aeabi_fmul>
 800ae2e:	1c01      	adds	r1, r0, #0
 800ae30:	1c20      	adds	r0, r4, #0
 800ae32:	f7f5 fbf9 	bl	8000628 <__aeabi_fadd>
 800ae36:	1c04      	adds	r4, r0, #0
 800ae38:	1c20      	adds	r0, r4, #0
 800ae3a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800ae3c:	21fc      	movs	r1, #252	; 0xfc
 800ae3e:	9800      	ldr	r0, [sp, #0]
 800ae40:	0589      	lsls	r1, r1, #22
 800ae42:	f7f5 ff57 	bl	8000cf4 <__aeabi_fmul>
 800ae46:	1c39      	adds	r1, r7, #0
 800ae48:	9001      	str	r0, [sp, #4]
 800ae4a:	1c30      	adds	r0, r6, #0
 800ae4c:	f7f5 ff52 	bl	8000cf4 <__aeabi_fmul>
 800ae50:	1c01      	adds	r1, r0, #0
 800ae52:	9801      	ldr	r0, [sp, #4]
 800ae54:	f7f6 f868 	bl	8000f28 <__aeabi_fsub>
 800ae58:	1c29      	adds	r1, r5, #0
 800ae5a:	f7f5 ff4b 	bl	8000cf4 <__aeabi_fmul>
 800ae5e:	9900      	ldr	r1, [sp, #0]
 800ae60:	f7f6 f862 	bl	8000f28 <__aeabi_fsub>
 800ae64:	490b      	ldr	r1, [pc, #44]	; (800ae94 <__kernel_sinf+0xe4>)
 800ae66:	1c05      	adds	r5, r0, #0
 800ae68:	1c30      	adds	r0, r6, #0
 800ae6a:	f7f5 ff43 	bl	8000cf4 <__aeabi_fmul>
 800ae6e:	1c01      	adds	r1, r0, #0
 800ae70:	1c28      	adds	r0, r5, #0
 800ae72:	f7f5 fbd9 	bl	8000628 <__aeabi_fadd>
 800ae76:	1c01      	adds	r1, r0, #0
 800ae78:	1c20      	adds	r0, r4, #0
 800ae7a:	f7f6 f855 	bl	8000f28 <__aeabi_fsub>
 800ae7e:	e7da      	b.n	800ae36 <__kernel_sinf+0x86>
 800ae80:	2f2ec9d3 	.word	0x2f2ec9d3
 800ae84:	32d72f34 	.word	0x32d72f34
 800ae88:	3638ef1b 	.word	0x3638ef1b
 800ae8c:	39500d01 	.word	0x39500d01
 800ae90:	3c088889 	.word	0x3c088889
 800ae94:	3e2aaaab 	.word	0x3e2aaaab

0800ae98 <fabsf>:
 800ae98:	0040      	lsls	r0, r0, #1
 800ae9a:	0840      	lsrs	r0, r0, #1
 800ae9c:	4770      	bx	lr
	...

0800aea0 <floorf>:
 800aea0:	b570      	push	{r4, r5, r6, lr}
 800aea2:	0045      	lsls	r5, r0, #1
 800aea4:	086e      	lsrs	r6, r5, #1
 800aea6:	0e2d      	lsrs	r5, r5, #24
 800aea8:	3d7f      	subs	r5, #127	; 0x7f
 800aeaa:	0004      	movs	r4, r0
 800aeac:	2d16      	cmp	r5, #22
 800aeae:	dc24      	bgt.n	800aefa <floorf+0x5a>
 800aeb0:	2d00      	cmp	r5, #0
 800aeb2:	da0e      	bge.n	800aed2 <floorf+0x32>
 800aeb4:	4916      	ldr	r1, [pc, #88]	; (800af10 <floorf+0x70>)
 800aeb6:	f7f5 fbb7 	bl	8000628 <__aeabi_fadd>
 800aeba:	2100      	movs	r1, #0
 800aebc:	f7f5 fb18 	bl	80004f0 <__aeabi_fcmpgt>
 800aec0:	2800      	cmp	r0, #0
 800aec2:	d004      	beq.n	800aece <floorf+0x2e>
 800aec4:	2c00      	cmp	r4, #0
 800aec6:	da20      	bge.n	800af0a <floorf+0x6a>
 800aec8:	2e00      	cmp	r6, #0
 800aeca:	d000      	beq.n	800aece <floorf+0x2e>
 800aecc:	4c11      	ldr	r4, [pc, #68]	; (800af14 <floorf+0x74>)
 800aece:	1c20      	adds	r0, r4, #0
 800aed0:	e01a      	b.n	800af08 <floorf+0x68>
 800aed2:	4e11      	ldr	r6, [pc, #68]	; (800af18 <floorf+0x78>)
 800aed4:	412e      	asrs	r6, r5
 800aed6:	4206      	tst	r6, r0
 800aed8:	d016      	beq.n	800af08 <floorf+0x68>
 800aeda:	490d      	ldr	r1, [pc, #52]	; (800af10 <floorf+0x70>)
 800aedc:	f7f5 fba4 	bl	8000628 <__aeabi_fadd>
 800aee0:	2100      	movs	r1, #0
 800aee2:	f7f5 fb05 	bl	80004f0 <__aeabi_fcmpgt>
 800aee6:	2800      	cmp	r0, #0
 800aee8:	d0f1      	beq.n	800aece <floorf+0x2e>
 800aeea:	2c00      	cmp	r4, #0
 800aeec:	da03      	bge.n	800aef6 <floorf+0x56>
 800aeee:	2380      	movs	r3, #128	; 0x80
 800aef0:	041b      	lsls	r3, r3, #16
 800aef2:	412b      	asrs	r3, r5
 800aef4:	18e4      	adds	r4, r4, r3
 800aef6:	43b4      	bics	r4, r6
 800aef8:	e7e9      	b.n	800aece <floorf+0x2e>
 800aefa:	23ff      	movs	r3, #255	; 0xff
 800aefc:	05db      	lsls	r3, r3, #23
 800aefe:	429e      	cmp	r6, r3
 800af00:	d302      	bcc.n	800af08 <floorf+0x68>
 800af02:	1c01      	adds	r1, r0, #0
 800af04:	f7f5 fb90 	bl	8000628 <__aeabi_fadd>
 800af08:	bd70      	pop	{r4, r5, r6, pc}
 800af0a:	2400      	movs	r4, #0
 800af0c:	e7df      	b.n	800aece <floorf+0x2e>
 800af0e:	46c0      	nop			; (mov r8, r8)
 800af10:	7149f2ca 	.word	0x7149f2ca
 800af14:	bf800000 	.word	0xbf800000
 800af18:	007fffff 	.word	0x007fffff

0800af1c <nanf>:
 800af1c:	4800      	ldr	r0, [pc, #0]	; (800af20 <nanf+0x4>)
 800af1e:	4770      	bx	lr
 800af20:	7fc00000 	.word	0x7fc00000

0800af24 <scalbnf>:
 800af24:	0043      	lsls	r3, r0, #1
 800af26:	b570      	push	{r4, r5, r6, lr}
 800af28:	0002      	movs	r2, r0
 800af2a:	000c      	movs	r4, r1
 800af2c:	085d      	lsrs	r5, r3, #1
 800af2e:	2b00      	cmp	r3, #0
 800af30:	d006      	beq.n	800af40 <scalbnf+0x1c>
 800af32:	21ff      	movs	r1, #255	; 0xff
 800af34:	05c9      	lsls	r1, r1, #23
 800af36:	428d      	cmp	r5, r1
 800af38:	d303      	bcc.n	800af42 <scalbnf+0x1e>
 800af3a:	1c01      	adds	r1, r0, #0
 800af3c:	f7f5 fb74 	bl	8000628 <__aeabi_fadd>
 800af40:	bd70      	pop	{r4, r5, r6, pc}
 800af42:	4208      	tst	r0, r1
 800af44:	d116      	bne.n	800af74 <scalbnf+0x50>
 800af46:	2198      	movs	r1, #152	; 0x98
 800af48:	05c9      	lsls	r1, r1, #23
 800af4a:	f7f5 fed3 	bl	8000cf4 <__aeabi_fmul>
 800af4e:	4b1b      	ldr	r3, [pc, #108]	; (800afbc <scalbnf+0x98>)
 800af50:	429c      	cmp	r4, r3
 800af52:	db0b      	blt.n	800af6c <scalbnf+0x48>
 800af54:	0002      	movs	r2, r0
 800af56:	15c3      	asrs	r3, r0, #23
 800af58:	b2db      	uxtb	r3, r3
 800af5a:	3b19      	subs	r3, #25
 800af5c:	191b      	adds	r3, r3, r4
 800af5e:	2bfe      	cmp	r3, #254	; 0xfe
 800af60:	dd0a      	ble.n	800af78 <scalbnf+0x54>
 800af62:	4b17      	ldr	r3, [pc, #92]	; (800afc0 <scalbnf+0x9c>)
 800af64:	2800      	cmp	r0, #0
 800af66:	da18      	bge.n	800af9a <scalbnf+0x76>
 800af68:	4b16      	ldr	r3, [pc, #88]	; (800afc4 <scalbnf+0xa0>)
 800af6a:	e016      	b.n	800af9a <scalbnf+0x76>
 800af6c:	4916      	ldr	r1, [pc, #88]	; (800afc8 <scalbnf+0xa4>)
 800af6e:	f7f5 fec1 	bl	8000cf4 <__aeabi_fmul>
 800af72:	e7e5      	b.n	800af40 <scalbnf+0x1c>
 800af74:	0e1b      	lsrs	r3, r3, #24
 800af76:	e7f1      	b.n	800af5c <scalbnf+0x38>
 800af78:	2b00      	cmp	r3, #0
 800af7a:	dd04      	ble.n	800af86 <scalbnf+0x62>
 800af7c:	4813      	ldr	r0, [pc, #76]	; (800afcc <scalbnf+0xa8>)
 800af7e:	05db      	lsls	r3, r3, #23
 800af80:	4010      	ands	r0, r2
 800af82:	4318      	orrs	r0, r3
 800af84:	e7dc      	b.n	800af40 <scalbnf+0x1c>
 800af86:	0019      	movs	r1, r3
 800af88:	3116      	adds	r1, #22
 800af8a:	da0f      	bge.n	800afac <scalbnf+0x88>
 800af8c:	4b10      	ldr	r3, [pc, #64]	; (800afd0 <scalbnf+0xac>)
 800af8e:	0fc0      	lsrs	r0, r0, #31
 800af90:	429c      	cmp	r4, r3
 800af92:	dd05      	ble.n	800afa0 <scalbnf+0x7c>
 800af94:	4b0a      	ldr	r3, [pc, #40]	; (800afc0 <scalbnf+0x9c>)
 800af96:	2800      	cmp	r0, #0
 800af98:	d1e6      	bne.n	800af68 <scalbnf+0x44>
 800af9a:	4909      	ldr	r1, [pc, #36]	; (800afc0 <scalbnf+0x9c>)
 800af9c:	1c18      	adds	r0, r3, #0
 800af9e:	e7e6      	b.n	800af6e <scalbnf+0x4a>
 800afa0:	4b09      	ldr	r3, [pc, #36]	; (800afc8 <scalbnf+0xa4>)
 800afa2:	2800      	cmp	r0, #0
 800afa4:	d000      	beq.n	800afa8 <scalbnf+0x84>
 800afa6:	4b0b      	ldr	r3, [pc, #44]	; (800afd4 <scalbnf+0xb0>)
 800afa8:	4907      	ldr	r1, [pc, #28]	; (800afc8 <scalbnf+0xa4>)
 800afaa:	e7f7      	b.n	800af9c <scalbnf+0x78>
 800afac:	21cc      	movs	r1, #204	; 0xcc
 800afae:	4807      	ldr	r0, [pc, #28]	; (800afcc <scalbnf+0xa8>)
 800afb0:	3319      	adds	r3, #25
 800afb2:	05db      	lsls	r3, r3, #23
 800afb4:	4010      	ands	r0, r2
 800afb6:	4318      	orrs	r0, r3
 800afb8:	0589      	lsls	r1, r1, #22
 800afba:	e7d8      	b.n	800af6e <scalbnf+0x4a>
 800afbc:	ffff3cb0 	.word	0xffff3cb0
 800afc0:	7149f2ca 	.word	0x7149f2ca
 800afc4:	f149f2ca 	.word	0xf149f2ca
 800afc8:	0da24260 	.word	0x0da24260
 800afcc:	807fffff 	.word	0x807fffff
 800afd0:	0000c350 	.word	0x0000c350
 800afd4:	8da24260 	.word	0x8da24260

0800afd8 <__errno>:
 800afd8:	4b01      	ldr	r3, [pc, #4]	; (800afe0 <__errno+0x8>)
 800afda:	6818      	ldr	r0, [r3, #0]
 800afdc:	4770      	bx	lr
 800afde:	46c0      	nop			; (mov r8, r8)
 800afe0:	2000005c 	.word	0x2000005c

0800afe4 <__libc_init_array>:
 800afe4:	b570      	push	{r4, r5, r6, lr}
 800afe6:	2600      	movs	r6, #0
 800afe8:	4d0c      	ldr	r5, [pc, #48]	; (800b01c <__libc_init_array+0x38>)
 800afea:	4c0d      	ldr	r4, [pc, #52]	; (800b020 <__libc_init_array+0x3c>)
 800afec:	1b64      	subs	r4, r4, r5
 800afee:	10a4      	asrs	r4, r4, #2
 800aff0:	42a6      	cmp	r6, r4
 800aff2:	d109      	bne.n	800b008 <__libc_init_array+0x24>
 800aff4:	2600      	movs	r6, #0
 800aff6:	f004 fd1b 	bl	800fa30 <_init>
 800affa:	4d0a      	ldr	r5, [pc, #40]	; (800b024 <__libc_init_array+0x40>)
 800affc:	4c0a      	ldr	r4, [pc, #40]	; (800b028 <__libc_init_array+0x44>)
 800affe:	1b64      	subs	r4, r4, r5
 800b000:	10a4      	asrs	r4, r4, #2
 800b002:	42a6      	cmp	r6, r4
 800b004:	d105      	bne.n	800b012 <__libc_init_array+0x2e>
 800b006:	bd70      	pop	{r4, r5, r6, pc}
 800b008:	00b3      	lsls	r3, r6, #2
 800b00a:	58eb      	ldr	r3, [r5, r3]
 800b00c:	4798      	blx	r3
 800b00e:	3601      	adds	r6, #1
 800b010:	e7ee      	b.n	800aff0 <__libc_init_array+0xc>
 800b012:	00b3      	lsls	r3, r6, #2
 800b014:	58eb      	ldr	r3, [r5, r3]
 800b016:	4798      	blx	r3
 800b018:	3601      	adds	r6, #1
 800b01a:	e7f2      	b.n	800b002 <__libc_init_array+0x1e>
 800b01c:	0801045c 	.word	0x0801045c
 800b020:	0801045c 	.word	0x0801045c
 800b024:	0801045c 	.word	0x0801045c
 800b028:	08010464 	.word	0x08010464

0800b02c <memset>:
 800b02c:	0003      	movs	r3, r0
 800b02e:	1882      	adds	r2, r0, r2
 800b030:	4293      	cmp	r3, r2
 800b032:	d100      	bne.n	800b036 <memset+0xa>
 800b034:	4770      	bx	lr
 800b036:	7019      	strb	r1, [r3, #0]
 800b038:	3301      	adds	r3, #1
 800b03a:	e7f9      	b.n	800b030 <memset+0x4>

0800b03c <__cvt>:
 800b03c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b03e:	001e      	movs	r6, r3
 800b040:	2300      	movs	r3, #0
 800b042:	0014      	movs	r4, r2
 800b044:	b08b      	sub	sp, #44	; 0x2c
 800b046:	429e      	cmp	r6, r3
 800b048:	da04      	bge.n	800b054 <__cvt+0x18>
 800b04a:	2180      	movs	r1, #128	; 0x80
 800b04c:	0609      	lsls	r1, r1, #24
 800b04e:	1873      	adds	r3, r6, r1
 800b050:	001e      	movs	r6, r3
 800b052:	232d      	movs	r3, #45	; 0x2d
 800b054:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b056:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800b058:	7013      	strb	r3, [r2, #0]
 800b05a:	2320      	movs	r3, #32
 800b05c:	2203      	movs	r2, #3
 800b05e:	439f      	bics	r7, r3
 800b060:	2f46      	cmp	r7, #70	; 0x46
 800b062:	d007      	beq.n	800b074 <__cvt+0x38>
 800b064:	003b      	movs	r3, r7
 800b066:	3b45      	subs	r3, #69	; 0x45
 800b068:	4259      	negs	r1, r3
 800b06a:	414b      	adcs	r3, r1
 800b06c:	9910      	ldr	r1, [sp, #64]	; 0x40
 800b06e:	3a01      	subs	r2, #1
 800b070:	18cb      	adds	r3, r1, r3
 800b072:	9310      	str	r3, [sp, #64]	; 0x40
 800b074:	ab09      	add	r3, sp, #36	; 0x24
 800b076:	9304      	str	r3, [sp, #16]
 800b078:	ab08      	add	r3, sp, #32
 800b07a:	9303      	str	r3, [sp, #12]
 800b07c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b07e:	9200      	str	r2, [sp, #0]
 800b080:	9302      	str	r3, [sp, #8]
 800b082:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b084:	0022      	movs	r2, r4
 800b086:	9301      	str	r3, [sp, #4]
 800b088:	0033      	movs	r3, r6
 800b08a:	f001 fdf5 	bl	800cc78 <_dtoa_r>
 800b08e:	0005      	movs	r5, r0
 800b090:	2f47      	cmp	r7, #71	; 0x47
 800b092:	d102      	bne.n	800b09a <__cvt+0x5e>
 800b094:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b096:	07db      	lsls	r3, r3, #31
 800b098:	d528      	bpl.n	800b0ec <__cvt+0xb0>
 800b09a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b09c:	18eb      	adds	r3, r5, r3
 800b09e:	9307      	str	r3, [sp, #28]
 800b0a0:	2f46      	cmp	r7, #70	; 0x46
 800b0a2:	d114      	bne.n	800b0ce <__cvt+0x92>
 800b0a4:	782b      	ldrb	r3, [r5, #0]
 800b0a6:	2b30      	cmp	r3, #48	; 0x30
 800b0a8:	d10c      	bne.n	800b0c4 <__cvt+0x88>
 800b0aa:	2200      	movs	r2, #0
 800b0ac:	2300      	movs	r3, #0
 800b0ae:	0020      	movs	r0, r4
 800b0b0:	0031      	movs	r1, r6
 800b0b2:	f7f5 f9c9 	bl	8000448 <__aeabi_dcmpeq>
 800b0b6:	2800      	cmp	r0, #0
 800b0b8:	d104      	bne.n	800b0c4 <__cvt+0x88>
 800b0ba:	2301      	movs	r3, #1
 800b0bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b0be:	1a9b      	subs	r3, r3, r2
 800b0c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800b0c2:	6013      	str	r3, [r2, #0]
 800b0c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b0c6:	9a07      	ldr	r2, [sp, #28]
 800b0c8:	681b      	ldr	r3, [r3, #0]
 800b0ca:	18d3      	adds	r3, r2, r3
 800b0cc:	9307      	str	r3, [sp, #28]
 800b0ce:	2200      	movs	r2, #0
 800b0d0:	2300      	movs	r3, #0
 800b0d2:	0020      	movs	r0, r4
 800b0d4:	0031      	movs	r1, r6
 800b0d6:	f7f5 f9b7 	bl	8000448 <__aeabi_dcmpeq>
 800b0da:	2800      	cmp	r0, #0
 800b0dc:	d001      	beq.n	800b0e2 <__cvt+0xa6>
 800b0de:	9b07      	ldr	r3, [sp, #28]
 800b0e0:	9309      	str	r3, [sp, #36]	; 0x24
 800b0e2:	2230      	movs	r2, #48	; 0x30
 800b0e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b0e6:	9907      	ldr	r1, [sp, #28]
 800b0e8:	428b      	cmp	r3, r1
 800b0ea:	d306      	bcc.n	800b0fa <__cvt+0xbe>
 800b0ec:	0028      	movs	r0, r5
 800b0ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b0f0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800b0f2:	1b5b      	subs	r3, r3, r5
 800b0f4:	6013      	str	r3, [r2, #0]
 800b0f6:	b00b      	add	sp, #44	; 0x2c
 800b0f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b0fa:	1c59      	adds	r1, r3, #1
 800b0fc:	9109      	str	r1, [sp, #36]	; 0x24
 800b0fe:	701a      	strb	r2, [r3, #0]
 800b100:	e7f0      	b.n	800b0e4 <__cvt+0xa8>

0800b102 <__exponent>:
 800b102:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b104:	1c83      	adds	r3, r0, #2
 800b106:	b087      	sub	sp, #28
 800b108:	9303      	str	r3, [sp, #12]
 800b10a:	0005      	movs	r5, r0
 800b10c:	000c      	movs	r4, r1
 800b10e:	232b      	movs	r3, #43	; 0x2b
 800b110:	7002      	strb	r2, [r0, #0]
 800b112:	2900      	cmp	r1, #0
 800b114:	da01      	bge.n	800b11a <__exponent+0x18>
 800b116:	424c      	negs	r4, r1
 800b118:	3302      	adds	r3, #2
 800b11a:	706b      	strb	r3, [r5, #1]
 800b11c:	2c09      	cmp	r4, #9
 800b11e:	dd31      	ble.n	800b184 <__exponent+0x82>
 800b120:	270a      	movs	r7, #10
 800b122:	ab04      	add	r3, sp, #16
 800b124:	1dde      	adds	r6, r3, #7
 800b126:	0020      	movs	r0, r4
 800b128:	0039      	movs	r1, r7
 800b12a:	9601      	str	r6, [sp, #4]
 800b12c:	f7f5 f976 	bl	800041c <__aeabi_idivmod>
 800b130:	3e01      	subs	r6, #1
 800b132:	3130      	adds	r1, #48	; 0x30
 800b134:	0020      	movs	r0, r4
 800b136:	7031      	strb	r1, [r6, #0]
 800b138:	0039      	movs	r1, r7
 800b13a:	9402      	str	r4, [sp, #8]
 800b13c:	f7f5 f888 	bl	8000250 <__divsi3>
 800b140:	9b02      	ldr	r3, [sp, #8]
 800b142:	0004      	movs	r4, r0
 800b144:	2b63      	cmp	r3, #99	; 0x63
 800b146:	dcee      	bgt.n	800b126 <__exponent+0x24>
 800b148:	9b01      	ldr	r3, [sp, #4]
 800b14a:	3430      	adds	r4, #48	; 0x30
 800b14c:	1e9a      	subs	r2, r3, #2
 800b14e:	0013      	movs	r3, r2
 800b150:	9903      	ldr	r1, [sp, #12]
 800b152:	7014      	strb	r4, [r2, #0]
 800b154:	a804      	add	r0, sp, #16
 800b156:	3007      	adds	r0, #7
 800b158:	4298      	cmp	r0, r3
 800b15a:	d80e      	bhi.n	800b17a <__exponent+0x78>
 800b15c:	ab04      	add	r3, sp, #16
 800b15e:	3307      	adds	r3, #7
 800b160:	2000      	movs	r0, #0
 800b162:	429a      	cmp	r2, r3
 800b164:	d804      	bhi.n	800b170 <__exponent+0x6e>
 800b166:	ab04      	add	r3, sp, #16
 800b168:	3009      	adds	r0, #9
 800b16a:	18c0      	adds	r0, r0, r3
 800b16c:	9b01      	ldr	r3, [sp, #4]
 800b16e:	1ac0      	subs	r0, r0, r3
 800b170:	9b03      	ldr	r3, [sp, #12]
 800b172:	1818      	adds	r0, r3, r0
 800b174:	1b40      	subs	r0, r0, r5
 800b176:	b007      	add	sp, #28
 800b178:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b17a:	7818      	ldrb	r0, [r3, #0]
 800b17c:	3301      	adds	r3, #1
 800b17e:	7008      	strb	r0, [r1, #0]
 800b180:	3101      	adds	r1, #1
 800b182:	e7e7      	b.n	800b154 <__exponent+0x52>
 800b184:	2330      	movs	r3, #48	; 0x30
 800b186:	18e4      	adds	r4, r4, r3
 800b188:	70ab      	strb	r3, [r5, #2]
 800b18a:	1d28      	adds	r0, r5, #4
 800b18c:	70ec      	strb	r4, [r5, #3]
 800b18e:	e7f1      	b.n	800b174 <__exponent+0x72>

0800b190 <_printf_float>:
 800b190:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b192:	b095      	sub	sp, #84	; 0x54
 800b194:	000c      	movs	r4, r1
 800b196:	9208      	str	r2, [sp, #32]
 800b198:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b19a:	9309      	str	r3, [sp, #36]	; 0x24
 800b19c:	0007      	movs	r7, r0
 800b19e:	f002 fffd 	bl	800e19c <_localeconv_r>
 800b1a2:	6803      	ldr	r3, [r0, #0]
 800b1a4:	0018      	movs	r0, r3
 800b1a6:	930b      	str	r3, [sp, #44]	; 0x2c
 800b1a8:	f7f4 ffac 	bl	8000104 <strlen>
 800b1ac:	2300      	movs	r3, #0
 800b1ae:	9312      	str	r3, [sp, #72]	; 0x48
 800b1b0:	7e23      	ldrb	r3, [r4, #24]
 800b1b2:	2207      	movs	r2, #7
 800b1b4:	001e      	movs	r6, r3
 800b1b6:	6823      	ldr	r3, [r4, #0]
 800b1b8:	900d      	str	r0, [sp, #52]	; 0x34
 800b1ba:	930c      	str	r3, [sp, #48]	; 0x30
 800b1bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b1be:	682b      	ldr	r3, [r5, #0]
 800b1c0:	05c9      	lsls	r1, r1, #23
 800b1c2:	d547      	bpl.n	800b254 <_printf_float+0xc4>
 800b1c4:	189b      	adds	r3, r3, r2
 800b1c6:	4393      	bics	r3, r2
 800b1c8:	001a      	movs	r2, r3
 800b1ca:	3208      	adds	r2, #8
 800b1cc:	602a      	str	r2, [r5, #0]
 800b1ce:	681a      	ldr	r2, [r3, #0]
 800b1d0:	685b      	ldr	r3, [r3, #4]
 800b1d2:	64a2      	str	r2, [r4, #72]	; 0x48
 800b1d4:	64e3      	str	r3, [r4, #76]	; 0x4c
 800b1d6:	2201      	movs	r2, #1
 800b1d8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800b1da:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800b1dc:	930a      	str	r3, [sp, #40]	; 0x28
 800b1de:	006b      	lsls	r3, r5, #1
 800b1e0:	085b      	lsrs	r3, r3, #1
 800b1e2:	930e      	str	r3, [sp, #56]	; 0x38
 800b1e4:	980a      	ldr	r0, [sp, #40]	; 0x28
 800b1e6:	4ba8      	ldr	r3, [pc, #672]	; (800b488 <_printf_float+0x2f8>)
 800b1e8:	990e      	ldr	r1, [sp, #56]	; 0x38
 800b1ea:	4252      	negs	r2, r2
 800b1ec:	f7f7 fe8a 	bl	8002f04 <__aeabi_dcmpun>
 800b1f0:	2800      	cmp	r0, #0
 800b1f2:	d131      	bne.n	800b258 <_printf_float+0xc8>
 800b1f4:	2201      	movs	r2, #1
 800b1f6:	4ba4      	ldr	r3, [pc, #656]	; (800b488 <_printf_float+0x2f8>)
 800b1f8:	980a      	ldr	r0, [sp, #40]	; 0x28
 800b1fa:	990e      	ldr	r1, [sp, #56]	; 0x38
 800b1fc:	4252      	negs	r2, r2
 800b1fe:	f7f5 f933 	bl	8000468 <__aeabi_dcmple>
 800b202:	2800      	cmp	r0, #0
 800b204:	d128      	bne.n	800b258 <_printf_float+0xc8>
 800b206:	2200      	movs	r2, #0
 800b208:	2300      	movs	r3, #0
 800b20a:	0029      	movs	r1, r5
 800b20c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800b20e:	f7f5 f921 	bl	8000454 <__aeabi_dcmplt>
 800b212:	2800      	cmp	r0, #0
 800b214:	d003      	beq.n	800b21e <_printf_float+0x8e>
 800b216:	0023      	movs	r3, r4
 800b218:	222d      	movs	r2, #45	; 0x2d
 800b21a:	3343      	adds	r3, #67	; 0x43
 800b21c:	701a      	strb	r2, [r3, #0]
 800b21e:	4d9b      	ldr	r5, [pc, #620]	; (800b48c <_printf_float+0x2fc>)
 800b220:	2e47      	cmp	r6, #71	; 0x47
 800b222:	d900      	bls.n	800b226 <_printf_float+0x96>
 800b224:	4d9a      	ldr	r5, [pc, #616]	; (800b490 <_printf_float+0x300>)
 800b226:	2303      	movs	r3, #3
 800b228:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800b22a:	6123      	str	r3, [r4, #16]
 800b22c:	3301      	adds	r3, #1
 800b22e:	439a      	bics	r2, r3
 800b230:	2300      	movs	r3, #0
 800b232:	6022      	str	r2, [r4, #0]
 800b234:	930a      	str	r3, [sp, #40]	; 0x28
 800b236:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b238:	0021      	movs	r1, r4
 800b23a:	9300      	str	r3, [sp, #0]
 800b23c:	0038      	movs	r0, r7
 800b23e:	9b08      	ldr	r3, [sp, #32]
 800b240:	aa13      	add	r2, sp, #76	; 0x4c
 800b242:	f000 f9f3 	bl	800b62c <_printf_common>
 800b246:	1c43      	adds	r3, r0, #1
 800b248:	d000      	beq.n	800b24c <_printf_float+0xbc>
 800b24a:	e09e      	b.n	800b38a <_printf_float+0x1fa>
 800b24c:	2001      	movs	r0, #1
 800b24e:	4240      	negs	r0, r0
 800b250:	b015      	add	sp, #84	; 0x54
 800b252:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b254:	3307      	adds	r3, #7
 800b256:	e7b6      	b.n	800b1c6 <_printf_float+0x36>
 800b258:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b25a:	002b      	movs	r3, r5
 800b25c:	0010      	movs	r0, r2
 800b25e:	0029      	movs	r1, r5
 800b260:	f7f7 fe50 	bl	8002f04 <__aeabi_dcmpun>
 800b264:	2800      	cmp	r0, #0
 800b266:	d00a      	beq.n	800b27e <_printf_float+0xee>
 800b268:	2d00      	cmp	r5, #0
 800b26a:	da03      	bge.n	800b274 <_printf_float+0xe4>
 800b26c:	0023      	movs	r3, r4
 800b26e:	222d      	movs	r2, #45	; 0x2d
 800b270:	3343      	adds	r3, #67	; 0x43
 800b272:	701a      	strb	r2, [r3, #0]
 800b274:	4d87      	ldr	r5, [pc, #540]	; (800b494 <_printf_float+0x304>)
 800b276:	2e47      	cmp	r6, #71	; 0x47
 800b278:	d9d5      	bls.n	800b226 <_printf_float+0x96>
 800b27a:	4d87      	ldr	r5, [pc, #540]	; (800b498 <_printf_float+0x308>)
 800b27c:	e7d3      	b.n	800b226 <_printf_float+0x96>
 800b27e:	2220      	movs	r2, #32
 800b280:	0031      	movs	r1, r6
 800b282:	6863      	ldr	r3, [r4, #4]
 800b284:	4391      	bics	r1, r2
 800b286:	910e      	str	r1, [sp, #56]	; 0x38
 800b288:	1c5a      	adds	r2, r3, #1
 800b28a:	d147      	bne.n	800b31c <_printf_float+0x18c>
 800b28c:	3307      	adds	r3, #7
 800b28e:	6063      	str	r3, [r4, #4]
 800b290:	2380      	movs	r3, #128	; 0x80
 800b292:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800b294:	00db      	lsls	r3, r3, #3
 800b296:	4313      	orrs	r3, r2
 800b298:	2200      	movs	r2, #0
 800b29a:	9206      	str	r2, [sp, #24]
 800b29c:	aa12      	add	r2, sp, #72	; 0x48
 800b29e:	9205      	str	r2, [sp, #20]
 800b2a0:	aa11      	add	r2, sp, #68	; 0x44
 800b2a2:	9203      	str	r2, [sp, #12]
 800b2a4:	2223      	movs	r2, #35	; 0x23
 800b2a6:	a908      	add	r1, sp, #32
 800b2a8:	6023      	str	r3, [r4, #0]
 800b2aa:	9301      	str	r3, [sp, #4]
 800b2ac:	6863      	ldr	r3, [r4, #4]
 800b2ae:	1852      	adds	r2, r2, r1
 800b2b0:	9202      	str	r2, [sp, #8]
 800b2b2:	9300      	str	r3, [sp, #0]
 800b2b4:	0038      	movs	r0, r7
 800b2b6:	002b      	movs	r3, r5
 800b2b8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b2ba:	9604      	str	r6, [sp, #16]
 800b2bc:	f7ff febe 	bl	800b03c <__cvt>
 800b2c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b2c2:	0005      	movs	r5, r0
 800b2c4:	9911      	ldr	r1, [sp, #68]	; 0x44
 800b2c6:	2b47      	cmp	r3, #71	; 0x47
 800b2c8:	d108      	bne.n	800b2dc <_printf_float+0x14c>
 800b2ca:	1ccb      	adds	r3, r1, #3
 800b2cc:	db02      	blt.n	800b2d4 <_printf_float+0x144>
 800b2ce:	6863      	ldr	r3, [r4, #4]
 800b2d0:	4299      	cmp	r1, r3
 800b2d2:	dd46      	ble.n	800b362 <_printf_float+0x1d2>
 800b2d4:	0033      	movs	r3, r6
 800b2d6:	3b02      	subs	r3, #2
 800b2d8:	b2db      	uxtb	r3, r3
 800b2da:	001e      	movs	r6, r3
 800b2dc:	2e65      	cmp	r6, #101	; 0x65
 800b2de:	d824      	bhi.n	800b32a <_printf_float+0x19a>
 800b2e0:	0020      	movs	r0, r4
 800b2e2:	0032      	movs	r2, r6
 800b2e4:	3901      	subs	r1, #1
 800b2e6:	3050      	adds	r0, #80	; 0x50
 800b2e8:	9111      	str	r1, [sp, #68]	; 0x44
 800b2ea:	f7ff ff0a 	bl	800b102 <__exponent>
 800b2ee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b2f0:	900a      	str	r0, [sp, #40]	; 0x28
 800b2f2:	1813      	adds	r3, r2, r0
 800b2f4:	6123      	str	r3, [r4, #16]
 800b2f6:	2a01      	cmp	r2, #1
 800b2f8:	dc02      	bgt.n	800b300 <_printf_float+0x170>
 800b2fa:	6822      	ldr	r2, [r4, #0]
 800b2fc:	07d2      	lsls	r2, r2, #31
 800b2fe:	d501      	bpl.n	800b304 <_printf_float+0x174>
 800b300:	3301      	adds	r3, #1
 800b302:	6123      	str	r3, [r4, #16]
 800b304:	2323      	movs	r3, #35	; 0x23
 800b306:	aa08      	add	r2, sp, #32
 800b308:	189b      	adds	r3, r3, r2
 800b30a:	781b      	ldrb	r3, [r3, #0]
 800b30c:	2b00      	cmp	r3, #0
 800b30e:	d100      	bne.n	800b312 <_printf_float+0x182>
 800b310:	e791      	b.n	800b236 <_printf_float+0xa6>
 800b312:	0023      	movs	r3, r4
 800b314:	222d      	movs	r2, #45	; 0x2d
 800b316:	3343      	adds	r3, #67	; 0x43
 800b318:	701a      	strb	r2, [r3, #0]
 800b31a:	e78c      	b.n	800b236 <_printf_float+0xa6>
 800b31c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b31e:	2a47      	cmp	r2, #71	; 0x47
 800b320:	d1b6      	bne.n	800b290 <_printf_float+0x100>
 800b322:	2b00      	cmp	r3, #0
 800b324:	d1b4      	bne.n	800b290 <_printf_float+0x100>
 800b326:	3301      	adds	r3, #1
 800b328:	e7b1      	b.n	800b28e <_printf_float+0xfe>
 800b32a:	2e66      	cmp	r6, #102	; 0x66
 800b32c:	d11b      	bne.n	800b366 <_printf_float+0x1d6>
 800b32e:	6863      	ldr	r3, [r4, #4]
 800b330:	2900      	cmp	r1, #0
 800b332:	dd0d      	ble.n	800b350 <_printf_float+0x1c0>
 800b334:	6121      	str	r1, [r4, #16]
 800b336:	2b00      	cmp	r3, #0
 800b338:	d102      	bne.n	800b340 <_printf_float+0x1b0>
 800b33a:	6822      	ldr	r2, [r4, #0]
 800b33c:	07d2      	lsls	r2, r2, #31
 800b33e:	d502      	bpl.n	800b346 <_printf_float+0x1b6>
 800b340:	3301      	adds	r3, #1
 800b342:	1859      	adds	r1, r3, r1
 800b344:	6121      	str	r1, [r4, #16]
 800b346:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b348:	65a3      	str	r3, [r4, #88]	; 0x58
 800b34a:	2300      	movs	r3, #0
 800b34c:	930a      	str	r3, [sp, #40]	; 0x28
 800b34e:	e7d9      	b.n	800b304 <_printf_float+0x174>
 800b350:	2b00      	cmp	r3, #0
 800b352:	d103      	bne.n	800b35c <_printf_float+0x1cc>
 800b354:	2201      	movs	r2, #1
 800b356:	6821      	ldr	r1, [r4, #0]
 800b358:	4211      	tst	r1, r2
 800b35a:	d000      	beq.n	800b35e <_printf_float+0x1ce>
 800b35c:	1c9a      	adds	r2, r3, #2
 800b35e:	6122      	str	r2, [r4, #16]
 800b360:	e7f1      	b.n	800b346 <_printf_float+0x1b6>
 800b362:	2367      	movs	r3, #103	; 0x67
 800b364:	001e      	movs	r6, r3
 800b366:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b368:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b36a:	4293      	cmp	r3, r2
 800b36c:	db06      	blt.n	800b37c <_printf_float+0x1ec>
 800b36e:	6822      	ldr	r2, [r4, #0]
 800b370:	6123      	str	r3, [r4, #16]
 800b372:	07d2      	lsls	r2, r2, #31
 800b374:	d5e7      	bpl.n	800b346 <_printf_float+0x1b6>
 800b376:	3301      	adds	r3, #1
 800b378:	6123      	str	r3, [r4, #16]
 800b37a:	e7e4      	b.n	800b346 <_printf_float+0x1b6>
 800b37c:	2101      	movs	r1, #1
 800b37e:	2b00      	cmp	r3, #0
 800b380:	dc01      	bgt.n	800b386 <_printf_float+0x1f6>
 800b382:	1849      	adds	r1, r1, r1
 800b384:	1ac9      	subs	r1, r1, r3
 800b386:	1852      	adds	r2, r2, r1
 800b388:	e7e9      	b.n	800b35e <_printf_float+0x1ce>
 800b38a:	6822      	ldr	r2, [r4, #0]
 800b38c:	0553      	lsls	r3, r2, #21
 800b38e:	d408      	bmi.n	800b3a2 <_printf_float+0x212>
 800b390:	6923      	ldr	r3, [r4, #16]
 800b392:	002a      	movs	r2, r5
 800b394:	0038      	movs	r0, r7
 800b396:	9908      	ldr	r1, [sp, #32]
 800b398:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800b39a:	47a8      	blx	r5
 800b39c:	1c43      	adds	r3, r0, #1
 800b39e:	d129      	bne.n	800b3f4 <_printf_float+0x264>
 800b3a0:	e754      	b.n	800b24c <_printf_float+0xbc>
 800b3a2:	2e65      	cmp	r6, #101	; 0x65
 800b3a4:	d800      	bhi.n	800b3a8 <_printf_float+0x218>
 800b3a6:	e0ec      	b.n	800b582 <_printf_float+0x3f2>
 800b3a8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800b3aa:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800b3ac:	2200      	movs	r2, #0
 800b3ae:	2300      	movs	r3, #0
 800b3b0:	f7f5 f84a 	bl	8000448 <__aeabi_dcmpeq>
 800b3b4:	2800      	cmp	r0, #0
 800b3b6:	d034      	beq.n	800b422 <_printf_float+0x292>
 800b3b8:	2301      	movs	r3, #1
 800b3ba:	0038      	movs	r0, r7
 800b3bc:	4a37      	ldr	r2, [pc, #220]	; (800b49c <_printf_float+0x30c>)
 800b3be:	9908      	ldr	r1, [sp, #32]
 800b3c0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800b3c2:	47a8      	blx	r5
 800b3c4:	1c43      	adds	r3, r0, #1
 800b3c6:	d100      	bne.n	800b3ca <_printf_float+0x23a>
 800b3c8:	e740      	b.n	800b24c <_printf_float+0xbc>
 800b3ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b3cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b3ce:	4293      	cmp	r3, r2
 800b3d0:	db02      	blt.n	800b3d8 <_printf_float+0x248>
 800b3d2:	6823      	ldr	r3, [r4, #0]
 800b3d4:	07db      	lsls	r3, r3, #31
 800b3d6:	d50d      	bpl.n	800b3f4 <_printf_float+0x264>
 800b3d8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800b3da:	0038      	movs	r0, r7
 800b3dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b3de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b3e0:	9908      	ldr	r1, [sp, #32]
 800b3e2:	47a8      	blx	r5
 800b3e4:	2500      	movs	r5, #0
 800b3e6:	1c43      	adds	r3, r0, #1
 800b3e8:	d100      	bne.n	800b3ec <_printf_float+0x25c>
 800b3ea:	e72f      	b.n	800b24c <_printf_float+0xbc>
 800b3ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b3ee:	3b01      	subs	r3, #1
 800b3f0:	42ab      	cmp	r3, r5
 800b3f2:	dc0a      	bgt.n	800b40a <_printf_float+0x27a>
 800b3f4:	6823      	ldr	r3, [r4, #0]
 800b3f6:	079b      	lsls	r3, r3, #30
 800b3f8:	d500      	bpl.n	800b3fc <_printf_float+0x26c>
 800b3fa:	e114      	b.n	800b626 <_printf_float+0x496>
 800b3fc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b3fe:	68e0      	ldr	r0, [r4, #12]
 800b400:	4298      	cmp	r0, r3
 800b402:	db00      	blt.n	800b406 <_printf_float+0x276>
 800b404:	e724      	b.n	800b250 <_printf_float+0xc0>
 800b406:	0018      	movs	r0, r3
 800b408:	e722      	b.n	800b250 <_printf_float+0xc0>
 800b40a:	0022      	movs	r2, r4
 800b40c:	2301      	movs	r3, #1
 800b40e:	0038      	movs	r0, r7
 800b410:	9908      	ldr	r1, [sp, #32]
 800b412:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b414:	321a      	adds	r2, #26
 800b416:	47b0      	blx	r6
 800b418:	1c43      	adds	r3, r0, #1
 800b41a:	d100      	bne.n	800b41e <_printf_float+0x28e>
 800b41c:	e716      	b.n	800b24c <_printf_float+0xbc>
 800b41e:	3501      	adds	r5, #1
 800b420:	e7e4      	b.n	800b3ec <_printf_float+0x25c>
 800b422:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b424:	2b00      	cmp	r3, #0
 800b426:	dc3b      	bgt.n	800b4a0 <_printf_float+0x310>
 800b428:	2301      	movs	r3, #1
 800b42a:	0038      	movs	r0, r7
 800b42c:	4a1b      	ldr	r2, [pc, #108]	; (800b49c <_printf_float+0x30c>)
 800b42e:	9908      	ldr	r1, [sp, #32]
 800b430:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b432:	47b0      	blx	r6
 800b434:	1c43      	adds	r3, r0, #1
 800b436:	d100      	bne.n	800b43a <_printf_float+0x2aa>
 800b438:	e708      	b.n	800b24c <_printf_float+0xbc>
 800b43a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b43c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b43e:	4313      	orrs	r3, r2
 800b440:	d102      	bne.n	800b448 <_printf_float+0x2b8>
 800b442:	6823      	ldr	r3, [r4, #0]
 800b444:	07db      	lsls	r3, r3, #31
 800b446:	d5d5      	bpl.n	800b3f4 <_printf_float+0x264>
 800b448:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b44a:	0038      	movs	r0, r7
 800b44c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b44e:	9908      	ldr	r1, [sp, #32]
 800b450:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b452:	47b0      	blx	r6
 800b454:	1c43      	adds	r3, r0, #1
 800b456:	d100      	bne.n	800b45a <_printf_float+0x2ca>
 800b458:	e6f8      	b.n	800b24c <_printf_float+0xbc>
 800b45a:	2300      	movs	r3, #0
 800b45c:	930a      	str	r3, [sp, #40]	; 0x28
 800b45e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b460:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b462:	425b      	negs	r3, r3
 800b464:	4293      	cmp	r3, r2
 800b466:	dc01      	bgt.n	800b46c <_printf_float+0x2dc>
 800b468:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b46a:	e792      	b.n	800b392 <_printf_float+0x202>
 800b46c:	0022      	movs	r2, r4
 800b46e:	2301      	movs	r3, #1
 800b470:	0038      	movs	r0, r7
 800b472:	9908      	ldr	r1, [sp, #32]
 800b474:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b476:	321a      	adds	r2, #26
 800b478:	47b0      	blx	r6
 800b47a:	1c43      	adds	r3, r0, #1
 800b47c:	d100      	bne.n	800b480 <_printf_float+0x2f0>
 800b47e:	e6e5      	b.n	800b24c <_printf_float+0xbc>
 800b480:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b482:	3301      	adds	r3, #1
 800b484:	e7ea      	b.n	800b45c <_printf_float+0x2cc>
 800b486:	46c0      	nop			; (mov r8, r8)
 800b488:	7fefffff 	.word	0x7fefffff
 800b48c:	0800ffa8 	.word	0x0800ffa8
 800b490:	0800ffac 	.word	0x0800ffac
 800b494:	0800ffb0 	.word	0x0800ffb0
 800b498:	0800ffb4 	.word	0x0800ffb4
 800b49c:	0800ffb8 	.word	0x0800ffb8
 800b4a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b4a2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800b4a4:	920a      	str	r2, [sp, #40]	; 0x28
 800b4a6:	429a      	cmp	r2, r3
 800b4a8:	dd00      	ble.n	800b4ac <_printf_float+0x31c>
 800b4aa:	930a      	str	r3, [sp, #40]	; 0x28
 800b4ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b4ae:	2b00      	cmp	r3, #0
 800b4b0:	dc3d      	bgt.n	800b52e <_printf_float+0x39e>
 800b4b2:	2300      	movs	r3, #0
 800b4b4:	930e      	str	r3, [sp, #56]	; 0x38
 800b4b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b4b8:	43db      	mvns	r3, r3
 800b4ba:	17db      	asrs	r3, r3, #31
 800b4bc:	930f      	str	r3, [sp, #60]	; 0x3c
 800b4be:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800b4c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800b4c2:	930c      	str	r3, [sp, #48]	; 0x30
 800b4c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b4c6:	4013      	ands	r3, r2
 800b4c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800b4ca:	1ad3      	subs	r3, r2, r3
 800b4cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b4ce:	4293      	cmp	r3, r2
 800b4d0:	dc36      	bgt.n	800b540 <_printf_float+0x3b0>
 800b4d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b4d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b4d6:	4293      	cmp	r3, r2
 800b4d8:	db40      	blt.n	800b55c <_printf_float+0x3cc>
 800b4da:	6823      	ldr	r3, [r4, #0]
 800b4dc:	07db      	lsls	r3, r3, #31
 800b4de:	d43d      	bmi.n	800b55c <_printf_float+0x3cc>
 800b4e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b4e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b4e4:	9911      	ldr	r1, [sp, #68]	; 0x44
 800b4e6:	1ad3      	subs	r3, r2, r3
 800b4e8:	1a52      	subs	r2, r2, r1
 800b4ea:	920a      	str	r2, [sp, #40]	; 0x28
 800b4ec:	429a      	cmp	r2, r3
 800b4ee:	dd00      	ble.n	800b4f2 <_printf_float+0x362>
 800b4f0:	930a      	str	r3, [sp, #40]	; 0x28
 800b4f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b4f4:	2b00      	cmp	r3, #0
 800b4f6:	dc3a      	bgt.n	800b56e <_printf_float+0x3de>
 800b4f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b4fa:	2500      	movs	r5, #0
 800b4fc:	43db      	mvns	r3, r3
 800b4fe:	17db      	asrs	r3, r3, #31
 800b500:	930b      	str	r3, [sp, #44]	; 0x2c
 800b502:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800b504:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b506:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b508:	1a9b      	subs	r3, r3, r2
 800b50a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b50c:	400a      	ands	r2, r1
 800b50e:	1a9b      	subs	r3, r3, r2
 800b510:	42ab      	cmp	r3, r5
 800b512:	dc00      	bgt.n	800b516 <_printf_float+0x386>
 800b514:	e76e      	b.n	800b3f4 <_printf_float+0x264>
 800b516:	0022      	movs	r2, r4
 800b518:	2301      	movs	r3, #1
 800b51a:	0038      	movs	r0, r7
 800b51c:	9908      	ldr	r1, [sp, #32]
 800b51e:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b520:	321a      	adds	r2, #26
 800b522:	47b0      	blx	r6
 800b524:	1c43      	adds	r3, r0, #1
 800b526:	d100      	bne.n	800b52a <_printf_float+0x39a>
 800b528:	e690      	b.n	800b24c <_printf_float+0xbc>
 800b52a:	3501      	adds	r5, #1
 800b52c:	e7e9      	b.n	800b502 <_printf_float+0x372>
 800b52e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b530:	002a      	movs	r2, r5
 800b532:	0038      	movs	r0, r7
 800b534:	9908      	ldr	r1, [sp, #32]
 800b536:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b538:	47b0      	blx	r6
 800b53a:	1c43      	adds	r3, r0, #1
 800b53c:	d1b9      	bne.n	800b4b2 <_printf_float+0x322>
 800b53e:	e685      	b.n	800b24c <_printf_float+0xbc>
 800b540:	0022      	movs	r2, r4
 800b542:	2301      	movs	r3, #1
 800b544:	0038      	movs	r0, r7
 800b546:	9908      	ldr	r1, [sp, #32]
 800b548:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b54a:	321a      	adds	r2, #26
 800b54c:	47b0      	blx	r6
 800b54e:	1c43      	adds	r3, r0, #1
 800b550:	d100      	bne.n	800b554 <_printf_float+0x3c4>
 800b552:	e67b      	b.n	800b24c <_printf_float+0xbc>
 800b554:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b556:	3301      	adds	r3, #1
 800b558:	930e      	str	r3, [sp, #56]	; 0x38
 800b55a:	e7b0      	b.n	800b4be <_printf_float+0x32e>
 800b55c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b55e:	0038      	movs	r0, r7
 800b560:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b562:	9908      	ldr	r1, [sp, #32]
 800b564:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b566:	47b0      	blx	r6
 800b568:	1c43      	adds	r3, r0, #1
 800b56a:	d1b9      	bne.n	800b4e0 <_printf_float+0x350>
 800b56c:	e66e      	b.n	800b24c <_printf_float+0xbc>
 800b56e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b570:	0038      	movs	r0, r7
 800b572:	18ea      	adds	r2, r5, r3
 800b574:	9908      	ldr	r1, [sp, #32]
 800b576:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b578:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800b57a:	47a8      	blx	r5
 800b57c:	1c43      	adds	r3, r0, #1
 800b57e:	d1bb      	bne.n	800b4f8 <_printf_float+0x368>
 800b580:	e664      	b.n	800b24c <_printf_float+0xbc>
 800b582:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b584:	2b01      	cmp	r3, #1
 800b586:	dc02      	bgt.n	800b58e <_printf_float+0x3fe>
 800b588:	2301      	movs	r3, #1
 800b58a:	421a      	tst	r2, r3
 800b58c:	d038      	beq.n	800b600 <_printf_float+0x470>
 800b58e:	2301      	movs	r3, #1
 800b590:	002a      	movs	r2, r5
 800b592:	0038      	movs	r0, r7
 800b594:	9908      	ldr	r1, [sp, #32]
 800b596:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b598:	47b0      	blx	r6
 800b59a:	1c43      	adds	r3, r0, #1
 800b59c:	d100      	bne.n	800b5a0 <_printf_float+0x410>
 800b59e:	e655      	b.n	800b24c <_printf_float+0xbc>
 800b5a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b5a2:	0038      	movs	r0, r7
 800b5a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b5a6:	9908      	ldr	r1, [sp, #32]
 800b5a8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b5aa:	47b0      	blx	r6
 800b5ac:	1c43      	adds	r3, r0, #1
 800b5ae:	d100      	bne.n	800b5b2 <_printf_float+0x422>
 800b5b0:	e64c      	b.n	800b24c <_printf_float+0xbc>
 800b5b2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800b5b4:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800b5b6:	2200      	movs	r2, #0
 800b5b8:	2300      	movs	r3, #0
 800b5ba:	f7f4 ff45 	bl	8000448 <__aeabi_dcmpeq>
 800b5be:	2800      	cmp	r0, #0
 800b5c0:	d11c      	bne.n	800b5fc <_printf_float+0x46c>
 800b5c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b5c4:	1c6a      	adds	r2, r5, #1
 800b5c6:	3b01      	subs	r3, #1
 800b5c8:	0038      	movs	r0, r7
 800b5ca:	9908      	ldr	r1, [sp, #32]
 800b5cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800b5ce:	47a8      	blx	r5
 800b5d0:	1c43      	adds	r3, r0, #1
 800b5d2:	d10f      	bne.n	800b5f4 <_printf_float+0x464>
 800b5d4:	e63a      	b.n	800b24c <_printf_float+0xbc>
 800b5d6:	0022      	movs	r2, r4
 800b5d8:	2301      	movs	r3, #1
 800b5da:	0038      	movs	r0, r7
 800b5dc:	9908      	ldr	r1, [sp, #32]
 800b5de:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b5e0:	321a      	adds	r2, #26
 800b5e2:	47b0      	blx	r6
 800b5e4:	1c43      	adds	r3, r0, #1
 800b5e6:	d100      	bne.n	800b5ea <_printf_float+0x45a>
 800b5e8:	e630      	b.n	800b24c <_printf_float+0xbc>
 800b5ea:	3501      	adds	r5, #1
 800b5ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b5ee:	3b01      	subs	r3, #1
 800b5f0:	42ab      	cmp	r3, r5
 800b5f2:	dcf0      	bgt.n	800b5d6 <_printf_float+0x446>
 800b5f4:	0022      	movs	r2, r4
 800b5f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b5f8:	3250      	adds	r2, #80	; 0x50
 800b5fa:	e6cb      	b.n	800b394 <_printf_float+0x204>
 800b5fc:	2500      	movs	r5, #0
 800b5fe:	e7f5      	b.n	800b5ec <_printf_float+0x45c>
 800b600:	002a      	movs	r2, r5
 800b602:	e7e1      	b.n	800b5c8 <_printf_float+0x438>
 800b604:	0022      	movs	r2, r4
 800b606:	2301      	movs	r3, #1
 800b608:	0038      	movs	r0, r7
 800b60a:	9908      	ldr	r1, [sp, #32]
 800b60c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800b60e:	3219      	adds	r2, #25
 800b610:	47b0      	blx	r6
 800b612:	1c43      	adds	r3, r0, #1
 800b614:	d100      	bne.n	800b618 <_printf_float+0x488>
 800b616:	e619      	b.n	800b24c <_printf_float+0xbc>
 800b618:	3501      	adds	r5, #1
 800b61a:	68e3      	ldr	r3, [r4, #12]
 800b61c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800b61e:	1a9b      	subs	r3, r3, r2
 800b620:	42ab      	cmp	r3, r5
 800b622:	dcef      	bgt.n	800b604 <_printf_float+0x474>
 800b624:	e6ea      	b.n	800b3fc <_printf_float+0x26c>
 800b626:	2500      	movs	r5, #0
 800b628:	e7f7      	b.n	800b61a <_printf_float+0x48a>
 800b62a:	46c0      	nop			; (mov r8, r8)

0800b62c <_printf_common>:
 800b62c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b62e:	0015      	movs	r5, r2
 800b630:	9301      	str	r3, [sp, #4]
 800b632:	688a      	ldr	r2, [r1, #8]
 800b634:	690b      	ldr	r3, [r1, #16]
 800b636:	000c      	movs	r4, r1
 800b638:	9000      	str	r0, [sp, #0]
 800b63a:	4293      	cmp	r3, r2
 800b63c:	da00      	bge.n	800b640 <_printf_common+0x14>
 800b63e:	0013      	movs	r3, r2
 800b640:	0022      	movs	r2, r4
 800b642:	602b      	str	r3, [r5, #0]
 800b644:	3243      	adds	r2, #67	; 0x43
 800b646:	7812      	ldrb	r2, [r2, #0]
 800b648:	2a00      	cmp	r2, #0
 800b64a:	d001      	beq.n	800b650 <_printf_common+0x24>
 800b64c:	3301      	adds	r3, #1
 800b64e:	602b      	str	r3, [r5, #0]
 800b650:	6823      	ldr	r3, [r4, #0]
 800b652:	069b      	lsls	r3, r3, #26
 800b654:	d502      	bpl.n	800b65c <_printf_common+0x30>
 800b656:	682b      	ldr	r3, [r5, #0]
 800b658:	3302      	adds	r3, #2
 800b65a:	602b      	str	r3, [r5, #0]
 800b65c:	6822      	ldr	r2, [r4, #0]
 800b65e:	2306      	movs	r3, #6
 800b660:	0017      	movs	r7, r2
 800b662:	401f      	ands	r7, r3
 800b664:	421a      	tst	r2, r3
 800b666:	d027      	beq.n	800b6b8 <_printf_common+0x8c>
 800b668:	0023      	movs	r3, r4
 800b66a:	3343      	adds	r3, #67	; 0x43
 800b66c:	781b      	ldrb	r3, [r3, #0]
 800b66e:	1e5a      	subs	r2, r3, #1
 800b670:	4193      	sbcs	r3, r2
 800b672:	6822      	ldr	r2, [r4, #0]
 800b674:	0692      	lsls	r2, r2, #26
 800b676:	d430      	bmi.n	800b6da <_printf_common+0xae>
 800b678:	0022      	movs	r2, r4
 800b67a:	9901      	ldr	r1, [sp, #4]
 800b67c:	9800      	ldr	r0, [sp, #0]
 800b67e:	9e08      	ldr	r6, [sp, #32]
 800b680:	3243      	adds	r2, #67	; 0x43
 800b682:	47b0      	blx	r6
 800b684:	1c43      	adds	r3, r0, #1
 800b686:	d025      	beq.n	800b6d4 <_printf_common+0xa8>
 800b688:	2306      	movs	r3, #6
 800b68a:	6820      	ldr	r0, [r4, #0]
 800b68c:	682a      	ldr	r2, [r5, #0]
 800b68e:	68e1      	ldr	r1, [r4, #12]
 800b690:	2500      	movs	r5, #0
 800b692:	4003      	ands	r3, r0
 800b694:	2b04      	cmp	r3, #4
 800b696:	d103      	bne.n	800b6a0 <_printf_common+0x74>
 800b698:	1a8d      	subs	r5, r1, r2
 800b69a:	43eb      	mvns	r3, r5
 800b69c:	17db      	asrs	r3, r3, #31
 800b69e:	401d      	ands	r5, r3
 800b6a0:	68a3      	ldr	r3, [r4, #8]
 800b6a2:	6922      	ldr	r2, [r4, #16]
 800b6a4:	4293      	cmp	r3, r2
 800b6a6:	dd01      	ble.n	800b6ac <_printf_common+0x80>
 800b6a8:	1a9b      	subs	r3, r3, r2
 800b6aa:	18ed      	adds	r5, r5, r3
 800b6ac:	2700      	movs	r7, #0
 800b6ae:	42bd      	cmp	r5, r7
 800b6b0:	d120      	bne.n	800b6f4 <_printf_common+0xc8>
 800b6b2:	2000      	movs	r0, #0
 800b6b4:	e010      	b.n	800b6d8 <_printf_common+0xac>
 800b6b6:	3701      	adds	r7, #1
 800b6b8:	68e3      	ldr	r3, [r4, #12]
 800b6ba:	682a      	ldr	r2, [r5, #0]
 800b6bc:	1a9b      	subs	r3, r3, r2
 800b6be:	42bb      	cmp	r3, r7
 800b6c0:	ddd2      	ble.n	800b668 <_printf_common+0x3c>
 800b6c2:	0022      	movs	r2, r4
 800b6c4:	2301      	movs	r3, #1
 800b6c6:	9901      	ldr	r1, [sp, #4]
 800b6c8:	9800      	ldr	r0, [sp, #0]
 800b6ca:	9e08      	ldr	r6, [sp, #32]
 800b6cc:	3219      	adds	r2, #25
 800b6ce:	47b0      	blx	r6
 800b6d0:	1c43      	adds	r3, r0, #1
 800b6d2:	d1f0      	bne.n	800b6b6 <_printf_common+0x8a>
 800b6d4:	2001      	movs	r0, #1
 800b6d6:	4240      	negs	r0, r0
 800b6d8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800b6da:	2030      	movs	r0, #48	; 0x30
 800b6dc:	18e1      	adds	r1, r4, r3
 800b6de:	3143      	adds	r1, #67	; 0x43
 800b6e0:	7008      	strb	r0, [r1, #0]
 800b6e2:	0021      	movs	r1, r4
 800b6e4:	1c5a      	adds	r2, r3, #1
 800b6e6:	3145      	adds	r1, #69	; 0x45
 800b6e8:	7809      	ldrb	r1, [r1, #0]
 800b6ea:	18a2      	adds	r2, r4, r2
 800b6ec:	3243      	adds	r2, #67	; 0x43
 800b6ee:	3302      	adds	r3, #2
 800b6f0:	7011      	strb	r1, [r2, #0]
 800b6f2:	e7c1      	b.n	800b678 <_printf_common+0x4c>
 800b6f4:	0022      	movs	r2, r4
 800b6f6:	2301      	movs	r3, #1
 800b6f8:	9901      	ldr	r1, [sp, #4]
 800b6fa:	9800      	ldr	r0, [sp, #0]
 800b6fc:	9e08      	ldr	r6, [sp, #32]
 800b6fe:	321a      	adds	r2, #26
 800b700:	47b0      	blx	r6
 800b702:	1c43      	adds	r3, r0, #1
 800b704:	d0e6      	beq.n	800b6d4 <_printf_common+0xa8>
 800b706:	3701      	adds	r7, #1
 800b708:	e7d1      	b.n	800b6ae <_printf_common+0x82>
	...

0800b70c <_printf_i>:
 800b70c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b70e:	b08b      	sub	sp, #44	; 0x2c
 800b710:	9206      	str	r2, [sp, #24]
 800b712:	000a      	movs	r2, r1
 800b714:	3243      	adds	r2, #67	; 0x43
 800b716:	9307      	str	r3, [sp, #28]
 800b718:	9005      	str	r0, [sp, #20]
 800b71a:	9204      	str	r2, [sp, #16]
 800b71c:	7e0a      	ldrb	r2, [r1, #24]
 800b71e:	000c      	movs	r4, r1
 800b720:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b722:	2a78      	cmp	r2, #120	; 0x78
 800b724:	d806      	bhi.n	800b734 <_printf_i+0x28>
 800b726:	2a62      	cmp	r2, #98	; 0x62
 800b728:	d808      	bhi.n	800b73c <_printf_i+0x30>
 800b72a:	2a00      	cmp	r2, #0
 800b72c:	d100      	bne.n	800b730 <_printf_i+0x24>
 800b72e:	e0c0      	b.n	800b8b2 <_printf_i+0x1a6>
 800b730:	2a58      	cmp	r2, #88	; 0x58
 800b732:	d052      	beq.n	800b7da <_printf_i+0xce>
 800b734:	0026      	movs	r6, r4
 800b736:	3642      	adds	r6, #66	; 0x42
 800b738:	7032      	strb	r2, [r6, #0]
 800b73a:	e022      	b.n	800b782 <_printf_i+0x76>
 800b73c:	0010      	movs	r0, r2
 800b73e:	3863      	subs	r0, #99	; 0x63
 800b740:	2815      	cmp	r0, #21
 800b742:	d8f7      	bhi.n	800b734 <_printf_i+0x28>
 800b744:	f7f4 fcf0 	bl	8000128 <__gnu_thumb1_case_shi>
 800b748:	001f0016 	.word	0x001f0016
 800b74c:	fff6fff6 	.word	0xfff6fff6
 800b750:	fff6fff6 	.word	0xfff6fff6
 800b754:	fff6001f 	.word	0xfff6001f
 800b758:	fff6fff6 	.word	0xfff6fff6
 800b75c:	00a8fff6 	.word	0x00a8fff6
 800b760:	009a0036 	.word	0x009a0036
 800b764:	fff6fff6 	.word	0xfff6fff6
 800b768:	fff600b9 	.word	0xfff600b9
 800b76c:	fff60036 	.word	0xfff60036
 800b770:	009efff6 	.word	0x009efff6
 800b774:	0026      	movs	r6, r4
 800b776:	681a      	ldr	r2, [r3, #0]
 800b778:	3642      	adds	r6, #66	; 0x42
 800b77a:	1d11      	adds	r1, r2, #4
 800b77c:	6019      	str	r1, [r3, #0]
 800b77e:	6813      	ldr	r3, [r2, #0]
 800b780:	7033      	strb	r3, [r6, #0]
 800b782:	2301      	movs	r3, #1
 800b784:	e0a7      	b.n	800b8d6 <_printf_i+0x1ca>
 800b786:	6808      	ldr	r0, [r1, #0]
 800b788:	6819      	ldr	r1, [r3, #0]
 800b78a:	1d0a      	adds	r2, r1, #4
 800b78c:	0605      	lsls	r5, r0, #24
 800b78e:	d50b      	bpl.n	800b7a8 <_printf_i+0x9c>
 800b790:	680d      	ldr	r5, [r1, #0]
 800b792:	601a      	str	r2, [r3, #0]
 800b794:	2d00      	cmp	r5, #0
 800b796:	da03      	bge.n	800b7a0 <_printf_i+0x94>
 800b798:	232d      	movs	r3, #45	; 0x2d
 800b79a:	9a04      	ldr	r2, [sp, #16]
 800b79c:	426d      	negs	r5, r5
 800b79e:	7013      	strb	r3, [r2, #0]
 800b7a0:	4b61      	ldr	r3, [pc, #388]	; (800b928 <_printf_i+0x21c>)
 800b7a2:	270a      	movs	r7, #10
 800b7a4:	9303      	str	r3, [sp, #12]
 800b7a6:	e032      	b.n	800b80e <_printf_i+0x102>
 800b7a8:	680d      	ldr	r5, [r1, #0]
 800b7aa:	601a      	str	r2, [r3, #0]
 800b7ac:	0641      	lsls	r1, r0, #25
 800b7ae:	d5f1      	bpl.n	800b794 <_printf_i+0x88>
 800b7b0:	b22d      	sxth	r5, r5
 800b7b2:	e7ef      	b.n	800b794 <_printf_i+0x88>
 800b7b4:	680d      	ldr	r5, [r1, #0]
 800b7b6:	6819      	ldr	r1, [r3, #0]
 800b7b8:	1d08      	adds	r0, r1, #4
 800b7ba:	6018      	str	r0, [r3, #0]
 800b7bc:	062e      	lsls	r6, r5, #24
 800b7be:	d501      	bpl.n	800b7c4 <_printf_i+0xb8>
 800b7c0:	680d      	ldr	r5, [r1, #0]
 800b7c2:	e003      	b.n	800b7cc <_printf_i+0xc0>
 800b7c4:	066d      	lsls	r5, r5, #25
 800b7c6:	d5fb      	bpl.n	800b7c0 <_printf_i+0xb4>
 800b7c8:	680d      	ldr	r5, [r1, #0]
 800b7ca:	b2ad      	uxth	r5, r5
 800b7cc:	4b56      	ldr	r3, [pc, #344]	; (800b928 <_printf_i+0x21c>)
 800b7ce:	270a      	movs	r7, #10
 800b7d0:	9303      	str	r3, [sp, #12]
 800b7d2:	2a6f      	cmp	r2, #111	; 0x6f
 800b7d4:	d117      	bne.n	800b806 <_printf_i+0xfa>
 800b7d6:	2708      	movs	r7, #8
 800b7d8:	e015      	b.n	800b806 <_printf_i+0xfa>
 800b7da:	3145      	adds	r1, #69	; 0x45
 800b7dc:	700a      	strb	r2, [r1, #0]
 800b7de:	4a52      	ldr	r2, [pc, #328]	; (800b928 <_printf_i+0x21c>)
 800b7e0:	9203      	str	r2, [sp, #12]
 800b7e2:	681a      	ldr	r2, [r3, #0]
 800b7e4:	6821      	ldr	r1, [r4, #0]
 800b7e6:	ca20      	ldmia	r2!, {r5}
 800b7e8:	601a      	str	r2, [r3, #0]
 800b7ea:	0608      	lsls	r0, r1, #24
 800b7ec:	d550      	bpl.n	800b890 <_printf_i+0x184>
 800b7ee:	07cb      	lsls	r3, r1, #31
 800b7f0:	d502      	bpl.n	800b7f8 <_printf_i+0xec>
 800b7f2:	2320      	movs	r3, #32
 800b7f4:	4319      	orrs	r1, r3
 800b7f6:	6021      	str	r1, [r4, #0]
 800b7f8:	2710      	movs	r7, #16
 800b7fa:	2d00      	cmp	r5, #0
 800b7fc:	d103      	bne.n	800b806 <_printf_i+0xfa>
 800b7fe:	2320      	movs	r3, #32
 800b800:	6822      	ldr	r2, [r4, #0]
 800b802:	439a      	bics	r2, r3
 800b804:	6022      	str	r2, [r4, #0]
 800b806:	0023      	movs	r3, r4
 800b808:	2200      	movs	r2, #0
 800b80a:	3343      	adds	r3, #67	; 0x43
 800b80c:	701a      	strb	r2, [r3, #0]
 800b80e:	6863      	ldr	r3, [r4, #4]
 800b810:	60a3      	str	r3, [r4, #8]
 800b812:	2b00      	cmp	r3, #0
 800b814:	db03      	blt.n	800b81e <_printf_i+0x112>
 800b816:	2204      	movs	r2, #4
 800b818:	6821      	ldr	r1, [r4, #0]
 800b81a:	4391      	bics	r1, r2
 800b81c:	6021      	str	r1, [r4, #0]
 800b81e:	2d00      	cmp	r5, #0
 800b820:	d102      	bne.n	800b828 <_printf_i+0x11c>
 800b822:	9e04      	ldr	r6, [sp, #16]
 800b824:	2b00      	cmp	r3, #0
 800b826:	d00c      	beq.n	800b842 <_printf_i+0x136>
 800b828:	9e04      	ldr	r6, [sp, #16]
 800b82a:	0028      	movs	r0, r5
 800b82c:	0039      	movs	r1, r7
 800b82e:	f7f4 fd0b 	bl	8000248 <__aeabi_uidivmod>
 800b832:	9b03      	ldr	r3, [sp, #12]
 800b834:	3e01      	subs	r6, #1
 800b836:	5c5b      	ldrb	r3, [r3, r1]
 800b838:	7033      	strb	r3, [r6, #0]
 800b83a:	002b      	movs	r3, r5
 800b83c:	0005      	movs	r5, r0
 800b83e:	429f      	cmp	r7, r3
 800b840:	d9f3      	bls.n	800b82a <_printf_i+0x11e>
 800b842:	2f08      	cmp	r7, #8
 800b844:	d109      	bne.n	800b85a <_printf_i+0x14e>
 800b846:	6823      	ldr	r3, [r4, #0]
 800b848:	07db      	lsls	r3, r3, #31
 800b84a:	d506      	bpl.n	800b85a <_printf_i+0x14e>
 800b84c:	6863      	ldr	r3, [r4, #4]
 800b84e:	6922      	ldr	r2, [r4, #16]
 800b850:	4293      	cmp	r3, r2
 800b852:	dc02      	bgt.n	800b85a <_printf_i+0x14e>
 800b854:	2330      	movs	r3, #48	; 0x30
 800b856:	3e01      	subs	r6, #1
 800b858:	7033      	strb	r3, [r6, #0]
 800b85a:	9b04      	ldr	r3, [sp, #16]
 800b85c:	1b9b      	subs	r3, r3, r6
 800b85e:	6123      	str	r3, [r4, #16]
 800b860:	9b07      	ldr	r3, [sp, #28]
 800b862:	0021      	movs	r1, r4
 800b864:	9300      	str	r3, [sp, #0]
 800b866:	9805      	ldr	r0, [sp, #20]
 800b868:	9b06      	ldr	r3, [sp, #24]
 800b86a:	aa09      	add	r2, sp, #36	; 0x24
 800b86c:	f7ff fede 	bl	800b62c <_printf_common>
 800b870:	1c43      	adds	r3, r0, #1
 800b872:	d135      	bne.n	800b8e0 <_printf_i+0x1d4>
 800b874:	2001      	movs	r0, #1
 800b876:	4240      	negs	r0, r0
 800b878:	b00b      	add	sp, #44	; 0x2c
 800b87a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b87c:	2220      	movs	r2, #32
 800b87e:	6809      	ldr	r1, [r1, #0]
 800b880:	430a      	orrs	r2, r1
 800b882:	6022      	str	r2, [r4, #0]
 800b884:	0022      	movs	r2, r4
 800b886:	2178      	movs	r1, #120	; 0x78
 800b888:	3245      	adds	r2, #69	; 0x45
 800b88a:	7011      	strb	r1, [r2, #0]
 800b88c:	4a27      	ldr	r2, [pc, #156]	; (800b92c <_printf_i+0x220>)
 800b88e:	e7a7      	b.n	800b7e0 <_printf_i+0xd4>
 800b890:	0648      	lsls	r0, r1, #25
 800b892:	d5ac      	bpl.n	800b7ee <_printf_i+0xe2>
 800b894:	b2ad      	uxth	r5, r5
 800b896:	e7aa      	b.n	800b7ee <_printf_i+0xe2>
 800b898:	681a      	ldr	r2, [r3, #0]
 800b89a:	680d      	ldr	r5, [r1, #0]
 800b89c:	1d10      	adds	r0, r2, #4
 800b89e:	6949      	ldr	r1, [r1, #20]
 800b8a0:	6018      	str	r0, [r3, #0]
 800b8a2:	6813      	ldr	r3, [r2, #0]
 800b8a4:	062e      	lsls	r6, r5, #24
 800b8a6:	d501      	bpl.n	800b8ac <_printf_i+0x1a0>
 800b8a8:	6019      	str	r1, [r3, #0]
 800b8aa:	e002      	b.n	800b8b2 <_printf_i+0x1a6>
 800b8ac:	066d      	lsls	r5, r5, #25
 800b8ae:	d5fb      	bpl.n	800b8a8 <_printf_i+0x19c>
 800b8b0:	8019      	strh	r1, [r3, #0]
 800b8b2:	2300      	movs	r3, #0
 800b8b4:	9e04      	ldr	r6, [sp, #16]
 800b8b6:	6123      	str	r3, [r4, #16]
 800b8b8:	e7d2      	b.n	800b860 <_printf_i+0x154>
 800b8ba:	681a      	ldr	r2, [r3, #0]
 800b8bc:	1d11      	adds	r1, r2, #4
 800b8be:	6019      	str	r1, [r3, #0]
 800b8c0:	6816      	ldr	r6, [r2, #0]
 800b8c2:	2100      	movs	r1, #0
 800b8c4:	0030      	movs	r0, r6
 800b8c6:	6862      	ldr	r2, [r4, #4]
 800b8c8:	f002 fc8c 	bl	800e1e4 <memchr>
 800b8cc:	2800      	cmp	r0, #0
 800b8ce:	d001      	beq.n	800b8d4 <_printf_i+0x1c8>
 800b8d0:	1b80      	subs	r0, r0, r6
 800b8d2:	6060      	str	r0, [r4, #4]
 800b8d4:	6863      	ldr	r3, [r4, #4]
 800b8d6:	6123      	str	r3, [r4, #16]
 800b8d8:	2300      	movs	r3, #0
 800b8da:	9a04      	ldr	r2, [sp, #16]
 800b8dc:	7013      	strb	r3, [r2, #0]
 800b8de:	e7bf      	b.n	800b860 <_printf_i+0x154>
 800b8e0:	6923      	ldr	r3, [r4, #16]
 800b8e2:	0032      	movs	r2, r6
 800b8e4:	9906      	ldr	r1, [sp, #24]
 800b8e6:	9805      	ldr	r0, [sp, #20]
 800b8e8:	9d07      	ldr	r5, [sp, #28]
 800b8ea:	47a8      	blx	r5
 800b8ec:	1c43      	adds	r3, r0, #1
 800b8ee:	d0c1      	beq.n	800b874 <_printf_i+0x168>
 800b8f0:	6823      	ldr	r3, [r4, #0]
 800b8f2:	079b      	lsls	r3, r3, #30
 800b8f4:	d415      	bmi.n	800b922 <_printf_i+0x216>
 800b8f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b8f8:	68e0      	ldr	r0, [r4, #12]
 800b8fa:	4298      	cmp	r0, r3
 800b8fc:	dabc      	bge.n	800b878 <_printf_i+0x16c>
 800b8fe:	0018      	movs	r0, r3
 800b900:	e7ba      	b.n	800b878 <_printf_i+0x16c>
 800b902:	0022      	movs	r2, r4
 800b904:	2301      	movs	r3, #1
 800b906:	9906      	ldr	r1, [sp, #24]
 800b908:	9805      	ldr	r0, [sp, #20]
 800b90a:	9e07      	ldr	r6, [sp, #28]
 800b90c:	3219      	adds	r2, #25
 800b90e:	47b0      	blx	r6
 800b910:	1c43      	adds	r3, r0, #1
 800b912:	d0af      	beq.n	800b874 <_printf_i+0x168>
 800b914:	3501      	adds	r5, #1
 800b916:	68e3      	ldr	r3, [r4, #12]
 800b918:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b91a:	1a9b      	subs	r3, r3, r2
 800b91c:	42ab      	cmp	r3, r5
 800b91e:	dcf0      	bgt.n	800b902 <_printf_i+0x1f6>
 800b920:	e7e9      	b.n	800b8f6 <_printf_i+0x1ea>
 800b922:	2500      	movs	r5, #0
 800b924:	e7f7      	b.n	800b916 <_printf_i+0x20a>
 800b926:	46c0      	nop			; (mov r8, r8)
 800b928:	0800ffba 	.word	0x0800ffba
 800b92c:	0800ffcb 	.word	0x0800ffcb

0800b930 <_scanf_float>:
 800b930:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b932:	b08b      	sub	sp, #44	; 0x2c
 800b934:	0015      	movs	r5, r2
 800b936:	9001      	str	r0, [sp, #4]
 800b938:	22ae      	movs	r2, #174	; 0xae
 800b93a:	2000      	movs	r0, #0
 800b93c:	9306      	str	r3, [sp, #24]
 800b93e:	688b      	ldr	r3, [r1, #8]
 800b940:	000e      	movs	r6, r1
 800b942:	1e59      	subs	r1, r3, #1
 800b944:	0052      	lsls	r2, r2, #1
 800b946:	9005      	str	r0, [sp, #20]
 800b948:	4291      	cmp	r1, r2
 800b94a:	d905      	bls.n	800b958 <_scanf_float+0x28>
 800b94c:	3b5e      	subs	r3, #94	; 0x5e
 800b94e:	3bff      	subs	r3, #255	; 0xff
 800b950:	9305      	str	r3, [sp, #20]
 800b952:	235e      	movs	r3, #94	; 0x5e
 800b954:	33ff      	adds	r3, #255	; 0xff
 800b956:	60b3      	str	r3, [r6, #8]
 800b958:	23f0      	movs	r3, #240	; 0xf0
 800b95a:	6832      	ldr	r2, [r6, #0]
 800b95c:	00db      	lsls	r3, r3, #3
 800b95e:	4313      	orrs	r3, r2
 800b960:	6033      	str	r3, [r6, #0]
 800b962:	0033      	movs	r3, r6
 800b964:	2400      	movs	r4, #0
 800b966:	331c      	adds	r3, #28
 800b968:	001f      	movs	r7, r3
 800b96a:	9303      	str	r3, [sp, #12]
 800b96c:	9402      	str	r4, [sp, #8]
 800b96e:	9408      	str	r4, [sp, #32]
 800b970:	9407      	str	r4, [sp, #28]
 800b972:	9400      	str	r4, [sp, #0]
 800b974:	9404      	str	r4, [sp, #16]
 800b976:	68b2      	ldr	r2, [r6, #8]
 800b978:	2a00      	cmp	r2, #0
 800b97a:	d00a      	beq.n	800b992 <_scanf_float+0x62>
 800b97c:	682b      	ldr	r3, [r5, #0]
 800b97e:	781b      	ldrb	r3, [r3, #0]
 800b980:	2b4e      	cmp	r3, #78	; 0x4e
 800b982:	d844      	bhi.n	800ba0e <_scanf_float+0xde>
 800b984:	0018      	movs	r0, r3
 800b986:	2b40      	cmp	r3, #64	; 0x40
 800b988:	d82c      	bhi.n	800b9e4 <_scanf_float+0xb4>
 800b98a:	382b      	subs	r0, #43	; 0x2b
 800b98c:	b2c1      	uxtb	r1, r0
 800b98e:	290e      	cmp	r1, #14
 800b990:	d92a      	bls.n	800b9e8 <_scanf_float+0xb8>
 800b992:	9b00      	ldr	r3, [sp, #0]
 800b994:	2b00      	cmp	r3, #0
 800b996:	d003      	beq.n	800b9a0 <_scanf_float+0x70>
 800b998:	6832      	ldr	r2, [r6, #0]
 800b99a:	4ba4      	ldr	r3, [pc, #656]	; (800bc2c <_scanf_float+0x2fc>)
 800b99c:	4013      	ands	r3, r2
 800b99e:	6033      	str	r3, [r6, #0]
 800b9a0:	9b02      	ldr	r3, [sp, #8]
 800b9a2:	3b01      	subs	r3, #1
 800b9a4:	2b01      	cmp	r3, #1
 800b9a6:	d900      	bls.n	800b9aa <_scanf_float+0x7a>
 800b9a8:	e0f9      	b.n	800bb9e <_scanf_float+0x26e>
 800b9aa:	24be      	movs	r4, #190	; 0xbe
 800b9ac:	0064      	lsls	r4, r4, #1
 800b9ae:	9b03      	ldr	r3, [sp, #12]
 800b9b0:	429f      	cmp	r7, r3
 800b9b2:	d900      	bls.n	800b9b6 <_scanf_float+0x86>
 800b9b4:	e0e9      	b.n	800bb8a <_scanf_float+0x25a>
 800b9b6:	2301      	movs	r3, #1
 800b9b8:	9302      	str	r3, [sp, #8]
 800b9ba:	e185      	b.n	800bcc8 <_scanf_float+0x398>
 800b9bc:	0018      	movs	r0, r3
 800b9be:	3861      	subs	r0, #97	; 0x61
 800b9c0:	280d      	cmp	r0, #13
 800b9c2:	d8e6      	bhi.n	800b992 <_scanf_float+0x62>
 800b9c4:	f7f4 fbb0 	bl	8000128 <__gnu_thumb1_case_shi>
 800b9c8:	ffe50083 	.word	0xffe50083
 800b9cc:	ffe5ffe5 	.word	0xffe5ffe5
 800b9d0:	00a200b6 	.word	0x00a200b6
 800b9d4:	ffe5ffe5 	.word	0xffe5ffe5
 800b9d8:	ffe50089 	.word	0xffe50089
 800b9dc:	ffe5ffe5 	.word	0xffe5ffe5
 800b9e0:	0065ffe5 	.word	0x0065ffe5
 800b9e4:	3841      	subs	r0, #65	; 0x41
 800b9e6:	e7eb      	b.n	800b9c0 <_scanf_float+0x90>
 800b9e8:	280e      	cmp	r0, #14
 800b9ea:	d8d2      	bhi.n	800b992 <_scanf_float+0x62>
 800b9ec:	f7f4 fb9c 	bl	8000128 <__gnu_thumb1_case_shi>
 800b9f0:	ffd1004b 	.word	0xffd1004b
 800b9f4:	0098004b 	.word	0x0098004b
 800b9f8:	0020ffd1 	.word	0x0020ffd1
 800b9fc:	00400040 	.word	0x00400040
 800ba00:	00400040 	.word	0x00400040
 800ba04:	00400040 	.word	0x00400040
 800ba08:	00400040 	.word	0x00400040
 800ba0c:	0040      	.short	0x0040
 800ba0e:	2b6e      	cmp	r3, #110	; 0x6e
 800ba10:	d809      	bhi.n	800ba26 <_scanf_float+0xf6>
 800ba12:	2b60      	cmp	r3, #96	; 0x60
 800ba14:	d8d2      	bhi.n	800b9bc <_scanf_float+0x8c>
 800ba16:	2b54      	cmp	r3, #84	; 0x54
 800ba18:	d07d      	beq.n	800bb16 <_scanf_float+0x1e6>
 800ba1a:	2b59      	cmp	r3, #89	; 0x59
 800ba1c:	d1b9      	bne.n	800b992 <_scanf_float+0x62>
 800ba1e:	2c07      	cmp	r4, #7
 800ba20:	d1b7      	bne.n	800b992 <_scanf_float+0x62>
 800ba22:	2408      	movs	r4, #8
 800ba24:	e02c      	b.n	800ba80 <_scanf_float+0x150>
 800ba26:	2b74      	cmp	r3, #116	; 0x74
 800ba28:	d075      	beq.n	800bb16 <_scanf_float+0x1e6>
 800ba2a:	2b79      	cmp	r3, #121	; 0x79
 800ba2c:	d0f7      	beq.n	800ba1e <_scanf_float+0xee>
 800ba2e:	e7b0      	b.n	800b992 <_scanf_float+0x62>
 800ba30:	6831      	ldr	r1, [r6, #0]
 800ba32:	05c8      	lsls	r0, r1, #23
 800ba34:	d51c      	bpl.n	800ba70 <_scanf_float+0x140>
 800ba36:	2380      	movs	r3, #128	; 0x80
 800ba38:	4399      	bics	r1, r3
 800ba3a:	9b00      	ldr	r3, [sp, #0]
 800ba3c:	6031      	str	r1, [r6, #0]
 800ba3e:	3301      	adds	r3, #1
 800ba40:	9300      	str	r3, [sp, #0]
 800ba42:	9b05      	ldr	r3, [sp, #20]
 800ba44:	2b00      	cmp	r3, #0
 800ba46:	d003      	beq.n	800ba50 <_scanf_float+0x120>
 800ba48:	3b01      	subs	r3, #1
 800ba4a:	3201      	adds	r2, #1
 800ba4c:	9305      	str	r3, [sp, #20]
 800ba4e:	60b2      	str	r2, [r6, #8]
 800ba50:	68b3      	ldr	r3, [r6, #8]
 800ba52:	3b01      	subs	r3, #1
 800ba54:	60b3      	str	r3, [r6, #8]
 800ba56:	6933      	ldr	r3, [r6, #16]
 800ba58:	3301      	adds	r3, #1
 800ba5a:	6133      	str	r3, [r6, #16]
 800ba5c:	686b      	ldr	r3, [r5, #4]
 800ba5e:	3b01      	subs	r3, #1
 800ba60:	606b      	str	r3, [r5, #4]
 800ba62:	2b00      	cmp	r3, #0
 800ba64:	dc00      	bgt.n	800ba68 <_scanf_float+0x138>
 800ba66:	e086      	b.n	800bb76 <_scanf_float+0x246>
 800ba68:	682b      	ldr	r3, [r5, #0]
 800ba6a:	3301      	adds	r3, #1
 800ba6c:	602b      	str	r3, [r5, #0]
 800ba6e:	e782      	b.n	800b976 <_scanf_float+0x46>
 800ba70:	9a02      	ldr	r2, [sp, #8]
 800ba72:	1912      	adds	r2, r2, r4
 800ba74:	2a00      	cmp	r2, #0
 800ba76:	d18c      	bne.n	800b992 <_scanf_float+0x62>
 800ba78:	4a6d      	ldr	r2, [pc, #436]	; (800bc30 <_scanf_float+0x300>)
 800ba7a:	6831      	ldr	r1, [r6, #0]
 800ba7c:	400a      	ands	r2, r1
 800ba7e:	6032      	str	r2, [r6, #0]
 800ba80:	703b      	strb	r3, [r7, #0]
 800ba82:	3701      	adds	r7, #1
 800ba84:	e7e4      	b.n	800ba50 <_scanf_float+0x120>
 800ba86:	2180      	movs	r1, #128	; 0x80
 800ba88:	6832      	ldr	r2, [r6, #0]
 800ba8a:	420a      	tst	r2, r1
 800ba8c:	d081      	beq.n	800b992 <_scanf_float+0x62>
 800ba8e:	438a      	bics	r2, r1
 800ba90:	e7f5      	b.n	800ba7e <_scanf_float+0x14e>
 800ba92:	9a02      	ldr	r2, [sp, #8]
 800ba94:	2a00      	cmp	r2, #0
 800ba96:	d10f      	bne.n	800bab8 <_scanf_float+0x188>
 800ba98:	9a00      	ldr	r2, [sp, #0]
 800ba9a:	2a00      	cmp	r2, #0
 800ba9c:	d10f      	bne.n	800babe <_scanf_float+0x18e>
 800ba9e:	6832      	ldr	r2, [r6, #0]
 800baa0:	21e0      	movs	r1, #224	; 0xe0
 800baa2:	0010      	movs	r0, r2
 800baa4:	00c9      	lsls	r1, r1, #3
 800baa6:	4008      	ands	r0, r1
 800baa8:	4288      	cmp	r0, r1
 800baaa:	d108      	bne.n	800babe <_scanf_float+0x18e>
 800baac:	4961      	ldr	r1, [pc, #388]	; (800bc34 <_scanf_float+0x304>)
 800baae:	400a      	ands	r2, r1
 800bab0:	6032      	str	r2, [r6, #0]
 800bab2:	2201      	movs	r2, #1
 800bab4:	9202      	str	r2, [sp, #8]
 800bab6:	e7e3      	b.n	800ba80 <_scanf_float+0x150>
 800bab8:	9a02      	ldr	r2, [sp, #8]
 800baba:	2a02      	cmp	r2, #2
 800babc:	d059      	beq.n	800bb72 <_scanf_float+0x242>
 800babe:	2c01      	cmp	r4, #1
 800bac0:	d002      	beq.n	800bac8 <_scanf_float+0x198>
 800bac2:	2c04      	cmp	r4, #4
 800bac4:	d000      	beq.n	800bac8 <_scanf_float+0x198>
 800bac6:	e764      	b.n	800b992 <_scanf_float+0x62>
 800bac8:	3401      	adds	r4, #1
 800baca:	b2e4      	uxtb	r4, r4
 800bacc:	e7d8      	b.n	800ba80 <_scanf_float+0x150>
 800bace:	9a02      	ldr	r2, [sp, #8]
 800bad0:	2a01      	cmp	r2, #1
 800bad2:	d000      	beq.n	800bad6 <_scanf_float+0x1a6>
 800bad4:	e75d      	b.n	800b992 <_scanf_float+0x62>
 800bad6:	2202      	movs	r2, #2
 800bad8:	e7ec      	b.n	800bab4 <_scanf_float+0x184>
 800bada:	2c00      	cmp	r4, #0
 800badc:	d110      	bne.n	800bb00 <_scanf_float+0x1d0>
 800bade:	9a00      	ldr	r2, [sp, #0]
 800bae0:	2a00      	cmp	r2, #0
 800bae2:	d000      	beq.n	800bae6 <_scanf_float+0x1b6>
 800bae4:	e758      	b.n	800b998 <_scanf_float+0x68>
 800bae6:	6832      	ldr	r2, [r6, #0]
 800bae8:	21e0      	movs	r1, #224	; 0xe0
 800baea:	0010      	movs	r0, r2
 800baec:	00c9      	lsls	r1, r1, #3
 800baee:	4008      	ands	r0, r1
 800baf0:	4288      	cmp	r0, r1
 800baf2:	d000      	beq.n	800baf6 <_scanf_float+0x1c6>
 800baf4:	e754      	b.n	800b9a0 <_scanf_float+0x70>
 800baf6:	494f      	ldr	r1, [pc, #316]	; (800bc34 <_scanf_float+0x304>)
 800baf8:	3401      	adds	r4, #1
 800bafa:	400a      	ands	r2, r1
 800bafc:	6032      	str	r2, [r6, #0]
 800bafe:	e7bf      	b.n	800ba80 <_scanf_float+0x150>
 800bb00:	21fd      	movs	r1, #253	; 0xfd
 800bb02:	1ee2      	subs	r2, r4, #3
 800bb04:	420a      	tst	r2, r1
 800bb06:	d000      	beq.n	800bb0a <_scanf_float+0x1da>
 800bb08:	e743      	b.n	800b992 <_scanf_float+0x62>
 800bb0a:	e7dd      	b.n	800bac8 <_scanf_float+0x198>
 800bb0c:	2c02      	cmp	r4, #2
 800bb0e:	d000      	beq.n	800bb12 <_scanf_float+0x1e2>
 800bb10:	e73f      	b.n	800b992 <_scanf_float+0x62>
 800bb12:	2403      	movs	r4, #3
 800bb14:	e7b4      	b.n	800ba80 <_scanf_float+0x150>
 800bb16:	2c06      	cmp	r4, #6
 800bb18:	d000      	beq.n	800bb1c <_scanf_float+0x1ec>
 800bb1a:	e73a      	b.n	800b992 <_scanf_float+0x62>
 800bb1c:	2407      	movs	r4, #7
 800bb1e:	e7af      	b.n	800ba80 <_scanf_float+0x150>
 800bb20:	6832      	ldr	r2, [r6, #0]
 800bb22:	0591      	lsls	r1, r2, #22
 800bb24:	d400      	bmi.n	800bb28 <_scanf_float+0x1f8>
 800bb26:	e734      	b.n	800b992 <_scanf_float+0x62>
 800bb28:	4943      	ldr	r1, [pc, #268]	; (800bc38 <_scanf_float+0x308>)
 800bb2a:	400a      	ands	r2, r1
 800bb2c:	6032      	str	r2, [r6, #0]
 800bb2e:	9a00      	ldr	r2, [sp, #0]
 800bb30:	9204      	str	r2, [sp, #16]
 800bb32:	e7a5      	b.n	800ba80 <_scanf_float+0x150>
 800bb34:	21a0      	movs	r1, #160	; 0xa0
 800bb36:	2080      	movs	r0, #128	; 0x80
 800bb38:	6832      	ldr	r2, [r6, #0]
 800bb3a:	00c9      	lsls	r1, r1, #3
 800bb3c:	4011      	ands	r1, r2
 800bb3e:	00c0      	lsls	r0, r0, #3
 800bb40:	4281      	cmp	r1, r0
 800bb42:	d006      	beq.n	800bb52 <_scanf_float+0x222>
 800bb44:	4202      	tst	r2, r0
 800bb46:	d100      	bne.n	800bb4a <_scanf_float+0x21a>
 800bb48:	e723      	b.n	800b992 <_scanf_float+0x62>
 800bb4a:	9900      	ldr	r1, [sp, #0]
 800bb4c:	2900      	cmp	r1, #0
 800bb4e:	d100      	bne.n	800bb52 <_scanf_float+0x222>
 800bb50:	e726      	b.n	800b9a0 <_scanf_float+0x70>
 800bb52:	0591      	lsls	r1, r2, #22
 800bb54:	d404      	bmi.n	800bb60 <_scanf_float+0x230>
 800bb56:	9900      	ldr	r1, [sp, #0]
 800bb58:	9804      	ldr	r0, [sp, #16]
 800bb5a:	9708      	str	r7, [sp, #32]
 800bb5c:	1a09      	subs	r1, r1, r0
 800bb5e:	9107      	str	r1, [sp, #28]
 800bb60:	4934      	ldr	r1, [pc, #208]	; (800bc34 <_scanf_float+0x304>)
 800bb62:	400a      	ands	r2, r1
 800bb64:	21c0      	movs	r1, #192	; 0xc0
 800bb66:	0049      	lsls	r1, r1, #1
 800bb68:	430a      	orrs	r2, r1
 800bb6a:	6032      	str	r2, [r6, #0]
 800bb6c:	2200      	movs	r2, #0
 800bb6e:	9200      	str	r2, [sp, #0]
 800bb70:	e786      	b.n	800ba80 <_scanf_float+0x150>
 800bb72:	2203      	movs	r2, #3
 800bb74:	e79e      	b.n	800bab4 <_scanf_float+0x184>
 800bb76:	23c0      	movs	r3, #192	; 0xc0
 800bb78:	005b      	lsls	r3, r3, #1
 800bb7a:	0029      	movs	r1, r5
 800bb7c:	58f3      	ldr	r3, [r6, r3]
 800bb7e:	9801      	ldr	r0, [sp, #4]
 800bb80:	4798      	blx	r3
 800bb82:	2800      	cmp	r0, #0
 800bb84:	d100      	bne.n	800bb88 <_scanf_float+0x258>
 800bb86:	e6f6      	b.n	800b976 <_scanf_float+0x46>
 800bb88:	e703      	b.n	800b992 <_scanf_float+0x62>
 800bb8a:	3f01      	subs	r7, #1
 800bb8c:	5933      	ldr	r3, [r6, r4]
 800bb8e:	002a      	movs	r2, r5
 800bb90:	7839      	ldrb	r1, [r7, #0]
 800bb92:	9801      	ldr	r0, [sp, #4]
 800bb94:	4798      	blx	r3
 800bb96:	6933      	ldr	r3, [r6, #16]
 800bb98:	3b01      	subs	r3, #1
 800bb9a:	6133      	str	r3, [r6, #16]
 800bb9c:	e707      	b.n	800b9ae <_scanf_float+0x7e>
 800bb9e:	1e63      	subs	r3, r4, #1
 800bba0:	2b06      	cmp	r3, #6
 800bba2:	d80e      	bhi.n	800bbc2 <_scanf_float+0x292>
 800bba4:	9702      	str	r7, [sp, #8]
 800bba6:	2c02      	cmp	r4, #2
 800bba8:	d920      	bls.n	800bbec <_scanf_float+0x2bc>
 800bbaa:	1be3      	subs	r3, r4, r7
 800bbac:	b2db      	uxtb	r3, r3
 800bbae:	9305      	str	r3, [sp, #20]
 800bbb0:	9b02      	ldr	r3, [sp, #8]
 800bbb2:	9a05      	ldr	r2, [sp, #20]
 800bbb4:	189b      	adds	r3, r3, r2
 800bbb6:	b2db      	uxtb	r3, r3
 800bbb8:	2b03      	cmp	r3, #3
 800bbba:	d827      	bhi.n	800bc0c <_scanf_float+0x2dc>
 800bbbc:	3c03      	subs	r4, #3
 800bbbe:	b2e4      	uxtb	r4, r4
 800bbc0:	1b3f      	subs	r7, r7, r4
 800bbc2:	6833      	ldr	r3, [r6, #0]
 800bbc4:	05da      	lsls	r2, r3, #23
 800bbc6:	d554      	bpl.n	800bc72 <_scanf_float+0x342>
 800bbc8:	055b      	lsls	r3, r3, #21
 800bbca:	d537      	bpl.n	800bc3c <_scanf_float+0x30c>
 800bbcc:	24be      	movs	r4, #190	; 0xbe
 800bbce:	0064      	lsls	r4, r4, #1
 800bbd0:	9b03      	ldr	r3, [sp, #12]
 800bbd2:	429f      	cmp	r7, r3
 800bbd4:	d800      	bhi.n	800bbd8 <_scanf_float+0x2a8>
 800bbd6:	e6ee      	b.n	800b9b6 <_scanf_float+0x86>
 800bbd8:	3f01      	subs	r7, #1
 800bbda:	5933      	ldr	r3, [r6, r4]
 800bbdc:	002a      	movs	r2, r5
 800bbde:	7839      	ldrb	r1, [r7, #0]
 800bbe0:	9801      	ldr	r0, [sp, #4]
 800bbe2:	4798      	blx	r3
 800bbe4:	6933      	ldr	r3, [r6, #16]
 800bbe6:	3b01      	subs	r3, #1
 800bbe8:	6133      	str	r3, [r6, #16]
 800bbea:	e7f1      	b.n	800bbd0 <_scanf_float+0x2a0>
 800bbec:	24be      	movs	r4, #190	; 0xbe
 800bbee:	0064      	lsls	r4, r4, #1
 800bbf0:	9b03      	ldr	r3, [sp, #12]
 800bbf2:	429f      	cmp	r7, r3
 800bbf4:	d800      	bhi.n	800bbf8 <_scanf_float+0x2c8>
 800bbf6:	e6de      	b.n	800b9b6 <_scanf_float+0x86>
 800bbf8:	3f01      	subs	r7, #1
 800bbfa:	5933      	ldr	r3, [r6, r4]
 800bbfc:	002a      	movs	r2, r5
 800bbfe:	7839      	ldrb	r1, [r7, #0]
 800bc00:	9801      	ldr	r0, [sp, #4]
 800bc02:	4798      	blx	r3
 800bc04:	6933      	ldr	r3, [r6, #16]
 800bc06:	3b01      	subs	r3, #1
 800bc08:	6133      	str	r3, [r6, #16]
 800bc0a:	e7f1      	b.n	800bbf0 <_scanf_float+0x2c0>
 800bc0c:	9b02      	ldr	r3, [sp, #8]
 800bc0e:	002a      	movs	r2, r5
 800bc10:	3b01      	subs	r3, #1
 800bc12:	7819      	ldrb	r1, [r3, #0]
 800bc14:	9302      	str	r3, [sp, #8]
 800bc16:	23be      	movs	r3, #190	; 0xbe
 800bc18:	005b      	lsls	r3, r3, #1
 800bc1a:	58f3      	ldr	r3, [r6, r3]
 800bc1c:	9801      	ldr	r0, [sp, #4]
 800bc1e:	9309      	str	r3, [sp, #36]	; 0x24
 800bc20:	4798      	blx	r3
 800bc22:	6933      	ldr	r3, [r6, #16]
 800bc24:	3b01      	subs	r3, #1
 800bc26:	6133      	str	r3, [r6, #16]
 800bc28:	e7c2      	b.n	800bbb0 <_scanf_float+0x280>
 800bc2a:	46c0      	nop			; (mov r8, r8)
 800bc2c:	fffffeff 	.word	0xfffffeff
 800bc30:	fffffe7f 	.word	0xfffffe7f
 800bc34:	fffff87f 	.word	0xfffff87f
 800bc38:	fffffd7f 	.word	0xfffffd7f
 800bc3c:	6933      	ldr	r3, [r6, #16]
 800bc3e:	1e7c      	subs	r4, r7, #1
 800bc40:	7821      	ldrb	r1, [r4, #0]
 800bc42:	3b01      	subs	r3, #1
 800bc44:	6133      	str	r3, [r6, #16]
 800bc46:	2965      	cmp	r1, #101	; 0x65
 800bc48:	d00c      	beq.n	800bc64 <_scanf_float+0x334>
 800bc4a:	2945      	cmp	r1, #69	; 0x45
 800bc4c:	d00a      	beq.n	800bc64 <_scanf_float+0x334>
 800bc4e:	23be      	movs	r3, #190	; 0xbe
 800bc50:	005b      	lsls	r3, r3, #1
 800bc52:	58f3      	ldr	r3, [r6, r3]
 800bc54:	002a      	movs	r2, r5
 800bc56:	9801      	ldr	r0, [sp, #4]
 800bc58:	4798      	blx	r3
 800bc5a:	6933      	ldr	r3, [r6, #16]
 800bc5c:	1ebc      	subs	r4, r7, #2
 800bc5e:	3b01      	subs	r3, #1
 800bc60:	7821      	ldrb	r1, [r4, #0]
 800bc62:	6133      	str	r3, [r6, #16]
 800bc64:	23be      	movs	r3, #190	; 0xbe
 800bc66:	005b      	lsls	r3, r3, #1
 800bc68:	002a      	movs	r2, r5
 800bc6a:	58f3      	ldr	r3, [r6, r3]
 800bc6c:	9801      	ldr	r0, [sp, #4]
 800bc6e:	4798      	blx	r3
 800bc70:	0027      	movs	r7, r4
 800bc72:	6832      	ldr	r2, [r6, #0]
 800bc74:	2310      	movs	r3, #16
 800bc76:	0011      	movs	r1, r2
 800bc78:	4019      	ands	r1, r3
 800bc7a:	9102      	str	r1, [sp, #8]
 800bc7c:	421a      	tst	r2, r3
 800bc7e:	d158      	bne.n	800bd32 <_scanf_float+0x402>
 800bc80:	23c0      	movs	r3, #192	; 0xc0
 800bc82:	7039      	strb	r1, [r7, #0]
 800bc84:	6832      	ldr	r2, [r6, #0]
 800bc86:	00db      	lsls	r3, r3, #3
 800bc88:	4013      	ands	r3, r2
 800bc8a:	2280      	movs	r2, #128	; 0x80
 800bc8c:	00d2      	lsls	r2, r2, #3
 800bc8e:	4293      	cmp	r3, r2
 800bc90:	d11d      	bne.n	800bcce <_scanf_float+0x39e>
 800bc92:	9b04      	ldr	r3, [sp, #16]
 800bc94:	9a00      	ldr	r2, [sp, #0]
 800bc96:	9900      	ldr	r1, [sp, #0]
 800bc98:	1a9a      	subs	r2, r3, r2
 800bc9a:	428b      	cmp	r3, r1
 800bc9c:	d124      	bne.n	800bce8 <_scanf_float+0x3b8>
 800bc9e:	2200      	movs	r2, #0
 800bca0:	9903      	ldr	r1, [sp, #12]
 800bca2:	9801      	ldr	r0, [sp, #4]
 800bca4:	f000 fec2 	bl	800ca2c <_strtod_r>
 800bca8:	9b06      	ldr	r3, [sp, #24]
 800bcaa:	000d      	movs	r5, r1
 800bcac:	6831      	ldr	r1, [r6, #0]
 800bcae:	0004      	movs	r4, r0
 800bcb0:	681b      	ldr	r3, [r3, #0]
 800bcb2:	078a      	lsls	r2, r1, #30
 800bcb4:	d525      	bpl.n	800bd02 <_scanf_float+0x3d2>
 800bcb6:	1d1a      	adds	r2, r3, #4
 800bcb8:	9906      	ldr	r1, [sp, #24]
 800bcba:	600a      	str	r2, [r1, #0]
 800bcbc:	681b      	ldr	r3, [r3, #0]
 800bcbe:	601c      	str	r4, [r3, #0]
 800bcc0:	605d      	str	r5, [r3, #4]
 800bcc2:	68f3      	ldr	r3, [r6, #12]
 800bcc4:	3301      	adds	r3, #1
 800bcc6:	60f3      	str	r3, [r6, #12]
 800bcc8:	9802      	ldr	r0, [sp, #8]
 800bcca:	b00b      	add	sp, #44	; 0x2c
 800bccc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bcce:	9b07      	ldr	r3, [sp, #28]
 800bcd0:	2b00      	cmp	r3, #0
 800bcd2:	d0e4      	beq.n	800bc9e <_scanf_float+0x36e>
 800bcd4:	9b08      	ldr	r3, [sp, #32]
 800bcd6:	9a02      	ldr	r2, [sp, #8]
 800bcd8:	1c59      	adds	r1, r3, #1
 800bcda:	9801      	ldr	r0, [sp, #4]
 800bcdc:	230a      	movs	r3, #10
 800bcde:	f000 ff3b 	bl	800cb58 <_strtol_r>
 800bce2:	9b07      	ldr	r3, [sp, #28]
 800bce4:	9f08      	ldr	r7, [sp, #32]
 800bce6:	1ac2      	subs	r2, r0, r3
 800bce8:	0033      	movs	r3, r6
 800bcea:	3370      	adds	r3, #112	; 0x70
 800bcec:	33ff      	adds	r3, #255	; 0xff
 800bcee:	429f      	cmp	r7, r3
 800bcf0:	d302      	bcc.n	800bcf8 <_scanf_float+0x3c8>
 800bcf2:	0037      	movs	r7, r6
 800bcf4:	376f      	adds	r7, #111	; 0x6f
 800bcf6:	37ff      	adds	r7, #255	; 0xff
 800bcf8:	0038      	movs	r0, r7
 800bcfa:	490f      	ldr	r1, [pc, #60]	; (800bd38 <_scanf_float+0x408>)
 800bcfc:	f000 f83a 	bl	800bd74 <siprintf>
 800bd00:	e7cd      	b.n	800bc9e <_scanf_float+0x36e>
 800bd02:	1d1a      	adds	r2, r3, #4
 800bd04:	0749      	lsls	r1, r1, #29
 800bd06:	d4d7      	bmi.n	800bcb8 <_scanf_float+0x388>
 800bd08:	9906      	ldr	r1, [sp, #24]
 800bd0a:	0020      	movs	r0, r4
 800bd0c:	600a      	str	r2, [r1, #0]
 800bd0e:	681f      	ldr	r7, [r3, #0]
 800bd10:	0022      	movs	r2, r4
 800bd12:	002b      	movs	r3, r5
 800bd14:	0029      	movs	r1, r5
 800bd16:	f7f7 f8f5 	bl	8002f04 <__aeabi_dcmpun>
 800bd1a:	2800      	cmp	r0, #0
 800bd1c:	d004      	beq.n	800bd28 <_scanf_float+0x3f8>
 800bd1e:	4807      	ldr	r0, [pc, #28]	; (800bd3c <_scanf_float+0x40c>)
 800bd20:	f7ff f8fc 	bl	800af1c <nanf>
 800bd24:	6038      	str	r0, [r7, #0]
 800bd26:	e7cc      	b.n	800bcc2 <_scanf_float+0x392>
 800bd28:	0020      	movs	r0, r4
 800bd2a:	0029      	movs	r1, r5
 800bd2c:	f7f7 f9dc 	bl	80030e8 <__aeabi_d2f>
 800bd30:	e7f8      	b.n	800bd24 <_scanf_float+0x3f4>
 800bd32:	2300      	movs	r3, #0
 800bd34:	e640      	b.n	800b9b8 <_scanf_float+0x88>
 800bd36:	46c0      	nop			; (mov r8, r8)
 800bd38:	0800ffdc 	.word	0x0800ffdc
 800bd3c:	08010458 	.word	0x08010458

0800bd40 <iprintf>:
 800bd40:	b40f      	push	{r0, r1, r2, r3}
 800bd42:	4b0b      	ldr	r3, [pc, #44]	; (800bd70 <iprintf+0x30>)
 800bd44:	b513      	push	{r0, r1, r4, lr}
 800bd46:	681c      	ldr	r4, [r3, #0]
 800bd48:	2c00      	cmp	r4, #0
 800bd4a:	d005      	beq.n	800bd58 <iprintf+0x18>
 800bd4c:	69a3      	ldr	r3, [r4, #24]
 800bd4e:	2b00      	cmp	r3, #0
 800bd50:	d102      	bne.n	800bd58 <iprintf+0x18>
 800bd52:	0020      	movs	r0, r4
 800bd54:	f001 fe10 	bl	800d978 <__sinit>
 800bd58:	ab05      	add	r3, sp, #20
 800bd5a:	0020      	movs	r0, r4
 800bd5c:	9a04      	ldr	r2, [sp, #16]
 800bd5e:	68a1      	ldr	r1, [r4, #8]
 800bd60:	9301      	str	r3, [sp, #4]
 800bd62:	f003 f95d 	bl	800f020 <_vfiprintf_r>
 800bd66:	bc16      	pop	{r1, r2, r4}
 800bd68:	bc08      	pop	{r3}
 800bd6a:	b004      	add	sp, #16
 800bd6c:	4718      	bx	r3
 800bd6e:	46c0      	nop			; (mov r8, r8)
 800bd70:	2000005c 	.word	0x2000005c

0800bd74 <siprintf>:
 800bd74:	b40e      	push	{r1, r2, r3}
 800bd76:	b500      	push	{lr}
 800bd78:	490b      	ldr	r1, [pc, #44]	; (800bda8 <siprintf+0x34>)
 800bd7a:	b09c      	sub	sp, #112	; 0x70
 800bd7c:	ab1d      	add	r3, sp, #116	; 0x74
 800bd7e:	9002      	str	r0, [sp, #8]
 800bd80:	9006      	str	r0, [sp, #24]
 800bd82:	9107      	str	r1, [sp, #28]
 800bd84:	9104      	str	r1, [sp, #16]
 800bd86:	4809      	ldr	r0, [pc, #36]	; (800bdac <siprintf+0x38>)
 800bd88:	4909      	ldr	r1, [pc, #36]	; (800bdb0 <siprintf+0x3c>)
 800bd8a:	cb04      	ldmia	r3!, {r2}
 800bd8c:	9105      	str	r1, [sp, #20]
 800bd8e:	6800      	ldr	r0, [r0, #0]
 800bd90:	a902      	add	r1, sp, #8
 800bd92:	9301      	str	r3, [sp, #4]
 800bd94:	f003 f81c 	bl	800edd0 <_svfiprintf_r>
 800bd98:	2300      	movs	r3, #0
 800bd9a:	9a02      	ldr	r2, [sp, #8]
 800bd9c:	7013      	strb	r3, [r2, #0]
 800bd9e:	b01c      	add	sp, #112	; 0x70
 800bda0:	bc08      	pop	{r3}
 800bda2:	b003      	add	sp, #12
 800bda4:	4718      	bx	r3
 800bda6:	46c0      	nop			; (mov r8, r8)
 800bda8:	7fffffff 	.word	0x7fffffff
 800bdac:	2000005c 	.word	0x2000005c
 800bdb0:	ffff0208 	.word	0xffff0208

0800bdb4 <sulp>:
 800bdb4:	b570      	push	{r4, r5, r6, lr}
 800bdb6:	0016      	movs	r6, r2
 800bdb8:	000d      	movs	r5, r1
 800bdba:	f002 fdad 	bl	800e918 <__ulp>
 800bdbe:	2e00      	cmp	r6, #0
 800bdc0:	d00d      	beq.n	800bdde <sulp+0x2a>
 800bdc2:	236b      	movs	r3, #107	; 0x6b
 800bdc4:	006a      	lsls	r2, r5, #1
 800bdc6:	0d52      	lsrs	r2, r2, #21
 800bdc8:	1a9b      	subs	r3, r3, r2
 800bdca:	2b00      	cmp	r3, #0
 800bdcc:	dd07      	ble.n	800bdde <sulp+0x2a>
 800bdce:	2400      	movs	r4, #0
 800bdd0:	4a03      	ldr	r2, [pc, #12]	; (800bde0 <sulp+0x2c>)
 800bdd2:	051b      	lsls	r3, r3, #20
 800bdd4:	189d      	adds	r5, r3, r2
 800bdd6:	002b      	movs	r3, r5
 800bdd8:	0022      	movs	r2, r4
 800bdda:	f7f6 fa95 	bl	8002308 <__aeabi_dmul>
 800bdde:	bd70      	pop	{r4, r5, r6, pc}
 800bde0:	3ff00000 	.word	0x3ff00000

0800bde4 <_strtod_l>:
 800bde4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bde6:	001d      	movs	r5, r3
 800bde8:	2300      	movs	r3, #0
 800bdea:	b0a7      	sub	sp, #156	; 0x9c
 800bdec:	9322      	str	r3, [sp, #136]	; 0x88
 800bdee:	4bae      	ldr	r3, [pc, #696]	; (800c0a8 <_strtod_l+0x2c4>)
 800bdf0:	9005      	str	r0, [sp, #20]
 800bdf2:	681b      	ldr	r3, [r3, #0]
 800bdf4:	9108      	str	r1, [sp, #32]
 800bdf6:	0018      	movs	r0, r3
 800bdf8:	9307      	str	r3, [sp, #28]
 800bdfa:	921d      	str	r2, [sp, #116]	; 0x74
 800bdfc:	f7f4 f982 	bl	8000104 <strlen>
 800be00:	2600      	movs	r6, #0
 800be02:	0004      	movs	r4, r0
 800be04:	2700      	movs	r7, #0
 800be06:	9b08      	ldr	r3, [sp, #32]
 800be08:	9321      	str	r3, [sp, #132]	; 0x84
 800be0a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800be0c:	7813      	ldrb	r3, [r2, #0]
 800be0e:	2b2b      	cmp	r3, #43	; 0x2b
 800be10:	d058      	beq.n	800bec4 <_strtod_l+0xe0>
 800be12:	d844      	bhi.n	800be9e <_strtod_l+0xba>
 800be14:	2b0d      	cmp	r3, #13
 800be16:	d83d      	bhi.n	800be94 <_strtod_l+0xb0>
 800be18:	2b08      	cmp	r3, #8
 800be1a:	d83d      	bhi.n	800be98 <_strtod_l+0xb4>
 800be1c:	2b00      	cmp	r3, #0
 800be1e:	d047      	beq.n	800beb0 <_strtod_l+0xcc>
 800be20:	2300      	movs	r3, #0
 800be22:	9310      	str	r3, [sp, #64]	; 0x40
 800be24:	2200      	movs	r2, #0
 800be26:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800be28:	920a      	str	r2, [sp, #40]	; 0x28
 800be2a:	9306      	str	r3, [sp, #24]
 800be2c:	781b      	ldrb	r3, [r3, #0]
 800be2e:	2b30      	cmp	r3, #48	; 0x30
 800be30:	d000      	beq.n	800be34 <_strtod_l+0x50>
 800be32:	e083      	b.n	800bf3c <_strtod_l+0x158>
 800be34:	9b06      	ldr	r3, [sp, #24]
 800be36:	3220      	adds	r2, #32
 800be38:	785b      	ldrb	r3, [r3, #1]
 800be3a:	4393      	bics	r3, r2
 800be3c:	2b58      	cmp	r3, #88	; 0x58
 800be3e:	d000      	beq.n	800be42 <_strtod_l+0x5e>
 800be40:	e072      	b.n	800bf28 <_strtod_l+0x144>
 800be42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800be44:	9502      	str	r5, [sp, #8]
 800be46:	9301      	str	r3, [sp, #4]
 800be48:	ab22      	add	r3, sp, #136	; 0x88
 800be4a:	9300      	str	r3, [sp, #0]
 800be4c:	4a97      	ldr	r2, [pc, #604]	; (800c0ac <_strtod_l+0x2c8>)
 800be4e:	ab23      	add	r3, sp, #140	; 0x8c
 800be50:	9805      	ldr	r0, [sp, #20]
 800be52:	a921      	add	r1, sp, #132	; 0x84
 800be54:	f001 fe9a 	bl	800db8c <__gethex>
 800be58:	2307      	movs	r3, #7
 800be5a:	0005      	movs	r5, r0
 800be5c:	0004      	movs	r4, r0
 800be5e:	401d      	ands	r5, r3
 800be60:	4218      	tst	r0, r3
 800be62:	d006      	beq.n	800be72 <_strtod_l+0x8e>
 800be64:	2d06      	cmp	r5, #6
 800be66:	d12f      	bne.n	800bec8 <_strtod_l+0xe4>
 800be68:	9b06      	ldr	r3, [sp, #24]
 800be6a:	3301      	adds	r3, #1
 800be6c:	9321      	str	r3, [sp, #132]	; 0x84
 800be6e:	2300      	movs	r3, #0
 800be70:	9310      	str	r3, [sp, #64]	; 0x40
 800be72:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800be74:	2b00      	cmp	r3, #0
 800be76:	d002      	beq.n	800be7e <_strtod_l+0x9a>
 800be78:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800be7a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800be7c:	601a      	str	r2, [r3, #0]
 800be7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800be80:	2b00      	cmp	r3, #0
 800be82:	d01c      	beq.n	800bebe <_strtod_l+0xda>
 800be84:	2380      	movs	r3, #128	; 0x80
 800be86:	0032      	movs	r2, r6
 800be88:	061b      	lsls	r3, r3, #24
 800be8a:	18fb      	adds	r3, r7, r3
 800be8c:	0010      	movs	r0, r2
 800be8e:	0019      	movs	r1, r3
 800be90:	b027      	add	sp, #156	; 0x9c
 800be92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800be94:	2b20      	cmp	r3, #32
 800be96:	d1c3      	bne.n	800be20 <_strtod_l+0x3c>
 800be98:	3201      	adds	r2, #1
 800be9a:	9221      	str	r2, [sp, #132]	; 0x84
 800be9c:	e7b5      	b.n	800be0a <_strtod_l+0x26>
 800be9e:	2b2d      	cmp	r3, #45	; 0x2d
 800bea0:	d1be      	bne.n	800be20 <_strtod_l+0x3c>
 800bea2:	3b2c      	subs	r3, #44	; 0x2c
 800bea4:	9310      	str	r3, [sp, #64]	; 0x40
 800bea6:	1c53      	adds	r3, r2, #1
 800bea8:	9321      	str	r3, [sp, #132]	; 0x84
 800beaa:	7853      	ldrb	r3, [r2, #1]
 800beac:	2b00      	cmp	r3, #0
 800beae:	d1b9      	bne.n	800be24 <_strtod_l+0x40>
 800beb0:	9b08      	ldr	r3, [sp, #32]
 800beb2:	9321      	str	r3, [sp, #132]	; 0x84
 800beb4:	2300      	movs	r3, #0
 800beb6:	9310      	str	r3, [sp, #64]	; 0x40
 800beb8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800beba:	2b00      	cmp	r3, #0
 800bebc:	d1dc      	bne.n	800be78 <_strtod_l+0x94>
 800bebe:	0032      	movs	r2, r6
 800bec0:	003b      	movs	r3, r7
 800bec2:	e7e3      	b.n	800be8c <_strtod_l+0xa8>
 800bec4:	2300      	movs	r3, #0
 800bec6:	e7ed      	b.n	800bea4 <_strtod_l+0xc0>
 800bec8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800beca:	2a00      	cmp	r2, #0
 800becc:	d007      	beq.n	800bede <_strtod_l+0xfa>
 800bece:	2135      	movs	r1, #53	; 0x35
 800bed0:	a824      	add	r0, sp, #144	; 0x90
 800bed2:	f002 fe20 	bl	800eb16 <__copybits>
 800bed6:	9922      	ldr	r1, [sp, #136]	; 0x88
 800bed8:	9805      	ldr	r0, [sp, #20]
 800beda:	f002 f9db 	bl	800e294 <_Bfree>
 800bede:	1e68      	subs	r0, r5, #1
 800bee0:	2805      	cmp	r0, #5
 800bee2:	d806      	bhi.n	800bef2 <_strtod_l+0x10e>
 800bee4:	f7f4 f916 	bl	8000114 <__gnu_thumb1_case_uqi>
 800bee8:	1c190b0e 	.word	0x1c190b0e
 800beec:	030e      	.short	0x030e
 800beee:	2700      	movs	r7, #0
 800bef0:	003e      	movs	r6, r7
 800bef2:	0723      	lsls	r3, r4, #28
 800bef4:	d5bd      	bpl.n	800be72 <_strtod_l+0x8e>
 800bef6:	2380      	movs	r3, #128	; 0x80
 800bef8:	061b      	lsls	r3, r3, #24
 800befa:	431f      	orrs	r7, r3
 800befc:	e7b9      	b.n	800be72 <_strtod_l+0x8e>
 800befe:	9e24      	ldr	r6, [sp, #144]	; 0x90
 800bf00:	9f25      	ldr	r7, [sp, #148]	; 0x94
 800bf02:	e7f6      	b.n	800bef2 <_strtod_l+0x10e>
 800bf04:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800bf06:	4a6a      	ldr	r2, [pc, #424]	; (800c0b0 <_strtod_l+0x2cc>)
 800bf08:	496a      	ldr	r1, [pc, #424]	; (800c0b4 <_strtod_l+0x2d0>)
 800bf0a:	401a      	ands	r2, r3
 800bf0c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800bf0e:	9e24      	ldr	r6, [sp, #144]	; 0x90
 800bf10:	185b      	adds	r3, r3, r1
 800bf12:	051b      	lsls	r3, r3, #20
 800bf14:	431a      	orrs	r2, r3
 800bf16:	0017      	movs	r7, r2
 800bf18:	e7eb      	b.n	800bef2 <_strtod_l+0x10e>
 800bf1a:	2600      	movs	r6, #0
 800bf1c:	4f66      	ldr	r7, [pc, #408]	; (800c0b8 <_strtod_l+0x2d4>)
 800bf1e:	e7e8      	b.n	800bef2 <_strtod_l+0x10e>
 800bf20:	2601      	movs	r6, #1
 800bf22:	4f66      	ldr	r7, [pc, #408]	; (800c0bc <_strtod_l+0x2d8>)
 800bf24:	4276      	negs	r6, r6
 800bf26:	e7e4      	b.n	800bef2 <_strtod_l+0x10e>
 800bf28:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800bf2a:	1c5a      	adds	r2, r3, #1
 800bf2c:	9221      	str	r2, [sp, #132]	; 0x84
 800bf2e:	785b      	ldrb	r3, [r3, #1]
 800bf30:	2b30      	cmp	r3, #48	; 0x30
 800bf32:	d0f9      	beq.n	800bf28 <_strtod_l+0x144>
 800bf34:	2b00      	cmp	r3, #0
 800bf36:	d09c      	beq.n	800be72 <_strtod_l+0x8e>
 800bf38:	2301      	movs	r3, #1
 800bf3a:	930a      	str	r3, [sp, #40]	; 0x28
 800bf3c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800bf3e:	220a      	movs	r2, #10
 800bf40:	9311      	str	r3, [sp, #68]	; 0x44
 800bf42:	2300      	movs	r3, #0
 800bf44:	930e      	str	r3, [sp, #56]	; 0x38
 800bf46:	930b      	str	r3, [sp, #44]	; 0x2c
 800bf48:	9309      	str	r3, [sp, #36]	; 0x24
 800bf4a:	9821      	ldr	r0, [sp, #132]	; 0x84
 800bf4c:	7805      	ldrb	r5, [r0, #0]
 800bf4e:	002b      	movs	r3, r5
 800bf50:	3b30      	subs	r3, #48	; 0x30
 800bf52:	b2d9      	uxtb	r1, r3
 800bf54:	2909      	cmp	r1, #9
 800bf56:	d927      	bls.n	800bfa8 <_strtod_l+0x1c4>
 800bf58:	0022      	movs	r2, r4
 800bf5a:	9907      	ldr	r1, [sp, #28]
 800bf5c:	f003 f9fe 	bl	800f35c <strncmp>
 800bf60:	2800      	cmp	r0, #0
 800bf62:	d033      	beq.n	800bfcc <_strtod_l+0x1e8>
 800bf64:	2000      	movs	r0, #0
 800bf66:	002b      	movs	r3, r5
 800bf68:	4684      	mov	ip, r0
 800bf6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bf6c:	900c      	str	r0, [sp, #48]	; 0x30
 800bf6e:	9206      	str	r2, [sp, #24]
 800bf70:	2220      	movs	r2, #32
 800bf72:	0019      	movs	r1, r3
 800bf74:	4391      	bics	r1, r2
 800bf76:	000a      	movs	r2, r1
 800bf78:	2100      	movs	r1, #0
 800bf7a:	9107      	str	r1, [sp, #28]
 800bf7c:	2a45      	cmp	r2, #69	; 0x45
 800bf7e:	d000      	beq.n	800bf82 <_strtod_l+0x19e>
 800bf80:	e0c5      	b.n	800c10e <_strtod_l+0x32a>
 800bf82:	9b06      	ldr	r3, [sp, #24]
 800bf84:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bf86:	4303      	orrs	r3, r0
 800bf88:	4313      	orrs	r3, r2
 800bf8a:	428b      	cmp	r3, r1
 800bf8c:	d090      	beq.n	800beb0 <_strtod_l+0xcc>
 800bf8e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800bf90:	9308      	str	r3, [sp, #32]
 800bf92:	3301      	adds	r3, #1
 800bf94:	9321      	str	r3, [sp, #132]	; 0x84
 800bf96:	9b08      	ldr	r3, [sp, #32]
 800bf98:	785b      	ldrb	r3, [r3, #1]
 800bf9a:	2b2b      	cmp	r3, #43	; 0x2b
 800bf9c:	d075      	beq.n	800c08a <_strtod_l+0x2a6>
 800bf9e:	000c      	movs	r4, r1
 800bfa0:	2b2d      	cmp	r3, #45	; 0x2d
 800bfa2:	d178      	bne.n	800c096 <_strtod_l+0x2b2>
 800bfa4:	2401      	movs	r4, #1
 800bfa6:	e071      	b.n	800c08c <_strtod_l+0x2a8>
 800bfa8:	9909      	ldr	r1, [sp, #36]	; 0x24
 800bfaa:	2908      	cmp	r1, #8
 800bfac:	dc09      	bgt.n	800bfc2 <_strtod_l+0x1de>
 800bfae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800bfb0:	4351      	muls	r1, r2
 800bfb2:	185b      	adds	r3, r3, r1
 800bfb4:	930b      	str	r3, [sp, #44]	; 0x2c
 800bfb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bfb8:	3001      	adds	r0, #1
 800bfba:	3301      	adds	r3, #1
 800bfbc:	9309      	str	r3, [sp, #36]	; 0x24
 800bfbe:	9021      	str	r0, [sp, #132]	; 0x84
 800bfc0:	e7c3      	b.n	800bf4a <_strtod_l+0x166>
 800bfc2:	990e      	ldr	r1, [sp, #56]	; 0x38
 800bfc4:	4351      	muls	r1, r2
 800bfc6:	185b      	adds	r3, r3, r1
 800bfc8:	930e      	str	r3, [sp, #56]	; 0x38
 800bfca:	e7f4      	b.n	800bfb6 <_strtod_l+0x1d2>
 800bfcc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800bfce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bfd0:	191c      	adds	r4, r3, r4
 800bfd2:	9421      	str	r4, [sp, #132]	; 0x84
 800bfd4:	7823      	ldrb	r3, [r4, #0]
 800bfd6:	2a00      	cmp	r2, #0
 800bfd8:	d039      	beq.n	800c04e <_strtod_l+0x26a>
 800bfda:	900c      	str	r0, [sp, #48]	; 0x30
 800bfdc:	9206      	str	r2, [sp, #24]
 800bfde:	001a      	movs	r2, r3
 800bfe0:	3a30      	subs	r2, #48	; 0x30
 800bfe2:	2a09      	cmp	r2, #9
 800bfe4:	d912      	bls.n	800c00c <_strtod_l+0x228>
 800bfe6:	2201      	movs	r2, #1
 800bfe8:	4694      	mov	ip, r2
 800bfea:	e7c1      	b.n	800bf70 <_strtod_l+0x18c>
 800bfec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800bfee:	3001      	adds	r0, #1
 800bff0:	1c5a      	adds	r2, r3, #1
 800bff2:	9221      	str	r2, [sp, #132]	; 0x84
 800bff4:	785b      	ldrb	r3, [r3, #1]
 800bff6:	2b30      	cmp	r3, #48	; 0x30
 800bff8:	d0f8      	beq.n	800bfec <_strtod_l+0x208>
 800bffa:	001a      	movs	r2, r3
 800bffc:	3a31      	subs	r2, #49	; 0x31
 800bffe:	2a08      	cmp	r2, #8
 800c000:	d83e      	bhi.n	800c080 <_strtod_l+0x29c>
 800c002:	900c      	str	r0, [sp, #48]	; 0x30
 800c004:	2000      	movs	r0, #0
 800c006:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c008:	9006      	str	r0, [sp, #24]
 800c00a:	9211      	str	r2, [sp, #68]	; 0x44
 800c00c:	001a      	movs	r2, r3
 800c00e:	9906      	ldr	r1, [sp, #24]
 800c010:	1c44      	adds	r4, r0, #1
 800c012:	3a30      	subs	r2, #48	; 0x30
 800c014:	2b30      	cmp	r3, #48	; 0x30
 800c016:	d013      	beq.n	800c040 <_strtod_l+0x25c>
 800c018:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c01a:	191b      	adds	r3, r3, r4
 800c01c:	930c      	str	r3, [sp, #48]	; 0x30
 800c01e:	1844      	adds	r4, r0, r1
 800c020:	000b      	movs	r3, r1
 800c022:	210a      	movs	r1, #10
 800c024:	429c      	cmp	r4, r3
 800c026:	d114      	bne.n	800c052 <_strtod_l+0x26e>
 800c028:	9b06      	ldr	r3, [sp, #24]
 800c02a:	1c59      	adds	r1, r3, #1
 800c02c:	1809      	adds	r1, r1, r0
 800c02e:	1818      	adds	r0, r3, r0
 800c030:	2808      	cmp	r0, #8
 800c032:	dc1c      	bgt.n	800c06e <_strtod_l+0x28a>
 800c034:	230a      	movs	r3, #10
 800c036:	2400      	movs	r4, #0
 800c038:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800c03a:	4343      	muls	r3, r0
 800c03c:	18d3      	adds	r3, r2, r3
 800c03e:	930b      	str	r3, [sp, #44]	; 0x2c
 800c040:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c042:	0020      	movs	r0, r4
 800c044:	1c5a      	adds	r2, r3, #1
 800c046:	9221      	str	r2, [sp, #132]	; 0x84
 800c048:	785b      	ldrb	r3, [r3, #1]
 800c04a:	9106      	str	r1, [sp, #24]
 800c04c:	e7c7      	b.n	800bfde <_strtod_l+0x1fa>
 800c04e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c050:	e7d1      	b.n	800bff6 <_strtod_l+0x212>
 800c052:	2b08      	cmp	r3, #8
 800c054:	dc04      	bgt.n	800c060 <_strtod_l+0x27c>
 800c056:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800c058:	434d      	muls	r5, r1
 800c05a:	950b      	str	r5, [sp, #44]	; 0x2c
 800c05c:	3301      	adds	r3, #1
 800c05e:	e7e1      	b.n	800c024 <_strtod_l+0x240>
 800c060:	1c5d      	adds	r5, r3, #1
 800c062:	2d10      	cmp	r5, #16
 800c064:	dcfa      	bgt.n	800c05c <_strtod_l+0x278>
 800c066:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800c068:	434d      	muls	r5, r1
 800c06a:	950e      	str	r5, [sp, #56]	; 0x38
 800c06c:	e7f6      	b.n	800c05c <_strtod_l+0x278>
 800c06e:	2400      	movs	r4, #0
 800c070:	2910      	cmp	r1, #16
 800c072:	dce5      	bgt.n	800c040 <_strtod_l+0x25c>
 800c074:	230a      	movs	r3, #10
 800c076:	980e      	ldr	r0, [sp, #56]	; 0x38
 800c078:	4343      	muls	r3, r0
 800c07a:	18d3      	adds	r3, r2, r3
 800c07c:	930e      	str	r3, [sp, #56]	; 0x38
 800c07e:	e7df      	b.n	800c040 <_strtod_l+0x25c>
 800c080:	2200      	movs	r2, #0
 800c082:	920c      	str	r2, [sp, #48]	; 0x30
 800c084:	9206      	str	r2, [sp, #24]
 800c086:	3201      	adds	r2, #1
 800c088:	e7ae      	b.n	800bfe8 <_strtod_l+0x204>
 800c08a:	2400      	movs	r4, #0
 800c08c:	9b08      	ldr	r3, [sp, #32]
 800c08e:	3302      	adds	r3, #2
 800c090:	9321      	str	r3, [sp, #132]	; 0x84
 800c092:	9b08      	ldr	r3, [sp, #32]
 800c094:	789b      	ldrb	r3, [r3, #2]
 800c096:	001a      	movs	r2, r3
 800c098:	3a30      	subs	r2, #48	; 0x30
 800c09a:	2a09      	cmp	r2, #9
 800c09c:	d914      	bls.n	800c0c8 <_strtod_l+0x2e4>
 800c09e:	9a08      	ldr	r2, [sp, #32]
 800c0a0:	9221      	str	r2, [sp, #132]	; 0x84
 800c0a2:	2200      	movs	r2, #0
 800c0a4:	e032      	b.n	800c10c <_strtod_l+0x328>
 800c0a6:	46c0      	nop			; (mov r8, r8)
 800c0a8:	0801029c 	.word	0x0801029c
 800c0ac:	0800ffe4 	.word	0x0800ffe4
 800c0b0:	ffefffff 	.word	0xffefffff
 800c0b4:	00000433 	.word	0x00000433
 800c0b8:	7ff00000 	.word	0x7ff00000
 800c0bc:	7fffffff 	.word	0x7fffffff
 800c0c0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c0c2:	1c5a      	adds	r2, r3, #1
 800c0c4:	9221      	str	r2, [sp, #132]	; 0x84
 800c0c6:	785b      	ldrb	r3, [r3, #1]
 800c0c8:	2b30      	cmp	r3, #48	; 0x30
 800c0ca:	d0f9      	beq.n	800c0c0 <_strtod_l+0x2dc>
 800c0cc:	2200      	movs	r2, #0
 800c0ce:	9207      	str	r2, [sp, #28]
 800c0d0:	001a      	movs	r2, r3
 800c0d2:	3a31      	subs	r2, #49	; 0x31
 800c0d4:	2a08      	cmp	r2, #8
 800c0d6:	d81a      	bhi.n	800c10e <_strtod_l+0x32a>
 800c0d8:	3b30      	subs	r3, #48	; 0x30
 800c0da:	001a      	movs	r2, r3
 800c0dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c0de:	9307      	str	r3, [sp, #28]
 800c0e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c0e2:	1c59      	adds	r1, r3, #1
 800c0e4:	9121      	str	r1, [sp, #132]	; 0x84
 800c0e6:	785b      	ldrb	r3, [r3, #1]
 800c0e8:	001d      	movs	r5, r3
 800c0ea:	3d30      	subs	r5, #48	; 0x30
 800c0ec:	2d09      	cmp	r5, #9
 800c0ee:	d939      	bls.n	800c164 <_strtod_l+0x380>
 800c0f0:	9d07      	ldr	r5, [sp, #28]
 800c0f2:	1b49      	subs	r1, r1, r5
 800c0f4:	4daf      	ldr	r5, [pc, #700]	; (800c3b4 <_strtod_l+0x5d0>)
 800c0f6:	9507      	str	r5, [sp, #28]
 800c0f8:	2908      	cmp	r1, #8
 800c0fa:	dc03      	bgt.n	800c104 <_strtod_l+0x320>
 800c0fc:	9207      	str	r2, [sp, #28]
 800c0fe:	42aa      	cmp	r2, r5
 800c100:	dd00      	ble.n	800c104 <_strtod_l+0x320>
 800c102:	9507      	str	r5, [sp, #28]
 800c104:	2c00      	cmp	r4, #0
 800c106:	d002      	beq.n	800c10e <_strtod_l+0x32a>
 800c108:	9a07      	ldr	r2, [sp, #28]
 800c10a:	4252      	negs	r2, r2
 800c10c:	9207      	str	r2, [sp, #28]
 800c10e:	9a06      	ldr	r2, [sp, #24]
 800c110:	2a00      	cmp	r2, #0
 800c112:	d14b      	bne.n	800c1ac <_strtod_l+0x3c8>
 800c114:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c116:	4310      	orrs	r0, r2
 800c118:	d000      	beq.n	800c11c <_strtod_l+0x338>
 800c11a:	e6aa      	b.n	800be72 <_strtod_l+0x8e>
 800c11c:	4662      	mov	r2, ip
 800c11e:	2a00      	cmp	r2, #0
 800c120:	d000      	beq.n	800c124 <_strtod_l+0x340>
 800c122:	e6c5      	b.n	800beb0 <_strtod_l+0xcc>
 800c124:	2b69      	cmp	r3, #105	; 0x69
 800c126:	d025      	beq.n	800c174 <_strtod_l+0x390>
 800c128:	dc21      	bgt.n	800c16e <_strtod_l+0x38a>
 800c12a:	2b49      	cmp	r3, #73	; 0x49
 800c12c:	d022      	beq.n	800c174 <_strtod_l+0x390>
 800c12e:	2b4e      	cmp	r3, #78	; 0x4e
 800c130:	d000      	beq.n	800c134 <_strtod_l+0x350>
 800c132:	e6bd      	b.n	800beb0 <_strtod_l+0xcc>
 800c134:	49a0      	ldr	r1, [pc, #640]	; (800c3b8 <_strtod_l+0x5d4>)
 800c136:	a821      	add	r0, sp, #132	; 0x84
 800c138:	f001 ff76 	bl	800e028 <__match>
 800c13c:	2800      	cmp	r0, #0
 800c13e:	d100      	bne.n	800c142 <_strtod_l+0x35e>
 800c140:	e6b6      	b.n	800beb0 <_strtod_l+0xcc>
 800c142:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c144:	781b      	ldrb	r3, [r3, #0]
 800c146:	2b28      	cmp	r3, #40	; 0x28
 800c148:	d12a      	bne.n	800c1a0 <_strtod_l+0x3bc>
 800c14a:	499c      	ldr	r1, [pc, #624]	; (800c3bc <_strtod_l+0x5d8>)
 800c14c:	aa24      	add	r2, sp, #144	; 0x90
 800c14e:	a821      	add	r0, sp, #132	; 0x84
 800c150:	f001 ff7e 	bl	800e050 <__hexnan>
 800c154:	2805      	cmp	r0, #5
 800c156:	d123      	bne.n	800c1a0 <_strtod_l+0x3bc>
 800c158:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800c15a:	4a99      	ldr	r2, [pc, #612]	; (800c3c0 <_strtod_l+0x5dc>)
 800c15c:	9e24      	ldr	r6, [sp, #144]	; 0x90
 800c15e:	431a      	orrs	r2, r3
 800c160:	0017      	movs	r7, r2
 800c162:	e686      	b.n	800be72 <_strtod_l+0x8e>
 800c164:	210a      	movs	r1, #10
 800c166:	434a      	muls	r2, r1
 800c168:	18d2      	adds	r2, r2, r3
 800c16a:	3a30      	subs	r2, #48	; 0x30
 800c16c:	e7b8      	b.n	800c0e0 <_strtod_l+0x2fc>
 800c16e:	2b6e      	cmp	r3, #110	; 0x6e
 800c170:	d0e0      	beq.n	800c134 <_strtod_l+0x350>
 800c172:	e69d      	b.n	800beb0 <_strtod_l+0xcc>
 800c174:	4993      	ldr	r1, [pc, #588]	; (800c3c4 <_strtod_l+0x5e0>)
 800c176:	a821      	add	r0, sp, #132	; 0x84
 800c178:	f001 ff56 	bl	800e028 <__match>
 800c17c:	2800      	cmp	r0, #0
 800c17e:	d100      	bne.n	800c182 <_strtod_l+0x39e>
 800c180:	e696      	b.n	800beb0 <_strtod_l+0xcc>
 800c182:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c184:	4990      	ldr	r1, [pc, #576]	; (800c3c8 <_strtod_l+0x5e4>)
 800c186:	3b01      	subs	r3, #1
 800c188:	a821      	add	r0, sp, #132	; 0x84
 800c18a:	9321      	str	r3, [sp, #132]	; 0x84
 800c18c:	f001 ff4c 	bl	800e028 <__match>
 800c190:	2800      	cmp	r0, #0
 800c192:	d102      	bne.n	800c19a <_strtod_l+0x3b6>
 800c194:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c196:	3301      	adds	r3, #1
 800c198:	9321      	str	r3, [sp, #132]	; 0x84
 800c19a:	2600      	movs	r6, #0
 800c19c:	4f88      	ldr	r7, [pc, #544]	; (800c3c0 <_strtod_l+0x5dc>)
 800c19e:	e668      	b.n	800be72 <_strtod_l+0x8e>
 800c1a0:	488a      	ldr	r0, [pc, #552]	; (800c3cc <_strtod_l+0x5e8>)
 800c1a2:	f003 f877 	bl	800f294 <nan>
 800c1a6:	0006      	movs	r6, r0
 800c1a8:	000f      	movs	r7, r1
 800c1aa:	e662      	b.n	800be72 <_strtod_l+0x8e>
 800c1ac:	9b07      	ldr	r3, [sp, #28]
 800c1ae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c1b0:	1a9b      	subs	r3, r3, r2
 800c1b2:	930a      	str	r3, [sp, #40]	; 0x28
 800c1b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c1b6:	2b00      	cmp	r3, #0
 800c1b8:	d101      	bne.n	800c1be <_strtod_l+0x3da>
 800c1ba:	9b06      	ldr	r3, [sp, #24]
 800c1bc:	9309      	str	r3, [sp, #36]	; 0x24
 800c1be:	9c06      	ldr	r4, [sp, #24]
 800c1c0:	2c10      	cmp	r4, #16
 800c1c2:	dd00      	ble.n	800c1c6 <_strtod_l+0x3e2>
 800c1c4:	2410      	movs	r4, #16
 800c1c6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800c1c8:	f7f6 ff20 	bl	800300c <__aeabi_ui2d>
 800c1cc:	9b06      	ldr	r3, [sp, #24]
 800c1ce:	0006      	movs	r6, r0
 800c1d0:	000f      	movs	r7, r1
 800c1d2:	2b09      	cmp	r3, #9
 800c1d4:	dd15      	ble.n	800c202 <_strtod_l+0x41e>
 800c1d6:	0022      	movs	r2, r4
 800c1d8:	4b7d      	ldr	r3, [pc, #500]	; (800c3d0 <_strtod_l+0x5ec>)
 800c1da:	3a09      	subs	r2, #9
 800c1dc:	00d2      	lsls	r2, r2, #3
 800c1de:	189b      	adds	r3, r3, r2
 800c1e0:	681a      	ldr	r2, [r3, #0]
 800c1e2:	685b      	ldr	r3, [r3, #4]
 800c1e4:	f7f6 f890 	bl	8002308 <__aeabi_dmul>
 800c1e8:	0006      	movs	r6, r0
 800c1ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 800c1ec:	000f      	movs	r7, r1
 800c1ee:	f7f6 ff0d 	bl	800300c <__aeabi_ui2d>
 800c1f2:	0002      	movs	r2, r0
 800c1f4:	000b      	movs	r3, r1
 800c1f6:	0030      	movs	r0, r6
 800c1f8:	0039      	movs	r1, r7
 800c1fa:	f7f5 f915 	bl	8001428 <__aeabi_dadd>
 800c1fe:	0006      	movs	r6, r0
 800c200:	000f      	movs	r7, r1
 800c202:	9b06      	ldr	r3, [sp, #24]
 800c204:	2b0f      	cmp	r3, #15
 800c206:	dc39      	bgt.n	800c27c <_strtod_l+0x498>
 800c208:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c20a:	2b00      	cmp	r3, #0
 800c20c:	d100      	bne.n	800c210 <_strtod_l+0x42c>
 800c20e:	e630      	b.n	800be72 <_strtod_l+0x8e>
 800c210:	dd24      	ble.n	800c25c <_strtod_l+0x478>
 800c212:	2b16      	cmp	r3, #22
 800c214:	dc09      	bgt.n	800c22a <_strtod_l+0x446>
 800c216:	00dd      	lsls	r5, r3, #3
 800c218:	0032      	movs	r2, r6
 800c21a:	003b      	movs	r3, r7
 800c21c:	4c6c      	ldr	r4, [pc, #432]	; (800c3d0 <_strtod_l+0x5ec>)
 800c21e:	1964      	adds	r4, r4, r5
 800c220:	6820      	ldr	r0, [r4, #0]
 800c222:	6861      	ldr	r1, [r4, #4]
 800c224:	f7f6 f870 	bl	8002308 <__aeabi_dmul>
 800c228:	e7bd      	b.n	800c1a6 <_strtod_l+0x3c2>
 800c22a:	2325      	movs	r3, #37	; 0x25
 800c22c:	9a06      	ldr	r2, [sp, #24]
 800c22e:	1a9b      	subs	r3, r3, r2
 800c230:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c232:	4293      	cmp	r3, r2
 800c234:	db22      	blt.n	800c27c <_strtod_l+0x498>
 800c236:	240f      	movs	r4, #15
 800c238:	9b06      	ldr	r3, [sp, #24]
 800c23a:	4d65      	ldr	r5, [pc, #404]	; (800c3d0 <_strtod_l+0x5ec>)
 800c23c:	1ae4      	subs	r4, r4, r3
 800c23e:	00e1      	lsls	r1, r4, #3
 800c240:	1869      	adds	r1, r5, r1
 800c242:	0032      	movs	r2, r6
 800c244:	6808      	ldr	r0, [r1, #0]
 800c246:	6849      	ldr	r1, [r1, #4]
 800c248:	003b      	movs	r3, r7
 800c24a:	f7f6 f85d 	bl	8002308 <__aeabi_dmul>
 800c24e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c250:	1b1c      	subs	r4, r3, r4
 800c252:	00e4      	lsls	r4, r4, #3
 800c254:	192c      	adds	r4, r5, r4
 800c256:	6822      	ldr	r2, [r4, #0]
 800c258:	6863      	ldr	r3, [r4, #4]
 800c25a:	e7e3      	b.n	800c224 <_strtod_l+0x440>
 800c25c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c25e:	3316      	adds	r3, #22
 800c260:	db0c      	blt.n	800c27c <_strtod_l+0x498>
 800c262:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c264:	9a07      	ldr	r2, [sp, #28]
 800c266:	0030      	movs	r0, r6
 800c268:	1a9a      	subs	r2, r3, r2
 800c26a:	4b59      	ldr	r3, [pc, #356]	; (800c3d0 <_strtod_l+0x5ec>)
 800c26c:	00d2      	lsls	r2, r2, #3
 800c26e:	189b      	adds	r3, r3, r2
 800c270:	0039      	movs	r1, r7
 800c272:	681a      	ldr	r2, [r3, #0]
 800c274:	685b      	ldr	r3, [r3, #4]
 800c276:	f7f5 fc41 	bl	8001afc <__aeabi_ddiv>
 800c27a:	e794      	b.n	800c1a6 <_strtod_l+0x3c2>
 800c27c:	9b06      	ldr	r3, [sp, #24]
 800c27e:	1b1c      	subs	r4, r3, r4
 800c280:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c282:	18e4      	adds	r4, r4, r3
 800c284:	2c00      	cmp	r4, #0
 800c286:	dd70      	ble.n	800c36a <_strtod_l+0x586>
 800c288:	230f      	movs	r3, #15
 800c28a:	0021      	movs	r1, r4
 800c28c:	4019      	ands	r1, r3
 800c28e:	421c      	tst	r4, r3
 800c290:	d00a      	beq.n	800c2a8 <_strtod_l+0x4c4>
 800c292:	00cb      	lsls	r3, r1, #3
 800c294:	494e      	ldr	r1, [pc, #312]	; (800c3d0 <_strtod_l+0x5ec>)
 800c296:	0032      	movs	r2, r6
 800c298:	18c9      	adds	r1, r1, r3
 800c29a:	6808      	ldr	r0, [r1, #0]
 800c29c:	6849      	ldr	r1, [r1, #4]
 800c29e:	003b      	movs	r3, r7
 800c2a0:	f7f6 f832 	bl	8002308 <__aeabi_dmul>
 800c2a4:	0006      	movs	r6, r0
 800c2a6:	000f      	movs	r7, r1
 800c2a8:	230f      	movs	r3, #15
 800c2aa:	439c      	bics	r4, r3
 800c2ac:	d048      	beq.n	800c340 <_strtod_l+0x55c>
 800c2ae:	3326      	adds	r3, #38	; 0x26
 800c2b0:	33ff      	adds	r3, #255	; 0xff
 800c2b2:	429c      	cmp	r4, r3
 800c2b4:	dd22      	ble.n	800c2fc <_strtod_l+0x518>
 800c2b6:	2300      	movs	r3, #0
 800c2b8:	9306      	str	r3, [sp, #24]
 800c2ba:	9307      	str	r3, [sp, #28]
 800c2bc:	930b      	str	r3, [sp, #44]	; 0x2c
 800c2be:	9309      	str	r3, [sp, #36]	; 0x24
 800c2c0:	2322      	movs	r3, #34	; 0x22
 800c2c2:	2600      	movs	r6, #0
 800c2c4:	9a05      	ldr	r2, [sp, #20]
 800c2c6:	4f3e      	ldr	r7, [pc, #248]	; (800c3c0 <_strtod_l+0x5dc>)
 800c2c8:	6013      	str	r3, [r2, #0]
 800c2ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c2cc:	42b3      	cmp	r3, r6
 800c2ce:	d100      	bne.n	800c2d2 <_strtod_l+0x4ee>
 800c2d0:	e5cf      	b.n	800be72 <_strtod_l+0x8e>
 800c2d2:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c2d4:	9805      	ldr	r0, [sp, #20]
 800c2d6:	f001 ffdd 	bl	800e294 <_Bfree>
 800c2da:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c2dc:	9805      	ldr	r0, [sp, #20]
 800c2de:	f001 ffd9 	bl	800e294 <_Bfree>
 800c2e2:	9907      	ldr	r1, [sp, #28]
 800c2e4:	9805      	ldr	r0, [sp, #20]
 800c2e6:	f001 ffd5 	bl	800e294 <_Bfree>
 800c2ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c2ec:	9805      	ldr	r0, [sp, #20]
 800c2ee:	f001 ffd1 	bl	800e294 <_Bfree>
 800c2f2:	9906      	ldr	r1, [sp, #24]
 800c2f4:	9805      	ldr	r0, [sp, #20]
 800c2f6:	f001 ffcd 	bl	800e294 <_Bfree>
 800c2fa:	e5ba      	b.n	800be72 <_strtod_l+0x8e>
 800c2fc:	2300      	movs	r3, #0
 800c2fe:	0030      	movs	r0, r6
 800c300:	0039      	movs	r1, r7
 800c302:	001d      	movs	r5, r3
 800c304:	1124      	asrs	r4, r4, #4
 800c306:	2c01      	cmp	r4, #1
 800c308:	dc1d      	bgt.n	800c346 <_strtod_l+0x562>
 800c30a:	2b00      	cmp	r3, #0
 800c30c:	d001      	beq.n	800c312 <_strtod_l+0x52e>
 800c30e:	0006      	movs	r6, r0
 800c310:	000f      	movs	r7, r1
 800c312:	4b30      	ldr	r3, [pc, #192]	; (800c3d4 <_strtod_l+0x5f0>)
 800c314:	00ed      	lsls	r5, r5, #3
 800c316:	18ff      	adds	r7, r7, r3
 800c318:	4b2f      	ldr	r3, [pc, #188]	; (800c3d8 <_strtod_l+0x5f4>)
 800c31a:	0032      	movs	r2, r6
 800c31c:	195d      	adds	r5, r3, r5
 800c31e:	6828      	ldr	r0, [r5, #0]
 800c320:	6869      	ldr	r1, [r5, #4]
 800c322:	003b      	movs	r3, r7
 800c324:	f7f5 fff0 	bl	8002308 <__aeabi_dmul>
 800c328:	4b25      	ldr	r3, [pc, #148]	; (800c3c0 <_strtod_l+0x5dc>)
 800c32a:	4a2c      	ldr	r2, [pc, #176]	; (800c3dc <_strtod_l+0x5f8>)
 800c32c:	0006      	movs	r6, r0
 800c32e:	400b      	ands	r3, r1
 800c330:	4293      	cmp	r3, r2
 800c332:	d8c0      	bhi.n	800c2b6 <_strtod_l+0x4d2>
 800c334:	4a2a      	ldr	r2, [pc, #168]	; (800c3e0 <_strtod_l+0x5fc>)
 800c336:	4293      	cmp	r3, r2
 800c338:	d913      	bls.n	800c362 <_strtod_l+0x57e>
 800c33a:	2601      	movs	r6, #1
 800c33c:	4f29      	ldr	r7, [pc, #164]	; (800c3e4 <_strtod_l+0x600>)
 800c33e:	4276      	negs	r6, r6
 800c340:	2300      	movs	r3, #0
 800c342:	9308      	str	r3, [sp, #32]
 800c344:	e087      	b.n	800c456 <_strtod_l+0x672>
 800c346:	2201      	movs	r2, #1
 800c348:	4214      	tst	r4, r2
 800c34a:	d007      	beq.n	800c35c <_strtod_l+0x578>
 800c34c:	4a22      	ldr	r2, [pc, #136]	; (800c3d8 <_strtod_l+0x5f4>)
 800c34e:	00eb      	lsls	r3, r5, #3
 800c350:	189b      	adds	r3, r3, r2
 800c352:	681a      	ldr	r2, [r3, #0]
 800c354:	685b      	ldr	r3, [r3, #4]
 800c356:	f7f5 ffd7 	bl	8002308 <__aeabi_dmul>
 800c35a:	2301      	movs	r3, #1
 800c35c:	3501      	adds	r5, #1
 800c35e:	1064      	asrs	r4, r4, #1
 800c360:	e7d1      	b.n	800c306 <_strtod_l+0x522>
 800c362:	23d4      	movs	r3, #212	; 0xd4
 800c364:	049b      	lsls	r3, r3, #18
 800c366:	18cf      	adds	r7, r1, r3
 800c368:	e7ea      	b.n	800c340 <_strtod_l+0x55c>
 800c36a:	2c00      	cmp	r4, #0
 800c36c:	d0e8      	beq.n	800c340 <_strtod_l+0x55c>
 800c36e:	4264      	negs	r4, r4
 800c370:	220f      	movs	r2, #15
 800c372:	0023      	movs	r3, r4
 800c374:	4013      	ands	r3, r2
 800c376:	4214      	tst	r4, r2
 800c378:	d00a      	beq.n	800c390 <_strtod_l+0x5ac>
 800c37a:	00da      	lsls	r2, r3, #3
 800c37c:	4b14      	ldr	r3, [pc, #80]	; (800c3d0 <_strtod_l+0x5ec>)
 800c37e:	0030      	movs	r0, r6
 800c380:	189b      	adds	r3, r3, r2
 800c382:	0039      	movs	r1, r7
 800c384:	681a      	ldr	r2, [r3, #0]
 800c386:	685b      	ldr	r3, [r3, #4]
 800c388:	f7f5 fbb8 	bl	8001afc <__aeabi_ddiv>
 800c38c:	0006      	movs	r6, r0
 800c38e:	000f      	movs	r7, r1
 800c390:	1124      	asrs	r4, r4, #4
 800c392:	d0d5      	beq.n	800c340 <_strtod_l+0x55c>
 800c394:	2c1f      	cmp	r4, #31
 800c396:	dd27      	ble.n	800c3e8 <_strtod_l+0x604>
 800c398:	2300      	movs	r3, #0
 800c39a:	9306      	str	r3, [sp, #24]
 800c39c:	9307      	str	r3, [sp, #28]
 800c39e:	930b      	str	r3, [sp, #44]	; 0x2c
 800c3a0:	9309      	str	r3, [sp, #36]	; 0x24
 800c3a2:	2322      	movs	r3, #34	; 0x22
 800c3a4:	9a05      	ldr	r2, [sp, #20]
 800c3a6:	2600      	movs	r6, #0
 800c3a8:	6013      	str	r3, [r2, #0]
 800c3aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c3ac:	2700      	movs	r7, #0
 800c3ae:	2b00      	cmp	r3, #0
 800c3b0:	d18f      	bne.n	800c2d2 <_strtod_l+0x4ee>
 800c3b2:	e55e      	b.n	800be72 <_strtod_l+0x8e>
 800c3b4:	00004e1f 	.word	0x00004e1f
 800c3b8:	0800ffb5 	.word	0x0800ffb5
 800c3bc:	0800fff8 	.word	0x0800fff8
 800c3c0:	7ff00000 	.word	0x7ff00000
 800c3c4:	0800ffad 	.word	0x0800ffad
 800c3c8:	0801013c 	.word	0x0801013c
 800c3cc:	08010458 	.word	0x08010458
 800c3d0:	08010338 	.word	0x08010338
 800c3d4:	fcb00000 	.word	0xfcb00000
 800c3d8:	08010310 	.word	0x08010310
 800c3dc:	7ca00000 	.word	0x7ca00000
 800c3e0:	7c900000 	.word	0x7c900000
 800c3e4:	7fefffff 	.word	0x7fefffff
 800c3e8:	2310      	movs	r3, #16
 800c3ea:	0022      	movs	r2, r4
 800c3ec:	401a      	ands	r2, r3
 800c3ee:	9208      	str	r2, [sp, #32]
 800c3f0:	421c      	tst	r4, r3
 800c3f2:	d001      	beq.n	800c3f8 <_strtod_l+0x614>
 800c3f4:	335a      	adds	r3, #90	; 0x5a
 800c3f6:	9308      	str	r3, [sp, #32]
 800c3f8:	0030      	movs	r0, r6
 800c3fa:	0039      	movs	r1, r7
 800c3fc:	2300      	movs	r3, #0
 800c3fe:	4dca      	ldr	r5, [pc, #808]	; (800c728 <_strtod_l+0x944>)
 800c400:	2201      	movs	r2, #1
 800c402:	4214      	tst	r4, r2
 800c404:	d004      	beq.n	800c410 <_strtod_l+0x62c>
 800c406:	682a      	ldr	r2, [r5, #0]
 800c408:	686b      	ldr	r3, [r5, #4]
 800c40a:	f7f5 ff7d 	bl	8002308 <__aeabi_dmul>
 800c40e:	2301      	movs	r3, #1
 800c410:	1064      	asrs	r4, r4, #1
 800c412:	3508      	adds	r5, #8
 800c414:	2c00      	cmp	r4, #0
 800c416:	d1f3      	bne.n	800c400 <_strtod_l+0x61c>
 800c418:	2b00      	cmp	r3, #0
 800c41a:	d001      	beq.n	800c420 <_strtod_l+0x63c>
 800c41c:	0006      	movs	r6, r0
 800c41e:	000f      	movs	r7, r1
 800c420:	9b08      	ldr	r3, [sp, #32]
 800c422:	2b00      	cmp	r3, #0
 800c424:	d00f      	beq.n	800c446 <_strtod_l+0x662>
 800c426:	236b      	movs	r3, #107	; 0x6b
 800c428:	0079      	lsls	r1, r7, #1
 800c42a:	0d49      	lsrs	r1, r1, #21
 800c42c:	003a      	movs	r2, r7
 800c42e:	1a5b      	subs	r3, r3, r1
 800c430:	2b00      	cmp	r3, #0
 800c432:	dd08      	ble.n	800c446 <_strtod_l+0x662>
 800c434:	2b1f      	cmp	r3, #31
 800c436:	dc00      	bgt.n	800c43a <_strtod_l+0x656>
 800c438:	e126      	b.n	800c688 <_strtod_l+0x8a4>
 800c43a:	2600      	movs	r6, #0
 800c43c:	2b34      	cmp	r3, #52	; 0x34
 800c43e:	dc00      	bgt.n	800c442 <_strtod_l+0x65e>
 800c440:	e11b      	b.n	800c67a <_strtod_l+0x896>
 800c442:	27dc      	movs	r7, #220	; 0xdc
 800c444:	04bf      	lsls	r7, r7, #18
 800c446:	2200      	movs	r2, #0
 800c448:	2300      	movs	r3, #0
 800c44a:	0030      	movs	r0, r6
 800c44c:	0039      	movs	r1, r7
 800c44e:	f7f3 fffb 	bl	8000448 <__aeabi_dcmpeq>
 800c452:	2800      	cmp	r0, #0
 800c454:	d1a0      	bne.n	800c398 <_strtod_l+0x5b4>
 800c456:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c458:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c45a:	9300      	str	r3, [sp, #0]
 800c45c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800c45e:	9b06      	ldr	r3, [sp, #24]
 800c460:	9805      	ldr	r0, [sp, #20]
 800c462:	f001 ff7f 	bl	800e364 <__s2b>
 800c466:	900b      	str	r0, [sp, #44]	; 0x2c
 800c468:	2800      	cmp	r0, #0
 800c46a:	d100      	bne.n	800c46e <_strtod_l+0x68a>
 800c46c:	e723      	b.n	800c2b6 <_strtod_l+0x4d2>
 800c46e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c470:	9907      	ldr	r1, [sp, #28]
 800c472:	17da      	asrs	r2, r3, #31
 800c474:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c476:	1a5b      	subs	r3, r3, r1
 800c478:	401a      	ands	r2, r3
 800c47a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c47c:	9215      	str	r2, [sp, #84]	; 0x54
 800c47e:	43db      	mvns	r3, r3
 800c480:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c482:	17db      	asrs	r3, r3, #31
 800c484:	401a      	ands	r2, r3
 800c486:	2300      	movs	r3, #0
 800c488:	921c      	str	r2, [sp, #112]	; 0x70
 800c48a:	9306      	str	r3, [sp, #24]
 800c48c:	9307      	str	r3, [sp, #28]
 800c48e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c490:	9805      	ldr	r0, [sp, #20]
 800c492:	6859      	ldr	r1, [r3, #4]
 800c494:	f001 feba 	bl	800e20c <_Balloc>
 800c498:	9009      	str	r0, [sp, #36]	; 0x24
 800c49a:	2800      	cmp	r0, #0
 800c49c:	d100      	bne.n	800c4a0 <_strtod_l+0x6bc>
 800c49e:	e70f      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c4a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c4a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c4a4:	691b      	ldr	r3, [r3, #16]
 800c4a6:	310c      	adds	r1, #12
 800c4a8:	1c9a      	adds	r2, r3, #2
 800c4aa:	0092      	lsls	r2, r2, #2
 800c4ac:	300c      	adds	r0, #12
 800c4ae:	930c      	str	r3, [sp, #48]	; 0x30
 800c4b0:	f001 fea3 	bl	800e1fa <memcpy>
 800c4b4:	ab24      	add	r3, sp, #144	; 0x90
 800c4b6:	9301      	str	r3, [sp, #4]
 800c4b8:	ab23      	add	r3, sp, #140	; 0x8c
 800c4ba:	9300      	str	r3, [sp, #0]
 800c4bc:	0032      	movs	r2, r6
 800c4be:	003b      	movs	r3, r7
 800c4c0:	9805      	ldr	r0, [sp, #20]
 800c4c2:	960e      	str	r6, [sp, #56]	; 0x38
 800c4c4:	970f      	str	r7, [sp, #60]	; 0x3c
 800c4c6:	f002 fa9b 	bl	800ea00 <__d2b>
 800c4ca:	9022      	str	r0, [sp, #136]	; 0x88
 800c4cc:	2800      	cmp	r0, #0
 800c4ce:	d100      	bne.n	800c4d2 <_strtod_l+0x6ee>
 800c4d0:	e6f6      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c4d2:	2101      	movs	r1, #1
 800c4d4:	9805      	ldr	r0, [sp, #20]
 800c4d6:	f001 ffd9 	bl	800e48c <__i2b>
 800c4da:	9007      	str	r0, [sp, #28]
 800c4dc:	2800      	cmp	r0, #0
 800c4de:	d100      	bne.n	800c4e2 <_strtod_l+0x6fe>
 800c4e0:	e6ee      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c4e2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c4e4:	2b00      	cmp	r3, #0
 800c4e6:	da00      	bge.n	800c4ea <_strtod_l+0x706>
 800c4e8:	e0d3      	b.n	800c692 <_strtod_l+0x8ae>
 800c4ea:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800c4ec:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800c4ee:	189d      	adds	r5, r3, r2
 800c4f0:	9908      	ldr	r1, [sp, #32]
 800c4f2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800c4f4:	1a5b      	subs	r3, r3, r1
 800c4f6:	2136      	movs	r1, #54	; 0x36
 800c4f8:	189b      	adds	r3, r3, r2
 800c4fa:	1a8a      	subs	r2, r1, r2
 800c4fc:	498b      	ldr	r1, [pc, #556]	; (800c72c <_strtod_l+0x948>)
 800c4fe:	3b01      	subs	r3, #1
 800c500:	2001      	movs	r0, #1
 800c502:	428b      	cmp	r3, r1
 800c504:	db00      	blt.n	800c508 <_strtod_l+0x724>
 800c506:	e0cf      	b.n	800c6a8 <_strtod_l+0x8c4>
 800c508:	1ac9      	subs	r1, r1, r3
 800c50a:	1a52      	subs	r2, r2, r1
 800c50c:	291f      	cmp	r1, #31
 800c50e:	dd00      	ble.n	800c512 <_strtod_l+0x72e>
 800c510:	e0c3      	b.n	800c69a <_strtod_l+0x8b6>
 800c512:	4088      	lsls	r0, r1
 800c514:	2300      	movs	r3, #0
 800c516:	9014      	str	r0, [sp, #80]	; 0x50
 800c518:	9312      	str	r3, [sp, #72]	; 0x48
 800c51a:	18ab      	adds	r3, r5, r2
 800c51c:	930c      	str	r3, [sp, #48]	; 0x30
 800c51e:	18a4      	adds	r4, r4, r2
 800c520:	9b08      	ldr	r3, [sp, #32]
 800c522:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c524:	191c      	adds	r4, r3, r4
 800c526:	002b      	movs	r3, r5
 800c528:	4295      	cmp	r5, r2
 800c52a:	dd00      	ble.n	800c52e <_strtod_l+0x74a>
 800c52c:	0013      	movs	r3, r2
 800c52e:	42a3      	cmp	r3, r4
 800c530:	dd00      	ble.n	800c534 <_strtod_l+0x750>
 800c532:	0023      	movs	r3, r4
 800c534:	2b00      	cmp	r3, #0
 800c536:	dd04      	ble.n	800c542 <_strtod_l+0x75e>
 800c538:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c53a:	1ae4      	subs	r4, r4, r3
 800c53c:	1ad2      	subs	r2, r2, r3
 800c53e:	920c      	str	r2, [sp, #48]	; 0x30
 800c540:	1aed      	subs	r5, r5, r3
 800c542:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800c544:	2b00      	cmp	r3, #0
 800c546:	dd17      	ble.n	800c578 <_strtod_l+0x794>
 800c548:	001a      	movs	r2, r3
 800c54a:	9907      	ldr	r1, [sp, #28]
 800c54c:	9805      	ldr	r0, [sp, #20]
 800c54e:	f002 f863 	bl	800e618 <__pow5mult>
 800c552:	9007      	str	r0, [sp, #28]
 800c554:	2800      	cmp	r0, #0
 800c556:	d100      	bne.n	800c55a <_strtod_l+0x776>
 800c558:	e6b2      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c55a:	0001      	movs	r1, r0
 800c55c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800c55e:	9805      	ldr	r0, [sp, #20]
 800c560:	f001 ffaa 	bl	800e4b8 <__multiply>
 800c564:	9011      	str	r0, [sp, #68]	; 0x44
 800c566:	2800      	cmp	r0, #0
 800c568:	d100      	bne.n	800c56c <_strtod_l+0x788>
 800c56a:	e6a9      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c56c:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c56e:	9805      	ldr	r0, [sp, #20]
 800c570:	f001 fe90 	bl	800e294 <_Bfree>
 800c574:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c576:	9322      	str	r3, [sp, #136]	; 0x88
 800c578:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c57a:	2b00      	cmp	r3, #0
 800c57c:	dd00      	ble.n	800c580 <_strtod_l+0x79c>
 800c57e:	e096      	b.n	800c6ae <_strtod_l+0x8ca>
 800c580:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c582:	2b00      	cmp	r3, #0
 800c584:	dd08      	ble.n	800c598 <_strtod_l+0x7b4>
 800c586:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c588:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c58a:	9805      	ldr	r0, [sp, #20]
 800c58c:	f002 f844 	bl	800e618 <__pow5mult>
 800c590:	9009      	str	r0, [sp, #36]	; 0x24
 800c592:	2800      	cmp	r0, #0
 800c594:	d100      	bne.n	800c598 <_strtod_l+0x7b4>
 800c596:	e693      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c598:	2c00      	cmp	r4, #0
 800c59a:	dd08      	ble.n	800c5ae <_strtod_l+0x7ca>
 800c59c:	0022      	movs	r2, r4
 800c59e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c5a0:	9805      	ldr	r0, [sp, #20]
 800c5a2:	f002 f895 	bl	800e6d0 <__lshift>
 800c5a6:	9009      	str	r0, [sp, #36]	; 0x24
 800c5a8:	2800      	cmp	r0, #0
 800c5aa:	d100      	bne.n	800c5ae <_strtod_l+0x7ca>
 800c5ac:	e688      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c5ae:	2d00      	cmp	r5, #0
 800c5b0:	dd08      	ble.n	800c5c4 <_strtod_l+0x7e0>
 800c5b2:	002a      	movs	r2, r5
 800c5b4:	9907      	ldr	r1, [sp, #28]
 800c5b6:	9805      	ldr	r0, [sp, #20]
 800c5b8:	f002 f88a 	bl	800e6d0 <__lshift>
 800c5bc:	9007      	str	r0, [sp, #28]
 800c5be:	2800      	cmp	r0, #0
 800c5c0:	d100      	bne.n	800c5c4 <_strtod_l+0x7e0>
 800c5c2:	e67d      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c5c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c5c6:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c5c8:	9805      	ldr	r0, [sp, #20]
 800c5ca:	f002 f90d 	bl	800e7e8 <__mdiff>
 800c5ce:	9006      	str	r0, [sp, #24]
 800c5d0:	2800      	cmp	r0, #0
 800c5d2:	d100      	bne.n	800c5d6 <_strtod_l+0x7f2>
 800c5d4:	e674      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c5d6:	2200      	movs	r2, #0
 800c5d8:	68c3      	ldr	r3, [r0, #12]
 800c5da:	9907      	ldr	r1, [sp, #28]
 800c5dc:	60c2      	str	r2, [r0, #12]
 800c5de:	9311      	str	r3, [sp, #68]	; 0x44
 800c5e0:	f002 f8e6 	bl	800e7b0 <__mcmp>
 800c5e4:	2800      	cmp	r0, #0
 800c5e6:	da6c      	bge.n	800c6c2 <_strtod_l+0x8de>
 800c5e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c5ea:	4333      	orrs	r3, r6
 800c5ec:	d000      	beq.n	800c5f0 <_strtod_l+0x80c>
 800c5ee:	e097      	b.n	800c720 <_strtod_l+0x93c>
 800c5f0:	033b      	lsls	r3, r7, #12
 800c5f2:	d000      	beq.n	800c5f6 <_strtod_l+0x812>
 800c5f4:	e094      	b.n	800c720 <_strtod_l+0x93c>
 800c5f6:	22d6      	movs	r2, #214	; 0xd6
 800c5f8:	4b4d      	ldr	r3, [pc, #308]	; (800c730 <_strtod_l+0x94c>)
 800c5fa:	04d2      	lsls	r2, r2, #19
 800c5fc:	403b      	ands	r3, r7
 800c5fe:	4293      	cmp	r3, r2
 800c600:	d800      	bhi.n	800c604 <_strtod_l+0x820>
 800c602:	e08d      	b.n	800c720 <_strtod_l+0x93c>
 800c604:	9b06      	ldr	r3, [sp, #24]
 800c606:	695b      	ldr	r3, [r3, #20]
 800c608:	930a      	str	r3, [sp, #40]	; 0x28
 800c60a:	2b00      	cmp	r3, #0
 800c60c:	d105      	bne.n	800c61a <_strtod_l+0x836>
 800c60e:	9b06      	ldr	r3, [sp, #24]
 800c610:	691b      	ldr	r3, [r3, #16]
 800c612:	930a      	str	r3, [sp, #40]	; 0x28
 800c614:	2b01      	cmp	r3, #1
 800c616:	dc00      	bgt.n	800c61a <_strtod_l+0x836>
 800c618:	e082      	b.n	800c720 <_strtod_l+0x93c>
 800c61a:	9906      	ldr	r1, [sp, #24]
 800c61c:	2201      	movs	r2, #1
 800c61e:	9805      	ldr	r0, [sp, #20]
 800c620:	f002 f856 	bl	800e6d0 <__lshift>
 800c624:	9907      	ldr	r1, [sp, #28]
 800c626:	9006      	str	r0, [sp, #24]
 800c628:	f002 f8c2 	bl	800e7b0 <__mcmp>
 800c62c:	2800      	cmp	r0, #0
 800c62e:	dd77      	ble.n	800c720 <_strtod_l+0x93c>
 800c630:	9908      	ldr	r1, [sp, #32]
 800c632:	003b      	movs	r3, r7
 800c634:	4a3e      	ldr	r2, [pc, #248]	; (800c730 <_strtod_l+0x94c>)
 800c636:	2900      	cmp	r1, #0
 800c638:	d100      	bne.n	800c63c <_strtod_l+0x858>
 800c63a:	e09e      	b.n	800c77a <_strtod_l+0x996>
 800c63c:	0011      	movs	r1, r2
 800c63e:	20d6      	movs	r0, #214	; 0xd6
 800c640:	4039      	ands	r1, r7
 800c642:	04c0      	lsls	r0, r0, #19
 800c644:	4281      	cmp	r1, r0
 800c646:	dd00      	ble.n	800c64a <_strtod_l+0x866>
 800c648:	e097      	b.n	800c77a <_strtod_l+0x996>
 800c64a:	23dc      	movs	r3, #220	; 0xdc
 800c64c:	049b      	lsls	r3, r3, #18
 800c64e:	4299      	cmp	r1, r3
 800c650:	dc00      	bgt.n	800c654 <_strtod_l+0x870>
 800c652:	e6a6      	b.n	800c3a2 <_strtod_l+0x5be>
 800c654:	4b37      	ldr	r3, [pc, #220]	; (800c734 <_strtod_l+0x950>)
 800c656:	0030      	movs	r0, r6
 800c658:	931b      	str	r3, [sp, #108]	; 0x6c
 800c65a:	2300      	movs	r3, #0
 800c65c:	931a      	str	r3, [sp, #104]	; 0x68
 800c65e:	0039      	movs	r1, r7
 800c660:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800c662:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800c664:	f7f5 fe50 	bl	8002308 <__aeabi_dmul>
 800c668:	0006      	movs	r6, r0
 800c66a:	000f      	movs	r7, r1
 800c66c:	4308      	orrs	r0, r1
 800c66e:	d000      	beq.n	800c672 <_strtod_l+0x88e>
 800c670:	e62f      	b.n	800c2d2 <_strtod_l+0x4ee>
 800c672:	2322      	movs	r3, #34	; 0x22
 800c674:	9a05      	ldr	r2, [sp, #20]
 800c676:	6013      	str	r3, [r2, #0]
 800c678:	e62b      	b.n	800c2d2 <_strtod_l+0x4ee>
 800c67a:	2101      	movs	r1, #1
 800c67c:	3b20      	subs	r3, #32
 800c67e:	4249      	negs	r1, r1
 800c680:	4099      	lsls	r1, r3
 800c682:	400a      	ands	r2, r1
 800c684:	0017      	movs	r7, r2
 800c686:	e6de      	b.n	800c446 <_strtod_l+0x662>
 800c688:	2201      	movs	r2, #1
 800c68a:	4252      	negs	r2, r2
 800c68c:	409a      	lsls	r2, r3
 800c68e:	4016      	ands	r6, r2
 800c690:	e6d9      	b.n	800c446 <_strtod_l+0x662>
 800c692:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c694:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800c696:	1ad4      	subs	r4, r2, r3
 800c698:	e72a      	b.n	800c4f0 <_strtod_l+0x70c>
 800c69a:	4927      	ldr	r1, [pc, #156]	; (800c738 <_strtod_l+0x954>)
 800c69c:	1acb      	subs	r3, r1, r3
 800c69e:	0001      	movs	r1, r0
 800c6a0:	4099      	lsls	r1, r3
 800c6a2:	9112      	str	r1, [sp, #72]	; 0x48
 800c6a4:	9014      	str	r0, [sp, #80]	; 0x50
 800c6a6:	e738      	b.n	800c51a <_strtod_l+0x736>
 800c6a8:	2300      	movs	r3, #0
 800c6aa:	9312      	str	r3, [sp, #72]	; 0x48
 800c6ac:	e7fa      	b.n	800c6a4 <_strtod_l+0x8c0>
 800c6ae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c6b0:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c6b2:	9805      	ldr	r0, [sp, #20]
 800c6b4:	f002 f80c 	bl	800e6d0 <__lshift>
 800c6b8:	9022      	str	r0, [sp, #136]	; 0x88
 800c6ba:	2800      	cmp	r0, #0
 800c6bc:	d000      	beq.n	800c6c0 <_strtod_l+0x8dc>
 800c6be:	e75f      	b.n	800c580 <_strtod_l+0x79c>
 800c6c0:	e5fe      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c6c2:	970c      	str	r7, [sp, #48]	; 0x30
 800c6c4:	2800      	cmp	r0, #0
 800c6c6:	d176      	bne.n	800c7b6 <_strtod_l+0x9d2>
 800c6c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800c6ca:	033b      	lsls	r3, r7, #12
 800c6cc:	0b1b      	lsrs	r3, r3, #12
 800c6ce:	2a00      	cmp	r2, #0
 800c6d0:	d038      	beq.n	800c744 <_strtod_l+0x960>
 800c6d2:	4a1a      	ldr	r2, [pc, #104]	; (800c73c <_strtod_l+0x958>)
 800c6d4:	4293      	cmp	r3, r2
 800c6d6:	d138      	bne.n	800c74a <_strtod_l+0x966>
 800c6d8:	2201      	movs	r2, #1
 800c6da:	9b08      	ldr	r3, [sp, #32]
 800c6dc:	4252      	negs	r2, r2
 800c6de:	0031      	movs	r1, r6
 800c6e0:	0010      	movs	r0, r2
 800c6e2:	2b00      	cmp	r3, #0
 800c6e4:	d00b      	beq.n	800c6fe <_strtod_l+0x91a>
 800c6e6:	24d4      	movs	r4, #212	; 0xd4
 800c6e8:	4b11      	ldr	r3, [pc, #68]	; (800c730 <_strtod_l+0x94c>)
 800c6ea:	0010      	movs	r0, r2
 800c6ec:	403b      	ands	r3, r7
 800c6ee:	04e4      	lsls	r4, r4, #19
 800c6f0:	42a3      	cmp	r3, r4
 800c6f2:	d804      	bhi.n	800c6fe <_strtod_l+0x91a>
 800c6f4:	306c      	adds	r0, #108	; 0x6c
 800c6f6:	0d1b      	lsrs	r3, r3, #20
 800c6f8:	1ac3      	subs	r3, r0, r3
 800c6fa:	409a      	lsls	r2, r3
 800c6fc:	0010      	movs	r0, r2
 800c6fe:	4281      	cmp	r1, r0
 800c700:	d123      	bne.n	800c74a <_strtod_l+0x966>
 800c702:	4b0f      	ldr	r3, [pc, #60]	; (800c740 <_strtod_l+0x95c>)
 800c704:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c706:	429a      	cmp	r2, r3
 800c708:	d102      	bne.n	800c710 <_strtod_l+0x92c>
 800c70a:	1c4b      	adds	r3, r1, #1
 800c70c:	d100      	bne.n	800c710 <_strtod_l+0x92c>
 800c70e:	e5d7      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c710:	4b07      	ldr	r3, [pc, #28]	; (800c730 <_strtod_l+0x94c>)
 800c712:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c714:	2600      	movs	r6, #0
 800c716:	401a      	ands	r2, r3
 800c718:	0013      	movs	r3, r2
 800c71a:	2280      	movs	r2, #128	; 0x80
 800c71c:	0352      	lsls	r2, r2, #13
 800c71e:	189f      	adds	r7, r3, r2
 800c720:	9b08      	ldr	r3, [sp, #32]
 800c722:	2b00      	cmp	r3, #0
 800c724:	d196      	bne.n	800c654 <_strtod_l+0x870>
 800c726:	e5d4      	b.n	800c2d2 <_strtod_l+0x4ee>
 800c728:	08010010 	.word	0x08010010
 800c72c:	fffffc02 	.word	0xfffffc02
 800c730:	7ff00000 	.word	0x7ff00000
 800c734:	39500000 	.word	0x39500000
 800c738:	fffffbe2 	.word	0xfffffbe2
 800c73c:	000fffff 	.word	0x000fffff
 800c740:	7fefffff 	.word	0x7fefffff
 800c744:	4333      	orrs	r3, r6
 800c746:	d100      	bne.n	800c74a <_strtod_l+0x966>
 800c748:	e772      	b.n	800c630 <_strtod_l+0x84c>
 800c74a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c74c:	2b00      	cmp	r3, #0
 800c74e:	d01d      	beq.n	800c78c <_strtod_l+0x9a8>
 800c750:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c752:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800c754:	4213      	tst	r3, r2
 800c756:	d0e3      	beq.n	800c720 <_strtod_l+0x93c>
 800c758:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c75a:	0030      	movs	r0, r6
 800c75c:	0039      	movs	r1, r7
 800c75e:	9a08      	ldr	r2, [sp, #32]
 800c760:	2b00      	cmp	r3, #0
 800c762:	d017      	beq.n	800c794 <_strtod_l+0x9b0>
 800c764:	f7ff fb26 	bl	800bdb4 <sulp>
 800c768:	0002      	movs	r2, r0
 800c76a:	000b      	movs	r3, r1
 800c76c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800c76e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800c770:	f7f4 fe5a 	bl	8001428 <__aeabi_dadd>
 800c774:	0006      	movs	r6, r0
 800c776:	000f      	movs	r7, r1
 800c778:	e7d2      	b.n	800c720 <_strtod_l+0x93c>
 800c77a:	2601      	movs	r6, #1
 800c77c:	4013      	ands	r3, r2
 800c77e:	4a9b      	ldr	r2, [pc, #620]	; (800c9ec <_strtod_l+0xc08>)
 800c780:	4276      	negs	r6, r6
 800c782:	189b      	adds	r3, r3, r2
 800c784:	4a9a      	ldr	r2, [pc, #616]	; (800c9f0 <_strtod_l+0xc0c>)
 800c786:	431a      	orrs	r2, r3
 800c788:	0017      	movs	r7, r2
 800c78a:	e7c9      	b.n	800c720 <_strtod_l+0x93c>
 800c78c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800c78e:	4233      	tst	r3, r6
 800c790:	d0c6      	beq.n	800c720 <_strtod_l+0x93c>
 800c792:	e7e1      	b.n	800c758 <_strtod_l+0x974>
 800c794:	f7ff fb0e 	bl	800bdb4 <sulp>
 800c798:	0002      	movs	r2, r0
 800c79a:	000b      	movs	r3, r1
 800c79c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800c79e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800c7a0:	f7f6 f81e 	bl	80027e0 <__aeabi_dsub>
 800c7a4:	2200      	movs	r2, #0
 800c7a6:	2300      	movs	r3, #0
 800c7a8:	0006      	movs	r6, r0
 800c7aa:	000f      	movs	r7, r1
 800c7ac:	f7f3 fe4c 	bl	8000448 <__aeabi_dcmpeq>
 800c7b0:	2800      	cmp	r0, #0
 800c7b2:	d0b5      	beq.n	800c720 <_strtod_l+0x93c>
 800c7b4:	e5f5      	b.n	800c3a2 <_strtod_l+0x5be>
 800c7b6:	9907      	ldr	r1, [sp, #28]
 800c7b8:	9806      	ldr	r0, [sp, #24]
 800c7ba:	f002 f985 	bl	800eac8 <__ratio>
 800c7be:	2380      	movs	r3, #128	; 0x80
 800c7c0:	2200      	movs	r2, #0
 800c7c2:	05db      	lsls	r3, r3, #23
 800c7c4:	0004      	movs	r4, r0
 800c7c6:	000d      	movs	r5, r1
 800c7c8:	f7f3 fe4e 	bl	8000468 <__aeabi_dcmple>
 800c7cc:	2800      	cmp	r0, #0
 800c7ce:	d079      	beq.n	800c8c4 <_strtod_l+0xae0>
 800c7d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c7d2:	2b00      	cmp	r3, #0
 800c7d4:	d04b      	beq.n	800c86e <_strtod_l+0xa8a>
 800c7d6:	2300      	movs	r3, #0
 800c7d8:	4c86      	ldr	r4, [pc, #536]	; (800c9f4 <_strtod_l+0xc10>)
 800c7da:	2500      	movs	r5, #0
 800c7dc:	9312      	str	r3, [sp, #72]	; 0x48
 800c7de:	9413      	str	r4, [sp, #76]	; 0x4c
 800c7e0:	4c84      	ldr	r4, [pc, #528]	; (800c9f4 <_strtod_l+0xc10>)
 800c7e2:	4a85      	ldr	r2, [pc, #532]	; (800c9f8 <_strtod_l+0xc14>)
 800c7e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c7e6:	4013      	ands	r3, r2
 800c7e8:	9314      	str	r3, [sp, #80]	; 0x50
 800c7ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c7ec:	4b83      	ldr	r3, [pc, #524]	; (800c9fc <_strtod_l+0xc18>)
 800c7ee:	429a      	cmp	r2, r3
 800c7f0:	d000      	beq.n	800c7f4 <_strtod_l+0xa10>
 800c7f2:	e0b0      	b.n	800c956 <_strtod_l+0xb72>
 800c7f4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c7f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c7f8:	921a      	str	r2, [sp, #104]	; 0x68
 800c7fa:	931b      	str	r3, [sp, #108]	; 0x6c
 800c7fc:	4a80      	ldr	r2, [pc, #512]	; (800ca00 <_strtod_l+0xc1c>)
 800c7fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c800:	4694      	mov	ip, r2
 800c802:	4463      	add	r3, ip
 800c804:	001f      	movs	r7, r3
 800c806:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800c808:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800c80a:	0030      	movs	r0, r6
 800c80c:	0039      	movs	r1, r7
 800c80e:	920c      	str	r2, [sp, #48]	; 0x30
 800c810:	930d      	str	r3, [sp, #52]	; 0x34
 800c812:	f002 f881 	bl	800e918 <__ulp>
 800c816:	0002      	movs	r2, r0
 800c818:	000b      	movs	r3, r1
 800c81a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c81c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c81e:	f7f5 fd73 	bl	8002308 <__aeabi_dmul>
 800c822:	0032      	movs	r2, r6
 800c824:	003b      	movs	r3, r7
 800c826:	f7f4 fdff 	bl	8001428 <__aeabi_dadd>
 800c82a:	4a73      	ldr	r2, [pc, #460]	; (800c9f8 <_strtod_l+0xc14>)
 800c82c:	4b75      	ldr	r3, [pc, #468]	; (800ca04 <_strtod_l+0xc20>)
 800c82e:	0006      	movs	r6, r0
 800c830:	400a      	ands	r2, r1
 800c832:	429a      	cmp	r2, r3
 800c834:	d95e      	bls.n	800c8f4 <_strtod_l+0xb10>
 800c836:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c838:	4a73      	ldr	r2, [pc, #460]	; (800ca08 <_strtod_l+0xc24>)
 800c83a:	4293      	cmp	r3, r2
 800c83c:	d103      	bne.n	800c846 <_strtod_l+0xa62>
 800c83e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c840:	3301      	adds	r3, #1
 800c842:	d100      	bne.n	800c846 <_strtod_l+0xa62>
 800c844:	e53c      	b.n	800c2c0 <_strtod_l+0x4dc>
 800c846:	2601      	movs	r6, #1
 800c848:	4f6f      	ldr	r7, [pc, #444]	; (800ca08 <_strtod_l+0xc24>)
 800c84a:	4276      	negs	r6, r6
 800c84c:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c84e:	9805      	ldr	r0, [sp, #20]
 800c850:	f001 fd20 	bl	800e294 <_Bfree>
 800c854:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c856:	9805      	ldr	r0, [sp, #20]
 800c858:	f001 fd1c 	bl	800e294 <_Bfree>
 800c85c:	9907      	ldr	r1, [sp, #28]
 800c85e:	9805      	ldr	r0, [sp, #20]
 800c860:	f001 fd18 	bl	800e294 <_Bfree>
 800c864:	9906      	ldr	r1, [sp, #24]
 800c866:	9805      	ldr	r0, [sp, #20]
 800c868:	f001 fd14 	bl	800e294 <_Bfree>
 800c86c:	e60f      	b.n	800c48e <_strtod_l+0x6aa>
 800c86e:	2e00      	cmp	r6, #0
 800c870:	d11c      	bne.n	800c8ac <_strtod_l+0xac8>
 800c872:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c874:	031b      	lsls	r3, r3, #12
 800c876:	d11f      	bne.n	800c8b8 <_strtod_l+0xad4>
 800c878:	2200      	movs	r2, #0
 800c87a:	0020      	movs	r0, r4
 800c87c:	0029      	movs	r1, r5
 800c87e:	4b5d      	ldr	r3, [pc, #372]	; (800c9f4 <_strtod_l+0xc10>)
 800c880:	f7f3 fde8 	bl	8000454 <__aeabi_dcmplt>
 800c884:	2800      	cmp	r0, #0
 800c886:	d11a      	bne.n	800c8be <_strtod_l+0xada>
 800c888:	0020      	movs	r0, r4
 800c88a:	0029      	movs	r1, r5
 800c88c:	2200      	movs	r2, #0
 800c88e:	4b5f      	ldr	r3, [pc, #380]	; (800ca0c <_strtod_l+0xc28>)
 800c890:	f7f5 fd3a 	bl	8002308 <__aeabi_dmul>
 800c894:	0005      	movs	r5, r0
 800c896:	000c      	movs	r4, r1
 800c898:	2380      	movs	r3, #128	; 0x80
 800c89a:	061b      	lsls	r3, r3, #24
 800c89c:	18e3      	adds	r3, r4, r3
 800c89e:	951e      	str	r5, [sp, #120]	; 0x78
 800c8a0:	931f      	str	r3, [sp, #124]	; 0x7c
 800c8a2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800c8a4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800c8a6:	9212      	str	r2, [sp, #72]	; 0x48
 800c8a8:	9313      	str	r3, [sp, #76]	; 0x4c
 800c8aa:	e79a      	b.n	800c7e2 <_strtod_l+0x9fe>
 800c8ac:	2e01      	cmp	r6, #1
 800c8ae:	d103      	bne.n	800c8b8 <_strtod_l+0xad4>
 800c8b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c8b2:	2b00      	cmp	r3, #0
 800c8b4:	d100      	bne.n	800c8b8 <_strtod_l+0xad4>
 800c8b6:	e574      	b.n	800c3a2 <_strtod_l+0x5be>
 800c8b8:	2300      	movs	r3, #0
 800c8ba:	4c55      	ldr	r4, [pc, #340]	; (800ca10 <_strtod_l+0xc2c>)
 800c8bc:	e78d      	b.n	800c7da <_strtod_l+0x9f6>
 800c8be:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800c8c0:	4c52      	ldr	r4, [pc, #328]	; (800ca0c <_strtod_l+0xc28>)
 800c8c2:	e7e9      	b.n	800c898 <_strtod_l+0xab4>
 800c8c4:	2200      	movs	r2, #0
 800c8c6:	0020      	movs	r0, r4
 800c8c8:	0029      	movs	r1, r5
 800c8ca:	4b50      	ldr	r3, [pc, #320]	; (800ca0c <_strtod_l+0xc28>)
 800c8cc:	f7f5 fd1c 	bl	8002308 <__aeabi_dmul>
 800c8d0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800c8d2:	0005      	movs	r5, r0
 800c8d4:	000b      	movs	r3, r1
 800c8d6:	000c      	movs	r4, r1
 800c8d8:	2a00      	cmp	r2, #0
 800c8da:	d107      	bne.n	800c8ec <_strtod_l+0xb08>
 800c8dc:	2280      	movs	r2, #128	; 0x80
 800c8de:	0612      	lsls	r2, r2, #24
 800c8e0:	188b      	adds	r3, r1, r2
 800c8e2:	9016      	str	r0, [sp, #88]	; 0x58
 800c8e4:	9317      	str	r3, [sp, #92]	; 0x5c
 800c8e6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800c8e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c8ea:	e7dc      	b.n	800c8a6 <_strtod_l+0xac2>
 800c8ec:	0002      	movs	r2, r0
 800c8ee:	9216      	str	r2, [sp, #88]	; 0x58
 800c8f0:	9317      	str	r3, [sp, #92]	; 0x5c
 800c8f2:	e7f8      	b.n	800c8e6 <_strtod_l+0xb02>
 800c8f4:	23d4      	movs	r3, #212	; 0xd4
 800c8f6:	049b      	lsls	r3, r3, #18
 800c8f8:	18cf      	adds	r7, r1, r3
 800c8fa:	9b08      	ldr	r3, [sp, #32]
 800c8fc:	2b00      	cmp	r3, #0
 800c8fe:	d1a5      	bne.n	800c84c <_strtod_l+0xa68>
 800c900:	4b3d      	ldr	r3, [pc, #244]	; (800c9f8 <_strtod_l+0xc14>)
 800c902:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c904:	403b      	ands	r3, r7
 800c906:	429a      	cmp	r2, r3
 800c908:	d1a0      	bne.n	800c84c <_strtod_l+0xa68>
 800c90a:	0028      	movs	r0, r5
 800c90c:	0021      	movs	r1, r4
 800c90e:	f7f3 fe39 	bl	8000584 <__aeabi_d2lz>
 800c912:	f7f3 fe73 	bl	80005fc <__aeabi_l2d>
 800c916:	0002      	movs	r2, r0
 800c918:	000b      	movs	r3, r1
 800c91a:	0028      	movs	r0, r5
 800c91c:	0021      	movs	r1, r4
 800c91e:	f7f5 ff5f 	bl	80027e0 <__aeabi_dsub>
 800c922:	033b      	lsls	r3, r7, #12
 800c924:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800c926:	0b1b      	lsrs	r3, r3, #12
 800c928:	4333      	orrs	r3, r6
 800c92a:	4313      	orrs	r3, r2
 800c92c:	0004      	movs	r4, r0
 800c92e:	000d      	movs	r5, r1
 800c930:	4a38      	ldr	r2, [pc, #224]	; (800ca14 <_strtod_l+0xc30>)
 800c932:	2b00      	cmp	r3, #0
 800c934:	d055      	beq.n	800c9e2 <_strtod_l+0xbfe>
 800c936:	4b38      	ldr	r3, [pc, #224]	; (800ca18 <_strtod_l+0xc34>)
 800c938:	f7f3 fd8c 	bl	8000454 <__aeabi_dcmplt>
 800c93c:	2800      	cmp	r0, #0
 800c93e:	d000      	beq.n	800c942 <_strtod_l+0xb5e>
 800c940:	e4c7      	b.n	800c2d2 <_strtod_l+0x4ee>
 800c942:	0020      	movs	r0, r4
 800c944:	0029      	movs	r1, r5
 800c946:	4a35      	ldr	r2, [pc, #212]	; (800ca1c <_strtod_l+0xc38>)
 800c948:	4b30      	ldr	r3, [pc, #192]	; (800ca0c <_strtod_l+0xc28>)
 800c94a:	f7f3 fd97 	bl	800047c <__aeabi_dcmpgt>
 800c94e:	2800      	cmp	r0, #0
 800c950:	d100      	bne.n	800c954 <_strtod_l+0xb70>
 800c952:	e77b      	b.n	800c84c <_strtod_l+0xa68>
 800c954:	e4bd      	b.n	800c2d2 <_strtod_l+0x4ee>
 800c956:	9b08      	ldr	r3, [sp, #32]
 800c958:	2b00      	cmp	r3, #0
 800c95a:	d02b      	beq.n	800c9b4 <_strtod_l+0xbd0>
 800c95c:	23d4      	movs	r3, #212	; 0xd4
 800c95e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c960:	04db      	lsls	r3, r3, #19
 800c962:	429a      	cmp	r2, r3
 800c964:	d826      	bhi.n	800c9b4 <_strtod_l+0xbd0>
 800c966:	0028      	movs	r0, r5
 800c968:	0021      	movs	r1, r4
 800c96a:	4a2d      	ldr	r2, [pc, #180]	; (800ca20 <_strtod_l+0xc3c>)
 800c96c:	4b2d      	ldr	r3, [pc, #180]	; (800ca24 <_strtod_l+0xc40>)
 800c96e:	f7f3 fd7b 	bl	8000468 <__aeabi_dcmple>
 800c972:	2800      	cmp	r0, #0
 800c974:	d017      	beq.n	800c9a6 <_strtod_l+0xbc2>
 800c976:	0028      	movs	r0, r5
 800c978:	0021      	movs	r1, r4
 800c97a:	f7f3 fde5 	bl	8000548 <__aeabi_d2uiz>
 800c97e:	2800      	cmp	r0, #0
 800c980:	d100      	bne.n	800c984 <_strtod_l+0xba0>
 800c982:	3001      	adds	r0, #1
 800c984:	f7f6 fb42 	bl	800300c <__aeabi_ui2d>
 800c988:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800c98a:	0005      	movs	r5, r0
 800c98c:	000b      	movs	r3, r1
 800c98e:	000c      	movs	r4, r1
 800c990:	2a00      	cmp	r2, #0
 800c992:	d122      	bne.n	800c9da <_strtod_l+0xbf6>
 800c994:	2280      	movs	r2, #128	; 0x80
 800c996:	0612      	lsls	r2, r2, #24
 800c998:	188b      	adds	r3, r1, r2
 800c99a:	9018      	str	r0, [sp, #96]	; 0x60
 800c99c:	9319      	str	r3, [sp, #100]	; 0x64
 800c99e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800c9a0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c9a2:	9212      	str	r2, [sp, #72]	; 0x48
 800c9a4:	9313      	str	r3, [sp, #76]	; 0x4c
 800c9a6:	22d6      	movs	r2, #214	; 0xd6
 800c9a8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800c9aa:	04d2      	lsls	r2, r2, #19
 800c9ac:	189b      	adds	r3, r3, r2
 800c9ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c9b0:	1a9b      	subs	r3, r3, r2
 800c9b2:	9313      	str	r3, [sp, #76]	; 0x4c
 800c9b4:	980e      	ldr	r0, [sp, #56]	; 0x38
 800c9b6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800c9b8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800c9ba:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800c9bc:	f001 ffac 	bl	800e918 <__ulp>
 800c9c0:	0002      	movs	r2, r0
 800c9c2:	000b      	movs	r3, r1
 800c9c4:	0030      	movs	r0, r6
 800c9c6:	0039      	movs	r1, r7
 800c9c8:	f7f5 fc9e 	bl	8002308 <__aeabi_dmul>
 800c9cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c9ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c9d0:	f7f4 fd2a 	bl	8001428 <__aeabi_dadd>
 800c9d4:	0006      	movs	r6, r0
 800c9d6:	000f      	movs	r7, r1
 800c9d8:	e78f      	b.n	800c8fa <_strtod_l+0xb16>
 800c9da:	0002      	movs	r2, r0
 800c9dc:	9218      	str	r2, [sp, #96]	; 0x60
 800c9de:	9319      	str	r3, [sp, #100]	; 0x64
 800c9e0:	e7dd      	b.n	800c99e <_strtod_l+0xbba>
 800c9e2:	4b11      	ldr	r3, [pc, #68]	; (800ca28 <_strtod_l+0xc44>)
 800c9e4:	f7f3 fd36 	bl	8000454 <__aeabi_dcmplt>
 800c9e8:	e7b1      	b.n	800c94e <_strtod_l+0xb6a>
 800c9ea:	46c0      	nop			; (mov r8, r8)
 800c9ec:	fff00000 	.word	0xfff00000
 800c9f0:	000fffff 	.word	0x000fffff
 800c9f4:	3ff00000 	.word	0x3ff00000
 800c9f8:	7ff00000 	.word	0x7ff00000
 800c9fc:	7fe00000 	.word	0x7fe00000
 800ca00:	fcb00000 	.word	0xfcb00000
 800ca04:	7c9fffff 	.word	0x7c9fffff
 800ca08:	7fefffff 	.word	0x7fefffff
 800ca0c:	3fe00000 	.word	0x3fe00000
 800ca10:	bff00000 	.word	0xbff00000
 800ca14:	94a03595 	.word	0x94a03595
 800ca18:	3fdfffff 	.word	0x3fdfffff
 800ca1c:	35afe535 	.word	0x35afe535
 800ca20:	ffc00000 	.word	0xffc00000
 800ca24:	41dfffff 	.word	0x41dfffff
 800ca28:	3fcfffff 	.word	0x3fcfffff

0800ca2c <_strtod_r>:
 800ca2c:	b510      	push	{r4, lr}
 800ca2e:	4b02      	ldr	r3, [pc, #8]	; (800ca38 <_strtod_r+0xc>)
 800ca30:	f7ff f9d8 	bl	800bde4 <_strtod_l>
 800ca34:	bd10      	pop	{r4, pc}
 800ca36:	46c0      	nop			; (mov r8, r8)
 800ca38:	200000c4 	.word	0x200000c4

0800ca3c <_strtol_l.isra.0>:
 800ca3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca3e:	b087      	sub	sp, #28
 800ca40:	001e      	movs	r6, r3
 800ca42:	9005      	str	r0, [sp, #20]
 800ca44:	9101      	str	r1, [sp, #4]
 800ca46:	9202      	str	r2, [sp, #8]
 800ca48:	2b01      	cmp	r3, #1
 800ca4a:	d045      	beq.n	800cad8 <_strtol_l.isra.0+0x9c>
 800ca4c:	0008      	movs	r0, r1
 800ca4e:	2b24      	cmp	r3, #36	; 0x24
 800ca50:	d842      	bhi.n	800cad8 <_strtol_l.isra.0+0x9c>
 800ca52:	4b3f      	ldr	r3, [pc, #252]	; (800cb50 <_strtol_l.isra.0+0x114>)
 800ca54:	2208      	movs	r2, #8
 800ca56:	469c      	mov	ip, r3
 800ca58:	0003      	movs	r3, r0
 800ca5a:	4661      	mov	r1, ip
 800ca5c:	781c      	ldrb	r4, [r3, #0]
 800ca5e:	1c45      	adds	r5, r0, #1
 800ca60:	5d09      	ldrb	r1, [r1, r4]
 800ca62:	0028      	movs	r0, r5
 800ca64:	000f      	movs	r7, r1
 800ca66:	4017      	ands	r7, r2
 800ca68:	4211      	tst	r1, r2
 800ca6a:	d1f5      	bne.n	800ca58 <_strtol_l.isra.0+0x1c>
 800ca6c:	2c2d      	cmp	r4, #45	; 0x2d
 800ca6e:	d13a      	bne.n	800cae6 <_strtol_l.isra.0+0xaa>
 800ca70:	2701      	movs	r7, #1
 800ca72:	782c      	ldrb	r4, [r5, #0]
 800ca74:	1c9d      	adds	r5, r3, #2
 800ca76:	2e00      	cmp	r6, #0
 800ca78:	d065      	beq.n	800cb46 <_strtol_l.isra.0+0x10a>
 800ca7a:	2e10      	cmp	r6, #16
 800ca7c:	d109      	bne.n	800ca92 <_strtol_l.isra.0+0x56>
 800ca7e:	2c30      	cmp	r4, #48	; 0x30
 800ca80:	d107      	bne.n	800ca92 <_strtol_l.isra.0+0x56>
 800ca82:	2220      	movs	r2, #32
 800ca84:	782b      	ldrb	r3, [r5, #0]
 800ca86:	4393      	bics	r3, r2
 800ca88:	2b58      	cmp	r3, #88	; 0x58
 800ca8a:	d157      	bne.n	800cb3c <_strtol_l.isra.0+0x100>
 800ca8c:	2610      	movs	r6, #16
 800ca8e:	786c      	ldrb	r4, [r5, #1]
 800ca90:	3502      	adds	r5, #2
 800ca92:	4b30      	ldr	r3, [pc, #192]	; (800cb54 <_strtol_l.isra.0+0x118>)
 800ca94:	0031      	movs	r1, r6
 800ca96:	18fb      	adds	r3, r7, r3
 800ca98:	0018      	movs	r0, r3
 800ca9a:	9303      	str	r3, [sp, #12]
 800ca9c:	f7f3 fbd4 	bl	8000248 <__aeabi_uidivmod>
 800caa0:	2300      	movs	r3, #0
 800caa2:	2201      	movs	r2, #1
 800caa4:	4684      	mov	ip, r0
 800caa6:	0018      	movs	r0, r3
 800caa8:	9104      	str	r1, [sp, #16]
 800caaa:	4252      	negs	r2, r2
 800caac:	0021      	movs	r1, r4
 800caae:	3930      	subs	r1, #48	; 0x30
 800cab0:	2909      	cmp	r1, #9
 800cab2:	d81d      	bhi.n	800caf0 <_strtol_l.isra.0+0xb4>
 800cab4:	000c      	movs	r4, r1
 800cab6:	42a6      	cmp	r6, r4
 800cab8:	dd28      	ble.n	800cb0c <_strtol_l.isra.0+0xd0>
 800caba:	2b00      	cmp	r3, #0
 800cabc:	db24      	blt.n	800cb08 <_strtol_l.isra.0+0xcc>
 800cabe:	0013      	movs	r3, r2
 800cac0:	4584      	cmp	ip, r0
 800cac2:	d306      	bcc.n	800cad2 <_strtol_l.isra.0+0x96>
 800cac4:	d102      	bne.n	800cacc <_strtol_l.isra.0+0x90>
 800cac6:	9904      	ldr	r1, [sp, #16]
 800cac8:	42a1      	cmp	r1, r4
 800caca:	db02      	blt.n	800cad2 <_strtol_l.isra.0+0x96>
 800cacc:	2301      	movs	r3, #1
 800cace:	4370      	muls	r0, r6
 800cad0:	1820      	adds	r0, r4, r0
 800cad2:	782c      	ldrb	r4, [r5, #0]
 800cad4:	3501      	adds	r5, #1
 800cad6:	e7e9      	b.n	800caac <_strtol_l.isra.0+0x70>
 800cad8:	f7fe fa7e 	bl	800afd8 <__errno>
 800cadc:	2316      	movs	r3, #22
 800cade:	6003      	str	r3, [r0, #0]
 800cae0:	2000      	movs	r0, #0
 800cae2:	b007      	add	sp, #28
 800cae4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cae6:	2c2b      	cmp	r4, #43	; 0x2b
 800cae8:	d1c5      	bne.n	800ca76 <_strtol_l.isra.0+0x3a>
 800caea:	782c      	ldrb	r4, [r5, #0]
 800caec:	1c9d      	adds	r5, r3, #2
 800caee:	e7c2      	b.n	800ca76 <_strtol_l.isra.0+0x3a>
 800caf0:	0021      	movs	r1, r4
 800caf2:	3941      	subs	r1, #65	; 0x41
 800caf4:	2919      	cmp	r1, #25
 800caf6:	d801      	bhi.n	800cafc <_strtol_l.isra.0+0xc0>
 800caf8:	3c37      	subs	r4, #55	; 0x37
 800cafa:	e7dc      	b.n	800cab6 <_strtol_l.isra.0+0x7a>
 800cafc:	0021      	movs	r1, r4
 800cafe:	3961      	subs	r1, #97	; 0x61
 800cb00:	2919      	cmp	r1, #25
 800cb02:	d803      	bhi.n	800cb0c <_strtol_l.isra.0+0xd0>
 800cb04:	3c57      	subs	r4, #87	; 0x57
 800cb06:	e7d6      	b.n	800cab6 <_strtol_l.isra.0+0x7a>
 800cb08:	0013      	movs	r3, r2
 800cb0a:	e7e2      	b.n	800cad2 <_strtol_l.isra.0+0x96>
 800cb0c:	2b00      	cmp	r3, #0
 800cb0e:	da09      	bge.n	800cb24 <_strtol_l.isra.0+0xe8>
 800cb10:	2322      	movs	r3, #34	; 0x22
 800cb12:	9a05      	ldr	r2, [sp, #20]
 800cb14:	9803      	ldr	r0, [sp, #12]
 800cb16:	6013      	str	r3, [r2, #0]
 800cb18:	9b02      	ldr	r3, [sp, #8]
 800cb1a:	2b00      	cmp	r3, #0
 800cb1c:	d0e1      	beq.n	800cae2 <_strtol_l.isra.0+0xa6>
 800cb1e:	1e6b      	subs	r3, r5, #1
 800cb20:	9301      	str	r3, [sp, #4]
 800cb22:	e007      	b.n	800cb34 <_strtol_l.isra.0+0xf8>
 800cb24:	2f00      	cmp	r7, #0
 800cb26:	d000      	beq.n	800cb2a <_strtol_l.isra.0+0xee>
 800cb28:	4240      	negs	r0, r0
 800cb2a:	9a02      	ldr	r2, [sp, #8]
 800cb2c:	2a00      	cmp	r2, #0
 800cb2e:	d0d8      	beq.n	800cae2 <_strtol_l.isra.0+0xa6>
 800cb30:	2b00      	cmp	r3, #0
 800cb32:	d1f4      	bne.n	800cb1e <_strtol_l.isra.0+0xe2>
 800cb34:	9b02      	ldr	r3, [sp, #8]
 800cb36:	9a01      	ldr	r2, [sp, #4]
 800cb38:	601a      	str	r2, [r3, #0]
 800cb3a:	e7d2      	b.n	800cae2 <_strtol_l.isra.0+0xa6>
 800cb3c:	2430      	movs	r4, #48	; 0x30
 800cb3e:	2e00      	cmp	r6, #0
 800cb40:	d1a7      	bne.n	800ca92 <_strtol_l.isra.0+0x56>
 800cb42:	3608      	adds	r6, #8
 800cb44:	e7a5      	b.n	800ca92 <_strtol_l.isra.0+0x56>
 800cb46:	2c30      	cmp	r4, #48	; 0x30
 800cb48:	d09b      	beq.n	800ca82 <_strtol_l.isra.0+0x46>
 800cb4a:	260a      	movs	r6, #10
 800cb4c:	e7a1      	b.n	800ca92 <_strtol_l.isra.0+0x56>
 800cb4e:	46c0      	nop			; (mov r8, r8)
 800cb50:	08010039 	.word	0x08010039
 800cb54:	7fffffff 	.word	0x7fffffff

0800cb58 <_strtol_r>:
 800cb58:	b510      	push	{r4, lr}
 800cb5a:	f7ff ff6f 	bl	800ca3c <_strtol_l.isra.0>
 800cb5e:	bd10      	pop	{r4, pc}

0800cb60 <quorem>:
 800cb60:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb62:	0006      	movs	r6, r0
 800cb64:	690d      	ldr	r5, [r1, #16]
 800cb66:	6933      	ldr	r3, [r6, #16]
 800cb68:	b087      	sub	sp, #28
 800cb6a:	2000      	movs	r0, #0
 800cb6c:	9102      	str	r1, [sp, #8]
 800cb6e:	42ab      	cmp	r3, r5
 800cb70:	db6b      	blt.n	800cc4a <quorem+0xea>
 800cb72:	000b      	movs	r3, r1
 800cb74:	3d01      	subs	r5, #1
 800cb76:	00ac      	lsls	r4, r5, #2
 800cb78:	3314      	adds	r3, #20
 800cb7a:	9305      	str	r3, [sp, #20]
 800cb7c:	191b      	adds	r3, r3, r4
 800cb7e:	9303      	str	r3, [sp, #12]
 800cb80:	0033      	movs	r3, r6
 800cb82:	3314      	adds	r3, #20
 800cb84:	9301      	str	r3, [sp, #4]
 800cb86:	191c      	adds	r4, r3, r4
 800cb88:	9b03      	ldr	r3, [sp, #12]
 800cb8a:	6827      	ldr	r7, [r4, #0]
 800cb8c:	681b      	ldr	r3, [r3, #0]
 800cb8e:	0038      	movs	r0, r7
 800cb90:	9300      	str	r3, [sp, #0]
 800cb92:	3301      	adds	r3, #1
 800cb94:	0019      	movs	r1, r3
 800cb96:	9304      	str	r3, [sp, #16]
 800cb98:	f7f3 fad0 	bl	800013c <__udivsi3>
 800cb9c:	9b04      	ldr	r3, [sp, #16]
 800cb9e:	9000      	str	r0, [sp, #0]
 800cba0:	429f      	cmp	r7, r3
 800cba2:	d329      	bcc.n	800cbf8 <quorem+0x98>
 800cba4:	2300      	movs	r3, #0
 800cba6:	469c      	mov	ip, r3
 800cba8:	9801      	ldr	r0, [sp, #4]
 800cbaa:	9f05      	ldr	r7, [sp, #20]
 800cbac:	9304      	str	r3, [sp, #16]
 800cbae:	cf08      	ldmia	r7!, {r3}
 800cbb0:	9a00      	ldr	r2, [sp, #0]
 800cbb2:	b299      	uxth	r1, r3
 800cbb4:	4351      	muls	r1, r2
 800cbb6:	0c1b      	lsrs	r3, r3, #16
 800cbb8:	4353      	muls	r3, r2
 800cbba:	4461      	add	r1, ip
 800cbbc:	0c0a      	lsrs	r2, r1, #16
 800cbbe:	189b      	adds	r3, r3, r2
 800cbc0:	0c1a      	lsrs	r2, r3, #16
 800cbc2:	9305      	str	r3, [sp, #20]
 800cbc4:	6803      	ldr	r3, [r0, #0]
 800cbc6:	4694      	mov	ip, r2
 800cbc8:	b29a      	uxth	r2, r3
 800cbca:	9b04      	ldr	r3, [sp, #16]
 800cbcc:	b289      	uxth	r1, r1
 800cbce:	18d2      	adds	r2, r2, r3
 800cbd0:	6803      	ldr	r3, [r0, #0]
 800cbd2:	1a52      	subs	r2, r2, r1
 800cbd4:	0c19      	lsrs	r1, r3, #16
 800cbd6:	466b      	mov	r3, sp
 800cbd8:	8a9b      	ldrh	r3, [r3, #20]
 800cbda:	1acb      	subs	r3, r1, r3
 800cbdc:	1411      	asrs	r1, r2, #16
 800cbde:	185b      	adds	r3, r3, r1
 800cbe0:	1419      	asrs	r1, r3, #16
 800cbe2:	b292      	uxth	r2, r2
 800cbe4:	041b      	lsls	r3, r3, #16
 800cbe6:	431a      	orrs	r2, r3
 800cbe8:	9b03      	ldr	r3, [sp, #12]
 800cbea:	9104      	str	r1, [sp, #16]
 800cbec:	c004      	stmia	r0!, {r2}
 800cbee:	42bb      	cmp	r3, r7
 800cbf0:	d2dd      	bcs.n	800cbae <quorem+0x4e>
 800cbf2:	6823      	ldr	r3, [r4, #0]
 800cbf4:	2b00      	cmp	r3, #0
 800cbf6:	d02e      	beq.n	800cc56 <quorem+0xf6>
 800cbf8:	0030      	movs	r0, r6
 800cbfa:	9902      	ldr	r1, [sp, #8]
 800cbfc:	f001 fdd8 	bl	800e7b0 <__mcmp>
 800cc00:	2800      	cmp	r0, #0
 800cc02:	db21      	blt.n	800cc48 <quorem+0xe8>
 800cc04:	0030      	movs	r0, r6
 800cc06:	2400      	movs	r4, #0
 800cc08:	9b00      	ldr	r3, [sp, #0]
 800cc0a:	9902      	ldr	r1, [sp, #8]
 800cc0c:	3301      	adds	r3, #1
 800cc0e:	9300      	str	r3, [sp, #0]
 800cc10:	3014      	adds	r0, #20
 800cc12:	3114      	adds	r1, #20
 800cc14:	6802      	ldr	r2, [r0, #0]
 800cc16:	c908      	ldmia	r1!, {r3}
 800cc18:	b292      	uxth	r2, r2
 800cc1a:	1914      	adds	r4, r2, r4
 800cc1c:	b29a      	uxth	r2, r3
 800cc1e:	1aa2      	subs	r2, r4, r2
 800cc20:	6804      	ldr	r4, [r0, #0]
 800cc22:	0c1b      	lsrs	r3, r3, #16
 800cc24:	0c24      	lsrs	r4, r4, #16
 800cc26:	1ae3      	subs	r3, r4, r3
 800cc28:	1414      	asrs	r4, r2, #16
 800cc2a:	191b      	adds	r3, r3, r4
 800cc2c:	141c      	asrs	r4, r3, #16
 800cc2e:	b292      	uxth	r2, r2
 800cc30:	041b      	lsls	r3, r3, #16
 800cc32:	4313      	orrs	r3, r2
 800cc34:	c008      	stmia	r0!, {r3}
 800cc36:	9b03      	ldr	r3, [sp, #12]
 800cc38:	428b      	cmp	r3, r1
 800cc3a:	d2eb      	bcs.n	800cc14 <quorem+0xb4>
 800cc3c:	9a01      	ldr	r2, [sp, #4]
 800cc3e:	00ab      	lsls	r3, r5, #2
 800cc40:	18d3      	adds	r3, r2, r3
 800cc42:	681a      	ldr	r2, [r3, #0]
 800cc44:	2a00      	cmp	r2, #0
 800cc46:	d010      	beq.n	800cc6a <quorem+0x10a>
 800cc48:	9800      	ldr	r0, [sp, #0]
 800cc4a:	b007      	add	sp, #28
 800cc4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cc4e:	6823      	ldr	r3, [r4, #0]
 800cc50:	2b00      	cmp	r3, #0
 800cc52:	d104      	bne.n	800cc5e <quorem+0xfe>
 800cc54:	3d01      	subs	r5, #1
 800cc56:	9b01      	ldr	r3, [sp, #4]
 800cc58:	3c04      	subs	r4, #4
 800cc5a:	42a3      	cmp	r3, r4
 800cc5c:	d3f7      	bcc.n	800cc4e <quorem+0xee>
 800cc5e:	6135      	str	r5, [r6, #16]
 800cc60:	e7ca      	b.n	800cbf8 <quorem+0x98>
 800cc62:	681a      	ldr	r2, [r3, #0]
 800cc64:	2a00      	cmp	r2, #0
 800cc66:	d104      	bne.n	800cc72 <quorem+0x112>
 800cc68:	3d01      	subs	r5, #1
 800cc6a:	9a01      	ldr	r2, [sp, #4]
 800cc6c:	3b04      	subs	r3, #4
 800cc6e:	429a      	cmp	r2, r3
 800cc70:	d3f7      	bcc.n	800cc62 <quorem+0x102>
 800cc72:	6135      	str	r5, [r6, #16]
 800cc74:	e7e8      	b.n	800cc48 <quorem+0xe8>
	...

0800cc78 <_dtoa_r>:
 800cc78:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc7a:	b09d      	sub	sp, #116	; 0x74
 800cc7c:	9202      	str	r2, [sp, #8]
 800cc7e:	9303      	str	r3, [sp, #12]
 800cc80:	9b02      	ldr	r3, [sp, #8]
 800cc82:	9c03      	ldr	r4, [sp, #12]
 800cc84:	930a      	str	r3, [sp, #40]	; 0x28
 800cc86:	940b      	str	r4, [sp, #44]	; 0x2c
 800cc88:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800cc8a:	0007      	movs	r7, r0
 800cc8c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 800cc8e:	2c00      	cmp	r4, #0
 800cc90:	d10e      	bne.n	800ccb0 <_dtoa_r+0x38>
 800cc92:	2010      	movs	r0, #16
 800cc94:	f001 fa8a 	bl	800e1ac <malloc>
 800cc98:	1e02      	subs	r2, r0, #0
 800cc9a:	6278      	str	r0, [r7, #36]	; 0x24
 800cc9c:	d104      	bne.n	800cca8 <_dtoa_r+0x30>
 800cc9e:	21ea      	movs	r1, #234	; 0xea
 800cca0:	4bc0      	ldr	r3, [pc, #768]	; (800cfa4 <_dtoa_r+0x32c>)
 800cca2:	48c1      	ldr	r0, [pc, #772]	; (800cfa8 <_dtoa_r+0x330>)
 800cca4:	f002 fc5c 	bl	800f560 <__assert_func>
 800cca8:	6044      	str	r4, [r0, #4]
 800ccaa:	6084      	str	r4, [r0, #8]
 800ccac:	6004      	str	r4, [r0, #0]
 800ccae:	60c4      	str	r4, [r0, #12]
 800ccb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ccb2:	6819      	ldr	r1, [r3, #0]
 800ccb4:	2900      	cmp	r1, #0
 800ccb6:	d00a      	beq.n	800ccce <_dtoa_r+0x56>
 800ccb8:	685a      	ldr	r2, [r3, #4]
 800ccba:	2301      	movs	r3, #1
 800ccbc:	4093      	lsls	r3, r2
 800ccbe:	604a      	str	r2, [r1, #4]
 800ccc0:	608b      	str	r3, [r1, #8]
 800ccc2:	0038      	movs	r0, r7
 800ccc4:	f001 fae6 	bl	800e294 <_Bfree>
 800ccc8:	2200      	movs	r2, #0
 800ccca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cccc:	601a      	str	r2, [r3, #0]
 800ccce:	9b03      	ldr	r3, [sp, #12]
 800ccd0:	2b00      	cmp	r3, #0
 800ccd2:	da21      	bge.n	800cd18 <_dtoa_r+0xa0>
 800ccd4:	2301      	movs	r3, #1
 800ccd6:	602b      	str	r3, [r5, #0]
 800ccd8:	9b03      	ldr	r3, [sp, #12]
 800ccda:	005b      	lsls	r3, r3, #1
 800ccdc:	085b      	lsrs	r3, r3, #1
 800ccde:	930b      	str	r3, [sp, #44]	; 0x2c
 800cce0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800cce2:	4bb2      	ldr	r3, [pc, #712]	; (800cfac <_dtoa_r+0x334>)
 800cce4:	002a      	movs	r2, r5
 800cce6:	9318      	str	r3, [sp, #96]	; 0x60
 800cce8:	401a      	ands	r2, r3
 800ccea:	429a      	cmp	r2, r3
 800ccec:	d117      	bne.n	800cd1e <_dtoa_r+0xa6>
 800ccee:	4bb0      	ldr	r3, [pc, #704]	; (800cfb0 <_dtoa_r+0x338>)
 800ccf0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800ccf2:	0328      	lsls	r0, r5, #12
 800ccf4:	6013      	str	r3, [r2, #0]
 800ccf6:	9b02      	ldr	r3, [sp, #8]
 800ccf8:	0b00      	lsrs	r0, r0, #12
 800ccfa:	4318      	orrs	r0, r3
 800ccfc:	d101      	bne.n	800cd02 <_dtoa_r+0x8a>
 800ccfe:	f000 fdc3 	bl	800d888 <_dtoa_r+0xc10>
 800cd02:	48ac      	ldr	r0, [pc, #688]	; (800cfb4 <_dtoa_r+0x33c>)
 800cd04:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800cd06:	9005      	str	r0, [sp, #20]
 800cd08:	2b00      	cmp	r3, #0
 800cd0a:	d002      	beq.n	800cd12 <_dtoa_r+0x9a>
 800cd0c:	4baa      	ldr	r3, [pc, #680]	; (800cfb8 <_dtoa_r+0x340>)
 800cd0e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800cd10:	6013      	str	r3, [r2, #0]
 800cd12:	9805      	ldr	r0, [sp, #20]
 800cd14:	b01d      	add	sp, #116	; 0x74
 800cd16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd18:	2300      	movs	r3, #0
 800cd1a:	602b      	str	r3, [r5, #0]
 800cd1c:	e7e0      	b.n	800cce0 <_dtoa_r+0x68>
 800cd1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cd20:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800cd22:	9312      	str	r3, [sp, #72]	; 0x48
 800cd24:	9413      	str	r4, [sp, #76]	; 0x4c
 800cd26:	9812      	ldr	r0, [sp, #72]	; 0x48
 800cd28:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800cd2a:	2200      	movs	r2, #0
 800cd2c:	2300      	movs	r3, #0
 800cd2e:	f7f3 fb8b 	bl	8000448 <__aeabi_dcmpeq>
 800cd32:	1e04      	subs	r4, r0, #0
 800cd34:	d00b      	beq.n	800cd4e <_dtoa_r+0xd6>
 800cd36:	2301      	movs	r3, #1
 800cd38:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800cd3a:	6013      	str	r3, [r2, #0]
 800cd3c:	4b9f      	ldr	r3, [pc, #636]	; (800cfbc <_dtoa_r+0x344>)
 800cd3e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800cd40:	9305      	str	r3, [sp, #20]
 800cd42:	2a00      	cmp	r2, #0
 800cd44:	d0e5      	beq.n	800cd12 <_dtoa_r+0x9a>
 800cd46:	4a9e      	ldr	r2, [pc, #632]	; (800cfc0 <_dtoa_r+0x348>)
 800cd48:	9926      	ldr	r1, [sp, #152]	; 0x98
 800cd4a:	600a      	str	r2, [r1, #0]
 800cd4c:	e7e1      	b.n	800cd12 <_dtoa_r+0x9a>
 800cd4e:	ab1a      	add	r3, sp, #104	; 0x68
 800cd50:	9301      	str	r3, [sp, #4]
 800cd52:	ab1b      	add	r3, sp, #108	; 0x6c
 800cd54:	9300      	str	r3, [sp, #0]
 800cd56:	0038      	movs	r0, r7
 800cd58:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800cd5a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800cd5c:	f001 fe50 	bl	800ea00 <__d2b>
 800cd60:	006e      	lsls	r6, r5, #1
 800cd62:	9004      	str	r0, [sp, #16]
 800cd64:	0d76      	lsrs	r6, r6, #21
 800cd66:	d100      	bne.n	800cd6a <_dtoa_r+0xf2>
 800cd68:	e07c      	b.n	800ce64 <_dtoa_r+0x1ec>
 800cd6a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800cd6c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800cd6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800cd70:	4a94      	ldr	r2, [pc, #592]	; (800cfc4 <_dtoa_r+0x34c>)
 800cd72:	031b      	lsls	r3, r3, #12
 800cd74:	0b1b      	lsrs	r3, r3, #12
 800cd76:	431a      	orrs	r2, r3
 800cd78:	0011      	movs	r1, r2
 800cd7a:	4b93      	ldr	r3, [pc, #588]	; (800cfc8 <_dtoa_r+0x350>)
 800cd7c:	9416      	str	r4, [sp, #88]	; 0x58
 800cd7e:	18f6      	adds	r6, r6, r3
 800cd80:	2200      	movs	r2, #0
 800cd82:	4b92      	ldr	r3, [pc, #584]	; (800cfcc <_dtoa_r+0x354>)
 800cd84:	f7f5 fd2c 	bl	80027e0 <__aeabi_dsub>
 800cd88:	4a91      	ldr	r2, [pc, #580]	; (800cfd0 <_dtoa_r+0x358>)
 800cd8a:	4b92      	ldr	r3, [pc, #584]	; (800cfd4 <_dtoa_r+0x35c>)
 800cd8c:	f7f5 fabc 	bl	8002308 <__aeabi_dmul>
 800cd90:	4a91      	ldr	r2, [pc, #580]	; (800cfd8 <_dtoa_r+0x360>)
 800cd92:	4b92      	ldr	r3, [pc, #584]	; (800cfdc <_dtoa_r+0x364>)
 800cd94:	f7f4 fb48 	bl	8001428 <__aeabi_dadd>
 800cd98:	0004      	movs	r4, r0
 800cd9a:	0030      	movs	r0, r6
 800cd9c:	000d      	movs	r5, r1
 800cd9e:	f7f6 f905 	bl	8002fac <__aeabi_i2d>
 800cda2:	4a8f      	ldr	r2, [pc, #572]	; (800cfe0 <_dtoa_r+0x368>)
 800cda4:	4b8f      	ldr	r3, [pc, #572]	; (800cfe4 <_dtoa_r+0x36c>)
 800cda6:	f7f5 faaf 	bl	8002308 <__aeabi_dmul>
 800cdaa:	0002      	movs	r2, r0
 800cdac:	000b      	movs	r3, r1
 800cdae:	0020      	movs	r0, r4
 800cdb0:	0029      	movs	r1, r5
 800cdb2:	f7f4 fb39 	bl	8001428 <__aeabi_dadd>
 800cdb6:	0004      	movs	r4, r0
 800cdb8:	000d      	movs	r5, r1
 800cdba:	f7f6 f8c1 	bl	8002f40 <__aeabi_d2iz>
 800cdbe:	2200      	movs	r2, #0
 800cdc0:	9002      	str	r0, [sp, #8]
 800cdc2:	2300      	movs	r3, #0
 800cdc4:	0020      	movs	r0, r4
 800cdc6:	0029      	movs	r1, r5
 800cdc8:	f7f3 fb44 	bl	8000454 <__aeabi_dcmplt>
 800cdcc:	2800      	cmp	r0, #0
 800cdce:	d00b      	beq.n	800cde8 <_dtoa_r+0x170>
 800cdd0:	9802      	ldr	r0, [sp, #8]
 800cdd2:	f7f6 f8eb 	bl	8002fac <__aeabi_i2d>
 800cdd6:	002b      	movs	r3, r5
 800cdd8:	0022      	movs	r2, r4
 800cdda:	f7f3 fb35 	bl	8000448 <__aeabi_dcmpeq>
 800cdde:	4243      	negs	r3, r0
 800cde0:	4158      	adcs	r0, r3
 800cde2:	9b02      	ldr	r3, [sp, #8]
 800cde4:	1a1b      	subs	r3, r3, r0
 800cde6:	9302      	str	r3, [sp, #8]
 800cde8:	2301      	movs	r3, #1
 800cdea:	9315      	str	r3, [sp, #84]	; 0x54
 800cdec:	9b02      	ldr	r3, [sp, #8]
 800cdee:	2b16      	cmp	r3, #22
 800cdf0:	d80f      	bhi.n	800ce12 <_dtoa_r+0x19a>
 800cdf2:	9812      	ldr	r0, [sp, #72]	; 0x48
 800cdf4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800cdf6:	00da      	lsls	r2, r3, #3
 800cdf8:	4b7b      	ldr	r3, [pc, #492]	; (800cfe8 <_dtoa_r+0x370>)
 800cdfa:	189b      	adds	r3, r3, r2
 800cdfc:	681a      	ldr	r2, [r3, #0]
 800cdfe:	685b      	ldr	r3, [r3, #4]
 800ce00:	f7f3 fb28 	bl	8000454 <__aeabi_dcmplt>
 800ce04:	2800      	cmp	r0, #0
 800ce06:	d049      	beq.n	800ce9c <_dtoa_r+0x224>
 800ce08:	9b02      	ldr	r3, [sp, #8]
 800ce0a:	3b01      	subs	r3, #1
 800ce0c:	9302      	str	r3, [sp, #8]
 800ce0e:	2300      	movs	r3, #0
 800ce10:	9315      	str	r3, [sp, #84]	; 0x54
 800ce12:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800ce14:	1b9e      	subs	r6, r3, r6
 800ce16:	2300      	movs	r3, #0
 800ce18:	9308      	str	r3, [sp, #32]
 800ce1a:	0033      	movs	r3, r6
 800ce1c:	3b01      	subs	r3, #1
 800ce1e:	930d      	str	r3, [sp, #52]	; 0x34
 800ce20:	d504      	bpl.n	800ce2c <_dtoa_r+0x1b4>
 800ce22:	2301      	movs	r3, #1
 800ce24:	1b9b      	subs	r3, r3, r6
 800ce26:	9308      	str	r3, [sp, #32]
 800ce28:	2300      	movs	r3, #0
 800ce2a:	930d      	str	r3, [sp, #52]	; 0x34
 800ce2c:	9b02      	ldr	r3, [sp, #8]
 800ce2e:	2b00      	cmp	r3, #0
 800ce30:	db36      	blt.n	800cea0 <_dtoa_r+0x228>
 800ce32:	9a02      	ldr	r2, [sp, #8]
 800ce34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ce36:	4694      	mov	ip, r2
 800ce38:	4463      	add	r3, ip
 800ce3a:	930d      	str	r3, [sp, #52]	; 0x34
 800ce3c:	2300      	movs	r3, #0
 800ce3e:	9214      	str	r2, [sp, #80]	; 0x50
 800ce40:	930e      	str	r3, [sp, #56]	; 0x38
 800ce42:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ce44:	2401      	movs	r4, #1
 800ce46:	2b09      	cmp	r3, #9
 800ce48:	d862      	bhi.n	800cf10 <_dtoa_r+0x298>
 800ce4a:	2b05      	cmp	r3, #5
 800ce4c:	dd02      	ble.n	800ce54 <_dtoa_r+0x1dc>
 800ce4e:	2400      	movs	r4, #0
 800ce50:	3b04      	subs	r3, #4
 800ce52:	9322      	str	r3, [sp, #136]	; 0x88
 800ce54:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ce56:	1e98      	subs	r0, r3, #2
 800ce58:	2803      	cmp	r0, #3
 800ce5a:	d862      	bhi.n	800cf22 <_dtoa_r+0x2aa>
 800ce5c:	f7f3 f95a 	bl	8000114 <__gnu_thumb1_case_uqi>
 800ce60:	56343629 	.word	0x56343629
 800ce64:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800ce66:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800ce68:	189e      	adds	r6, r3, r2
 800ce6a:	4b60      	ldr	r3, [pc, #384]	; (800cfec <_dtoa_r+0x374>)
 800ce6c:	18f2      	adds	r2, r6, r3
 800ce6e:	2a20      	cmp	r2, #32
 800ce70:	dd0f      	ble.n	800ce92 <_dtoa_r+0x21a>
 800ce72:	2340      	movs	r3, #64	; 0x40
 800ce74:	1a9b      	subs	r3, r3, r2
 800ce76:	409d      	lsls	r5, r3
 800ce78:	4b5d      	ldr	r3, [pc, #372]	; (800cff0 <_dtoa_r+0x378>)
 800ce7a:	9802      	ldr	r0, [sp, #8]
 800ce7c:	18f3      	adds	r3, r6, r3
 800ce7e:	40d8      	lsrs	r0, r3
 800ce80:	4328      	orrs	r0, r5
 800ce82:	f7f6 f8c3 	bl	800300c <__aeabi_ui2d>
 800ce86:	2301      	movs	r3, #1
 800ce88:	4c5a      	ldr	r4, [pc, #360]	; (800cff4 <_dtoa_r+0x37c>)
 800ce8a:	3e01      	subs	r6, #1
 800ce8c:	1909      	adds	r1, r1, r4
 800ce8e:	9316      	str	r3, [sp, #88]	; 0x58
 800ce90:	e776      	b.n	800cd80 <_dtoa_r+0x108>
 800ce92:	2320      	movs	r3, #32
 800ce94:	9802      	ldr	r0, [sp, #8]
 800ce96:	1a9b      	subs	r3, r3, r2
 800ce98:	4098      	lsls	r0, r3
 800ce9a:	e7f2      	b.n	800ce82 <_dtoa_r+0x20a>
 800ce9c:	9015      	str	r0, [sp, #84]	; 0x54
 800ce9e:	e7b8      	b.n	800ce12 <_dtoa_r+0x19a>
 800cea0:	9b08      	ldr	r3, [sp, #32]
 800cea2:	9a02      	ldr	r2, [sp, #8]
 800cea4:	1a9b      	subs	r3, r3, r2
 800cea6:	9308      	str	r3, [sp, #32]
 800cea8:	4253      	negs	r3, r2
 800ceaa:	930e      	str	r3, [sp, #56]	; 0x38
 800ceac:	2300      	movs	r3, #0
 800ceae:	9314      	str	r3, [sp, #80]	; 0x50
 800ceb0:	e7c7      	b.n	800ce42 <_dtoa_r+0x1ca>
 800ceb2:	2300      	movs	r3, #0
 800ceb4:	930f      	str	r3, [sp, #60]	; 0x3c
 800ceb6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ceb8:	2b00      	cmp	r3, #0
 800ceba:	dc36      	bgt.n	800cf2a <_dtoa_r+0x2b2>
 800cebc:	2301      	movs	r3, #1
 800cebe:	001a      	movs	r2, r3
 800cec0:	930c      	str	r3, [sp, #48]	; 0x30
 800cec2:	9306      	str	r3, [sp, #24]
 800cec4:	9223      	str	r2, [sp, #140]	; 0x8c
 800cec6:	e00d      	b.n	800cee4 <_dtoa_r+0x26c>
 800cec8:	2301      	movs	r3, #1
 800ceca:	e7f3      	b.n	800ceb4 <_dtoa_r+0x23c>
 800cecc:	2300      	movs	r3, #0
 800cece:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800ced0:	930f      	str	r3, [sp, #60]	; 0x3c
 800ced2:	4694      	mov	ip, r2
 800ced4:	9b02      	ldr	r3, [sp, #8]
 800ced6:	4463      	add	r3, ip
 800ced8:	930c      	str	r3, [sp, #48]	; 0x30
 800ceda:	3301      	adds	r3, #1
 800cedc:	9306      	str	r3, [sp, #24]
 800cede:	2b00      	cmp	r3, #0
 800cee0:	dc00      	bgt.n	800cee4 <_dtoa_r+0x26c>
 800cee2:	2301      	movs	r3, #1
 800cee4:	2200      	movs	r2, #0
 800cee6:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800cee8:	6042      	str	r2, [r0, #4]
 800ceea:	3204      	adds	r2, #4
 800ceec:	0015      	movs	r5, r2
 800ceee:	3514      	adds	r5, #20
 800cef0:	6841      	ldr	r1, [r0, #4]
 800cef2:	429d      	cmp	r5, r3
 800cef4:	d91d      	bls.n	800cf32 <_dtoa_r+0x2ba>
 800cef6:	0038      	movs	r0, r7
 800cef8:	f001 f988 	bl	800e20c <_Balloc>
 800cefc:	9005      	str	r0, [sp, #20]
 800cefe:	2800      	cmp	r0, #0
 800cf00:	d11b      	bne.n	800cf3a <_dtoa_r+0x2c2>
 800cf02:	21d5      	movs	r1, #213	; 0xd5
 800cf04:	0002      	movs	r2, r0
 800cf06:	4b3c      	ldr	r3, [pc, #240]	; (800cff8 <_dtoa_r+0x380>)
 800cf08:	0049      	lsls	r1, r1, #1
 800cf0a:	e6ca      	b.n	800cca2 <_dtoa_r+0x2a>
 800cf0c:	2301      	movs	r3, #1
 800cf0e:	e7de      	b.n	800cece <_dtoa_r+0x256>
 800cf10:	2300      	movs	r3, #0
 800cf12:	940f      	str	r4, [sp, #60]	; 0x3c
 800cf14:	9322      	str	r3, [sp, #136]	; 0x88
 800cf16:	3b01      	subs	r3, #1
 800cf18:	930c      	str	r3, [sp, #48]	; 0x30
 800cf1a:	9306      	str	r3, [sp, #24]
 800cf1c:	2200      	movs	r2, #0
 800cf1e:	3313      	adds	r3, #19
 800cf20:	e7d0      	b.n	800cec4 <_dtoa_r+0x24c>
 800cf22:	2301      	movs	r3, #1
 800cf24:	930f      	str	r3, [sp, #60]	; 0x3c
 800cf26:	3b02      	subs	r3, #2
 800cf28:	e7f6      	b.n	800cf18 <_dtoa_r+0x2a0>
 800cf2a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cf2c:	930c      	str	r3, [sp, #48]	; 0x30
 800cf2e:	9306      	str	r3, [sp, #24]
 800cf30:	e7d8      	b.n	800cee4 <_dtoa_r+0x26c>
 800cf32:	3101      	adds	r1, #1
 800cf34:	6041      	str	r1, [r0, #4]
 800cf36:	0052      	lsls	r2, r2, #1
 800cf38:	e7d8      	b.n	800ceec <_dtoa_r+0x274>
 800cf3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cf3c:	9a05      	ldr	r2, [sp, #20]
 800cf3e:	601a      	str	r2, [r3, #0]
 800cf40:	9b06      	ldr	r3, [sp, #24]
 800cf42:	2b0e      	cmp	r3, #14
 800cf44:	d900      	bls.n	800cf48 <_dtoa_r+0x2d0>
 800cf46:	e0eb      	b.n	800d120 <_dtoa_r+0x4a8>
 800cf48:	2c00      	cmp	r4, #0
 800cf4a:	d100      	bne.n	800cf4e <_dtoa_r+0x2d6>
 800cf4c:	e0e8      	b.n	800d120 <_dtoa_r+0x4a8>
 800cf4e:	9b02      	ldr	r3, [sp, #8]
 800cf50:	2b00      	cmp	r3, #0
 800cf52:	dd68      	ble.n	800d026 <_dtoa_r+0x3ae>
 800cf54:	001a      	movs	r2, r3
 800cf56:	210f      	movs	r1, #15
 800cf58:	4b23      	ldr	r3, [pc, #140]	; (800cfe8 <_dtoa_r+0x370>)
 800cf5a:	400a      	ands	r2, r1
 800cf5c:	00d2      	lsls	r2, r2, #3
 800cf5e:	189b      	adds	r3, r3, r2
 800cf60:	681d      	ldr	r5, [r3, #0]
 800cf62:	685e      	ldr	r6, [r3, #4]
 800cf64:	9b02      	ldr	r3, [sp, #8]
 800cf66:	111c      	asrs	r4, r3, #4
 800cf68:	2302      	movs	r3, #2
 800cf6a:	9310      	str	r3, [sp, #64]	; 0x40
 800cf6c:	9b02      	ldr	r3, [sp, #8]
 800cf6e:	05db      	lsls	r3, r3, #23
 800cf70:	d50b      	bpl.n	800cf8a <_dtoa_r+0x312>
 800cf72:	4b22      	ldr	r3, [pc, #136]	; (800cffc <_dtoa_r+0x384>)
 800cf74:	400c      	ands	r4, r1
 800cf76:	6a1a      	ldr	r2, [r3, #32]
 800cf78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf7a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800cf7c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800cf7e:	f7f4 fdbd 	bl	8001afc <__aeabi_ddiv>
 800cf82:	2303      	movs	r3, #3
 800cf84:	900a      	str	r0, [sp, #40]	; 0x28
 800cf86:	910b      	str	r1, [sp, #44]	; 0x2c
 800cf88:	9310      	str	r3, [sp, #64]	; 0x40
 800cf8a:	4b1c      	ldr	r3, [pc, #112]	; (800cffc <_dtoa_r+0x384>)
 800cf8c:	9307      	str	r3, [sp, #28]
 800cf8e:	2c00      	cmp	r4, #0
 800cf90:	d136      	bne.n	800d000 <_dtoa_r+0x388>
 800cf92:	980a      	ldr	r0, [sp, #40]	; 0x28
 800cf94:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800cf96:	002a      	movs	r2, r5
 800cf98:	0033      	movs	r3, r6
 800cf9a:	f7f4 fdaf 	bl	8001afc <__aeabi_ddiv>
 800cf9e:	900a      	str	r0, [sp, #40]	; 0x28
 800cfa0:	910b      	str	r1, [sp, #44]	; 0x2c
 800cfa2:	e05c      	b.n	800d05e <_dtoa_r+0x3e6>
 800cfa4:	08010146 	.word	0x08010146
 800cfa8:	0801015d 	.word	0x0801015d
 800cfac:	7ff00000 	.word	0x7ff00000
 800cfb0:	0000270f 	.word	0x0000270f
 800cfb4:	08010142 	.word	0x08010142
 800cfb8:	08010145 	.word	0x08010145
 800cfbc:	0800ffb8 	.word	0x0800ffb8
 800cfc0:	0800ffb9 	.word	0x0800ffb9
 800cfc4:	3ff00000 	.word	0x3ff00000
 800cfc8:	fffffc01 	.word	0xfffffc01
 800cfcc:	3ff80000 	.word	0x3ff80000
 800cfd0:	636f4361 	.word	0x636f4361
 800cfd4:	3fd287a7 	.word	0x3fd287a7
 800cfd8:	8b60c8b3 	.word	0x8b60c8b3
 800cfdc:	3fc68a28 	.word	0x3fc68a28
 800cfe0:	509f79fb 	.word	0x509f79fb
 800cfe4:	3fd34413 	.word	0x3fd34413
 800cfe8:	08010338 	.word	0x08010338
 800cfec:	00000432 	.word	0x00000432
 800cff0:	00000412 	.word	0x00000412
 800cff4:	fe100000 	.word	0xfe100000
 800cff8:	080101bc 	.word	0x080101bc
 800cffc:	08010310 	.word	0x08010310
 800d000:	2301      	movs	r3, #1
 800d002:	421c      	tst	r4, r3
 800d004:	d00b      	beq.n	800d01e <_dtoa_r+0x3a6>
 800d006:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d008:	0028      	movs	r0, r5
 800d00a:	3301      	adds	r3, #1
 800d00c:	9310      	str	r3, [sp, #64]	; 0x40
 800d00e:	9b07      	ldr	r3, [sp, #28]
 800d010:	0031      	movs	r1, r6
 800d012:	681a      	ldr	r2, [r3, #0]
 800d014:	685b      	ldr	r3, [r3, #4]
 800d016:	f7f5 f977 	bl	8002308 <__aeabi_dmul>
 800d01a:	0005      	movs	r5, r0
 800d01c:	000e      	movs	r6, r1
 800d01e:	9b07      	ldr	r3, [sp, #28]
 800d020:	1064      	asrs	r4, r4, #1
 800d022:	3308      	adds	r3, #8
 800d024:	e7b2      	b.n	800cf8c <_dtoa_r+0x314>
 800d026:	2302      	movs	r3, #2
 800d028:	9310      	str	r3, [sp, #64]	; 0x40
 800d02a:	9b02      	ldr	r3, [sp, #8]
 800d02c:	2b00      	cmp	r3, #0
 800d02e:	d016      	beq.n	800d05e <_dtoa_r+0x3e6>
 800d030:	9812      	ldr	r0, [sp, #72]	; 0x48
 800d032:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800d034:	425c      	negs	r4, r3
 800d036:	230f      	movs	r3, #15
 800d038:	4ab5      	ldr	r2, [pc, #724]	; (800d310 <_dtoa_r+0x698>)
 800d03a:	4023      	ands	r3, r4
 800d03c:	00db      	lsls	r3, r3, #3
 800d03e:	18d3      	adds	r3, r2, r3
 800d040:	681a      	ldr	r2, [r3, #0]
 800d042:	685b      	ldr	r3, [r3, #4]
 800d044:	f7f5 f960 	bl	8002308 <__aeabi_dmul>
 800d048:	2601      	movs	r6, #1
 800d04a:	2300      	movs	r3, #0
 800d04c:	900a      	str	r0, [sp, #40]	; 0x28
 800d04e:	910b      	str	r1, [sp, #44]	; 0x2c
 800d050:	4db0      	ldr	r5, [pc, #704]	; (800d314 <_dtoa_r+0x69c>)
 800d052:	1124      	asrs	r4, r4, #4
 800d054:	2c00      	cmp	r4, #0
 800d056:	d000      	beq.n	800d05a <_dtoa_r+0x3e2>
 800d058:	e094      	b.n	800d184 <_dtoa_r+0x50c>
 800d05a:	2b00      	cmp	r3, #0
 800d05c:	d19f      	bne.n	800cf9e <_dtoa_r+0x326>
 800d05e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d060:	2b00      	cmp	r3, #0
 800d062:	d100      	bne.n	800d066 <_dtoa_r+0x3ee>
 800d064:	e09b      	b.n	800d19e <_dtoa_r+0x526>
 800d066:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d068:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800d06a:	2200      	movs	r2, #0
 800d06c:	0020      	movs	r0, r4
 800d06e:	0029      	movs	r1, r5
 800d070:	4ba9      	ldr	r3, [pc, #676]	; (800d318 <_dtoa_r+0x6a0>)
 800d072:	f7f3 f9ef 	bl	8000454 <__aeabi_dcmplt>
 800d076:	2800      	cmp	r0, #0
 800d078:	d100      	bne.n	800d07c <_dtoa_r+0x404>
 800d07a:	e090      	b.n	800d19e <_dtoa_r+0x526>
 800d07c:	9b06      	ldr	r3, [sp, #24]
 800d07e:	2b00      	cmp	r3, #0
 800d080:	d100      	bne.n	800d084 <_dtoa_r+0x40c>
 800d082:	e08c      	b.n	800d19e <_dtoa_r+0x526>
 800d084:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d086:	2b00      	cmp	r3, #0
 800d088:	dd46      	ble.n	800d118 <_dtoa_r+0x4a0>
 800d08a:	9b02      	ldr	r3, [sp, #8]
 800d08c:	2200      	movs	r2, #0
 800d08e:	0020      	movs	r0, r4
 800d090:	0029      	movs	r1, r5
 800d092:	1e5e      	subs	r6, r3, #1
 800d094:	4ba1      	ldr	r3, [pc, #644]	; (800d31c <_dtoa_r+0x6a4>)
 800d096:	f7f5 f937 	bl	8002308 <__aeabi_dmul>
 800d09a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d09c:	900a      	str	r0, [sp, #40]	; 0x28
 800d09e:	910b      	str	r1, [sp, #44]	; 0x2c
 800d0a0:	3301      	adds	r3, #1
 800d0a2:	9310      	str	r3, [sp, #64]	; 0x40
 800d0a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d0a6:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d0a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d0aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800d0ac:	9307      	str	r3, [sp, #28]
 800d0ae:	f7f5 ff7d 	bl	8002fac <__aeabi_i2d>
 800d0b2:	0022      	movs	r2, r4
 800d0b4:	002b      	movs	r3, r5
 800d0b6:	f7f5 f927 	bl	8002308 <__aeabi_dmul>
 800d0ba:	2200      	movs	r2, #0
 800d0bc:	4b98      	ldr	r3, [pc, #608]	; (800d320 <_dtoa_r+0x6a8>)
 800d0be:	f7f4 f9b3 	bl	8001428 <__aeabi_dadd>
 800d0c2:	9010      	str	r0, [sp, #64]	; 0x40
 800d0c4:	9111      	str	r1, [sp, #68]	; 0x44
 800d0c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d0c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d0ca:	920a      	str	r2, [sp, #40]	; 0x28
 800d0cc:	930b      	str	r3, [sp, #44]	; 0x2c
 800d0ce:	4a95      	ldr	r2, [pc, #596]	; (800d324 <_dtoa_r+0x6ac>)
 800d0d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d0d2:	4694      	mov	ip, r2
 800d0d4:	4463      	add	r3, ip
 800d0d6:	9317      	str	r3, [sp, #92]	; 0x5c
 800d0d8:	930b      	str	r3, [sp, #44]	; 0x2c
 800d0da:	9b07      	ldr	r3, [sp, #28]
 800d0dc:	2b00      	cmp	r3, #0
 800d0de:	d161      	bne.n	800d1a4 <_dtoa_r+0x52c>
 800d0e0:	2200      	movs	r2, #0
 800d0e2:	0020      	movs	r0, r4
 800d0e4:	0029      	movs	r1, r5
 800d0e6:	4b90      	ldr	r3, [pc, #576]	; (800d328 <_dtoa_r+0x6b0>)
 800d0e8:	f7f5 fb7a 	bl	80027e0 <__aeabi_dsub>
 800d0ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d0ee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800d0f0:	0004      	movs	r4, r0
 800d0f2:	000d      	movs	r5, r1
 800d0f4:	f7f3 f9c2 	bl	800047c <__aeabi_dcmpgt>
 800d0f8:	2800      	cmp	r0, #0
 800d0fa:	d000      	beq.n	800d0fe <_dtoa_r+0x486>
 800d0fc:	e2b5      	b.n	800d66a <_dtoa_r+0x9f2>
 800d0fe:	488b      	ldr	r0, [pc, #556]	; (800d32c <_dtoa_r+0x6b4>)
 800d100:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d102:	4684      	mov	ip, r0
 800d104:	4461      	add	r1, ip
 800d106:	000b      	movs	r3, r1
 800d108:	0020      	movs	r0, r4
 800d10a:	0029      	movs	r1, r5
 800d10c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d10e:	f7f3 f9a1 	bl	8000454 <__aeabi_dcmplt>
 800d112:	2800      	cmp	r0, #0
 800d114:	d000      	beq.n	800d118 <_dtoa_r+0x4a0>
 800d116:	e2a5      	b.n	800d664 <_dtoa_r+0x9ec>
 800d118:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d11a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800d11c:	930a      	str	r3, [sp, #40]	; 0x28
 800d11e:	940b      	str	r4, [sp, #44]	; 0x2c
 800d120:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800d122:	2b00      	cmp	r3, #0
 800d124:	da00      	bge.n	800d128 <_dtoa_r+0x4b0>
 800d126:	e171      	b.n	800d40c <_dtoa_r+0x794>
 800d128:	9a02      	ldr	r2, [sp, #8]
 800d12a:	2a0e      	cmp	r2, #14
 800d12c:	dd00      	ble.n	800d130 <_dtoa_r+0x4b8>
 800d12e:	e16d      	b.n	800d40c <_dtoa_r+0x794>
 800d130:	4b77      	ldr	r3, [pc, #476]	; (800d310 <_dtoa_r+0x698>)
 800d132:	00d2      	lsls	r2, r2, #3
 800d134:	189b      	adds	r3, r3, r2
 800d136:	685c      	ldr	r4, [r3, #4]
 800d138:	681b      	ldr	r3, [r3, #0]
 800d13a:	9308      	str	r3, [sp, #32]
 800d13c:	9409      	str	r4, [sp, #36]	; 0x24
 800d13e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d140:	2b00      	cmp	r3, #0
 800d142:	db00      	blt.n	800d146 <_dtoa_r+0x4ce>
 800d144:	e0f6      	b.n	800d334 <_dtoa_r+0x6bc>
 800d146:	9b06      	ldr	r3, [sp, #24]
 800d148:	2b00      	cmp	r3, #0
 800d14a:	dd00      	ble.n	800d14e <_dtoa_r+0x4d6>
 800d14c:	e0f2      	b.n	800d334 <_dtoa_r+0x6bc>
 800d14e:	d000      	beq.n	800d152 <_dtoa_r+0x4da>
 800d150:	e288      	b.n	800d664 <_dtoa_r+0x9ec>
 800d152:	9808      	ldr	r0, [sp, #32]
 800d154:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d156:	2200      	movs	r2, #0
 800d158:	4b73      	ldr	r3, [pc, #460]	; (800d328 <_dtoa_r+0x6b0>)
 800d15a:	f7f5 f8d5 	bl	8002308 <__aeabi_dmul>
 800d15e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d160:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d162:	f7f3 f995 	bl	8000490 <__aeabi_dcmpge>
 800d166:	9e06      	ldr	r6, [sp, #24]
 800d168:	0035      	movs	r5, r6
 800d16a:	2800      	cmp	r0, #0
 800d16c:	d000      	beq.n	800d170 <_dtoa_r+0x4f8>
 800d16e:	e25f      	b.n	800d630 <_dtoa_r+0x9b8>
 800d170:	9b05      	ldr	r3, [sp, #20]
 800d172:	9a05      	ldr	r2, [sp, #20]
 800d174:	3301      	adds	r3, #1
 800d176:	9307      	str	r3, [sp, #28]
 800d178:	2331      	movs	r3, #49	; 0x31
 800d17a:	7013      	strb	r3, [r2, #0]
 800d17c:	9b02      	ldr	r3, [sp, #8]
 800d17e:	3301      	adds	r3, #1
 800d180:	9302      	str	r3, [sp, #8]
 800d182:	e25a      	b.n	800d63a <_dtoa_r+0x9c2>
 800d184:	4234      	tst	r4, r6
 800d186:	d007      	beq.n	800d198 <_dtoa_r+0x520>
 800d188:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d18a:	3301      	adds	r3, #1
 800d18c:	9310      	str	r3, [sp, #64]	; 0x40
 800d18e:	682a      	ldr	r2, [r5, #0]
 800d190:	686b      	ldr	r3, [r5, #4]
 800d192:	f7f5 f8b9 	bl	8002308 <__aeabi_dmul>
 800d196:	0033      	movs	r3, r6
 800d198:	1064      	asrs	r4, r4, #1
 800d19a:	3508      	adds	r5, #8
 800d19c:	e75a      	b.n	800d054 <_dtoa_r+0x3dc>
 800d19e:	9e02      	ldr	r6, [sp, #8]
 800d1a0:	9b06      	ldr	r3, [sp, #24]
 800d1a2:	e780      	b.n	800d0a6 <_dtoa_r+0x42e>
 800d1a4:	9b07      	ldr	r3, [sp, #28]
 800d1a6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d1a8:	1e5a      	subs	r2, r3, #1
 800d1aa:	4b59      	ldr	r3, [pc, #356]	; (800d310 <_dtoa_r+0x698>)
 800d1ac:	00d2      	lsls	r2, r2, #3
 800d1ae:	189b      	adds	r3, r3, r2
 800d1b0:	681a      	ldr	r2, [r3, #0]
 800d1b2:	685b      	ldr	r3, [r3, #4]
 800d1b4:	2900      	cmp	r1, #0
 800d1b6:	d051      	beq.n	800d25c <_dtoa_r+0x5e4>
 800d1b8:	2000      	movs	r0, #0
 800d1ba:	495d      	ldr	r1, [pc, #372]	; (800d330 <_dtoa_r+0x6b8>)
 800d1bc:	f7f4 fc9e 	bl	8001afc <__aeabi_ddiv>
 800d1c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d1c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d1c4:	f7f5 fb0c 	bl	80027e0 <__aeabi_dsub>
 800d1c8:	9a05      	ldr	r2, [sp, #20]
 800d1ca:	9b05      	ldr	r3, [sp, #20]
 800d1cc:	4694      	mov	ip, r2
 800d1ce:	9310      	str	r3, [sp, #64]	; 0x40
 800d1d0:	9b07      	ldr	r3, [sp, #28]
 800d1d2:	900a      	str	r0, [sp, #40]	; 0x28
 800d1d4:	910b      	str	r1, [sp, #44]	; 0x2c
 800d1d6:	4463      	add	r3, ip
 800d1d8:	9319      	str	r3, [sp, #100]	; 0x64
 800d1da:	0029      	movs	r1, r5
 800d1dc:	0020      	movs	r0, r4
 800d1de:	f7f5 feaf 	bl	8002f40 <__aeabi_d2iz>
 800d1e2:	9017      	str	r0, [sp, #92]	; 0x5c
 800d1e4:	f7f5 fee2 	bl	8002fac <__aeabi_i2d>
 800d1e8:	0002      	movs	r2, r0
 800d1ea:	000b      	movs	r3, r1
 800d1ec:	0020      	movs	r0, r4
 800d1ee:	0029      	movs	r1, r5
 800d1f0:	f7f5 faf6 	bl	80027e0 <__aeabi_dsub>
 800d1f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d1f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d1f8:	3301      	adds	r3, #1
 800d1fa:	9307      	str	r3, [sp, #28]
 800d1fc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800d1fe:	0004      	movs	r4, r0
 800d200:	3330      	adds	r3, #48	; 0x30
 800d202:	7013      	strb	r3, [r2, #0]
 800d204:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d206:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d208:	000d      	movs	r5, r1
 800d20a:	f7f3 f923 	bl	8000454 <__aeabi_dcmplt>
 800d20e:	2800      	cmp	r0, #0
 800d210:	d175      	bne.n	800d2fe <_dtoa_r+0x686>
 800d212:	0022      	movs	r2, r4
 800d214:	002b      	movs	r3, r5
 800d216:	2000      	movs	r0, #0
 800d218:	493f      	ldr	r1, [pc, #252]	; (800d318 <_dtoa_r+0x6a0>)
 800d21a:	f7f5 fae1 	bl	80027e0 <__aeabi_dsub>
 800d21e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d220:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d222:	f7f3 f917 	bl	8000454 <__aeabi_dcmplt>
 800d226:	2800      	cmp	r0, #0
 800d228:	d000      	beq.n	800d22c <_dtoa_r+0x5b4>
 800d22a:	e0d1      	b.n	800d3d0 <_dtoa_r+0x758>
 800d22c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d22e:	9a07      	ldr	r2, [sp, #28]
 800d230:	4293      	cmp	r3, r2
 800d232:	d100      	bne.n	800d236 <_dtoa_r+0x5be>
 800d234:	e770      	b.n	800d118 <_dtoa_r+0x4a0>
 800d236:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d238:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d23a:	2200      	movs	r2, #0
 800d23c:	4b37      	ldr	r3, [pc, #220]	; (800d31c <_dtoa_r+0x6a4>)
 800d23e:	f7f5 f863 	bl	8002308 <__aeabi_dmul>
 800d242:	4b36      	ldr	r3, [pc, #216]	; (800d31c <_dtoa_r+0x6a4>)
 800d244:	900a      	str	r0, [sp, #40]	; 0x28
 800d246:	910b      	str	r1, [sp, #44]	; 0x2c
 800d248:	2200      	movs	r2, #0
 800d24a:	0020      	movs	r0, r4
 800d24c:	0029      	movs	r1, r5
 800d24e:	f7f5 f85b 	bl	8002308 <__aeabi_dmul>
 800d252:	9b07      	ldr	r3, [sp, #28]
 800d254:	0004      	movs	r4, r0
 800d256:	000d      	movs	r5, r1
 800d258:	9310      	str	r3, [sp, #64]	; 0x40
 800d25a:	e7be      	b.n	800d1da <_dtoa_r+0x562>
 800d25c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d25e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d260:	f7f5 f852 	bl	8002308 <__aeabi_dmul>
 800d264:	9a05      	ldr	r2, [sp, #20]
 800d266:	9b05      	ldr	r3, [sp, #20]
 800d268:	4694      	mov	ip, r2
 800d26a:	930a      	str	r3, [sp, #40]	; 0x28
 800d26c:	9b07      	ldr	r3, [sp, #28]
 800d26e:	9010      	str	r0, [sp, #64]	; 0x40
 800d270:	9111      	str	r1, [sp, #68]	; 0x44
 800d272:	4463      	add	r3, ip
 800d274:	9319      	str	r3, [sp, #100]	; 0x64
 800d276:	0029      	movs	r1, r5
 800d278:	0020      	movs	r0, r4
 800d27a:	f7f5 fe61 	bl	8002f40 <__aeabi_d2iz>
 800d27e:	9017      	str	r0, [sp, #92]	; 0x5c
 800d280:	f7f5 fe94 	bl	8002fac <__aeabi_i2d>
 800d284:	0002      	movs	r2, r0
 800d286:	000b      	movs	r3, r1
 800d288:	0020      	movs	r0, r4
 800d28a:	0029      	movs	r1, r5
 800d28c:	f7f5 faa8 	bl	80027e0 <__aeabi_dsub>
 800d290:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800d292:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d294:	3330      	adds	r3, #48	; 0x30
 800d296:	7013      	strb	r3, [r2, #0]
 800d298:	0013      	movs	r3, r2
 800d29a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800d29c:	3301      	adds	r3, #1
 800d29e:	0004      	movs	r4, r0
 800d2a0:	000d      	movs	r5, r1
 800d2a2:	930a      	str	r3, [sp, #40]	; 0x28
 800d2a4:	4293      	cmp	r3, r2
 800d2a6:	d12c      	bne.n	800d302 <_dtoa_r+0x68a>
 800d2a8:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d2aa:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d2ac:	9a05      	ldr	r2, [sp, #20]
 800d2ae:	9b07      	ldr	r3, [sp, #28]
 800d2b0:	4694      	mov	ip, r2
 800d2b2:	4463      	add	r3, ip
 800d2b4:	2200      	movs	r2, #0
 800d2b6:	9307      	str	r3, [sp, #28]
 800d2b8:	4b1d      	ldr	r3, [pc, #116]	; (800d330 <_dtoa_r+0x6b8>)
 800d2ba:	f7f4 f8b5 	bl	8001428 <__aeabi_dadd>
 800d2be:	0002      	movs	r2, r0
 800d2c0:	000b      	movs	r3, r1
 800d2c2:	0020      	movs	r0, r4
 800d2c4:	0029      	movs	r1, r5
 800d2c6:	f7f3 f8d9 	bl	800047c <__aeabi_dcmpgt>
 800d2ca:	2800      	cmp	r0, #0
 800d2cc:	d000      	beq.n	800d2d0 <_dtoa_r+0x658>
 800d2ce:	e07f      	b.n	800d3d0 <_dtoa_r+0x758>
 800d2d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d2d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d2d4:	2000      	movs	r0, #0
 800d2d6:	4916      	ldr	r1, [pc, #88]	; (800d330 <_dtoa_r+0x6b8>)
 800d2d8:	f7f5 fa82 	bl	80027e0 <__aeabi_dsub>
 800d2dc:	0002      	movs	r2, r0
 800d2de:	000b      	movs	r3, r1
 800d2e0:	0020      	movs	r0, r4
 800d2e2:	0029      	movs	r1, r5
 800d2e4:	f7f3 f8b6 	bl	8000454 <__aeabi_dcmplt>
 800d2e8:	2800      	cmp	r0, #0
 800d2ea:	d100      	bne.n	800d2ee <_dtoa_r+0x676>
 800d2ec:	e714      	b.n	800d118 <_dtoa_r+0x4a0>
 800d2ee:	9b07      	ldr	r3, [sp, #28]
 800d2f0:	001a      	movs	r2, r3
 800d2f2:	3a01      	subs	r2, #1
 800d2f4:	9207      	str	r2, [sp, #28]
 800d2f6:	7812      	ldrb	r2, [r2, #0]
 800d2f8:	2a30      	cmp	r2, #48	; 0x30
 800d2fa:	d0f8      	beq.n	800d2ee <_dtoa_r+0x676>
 800d2fc:	9307      	str	r3, [sp, #28]
 800d2fe:	9602      	str	r6, [sp, #8]
 800d300:	e054      	b.n	800d3ac <_dtoa_r+0x734>
 800d302:	2200      	movs	r2, #0
 800d304:	4b05      	ldr	r3, [pc, #20]	; (800d31c <_dtoa_r+0x6a4>)
 800d306:	f7f4 ffff 	bl	8002308 <__aeabi_dmul>
 800d30a:	0004      	movs	r4, r0
 800d30c:	000d      	movs	r5, r1
 800d30e:	e7b2      	b.n	800d276 <_dtoa_r+0x5fe>
 800d310:	08010338 	.word	0x08010338
 800d314:	08010310 	.word	0x08010310
 800d318:	3ff00000 	.word	0x3ff00000
 800d31c:	40240000 	.word	0x40240000
 800d320:	401c0000 	.word	0x401c0000
 800d324:	fcc00000 	.word	0xfcc00000
 800d328:	40140000 	.word	0x40140000
 800d32c:	7cc00000 	.word	0x7cc00000
 800d330:	3fe00000 	.word	0x3fe00000
 800d334:	9b06      	ldr	r3, [sp, #24]
 800d336:	9e05      	ldr	r6, [sp, #20]
 800d338:	3b01      	subs	r3, #1
 800d33a:	199b      	adds	r3, r3, r6
 800d33c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d33e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800d340:	930a      	str	r3, [sp, #40]	; 0x28
 800d342:	9a08      	ldr	r2, [sp, #32]
 800d344:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d346:	0020      	movs	r0, r4
 800d348:	0029      	movs	r1, r5
 800d34a:	f7f4 fbd7 	bl	8001afc <__aeabi_ddiv>
 800d34e:	f7f5 fdf7 	bl	8002f40 <__aeabi_d2iz>
 800d352:	9006      	str	r0, [sp, #24]
 800d354:	f7f5 fe2a 	bl	8002fac <__aeabi_i2d>
 800d358:	9a08      	ldr	r2, [sp, #32]
 800d35a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d35c:	f7f4 ffd4 	bl	8002308 <__aeabi_dmul>
 800d360:	0002      	movs	r2, r0
 800d362:	000b      	movs	r3, r1
 800d364:	0020      	movs	r0, r4
 800d366:	0029      	movs	r1, r5
 800d368:	f7f5 fa3a 	bl	80027e0 <__aeabi_dsub>
 800d36c:	0033      	movs	r3, r6
 800d36e:	9a06      	ldr	r2, [sp, #24]
 800d370:	3601      	adds	r6, #1
 800d372:	3230      	adds	r2, #48	; 0x30
 800d374:	701a      	strb	r2, [r3, #0]
 800d376:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d378:	9607      	str	r6, [sp, #28]
 800d37a:	429a      	cmp	r2, r3
 800d37c:	d139      	bne.n	800d3f2 <_dtoa_r+0x77a>
 800d37e:	0002      	movs	r2, r0
 800d380:	000b      	movs	r3, r1
 800d382:	f7f4 f851 	bl	8001428 <__aeabi_dadd>
 800d386:	9a08      	ldr	r2, [sp, #32]
 800d388:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d38a:	0004      	movs	r4, r0
 800d38c:	000d      	movs	r5, r1
 800d38e:	f7f3 f875 	bl	800047c <__aeabi_dcmpgt>
 800d392:	2800      	cmp	r0, #0
 800d394:	d11b      	bne.n	800d3ce <_dtoa_r+0x756>
 800d396:	9a08      	ldr	r2, [sp, #32]
 800d398:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d39a:	0020      	movs	r0, r4
 800d39c:	0029      	movs	r1, r5
 800d39e:	f7f3 f853 	bl	8000448 <__aeabi_dcmpeq>
 800d3a2:	2800      	cmp	r0, #0
 800d3a4:	d002      	beq.n	800d3ac <_dtoa_r+0x734>
 800d3a6:	9b06      	ldr	r3, [sp, #24]
 800d3a8:	07db      	lsls	r3, r3, #31
 800d3aa:	d410      	bmi.n	800d3ce <_dtoa_r+0x756>
 800d3ac:	0038      	movs	r0, r7
 800d3ae:	9904      	ldr	r1, [sp, #16]
 800d3b0:	f000 ff70 	bl	800e294 <_Bfree>
 800d3b4:	2300      	movs	r3, #0
 800d3b6:	9a07      	ldr	r2, [sp, #28]
 800d3b8:	9802      	ldr	r0, [sp, #8]
 800d3ba:	7013      	strb	r3, [r2, #0]
 800d3bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800d3be:	3001      	adds	r0, #1
 800d3c0:	6018      	str	r0, [r3, #0]
 800d3c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800d3c4:	2b00      	cmp	r3, #0
 800d3c6:	d100      	bne.n	800d3ca <_dtoa_r+0x752>
 800d3c8:	e4a3      	b.n	800cd12 <_dtoa_r+0x9a>
 800d3ca:	601a      	str	r2, [r3, #0]
 800d3cc:	e4a1      	b.n	800cd12 <_dtoa_r+0x9a>
 800d3ce:	9e02      	ldr	r6, [sp, #8]
 800d3d0:	9b07      	ldr	r3, [sp, #28]
 800d3d2:	9307      	str	r3, [sp, #28]
 800d3d4:	3b01      	subs	r3, #1
 800d3d6:	781a      	ldrb	r2, [r3, #0]
 800d3d8:	2a39      	cmp	r2, #57	; 0x39
 800d3da:	d106      	bne.n	800d3ea <_dtoa_r+0x772>
 800d3dc:	9a05      	ldr	r2, [sp, #20]
 800d3de:	429a      	cmp	r2, r3
 800d3e0:	d1f7      	bne.n	800d3d2 <_dtoa_r+0x75a>
 800d3e2:	2230      	movs	r2, #48	; 0x30
 800d3e4:	9905      	ldr	r1, [sp, #20]
 800d3e6:	3601      	adds	r6, #1
 800d3e8:	700a      	strb	r2, [r1, #0]
 800d3ea:	781a      	ldrb	r2, [r3, #0]
 800d3ec:	3201      	adds	r2, #1
 800d3ee:	701a      	strb	r2, [r3, #0]
 800d3f0:	e785      	b.n	800d2fe <_dtoa_r+0x686>
 800d3f2:	2200      	movs	r2, #0
 800d3f4:	4bad      	ldr	r3, [pc, #692]	; (800d6ac <_dtoa_r+0xa34>)
 800d3f6:	f7f4 ff87 	bl	8002308 <__aeabi_dmul>
 800d3fa:	2200      	movs	r2, #0
 800d3fc:	2300      	movs	r3, #0
 800d3fe:	0004      	movs	r4, r0
 800d400:	000d      	movs	r5, r1
 800d402:	f7f3 f821 	bl	8000448 <__aeabi_dcmpeq>
 800d406:	2800      	cmp	r0, #0
 800d408:	d09b      	beq.n	800d342 <_dtoa_r+0x6ca>
 800d40a:	e7cf      	b.n	800d3ac <_dtoa_r+0x734>
 800d40c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800d40e:	2a00      	cmp	r2, #0
 800d410:	d100      	bne.n	800d414 <_dtoa_r+0x79c>
 800d412:	e082      	b.n	800d51a <_dtoa_r+0x8a2>
 800d414:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800d416:	2a01      	cmp	r2, #1
 800d418:	dc66      	bgt.n	800d4e8 <_dtoa_r+0x870>
 800d41a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800d41c:	2a00      	cmp	r2, #0
 800d41e:	d05f      	beq.n	800d4e0 <_dtoa_r+0x868>
 800d420:	4aa3      	ldr	r2, [pc, #652]	; (800d6b0 <_dtoa_r+0xa38>)
 800d422:	189b      	adds	r3, r3, r2
 800d424:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800d426:	9c08      	ldr	r4, [sp, #32]
 800d428:	9a08      	ldr	r2, [sp, #32]
 800d42a:	2101      	movs	r1, #1
 800d42c:	18d2      	adds	r2, r2, r3
 800d42e:	9208      	str	r2, [sp, #32]
 800d430:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d432:	0038      	movs	r0, r7
 800d434:	18d3      	adds	r3, r2, r3
 800d436:	930d      	str	r3, [sp, #52]	; 0x34
 800d438:	f001 f828 	bl	800e48c <__i2b>
 800d43c:	0005      	movs	r5, r0
 800d43e:	2c00      	cmp	r4, #0
 800d440:	dd0e      	ble.n	800d460 <_dtoa_r+0x7e8>
 800d442:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d444:	2b00      	cmp	r3, #0
 800d446:	dd0b      	ble.n	800d460 <_dtoa_r+0x7e8>
 800d448:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d44a:	0023      	movs	r3, r4
 800d44c:	4294      	cmp	r4, r2
 800d44e:	dd00      	ble.n	800d452 <_dtoa_r+0x7da>
 800d450:	0013      	movs	r3, r2
 800d452:	9a08      	ldr	r2, [sp, #32]
 800d454:	1ae4      	subs	r4, r4, r3
 800d456:	1ad2      	subs	r2, r2, r3
 800d458:	9208      	str	r2, [sp, #32]
 800d45a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d45c:	1ad3      	subs	r3, r2, r3
 800d45e:	930d      	str	r3, [sp, #52]	; 0x34
 800d460:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d462:	2b00      	cmp	r3, #0
 800d464:	d01f      	beq.n	800d4a6 <_dtoa_r+0x82e>
 800d466:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d468:	2b00      	cmp	r3, #0
 800d46a:	d05a      	beq.n	800d522 <_dtoa_r+0x8aa>
 800d46c:	2e00      	cmp	r6, #0
 800d46e:	dd11      	ble.n	800d494 <_dtoa_r+0x81c>
 800d470:	0029      	movs	r1, r5
 800d472:	0032      	movs	r2, r6
 800d474:	0038      	movs	r0, r7
 800d476:	f001 f8cf 	bl	800e618 <__pow5mult>
 800d47a:	9a04      	ldr	r2, [sp, #16]
 800d47c:	0001      	movs	r1, r0
 800d47e:	0005      	movs	r5, r0
 800d480:	0038      	movs	r0, r7
 800d482:	f001 f819 	bl	800e4b8 <__multiply>
 800d486:	9904      	ldr	r1, [sp, #16]
 800d488:	9007      	str	r0, [sp, #28]
 800d48a:	0038      	movs	r0, r7
 800d48c:	f000 ff02 	bl	800e294 <_Bfree>
 800d490:	9b07      	ldr	r3, [sp, #28]
 800d492:	9304      	str	r3, [sp, #16]
 800d494:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d496:	1b9a      	subs	r2, r3, r6
 800d498:	42b3      	cmp	r3, r6
 800d49a:	d004      	beq.n	800d4a6 <_dtoa_r+0x82e>
 800d49c:	0038      	movs	r0, r7
 800d49e:	9904      	ldr	r1, [sp, #16]
 800d4a0:	f001 f8ba 	bl	800e618 <__pow5mult>
 800d4a4:	9004      	str	r0, [sp, #16]
 800d4a6:	2101      	movs	r1, #1
 800d4a8:	0038      	movs	r0, r7
 800d4aa:	f000 ffef 	bl	800e48c <__i2b>
 800d4ae:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d4b0:	0006      	movs	r6, r0
 800d4b2:	2b00      	cmp	r3, #0
 800d4b4:	dd37      	ble.n	800d526 <_dtoa_r+0x8ae>
 800d4b6:	001a      	movs	r2, r3
 800d4b8:	0001      	movs	r1, r0
 800d4ba:	0038      	movs	r0, r7
 800d4bc:	f001 f8ac 	bl	800e618 <__pow5mult>
 800d4c0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d4c2:	0006      	movs	r6, r0
 800d4c4:	2b01      	cmp	r3, #1
 800d4c6:	dd33      	ble.n	800d530 <_dtoa_r+0x8b8>
 800d4c8:	2300      	movs	r3, #0
 800d4ca:	9307      	str	r3, [sp, #28]
 800d4cc:	6933      	ldr	r3, [r6, #16]
 800d4ce:	3303      	adds	r3, #3
 800d4d0:	009b      	lsls	r3, r3, #2
 800d4d2:	18f3      	adds	r3, r6, r3
 800d4d4:	6858      	ldr	r0, [r3, #4]
 800d4d6:	f000 ff91 	bl	800e3fc <__hi0bits>
 800d4da:	2320      	movs	r3, #32
 800d4dc:	1a18      	subs	r0, r3, r0
 800d4de:	e03f      	b.n	800d560 <_dtoa_r+0x8e8>
 800d4e0:	2336      	movs	r3, #54	; 0x36
 800d4e2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800d4e4:	1a9b      	subs	r3, r3, r2
 800d4e6:	e79d      	b.n	800d424 <_dtoa_r+0x7ac>
 800d4e8:	9b06      	ldr	r3, [sp, #24]
 800d4ea:	1e5e      	subs	r6, r3, #1
 800d4ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d4ee:	42b3      	cmp	r3, r6
 800d4f0:	db08      	blt.n	800d504 <_dtoa_r+0x88c>
 800d4f2:	1b9e      	subs	r6, r3, r6
 800d4f4:	9b06      	ldr	r3, [sp, #24]
 800d4f6:	2b00      	cmp	r3, #0
 800d4f8:	da0c      	bge.n	800d514 <_dtoa_r+0x89c>
 800d4fa:	9b08      	ldr	r3, [sp, #32]
 800d4fc:	9a06      	ldr	r2, [sp, #24]
 800d4fe:	1a9c      	subs	r4, r3, r2
 800d500:	2300      	movs	r3, #0
 800d502:	e791      	b.n	800d428 <_dtoa_r+0x7b0>
 800d504:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d506:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d508:	1af3      	subs	r3, r6, r3
 800d50a:	18d3      	adds	r3, r2, r3
 800d50c:	960e      	str	r6, [sp, #56]	; 0x38
 800d50e:	9314      	str	r3, [sp, #80]	; 0x50
 800d510:	2600      	movs	r6, #0
 800d512:	e7ef      	b.n	800d4f4 <_dtoa_r+0x87c>
 800d514:	9c08      	ldr	r4, [sp, #32]
 800d516:	9b06      	ldr	r3, [sp, #24]
 800d518:	e786      	b.n	800d428 <_dtoa_r+0x7b0>
 800d51a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800d51c:	9c08      	ldr	r4, [sp, #32]
 800d51e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800d520:	e78d      	b.n	800d43e <_dtoa_r+0x7c6>
 800d522:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d524:	e7ba      	b.n	800d49c <_dtoa_r+0x824>
 800d526:	2300      	movs	r3, #0
 800d528:	9307      	str	r3, [sp, #28]
 800d52a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d52c:	2b01      	cmp	r3, #1
 800d52e:	dc13      	bgt.n	800d558 <_dtoa_r+0x8e0>
 800d530:	2300      	movs	r3, #0
 800d532:	9307      	str	r3, [sp, #28]
 800d534:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d536:	2b00      	cmp	r3, #0
 800d538:	d10e      	bne.n	800d558 <_dtoa_r+0x8e0>
 800d53a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d53c:	031b      	lsls	r3, r3, #12
 800d53e:	d10b      	bne.n	800d558 <_dtoa_r+0x8e0>
 800d540:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800d542:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d544:	4213      	tst	r3, r2
 800d546:	d007      	beq.n	800d558 <_dtoa_r+0x8e0>
 800d548:	9b08      	ldr	r3, [sp, #32]
 800d54a:	3301      	adds	r3, #1
 800d54c:	9308      	str	r3, [sp, #32]
 800d54e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d550:	3301      	adds	r3, #1
 800d552:	930d      	str	r3, [sp, #52]	; 0x34
 800d554:	2301      	movs	r3, #1
 800d556:	9307      	str	r3, [sp, #28]
 800d558:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d55a:	2001      	movs	r0, #1
 800d55c:	2b00      	cmp	r3, #0
 800d55e:	d1b5      	bne.n	800d4cc <_dtoa_r+0x854>
 800d560:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d562:	221f      	movs	r2, #31
 800d564:	1818      	adds	r0, r3, r0
 800d566:	0003      	movs	r3, r0
 800d568:	4013      	ands	r3, r2
 800d56a:	4210      	tst	r0, r2
 800d56c:	d046      	beq.n	800d5fc <_dtoa_r+0x984>
 800d56e:	3201      	adds	r2, #1
 800d570:	1ad2      	subs	r2, r2, r3
 800d572:	2a04      	cmp	r2, #4
 800d574:	dd3f      	ble.n	800d5f6 <_dtoa_r+0x97e>
 800d576:	221c      	movs	r2, #28
 800d578:	1ad3      	subs	r3, r2, r3
 800d57a:	9a08      	ldr	r2, [sp, #32]
 800d57c:	18e4      	adds	r4, r4, r3
 800d57e:	18d2      	adds	r2, r2, r3
 800d580:	9208      	str	r2, [sp, #32]
 800d582:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d584:	18d3      	adds	r3, r2, r3
 800d586:	930d      	str	r3, [sp, #52]	; 0x34
 800d588:	9b08      	ldr	r3, [sp, #32]
 800d58a:	2b00      	cmp	r3, #0
 800d58c:	dd05      	ble.n	800d59a <_dtoa_r+0x922>
 800d58e:	001a      	movs	r2, r3
 800d590:	0038      	movs	r0, r7
 800d592:	9904      	ldr	r1, [sp, #16]
 800d594:	f001 f89c 	bl	800e6d0 <__lshift>
 800d598:	9004      	str	r0, [sp, #16]
 800d59a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d59c:	2b00      	cmp	r3, #0
 800d59e:	dd05      	ble.n	800d5ac <_dtoa_r+0x934>
 800d5a0:	0031      	movs	r1, r6
 800d5a2:	001a      	movs	r2, r3
 800d5a4:	0038      	movs	r0, r7
 800d5a6:	f001 f893 	bl	800e6d0 <__lshift>
 800d5aa:	0006      	movs	r6, r0
 800d5ac:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d5ae:	2b00      	cmp	r3, #0
 800d5b0:	d026      	beq.n	800d600 <_dtoa_r+0x988>
 800d5b2:	0031      	movs	r1, r6
 800d5b4:	9804      	ldr	r0, [sp, #16]
 800d5b6:	f001 f8fb 	bl	800e7b0 <__mcmp>
 800d5ba:	2800      	cmp	r0, #0
 800d5bc:	da20      	bge.n	800d600 <_dtoa_r+0x988>
 800d5be:	9b02      	ldr	r3, [sp, #8]
 800d5c0:	220a      	movs	r2, #10
 800d5c2:	3b01      	subs	r3, #1
 800d5c4:	9302      	str	r3, [sp, #8]
 800d5c6:	0038      	movs	r0, r7
 800d5c8:	2300      	movs	r3, #0
 800d5ca:	9904      	ldr	r1, [sp, #16]
 800d5cc:	f000 fe86 	bl	800e2dc <__multadd>
 800d5d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d5d2:	9004      	str	r0, [sp, #16]
 800d5d4:	2b00      	cmp	r3, #0
 800d5d6:	d100      	bne.n	800d5da <_dtoa_r+0x962>
 800d5d8:	e160      	b.n	800d89c <_dtoa_r+0xc24>
 800d5da:	2300      	movs	r3, #0
 800d5dc:	0029      	movs	r1, r5
 800d5de:	220a      	movs	r2, #10
 800d5e0:	0038      	movs	r0, r7
 800d5e2:	f000 fe7b 	bl	800e2dc <__multadd>
 800d5e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d5e8:	0005      	movs	r5, r0
 800d5ea:	2b00      	cmp	r3, #0
 800d5ec:	dc47      	bgt.n	800d67e <_dtoa_r+0xa06>
 800d5ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d5f0:	2b02      	cmp	r3, #2
 800d5f2:	dc0d      	bgt.n	800d610 <_dtoa_r+0x998>
 800d5f4:	e043      	b.n	800d67e <_dtoa_r+0xa06>
 800d5f6:	2a04      	cmp	r2, #4
 800d5f8:	d0c6      	beq.n	800d588 <_dtoa_r+0x910>
 800d5fa:	0013      	movs	r3, r2
 800d5fc:	331c      	adds	r3, #28
 800d5fe:	e7bc      	b.n	800d57a <_dtoa_r+0x902>
 800d600:	9b06      	ldr	r3, [sp, #24]
 800d602:	2b00      	cmp	r3, #0
 800d604:	dc35      	bgt.n	800d672 <_dtoa_r+0x9fa>
 800d606:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d608:	2b02      	cmp	r3, #2
 800d60a:	dd32      	ble.n	800d672 <_dtoa_r+0x9fa>
 800d60c:	9b06      	ldr	r3, [sp, #24]
 800d60e:	930c      	str	r3, [sp, #48]	; 0x30
 800d610:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d612:	2b00      	cmp	r3, #0
 800d614:	d10c      	bne.n	800d630 <_dtoa_r+0x9b8>
 800d616:	0031      	movs	r1, r6
 800d618:	2205      	movs	r2, #5
 800d61a:	0038      	movs	r0, r7
 800d61c:	f000 fe5e 	bl	800e2dc <__multadd>
 800d620:	0006      	movs	r6, r0
 800d622:	0001      	movs	r1, r0
 800d624:	9804      	ldr	r0, [sp, #16]
 800d626:	f001 f8c3 	bl	800e7b0 <__mcmp>
 800d62a:	2800      	cmp	r0, #0
 800d62c:	dd00      	ble.n	800d630 <_dtoa_r+0x9b8>
 800d62e:	e59f      	b.n	800d170 <_dtoa_r+0x4f8>
 800d630:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d632:	43db      	mvns	r3, r3
 800d634:	9302      	str	r3, [sp, #8]
 800d636:	9b05      	ldr	r3, [sp, #20]
 800d638:	9307      	str	r3, [sp, #28]
 800d63a:	2400      	movs	r4, #0
 800d63c:	0031      	movs	r1, r6
 800d63e:	0038      	movs	r0, r7
 800d640:	f000 fe28 	bl	800e294 <_Bfree>
 800d644:	2d00      	cmp	r5, #0
 800d646:	d100      	bne.n	800d64a <_dtoa_r+0x9d2>
 800d648:	e6b0      	b.n	800d3ac <_dtoa_r+0x734>
 800d64a:	2c00      	cmp	r4, #0
 800d64c:	d005      	beq.n	800d65a <_dtoa_r+0x9e2>
 800d64e:	42ac      	cmp	r4, r5
 800d650:	d003      	beq.n	800d65a <_dtoa_r+0x9e2>
 800d652:	0021      	movs	r1, r4
 800d654:	0038      	movs	r0, r7
 800d656:	f000 fe1d 	bl	800e294 <_Bfree>
 800d65a:	0029      	movs	r1, r5
 800d65c:	0038      	movs	r0, r7
 800d65e:	f000 fe19 	bl	800e294 <_Bfree>
 800d662:	e6a3      	b.n	800d3ac <_dtoa_r+0x734>
 800d664:	2600      	movs	r6, #0
 800d666:	0035      	movs	r5, r6
 800d668:	e7e2      	b.n	800d630 <_dtoa_r+0x9b8>
 800d66a:	9602      	str	r6, [sp, #8]
 800d66c:	9e07      	ldr	r6, [sp, #28]
 800d66e:	0035      	movs	r5, r6
 800d670:	e57e      	b.n	800d170 <_dtoa_r+0x4f8>
 800d672:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d674:	2b00      	cmp	r3, #0
 800d676:	d100      	bne.n	800d67a <_dtoa_r+0xa02>
 800d678:	e0c8      	b.n	800d80c <_dtoa_r+0xb94>
 800d67a:	9b06      	ldr	r3, [sp, #24]
 800d67c:	930c      	str	r3, [sp, #48]	; 0x30
 800d67e:	2c00      	cmp	r4, #0
 800d680:	dd05      	ble.n	800d68e <_dtoa_r+0xa16>
 800d682:	0029      	movs	r1, r5
 800d684:	0022      	movs	r2, r4
 800d686:	0038      	movs	r0, r7
 800d688:	f001 f822 	bl	800e6d0 <__lshift>
 800d68c:	0005      	movs	r5, r0
 800d68e:	9b07      	ldr	r3, [sp, #28]
 800d690:	0028      	movs	r0, r5
 800d692:	2b00      	cmp	r3, #0
 800d694:	d01f      	beq.n	800d6d6 <_dtoa_r+0xa5e>
 800d696:	0038      	movs	r0, r7
 800d698:	6869      	ldr	r1, [r5, #4]
 800d69a:	f000 fdb7 	bl	800e20c <_Balloc>
 800d69e:	1e04      	subs	r4, r0, #0
 800d6a0:	d10c      	bne.n	800d6bc <_dtoa_r+0xa44>
 800d6a2:	0002      	movs	r2, r0
 800d6a4:	4b03      	ldr	r3, [pc, #12]	; (800d6b4 <_dtoa_r+0xa3c>)
 800d6a6:	4904      	ldr	r1, [pc, #16]	; (800d6b8 <_dtoa_r+0xa40>)
 800d6a8:	f7ff fafb 	bl	800cca2 <_dtoa_r+0x2a>
 800d6ac:	40240000 	.word	0x40240000
 800d6b0:	00000433 	.word	0x00000433
 800d6b4:	080101bc 	.word	0x080101bc
 800d6b8:	000002ea 	.word	0x000002ea
 800d6bc:	0029      	movs	r1, r5
 800d6be:	692b      	ldr	r3, [r5, #16]
 800d6c0:	310c      	adds	r1, #12
 800d6c2:	1c9a      	adds	r2, r3, #2
 800d6c4:	0092      	lsls	r2, r2, #2
 800d6c6:	300c      	adds	r0, #12
 800d6c8:	f000 fd97 	bl	800e1fa <memcpy>
 800d6cc:	2201      	movs	r2, #1
 800d6ce:	0021      	movs	r1, r4
 800d6d0:	0038      	movs	r0, r7
 800d6d2:	f000 fffd 	bl	800e6d0 <__lshift>
 800d6d6:	002c      	movs	r4, r5
 800d6d8:	0005      	movs	r5, r0
 800d6da:	9b05      	ldr	r3, [sp, #20]
 800d6dc:	9308      	str	r3, [sp, #32]
 800d6de:	0031      	movs	r1, r6
 800d6e0:	9804      	ldr	r0, [sp, #16]
 800d6e2:	f7ff fa3d 	bl	800cb60 <quorem>
 800d6e6:	0003      	movs	r3, r0
 800d6e8:	0021      	movs	r1, r4
 800d6ea:	3330      	adds	r3, #48	; 0x30
 800d6ec:	900e      	str	r0, [sp, #56]	; 0x38
 800d6ee:	9804      	ldr	r0, [sp, #16]
 800d6f0:	9306      	str	r3, [sp, #24]
 800d6f2:	f001 f85d 	bl	800e7b0 <__mcmp>
 800d6f6:	002a      	movs	r2, r5
 800d6f8:	900f      	str	r0, [sp, #60]	; 0x3c
 800d6fa:	0031      	movs	r1, r6
 800d6fc:	0038      	movs	r0, r7
 800d6fe:	f001 f873 	bl	800e7e8 <__mdiff>
 800d702:	68c3      	ldr	r3, [r0, #12]
 800d704:	9007      	str	r0, [sp, #28]
 800d706:	9310      	str	r3, [sp, #64]	; 0x40
 800d708:	2301      	movs	r3, #1
 800d70a:	930d      	str	r3, [sp, #52]	; 0x34
 800d70c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d70e:	2b00      	cmp	r3, #0
 800d710:	d104      	bne.n	800d71c <_dtoa_r+0xaa4>
 800d712:	0001      	movs	r1, r0
 800d714:	9804      	ldr	r0, [sp, #16]
 800d716:	f001 f84b 	bl	800e7b0 <__mcmp>
 800d71a:	900d      	str	r0, [sp, #52]	; 0x34
 800d71c:	0038      	movs	r0, r7
 800d71e:	9907      	ldr	r1, [sp, #28]
 800d720:	f000 fdb8 	bl	800e294 <_Bfree>
 800d724:	2301      	movs	r3, #1
 800d726:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d728:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d72a:	4018      	ands	r0, r3
 800d72c:	9b08      	ldr	r3, [sp, #32]
 800d72e:	3301      	adds	r3, #1
 800d730:	9307      	str	r3, [sp, #28]
 800d732:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d734:	4313      	orrs	r3, r2
 800d736:	4303      	orrs	r3, r0
 800d738:	d10c      	bne.n	800d754 <_dtoa_r+0xadc>
 800d73a:	9b06      	ldr	r3, [sp, #24]
 800d73c:	2b39      	cmp	r3, #57	; 0x39
 800d73e:	d025      	beq.n	800d78c <_dtoa_r+0xb14>
 800d740:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d742:	2b00      	cmp	r3, #0
 800d744:	dd02      	ble.n	800d74c <_dtoa_r+0xad4>
 800d746:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d748:	3331      	adds	r3, #49	; 0x31
 800d74a:	9306      	str	r3, [sp, #24]
 800d74c:	9b08      	ldr	r3, [sp, #32]
 800d74e:	9a06      	ldr	r2, [sp, #24]
 800d750:	701a      	strb	r2, [r3, #0]
 800d752:	e773      	b.n	800d63c <_dtoa_r+0x9c4>
 800d754:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d756:	2b00      	cmp	r3, #0
 800d758:	db03      	blt.n	800d762 <_dtoa_r+0xaea>
 800d75a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800d75c:	4313      	orrs	r3, r2
 800d75e:	4303      	orrs	r3, r0
 800d760:	d11f      	bne.n	800d7a2 <_dtoa_r+0xb2a>
 800d762:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d764:	2b00      	cmp	r3, #0
 800d766:	ddf1      	ble.n	800d74c <_dtoa_r+0xad4>
 800d768:	9904      	ldr	r1, [sp, #16]
 800d76a:	2201      	movs	r2, #1
 800d76c:	0038      	movs	r0, r7
 800d76e:	f000 ffaf 	bl	800e6d0 <__lshift>
 800d772:	0031      	movs	r1, r6
 800d774:	9004      	str	r0, [sp, #16]
 800d776:	f001 f81b 	bl	800e7b0 <__mcmp>
 800d77a:	2800      	cmp	r0, #0
 800d77c:	dc03      	bgt.n	800d786 <_dtoa_r+0xb0e>
 800d77e:	d1e5      	bne.n	800d74c <_dtoa_r+0xad4>
 800d780:	9b06      	ldr	r3, [sp, #24]
 800d782:	07db      	lsls	r3, r3, #31
 800d784:	d5e2      	bpl.n	800d74c <_dtoa_r+0xad4>
 800d786:	9b06      	ldr	r3, [sp, #24]
 800d788:	2b39      	cmp	r3, #57	; 0x39
 800d78a:	d1dc      	bne.n	800d746 <_dtoa_r+0xace>
 800d78c:	2339      	movs	r3, #57	; 0x39
 800d78e:	9a08      	ldr	r2, [sp, #32]
 800d790:	7013      	strb	r3, [r2, #0]
 800d792:	9b07      	ldr	r3, [sp, #28]
 800d794:	9307      	str	r3, [sp, #28]
 800d796:	3b01      	subs	r3, #1
 800d798:	781a      	ldrb	r2, [r3, #0]
 800d79a:	2a39      	cmp	r2, #57	; 0x39
 800d79c:	d06c      	beq.n	800d878 <_dtoa_r+0xc00>
 800d79e:	3201      	adds	r2, #1
 800d7a0:	e7d6      	b.n	800d750 <_dtoa_r+0xad8>
 800d7a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d7a4:	2b00      	cmp	r3, #0
 800d7a6:	dd07      	ble.n	800d7b8 <_dtoa_r+0xb40>
 800d7a8:	9b06      	ldr	r3, [sp, #24]
 800d7aa:	2b39      	cmp	r3, #57	; 0x39
 800d7ac:	d0ee      	beq.n	800d78c <_dtoa_r+0xb14>
 800d7ae:	9b06      	ldr	r3, [sp, #24]
 800d7b0:	9a08      	ldr	r2, [sp, #32]
 800d7b2:	3301      	adds	r3, #1
 800d7b4:	7013      	strb	r3, [r2, #0]
 800d7b6:	e741      	b.n	800d63c <_dtoa_r+0x9c4>
 800d7b8:	9b08      	ldr	r3, [sp, #32]
 800d7ba:	9a06      	ldr	r2, [sp, #24]
 800d7bc:	701a      	strb	r2, [r3, #0]
 800d7be:	2301      	movs	r3, #1
 800d7c0:	9a05      	ldr	r2, [sp, #20]
 800d7c2:	1a9b      	subs	r3, r3, r2
 800d7c4:	9a08      	ldr	r2, [sp, #32]
 800d7c6:	189b      	adds	r3, r3, r2
 800d7c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d7ca:	429a      	cmp	r2, r3
 800d7cc:	d03e      	beq.n	800d84c <_dtoa_r+0xbd4>
 800d7ce:	2300      	movs	r3, #0
 800d7d0:	220a      	movs	r2, #10
 800d7d2:	9904      	ldr	r1, [sp, #16]
 800d7d4:	0038      	movs	r0, r7
 800d7d6:	f000 fd81 	bl	800e2dc <__multadd>
 800d7da:	2300      	movs	r3, #0
 800d7dc:	9004      	str	r0, [sp, #16]
 800d7de:	220a      	movs	r2, #10
 800d7e0:	0021      	movs	r1, r4
 800d7e2:	0038      	movs	r0, r7
 800d7e4:	42ac      	cmp	r4, r5
 800d7e6:	d106      	bne.n	800d7f6 <_dtoa_r+0xb7e>
 800d7e8:	f000 fd78 	bl	800e2dc <__multadd>
 800d7ec:	0004      	movs	r4, r0
 800d7ee:	0005      	movs	r5, r0
 800d7f0:	9b07      	ldr	r3, [sp, #28]
 800d7f2:	9308      	str	r3, [sp, #32]
 800d7f4:	e773      	b.n	800d6de <_dtoa_r+0xa66>
 800d7f6:	f000 fd71 	bl	800e2dc <__multadd>
 800d7fa:	0029      	movs	r1, r5
 800d7fc:	0004      	movs	r4, r0
 800d7fe:	2300      	movs	r3, #0
 800d800:	220a      	movs	r2, #10
 800d802:	0038      	movs	r0, r7
 800d804:	f000 fd6a 	bl	800e2dc <__multadd>
 800d808:	0005      	movs	r5, r0
 800d80a:	e7f1      	b.n	800d7f0 <_dtoa_r+0xb78>
 800d80c:	9b06      	ldr	r3, [sp, #24]
 800d80e:	930c      	str	r3, [sp, #48]	; 0x30
 800d810:	2400      	movs	r4, #0
 800d812:	0031      	movs	r1, r6
 800d814:	9804      	ldr	r0, [sp, #16]
 800d816:	f7ff f9a3 	bl	800cb60 <quorem>
 800d81a:	9b05      	ldr	r3, [sp, #20]
 800d81c:	3030      	adds	r0, #48	; 0x30
 800d81e:	5518      	strb	r0, [r3, r4]
 800d820:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d822:	3401      	adds	r4, #1
 800d824:	9006      	str	r0, [sp, #24]
 800d826:	42a3      	cmp	r3, r4
 800d828:	dd07      	ble.n	800d83a <_dtoa_r+0xbc2>
 800d82a:	2300      	movs	r3, #0
 800d82c:	220a      	movs	r2, #10
 800d82e:	0038      	movs	r0, r7
 800d830:	9904      	ldr	r1, [sp, #16]
 800d832:	f000 fd53 	bl	800e2dc <__multadd>
 800d836:	9004      	str	r0, [sp, #16]
 800d838:	e7eb      	b.n	800d812 <_dtoa_r+0xb9a>
 800d83a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d83c:	2001      	movs	r0, #1
 800d83e:	2b00      	cmp	r3, #0
 800d840:	dd00      	ble.n	800d844 <_dtoa_r+0xbcc>
 800d842:	0018      	movs	r0, r3
 800d844:	2400      	movs	r4, #0
 800d846:	9b05      	ldr	r3, [sp, #20]
 800d848:	181b      	adds	r3, r3, r0
 800d84a:	9307      	str	r3, [sp, #28]
 800d84c:	9904      	ldr	r1, [sp, #16]
 800d84e:	2201      	movs	r2, #1
 800d850:	0038      	movs	r0, r7
 800d852:	f000 ff3d 	bl	800e6d0 <__lshift>
 800d856:	0031      	movs	r1, r6
 800d858:	9004      	str	r0, [sp, #16]
 800d85a:	f000 ffa9 	bl	800e7b0 <__mcmp>
 800d85e:	2800      	cmp	r0, #0
 800d860:	dc97      	bgt.n	800d792 <_dtoa_r+0xb1a>
 800d862:	d102      	bne.n	800d86a <_dtoa_r+0xbf2>
 800d864:	9b06      	ldr	r3, [sp, #24]
 800d866:	07db      	lsls	r3, r3, #31
 800d868:	d493      	bmi.n	800d792 <_dtoa_r+0xb1a>
 800d86a:	9b07      	ldr	r3, [sp, #28]
 800d86c:	9307      	str	r3, [sp, #28]
 800d86e:	3b01      	subs	r3, #1
 800d870:	781a      	ldrb	r2, [r3, #0]
 800d872:	2a30      	cmp	r2, #48	; 0x30
 800d874:	d0fa      	beq.n	800d86c <_dtoa_r+0xbf4>
 800d876:	e6e1      	b.n	800d63c <_dtoa_r+0x9c4>
 800d878:	9a05      	ldr	r2, [sp, #20]
 800d87a:	429a      	cmp	r2, r3
 800d87c:	d18a      	bne.n	800d794 <_dtoa_r+0xb1c>
 800d87e:	9b02      	ldr	r3, [sp, #8]
 800d880:	3301      	adds	r3, #1
 800d882:	9302      	str	r3, [sp, #8]
 800d884:	2331      	movs	r3, #49	; 0x31
 800d886:	e795      	b.n	800d7b4 <_dtoa_r+0xb3c>
 800d888:	4b08      	ldr	r3, [pc, #32]	; (800d8ac <_dtoa_r+0xc34>)
 800d88a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800d88c:	9305      	str	r3, [sp, #20]
 800d88e:	4b08      	ldr	r3, [pc, #32]	; (800d8b0 <_dtoa_r+0xc38>)
 800d890:	2a00      	cmp	r2, #0
 800d892:	d001      	beq.n	800d898 <_dtoa_r+0xc20>
 800d894:	f7ff fa3b 	bl	800cd0e <_dtoa_r+0x96>
 800d898:	f7ff fa3b 	bl	800cd12 <_dtoa_r+0x9a>
 800d89c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d89e:	2b00      	cmp	r3, #0
 800d8a0:	dcb6      	bgt.n	800d810 <_dtoa_r+0xb98>
 800d8a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d8a4:	2b02      	cmp	r3, #2
 800d8a6:	dd00      	ble.n	800d8aa <_dtoa_r+0xc32>
 800d8a8:	e6b2      	b.n	800d610 <_dtoa_r+0x998>
 800d8aa:	e7b1      	b.n	800d810 <_dtoa_r+0xb98>
 800d8ac:	08010139 	.word	0x08010139
 800d8b0:	08010141 	.word	0x08010141

0800d8b4 <std>:
 800d8b4:	2300      	movs	r3, #0
 800d8b6:	b510      	push	{r4, lr}
 800d8b8:	0004      	movs	r4, r0
 800d8ba:	6003      	str	r3, [r0, #0]
 800d8bc:	6043      	str	r3, [r0, #4]
 800d8be:	6083      	str	r3, [r0, #8]
 800d8c0:	8181      	strh	r1, [r0, #12]
 800d8c2:	6643      	str	r3, [r0, #100]	; 0x64
 800d8c4:	0019      	movs	r1, r3
 800d8c6:	81c2      	strh	r2, [r0, #14]
 800d8c8:	6103      	str	r3, [r0, #16]
 800d8ca:	6143      	str	r3, [r0, #20]
 800d8cc:	6183      	str	r3, [r0, #24]
 800d8ce:	2208      	movs	r2, #8
 800d8d0:	305c      	adds	r0, #92	; 0x5c
 800d8d2:	f7fd fbab 	bl	800b02c <memset>
 800d8d6:	4b05      	ldr	r3, [pc, #20]	; (800d8ec <std+0x38>)
 800d8d8:	6263      	str	r3, [r4, #36]	; 0x24
 800d8da:	4b05      	ldr	r3, [pc, #20]	; (800d8f0 <std+0x3c>)
 800d8dc:	6224      	str	r4, [r4, #32]
 800d8de:	62a3      	str	r3, [r4, #40]	; 0x28
 800d8e0:	4b04      	ldr	r3, [pc, #16]	; (800d8f4 <std+0x40>)
 800d8e2:	62e3      	str	r3, [r4, #44]	; 0x2c
 800d8e4:	4b04      	ldr	r3, [pc, #16]	; (800d8f8 <std+0x44>)
 800d8e6:	6323      	str	r3, [r4, #48]	; 0x30
 800d8e8:	bd10      	pop	{r4, pc}
 800d8ea:	46c0      	nop			; (mov r8, r8)
 800d8ec:	0800f2c5 	.word	0x0800f2c5
 800d8f0:	0800f2ed 	.word	0x0800f2ed
 800d8f4:	0800f325 	.word	0x0800f325
 800d8f8:	0800f351 	.word	0x0800f351

0800d8fc <_cleanup_r>:
 800d8fc:	b510      	push	{r4, lr}
 800d8fe:	4902      	ldr	r1, [pc, #8]	; (800d908 <_cleanup_r+0xc>)
 800d900:	f000 f8ba 	bl	800da78 <_fwalk_reent>
 800d904:	bd10      	pop	{r4, pc}
 800d906:	46c0      	nop			; (mov r8, r8)
 800d908:	0800f6d9 	.word	0x0800f6d9

0800d90c <__sfmoreglue>:
 800d90c:	b570      	push	{r4, r5, r6, lr}
 800d90e:	2568      	movs	r5, #104	; 0x68
 800d910:	1e4a      	subs	r2, r1, #1
 800d912:	4355      	muls	r5, r2
 800d914:	000e      	movs	r6, r1
 800d916:	0029      	movs	r1, r5
 800d918:	3174      	adds	r1, #116	; 0x74
 800d91a:	f001 f999 	bl	800ec50 <_malloc_r>
 800d91e:	1e04      	subs	r4, r0, #0
 800d920:	d008      	beq.n	800d934 <__sfmoreglue+0x28>
 800d922:	2100      	movs	r1, #0
 800d924:	002a      	movs	r2, r5
 800d926:	6001      	str	r1, [r0, #0]
 800d928:	6046      	str	r6, [r0, #4]
 800d92a:	300c      	adds	r0, #12
 800d92c:	60a0      	str	r0, [r4, #8]
 800d92e:	3268      	adds	r2, #104	; 0x68
 800d930:	f7fd fb7c 	bl	800b02c <memset>
 800d934:	0020      	movs	r0, r4
 800d936:	bd70      	pop	{r4, r5, r6, pc}

0800d938 <__sfp_lock_acquire>:
 800d938:	b510      	push	{r4, lr}
 800d93a:	4802      	ldr	r0, [pc, #8]	; (800d944 <__sfp_lock_acquire+0xc>)
 800d93c:	f000 fc33 	bl	800e1a6 <__retarget_lock_acquire_recursive>
 800d940:	bd10      	pop	{r4, pc}
 800d942:	46c0      	nop			; (mov r8, r8)
 800d944:	20000638 	.word	0x20000638

0800d948 <__sfp_lock_release>:
 800d948:	b510      	push	{r4, lr}
 800d94a:	4802      	ldr	r0, [pc, #8]	; (800d954 <__sfp_lock_release+0xc>)
 800d94c:	f000 fc2c 	bl	800e1a8 <__retarget_lock_release_recursive>
 800d950:	bd10      	pop	{r4, pc}
 800d952:	46c0      	nop			; (mov r8, r8)
 800d954:	20000638 	.word	0x20000638

0800d958 <__sinit_lock_acquire>:
 800d958:	b510      	push	{r4, lr}
 800d95a:	4802      	ldr	r0, [pc, #8]	; (800d964 <__sinit_lock_acquire+0xc>)
 800d95c:	f000 fc23 	bl	800e1a6 <__retarget_lock_acquire_recursive>
 800d960:	bd10      	pop	{r4, pc}
 800d962:	46c0      	nop			; (mov r8, r8)
 800d964:	20000633 	.word	0x20000633

0800d968 <__sinit_lock_release>:
 800d968:	b510      	push	{r4, lr}
 800d96a:	4802      	ldr	r0, [pc, #8]	; (800d974 <__sinit_lock_release+0xc>)
 800d96c:	f000 fc1c 	bl	800e1a8 <__retarget_lock_release_recursive>
 800d970:	bd10      	pop	{r4, pc}
 800d972:	46c0      	nop			; (mov r8, r8)
 800d974:	20000633 	.word	0x20000633

0800d978 <__sinit>:
 800d978:	b513      	push	{r0, r1, r4, lr}
 800d97a:	0004      	movs	r4, r0
 800d97c:	f7ff ffec 	bl	800d958 <__sinit_lock_acquire>
 800d980:	69a3      	ldr	r3, [r4, #24]
 800d982:	2b00      	cmp	r3, #0
 800d984:	d002      	beq.n	800d98c <__sinit+0x14>
 800d986:	f7ff ffef 	bl	800d968 <__sinit_lock_release>
 800d98a:	bd13      	pop	{r0, r1, r4, pc}
 800d98c:	64a3      	str	r3, [r4, #72]	; 0x48
 800d98e:	64e3      	str	r3, [r4, #76]	; 0x4c
 800d990:	6523      	str	r3, [r4, #80]	; 0x50
 800d992:	4b13      	ldr	r3, [pc, #76]	; (800d9e0 <__sinit+0x68>)
 800d994:	4a13      	ldr	r2, [pc, #76]	; (800d9e4 <__sinit+0x6c>)
 800d996:	681b      	ldr	r3, [r3, #0]
 800d998:	62a2      	str	r2, [r4, #40]	; 0x28
 800d99a:	9301      	str	r3, [sp, #4]
 800d99c:	42a3      	cmp	r3, r4
 800d99e:	d101      	bne.n	800d9a4 <__sinit+0x2c>
 800d9a0:	2301      	movs	r3, #1
 800d9a2:	61a3      	str	r3, [r4, #24]
 800d9a4:	0020      	movs	r0, r4
 800d9a6:	f000 f81f 	bl	800d9e8 <__sfp>
 800d9aa:	6060      	str	r0, [r4, #4]
 800d9ac:	0020      	movs	r0, r4
 800d9ae:	f000 f81b 	bl	800d9e8 <__sfp>
 800d9b2:	60a0      	str	r0, [r4, #8]
 800d9b4:	0020      	movs	r0, r4
 800d9b6:	f000 f817 	bl	800d9e8 <__sfp>
 800d9ba:	2200      	movs	r2, #0
 800d9bc:	2104      	movs	r1, #4
 800d9be:	60e0      	str	r0, [r4, #12]
 800d9c0:	6860      	ldr	r0, [r4, #4]
 800d9c2:	f7ff ff77 	bl	800d8b4 <std>
 800d9c6:	2201      	movs	r2, #1
 800d9c8:	2109      	movs	r1, #9
 800d9ca:	68a0      	ldr	r0, [r4, #8]
 800d9cc:	f7ff ff72 	bl	800d8b4 <std>
 800d9d0:	2202      	movs	r2, #2
 800d9d2:	2112      	movs	r1, #18
 800d9d4:	68e0      	ldr	r0, [r4, #12]
 800d9d6:	f7ff ff6d 	bl	800d8b4 <std>
 800d9da:	2301      	movs	r3, #1
 800d9dc:	61a3      	str	r3, [r4, #24]
 800d9de:	e7d2      	b.n	800d986 <__sinit+0xe>
 800d9e0:	0800ffa4 	.word	0x0800ffa4
 800d9e4:	0800d8fd 	.word	0x0800d8fd

0800d9e8 <__sfp>:
 800d9e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d9ea:	0007      	movs	r7, r0
 800d9ec:	f7ff ffa4 	bl	800d938 <__sfp_lock_acquire>
 800d9f0:	4b1f      	ldr	r3, [pc, #124]	; (800da70 <__sfp+0x88>)
 800d9f2:	681e      	ldr	r6, [r3, #0]
 800d9f4:	69b3      	ldr	r3, [r6, #24]
 800d9f6:	2b00      	cmp	r3, #0
 800d9f8:	d102      	bne.n	800da00 <__sfp+0x18>
 800d9fa:	0030      	movs	r0, r6
 800d9fc:	f7ff ffbc 	bl	800d978 <__sinit>
 800da00:	3648      	adds	r6, #72	; 0x48
 800da02:	68b4      	ldr	r4, [r6, #8]
 800da04:	6873      	ldr	r3, [r6, #4]
 800da06:	3b01      	subs	r3, #1
 800da08:	d504      	bpl.n	800da14 <__sfp+0x2c>
 800da0a:	6833      	ldr	r3, [r6, #0]
 800da0c:	2b00      	cmp	r3, #0
 800da0e:	d022      	beq.n	800da56 <__sfp+0x6e>
 800da10:	6836      	ldr	r6, [r6, #0]
 800da12:	e7f6      	b.n	800da02 <__sfp+0x1a>
 800da14:	220c      	movs	r2, #12
 800da16:	5ea5      	ldrsh	r5, [r4, r2]
 800da18:	2d00      	cmp	r5, #0
 800da1a:	d11a      	bne.n	800da52 <__sfp+0x6a>
 800da1c:	0020      	movs	r0, r4
 800da1e:	4b15      	ldr	r3, [pc, #84]	; (800da74 <__sfp+0x8c>)
 800da20:	3058      	adds	r0, #88	; 0x58
 800da22:	60e3      	str	r3, [r4, #12]
 800da24:	6665      	str	r5, [r4, #100]	; 0x64
 800da26:	f000 fbbd 	bl	800e1a4 <__retarget_lock_init_recursive>
 800da2a:	f7ff ff8d 	bl	800d948 <__sfp_lock_release>
 800da2e:	0020      	movs	r0, r4
 800da30:	2208      	movs	r2, #8
 800da32:	0029      	movs	r1, r5
 800da34:	6025      	str	r5, [r4, #0]
 800da36:	60a5      	str	r5, [r4, #8]
 800da38:	6065      	str	r5, [r4, #4]
 800da3a:	6125      	str	r5, [r4, #16]
 800da3c:	6165      	str	r5, [r4, #20]
 800da3e:	61a5      	str	r5, [r4, #24]
 800da40:	305c      	adds	r0, #92	; 0x5c
 800da42:	f7fd faf3 	bl	800b02c <memset>
 800da46:	6365      	str	r5, [r4, #52]	; 0x34
 800da48:	63a5      	str	r5, [r4, #56]	; 0x38
 800da4a:	64a5      	str	r5, [r4, #72]	; 0x48
 800da4c:	64e5      	str	r5, [r4, #76]	; 0x4c
 800da4e:	0020      	movs	r0, r4
 800da50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800da52:	3468      	adds	r4, #104	; 0x68
 800da54:	e7d7      	b.n	800da06 <__sfp+0x1e>
 800da56:	2104      	movs	r1, #4
 800da58:	0038      	movs	r0, r7
 800da5a:	f7ff ff57 	bl	800d90c <__sfmoreglue>
 800da5e:	1e04      	subs	r4, r0, #0
 800da60:	6030      	str	r0, [r6, #0]
 800da62:	d1d5      	bne.n	800da10 <__sfp+0x28>
 800da64:	f7ff ff70 	bl	800d948 <__sfp_lock_release>
 800da68:	230c      	movs	r3, #12
 800da6a:	603b      	str	r3, [r7, #0]
 800da6c:	e7ef      	b.n	800da4e <__sfp+0x66>
 800da6e:	46c0      	nop			; (mov r8, r8)
 800da70:	0800ffa4 	.word	0x0800ffa4
 800da74:	ffff0001 	.word	0xffff0001

0800da78 <_fwalk_reent>:
 800da78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800da7a:	0004      	movs	r4, r0
 800da7c:	0006      	movs	r6, r0
 800da7e:	2700      	movs	r7, #0
 800da80:	9101      	str	r1, [sp, #4]
 800da82:	3448      	adds	r4, #72	; 0x48
 800da84:	6863      	ldr	r3, [r4, #4]
 800da86:	68a5      	ldr	r5, [r4, #8]
 800da88:	9300      	str	r3, [sp, #0]
 800da8a:	9b00      	ldr	r3, [sp, #0]
 800da8c:	3b01      	subs	r3, #1
 800da8e:	9300      	str	r3, [sp, #0]
 800da90:	d504      	bpl.n	800da9c <_fwalk_reent+0x24>
 800da92:	6824      	ldr	r4, [r4, #0]
 800da94:	2c00      	cmp	r4, #0
 800da96:	d1f5      	bne.n	800da84 <_fwalk_reent+0xc>
 800da98:	0038      	movs	r0, r7
 800da9a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800da9c:	89ab      	ldrh	r3, [r5, #12]
 800da9e:	2b01      	cmp	r3, #1
 800daa0:	d908      	bls.n	800dab4 <_fwalk_reent+0x3c>
 800daa2:	220e      	movs	r2, #14
 800daa4:	5eab      	ldrsh	r3, [r5, r2]
 800daa6:	3301      	adds	r3, #1
 800daa8:	d004      	beq.n	800dab4 <_fwalk_reent+0x3c>
 800daaa:	0029      	movs	r1, r5
 800daac:	0030      	movs	r0, r6
 800daae:	9b01      	ldr	r3, [sp, #4]
 800dab0:	4798      	blx	r3
 800dab2:	4307      	orrs	r7, r0
 800dab4:	3568      	adds	r5, #104	; 0x68
 800dab6:	e7e8      	b.n	800da8a <_fwalk_reent+0x12>

0800dab8 <rshift>:
 800dab8:	0002      	movs	r2, r0
 800daba:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dabc:	6907      	ldr	r7, [r0, #16]
 800dabe:	3214      	adds	r2, #20
 800dac0:	0013      	movs	r3, r2
 800dac2:	b085      	sub	sp, #20
 800dac4:	114e      	asrs	r6, r1, #5
 800dac6:	42b7      	cmp	r7, r6
 800dac8:	dd31      	ble.n	800db2e <rshift+0x76>
 800daca:	00b3      	lsls	r3, r6, #2
 800dacc:	18d3      	adds	r3, r2, r3
 800dace:	251f      	movs	r5, #31
 800dad0:	9301      	str	r3, [sp, #4]
 800dad2:	000b      	movs	r3, r1
 800dad4:	00bc      	lsls	r4, r7, #2
 800dad6:	402b      	ands	r3, r5
 800dad8:	1914      	adds	r4, r2, r4
 800dada:	9302      	str	r3, [sp, #8]
 800dadc:	4229      	tst	r1, r5
 800dade:	d10c      	bne.n	800dafa <rshift+0x42>
 800dae0:	0015      	movs	r5, r2
 800dae2:	9901      	ldr	r1, [sp, #4]
 800dae4:	428c      	cmp	r4, r1
 800dae6:	d838      	bhi.n	800db5a <rshift+0xa2>
 800dae8:	9901      	ldr	r1, [sp, #4]
 800daea:	2300      	movs	r3, #0
 800daec:	3903      	subs	r1, #3
 800daee:	428c      	cmp	r4, r1
 800daf0:	d301      	bcc.n	800daf6 <rshift+0x3e>
 800daf2:	1bbb      	subs	r3, r7, r6
 800daf4:	009b      	lsls	r3, r3, #2
 800daf6:	18d3      	adds	r3, r2, r3
 800daf8:	e019      	b.n	800db2e <rshift+0x76>
 800dafa:	2120      	movs	r1, #32
 800dafc:	9b02      	ldr	r3, [sp, #8]
 800dafe:	9d01      	ldr	r5, [sp, #4]
 800db00:	1acb      	subs	r3, r1, r3
 800db02:	9303      	str	r3, [sp, #12]
 800db04:	cd02      	ldmia	r5!, {r1}
 800db06:	9b02      	ldr	r3, [sp, #8]
 800db08:	4694      	mov	ip, r2
 800db0a:	40d9      	lsrs	r1, r3
 800db0c:	9100      	str	r1, [sp, #0]
 800db0e:	42ac      	cmp	r4, r5
 800db10:	d816      	bhi.n	800db40 <rshift+0x88>
 800db12:	9d01      	ldr	r5, [sp, #4]
 800db14:	2300      	movs	r3, #0
 800db16:	3501      	adds	r5, #1
 800db18:	42ac      	cmp	r4, r5
 800db1a:	d302      	bcc.n	800db22 <rshift+0x6a>
 800db1c:	1bbb      	subs	r3, r7, r6
 800db1e:	009b      	lsls	r3, r3, #2
 800db20:	3b04      	subs	r3, #4
 800db22:	9900      	ldr	r1, [sp, #0]
 800db24:	18d3      	adds	r3, r2, r3
 800db26:	6019      	str	r1, [r3, #0]
 800db28:	2900      	cmp	r1, #0
 800db2a:	d000      	beq.n	800db2e <rshift+0x76>
 800db2c:	3304      	adds	r3, #4
 800db2e:	1a99      	subs	r1, r3, r2
 800db30:	1089      	asrs	r1, r1, #2
 800db32:	6101      	str	r1, [r0, #16]
 800db34:	4293      	cmp	r3, r2
 800db36:	d101      	bne.n	800db3c <rshift+0x84>
 800db38:	2300      	movs	r3, #0
 800db3a:	6143      	str	r3, [r0, #20]
 800db3c:	b005      	add	sp, #20
 800db3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db40:	682b      	ldr	r3, [r5, #0]
 800db42:	9903      	ldr	r1, [sp, #12]
 800db44:	408b      	lsls	r3, r1
 800db46:	9900      	ldr	r1, [sp, #0]
 800db48:	4319      	orrs	r1, r3
 800db4a:	4663      	mov	r3, ip
 800db4c:	c302      	stmia	r3!, {r1}
 800db4e:	469c      	mov	ip, r3
 800db50:	cd02      	ldmia	r5!, {r1}
 800db52:	9b02      	ldr	r3, [sp, #8]
 800db54:	40d9      	lsrs	r1, r3
 800db56:	9100      	str	r1, [sp, #0]
 800db58:	e7d9      	b.n	800db0e <rshift+0x56>
 800db5a:	c908      	ldmia	r1!, {r3}
 800db5c:	c508      	stmia	r5!, {r3}
 800db5e:	e7c1      	b.n	800dae4 <rshift+0x2c>

0800db60 <__hexdig_fun>:
 800db60:	0002      	movs	r2, r0
 800db62:	3a30      	subs	r2, #48	; 0x30
 800db64:	0003      	movs	r3, r0
 800db66:	2a09      	cmp	r2, #9
 800db68:	d802      	bhi.n	800db70 <__hexdig_fun+0x10>
 800db6a:	3b20      	subs	r3, #32
 800db6c:	b2d8      	uxtb	r0, r3
 800db6e:	4770      	bx	lr
 800db70:	0002      	movs	r2, r0
 800db72:	3a61      	subs	r2, #97	; 0x61
 800db74:	2a05      	cmp	r2, #5
 800db76:	d801      	bhi.n	800db7c <__hexdig_fun+0x1c>
 800db78:	3b47      	subs	r3, #71	; 0x47
 800db7a:	e7f7      	b.n	800db6c <__hexdig_fun+0xc>
 800db7c:	001a      	movs	r2, r3
 800db7e:	3a41      	subs	r2, #65	; 0x41
 800db80:	2000      	movs	r0, #0
 800db82:	2a05      	cmp	r2, #5
 800db84:	d8f3      	bhi.n	800db6e <__hexdig_fun+0xe>
 800db86:	3b27      	subs	r3, #39	; 0x27
 800db88:	e7f0      	b.n	800db6c <__hexdig_fun+0xc>
	...

0800db8c <__gethex>:
 800db8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db8e:	b08d      	sub	sp, #52	; 0x34
 800db90:	930a      	str	r3, [sp, #40]	; 0x28
 800db92:	4bbd      	ldr	r3, [pc, #756]	; (800de88 <__gethex+0x2fc>)
 800db94:	9005      	str	r0, [sp, #20]
 800db96:	681b      	ldr	r3, [r3, #0]
 800db98:	9109      	str	r1, [sp, #36]	; 0x24
 800db9a:	0018      	movs	r0, r3
 800db9c:	9202      	str	r2, [sp, #8]
 800db9e:	9307      	str	r3, [sp, #28]
 800dba0:	f7f2 fab0 	bl	8000104 <strlen>
 800dba4:	2202      	movs	r2, #2
 800dba6:	9b07      	ldr	r3, [sp, #28]
 800dba8:	4252      	negs	r2, r2
 800dbaa:	181b      	adds	r3, r3, r0
 800dbac:	3b01      	subs	r3, #1
 800dbae:	781b      	ldrb	r3, [r3, #0]
 800dbb0:	9003      	str	r0, [sp, #12]
 800dbb2:	930b      	str	r3, [sp, #44]	; 0x2c
 800dbb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dbb6:	6819      	ldr	r1, [r3, #0]
 800dbb8:	1c8b      	adds	r3, r1, #2
 800dbba:	1a52      	subs	r2, r2, r1
 800dbbc:	18d1      	adds	r1, r2, r3
 800dbbe:	9301      	str	r3, [sp, #4]
 800dbc0:	9108      	str	r1, [sp, #32]
 800dbc2:	9901      	ldr	r1, [sp, #4]
 800dbc4:	3301      	adds	r3, #1
 800dbc6:	7808      	ldrb	r0, [r1, #0]
 800dbc8:	2830      	cmp	r0, #48	; 0x30
 800dbca:	d0f7      	beq.n	800dbbc <__gethex+0x30>
 800dbcc:	f7ff ffc8 	bl	800db60 <__hexdig_fun>
 800dbd0:	1e04      	subs	r4, r0, #0
 800dbd2:	d13e      	bne.n	800dc52 <__gethex+0xc6>
 800dbd4:	9a03      	ldr	r2, [sp, #12]
 800dbd6:	9907      	ldr	r1, [sp, #28]
 800dbd8:	9801      	ldr	r0, [sp, #4]
 800dbda:	f001 fbbf 	bl	800f35c <strncmp>
 800dbde:	1e07      	subs	r7, r0, #0
 800dbe0:	d000      	beq.n	800dbe4 <__gethex+0x58>
 800dbe2:	e06f      	b.n	800dcc4 <__gethex+0x138>
 800dbe4:	9b01      	ldr	r3, [sp, #4]
 800dbe6:	9a03      	ldr	r2, [sp, #12]
 800dbe8:	5c98      	ldrb	r0, [r3, r2]
 800dbea:	189d      	adds	r5, r3, r2
 800dbec:	f7ff ffb8 	bl	800db60 <__hexdig_fun>
 800dbf0:	2301      	movs	r3, #1
 800dbf2:	9304      	str	r3, [sp, #16]
 800dbf4:	2800      	cmp	r0, #0
 800dbf6:	d034      	beq.n	800dc62 <__gethex+0xd6>
 800dbf8:	9501      	str	r5, [sp, #4]
 800dbfa:	9b01      	ldr	r3, [sp, #4]
 800dbfc:	7818      	ldrb	r0, [r3, #0]
 800dbfe:	2830      	cmp	r0, #48	; 0x30
 800dc00:	d009      	beq.n	800dc16 <__gethex+0x8a>
 800dc02:	f7ff ffad 	bl	800db60 <__hexdig_fun>
 800dc06:	4243      	negs	r3, r0
 800dc08:	4143      	adcs	r3, r0
 800dc0a:	9304      	str	r3, [sp, #16]
 800dc0c:	2301      	movs	r3, #1
 800dc0e:	002c      	movs	r4, r5
 800dc10:	9308      	str	r3, [sp, #32]
 800dc12:	9d01      	ldr	r5, [sp, #4]
 800dc14:	e004      	b.n	800dc20 <__gethex+0x94>
 800dc16:	9b01      	ldr	r3, [sp, #4]
 800dc18:	3301      	adds	r3, #1
 800dc1a:	9301      	str	r3, [sp, #4]
 800dc1c:	e7ed      	b.n	800dbfa <__gethex+0x6e>
 800dc1e:	3501      	adds	r5, #1
 800dc20:	7828      	ldrb	r0, [r5, #0]
 800dc22:	f7ff ff9d 	bl	800db60 <__hexdig_fun>
 800dc26:	1e07      	subs	r7, r0, #0
 800dc28:	d1f9      	bne.n	800dc1e <__gethex+0x92>
 800dc2a:	0028      	movs	r0, r5
 800dc2c:	9a03      	ldr	r2, [sp, #12]
 800dc2e:	9907      	ldr	r1, [sp, #28]
 800dc30:	f001 fb94 	bl	800f35c <strncmp>
 800dc34:	2800      	cmp	r0, #0
 800dc36:	d112      	bne.n	800dc5e <__gethex+0xd2>
 800dc38:	2c00      	cmp	r4, #0
 800dc3a:	d107      	bne.n	800dc4c <__gethex+0xc0>
 800dc3c:	9b03      	ldr	r3, [sp, #12]
 800dc3e:	18ed      	adds	r5, r5, r3
 800dc40:	002c      	movs	r4, r5
 800dc42:	7828      	ldrb	r0, [r5, #0]
 800dc44:	f7ff ff8c 	bl	800db60 <__hexdig_fun>
 800dc48:	2800      	cmp	r0, #0
 800dc4a:	d106      	bne.n	800dc5a <__gethex+0xce>
 800dc4c:	1b67      	subs	r7, r4, r5
 800dc4e:	00bf      	lsls	r7, r7, #2
 800dc50:	e007      	b.n	800dc62 <__gethex+0xd6>
 800dc52:	2300      	movs	r3, #0
 800dc54:	001c      	movs	r4, r3
 800dc56:	9304      	str	r3, [sp, #16]
 800dc58:	e7db      	b.n	800dc12 <__gethex+0x86>
 800dc5a:	3501      	adds	r5, #1
 800dc5c:	e7f1      	b.n	800dc42 <__gethex+0xb6>
 800dc5e:	2c00      	cmp	r4, #0
 800dc60:	d1f4      	bne.n	800dc4c <__gethex+0xc0>
 800dc62:	2220      	movs	r2, #32
 800dc64:	782b      	ldrb	r3, [r5, #0]
 800dc66:	002e      	movs	r6, r5
 800dc68:	4393      	bics	r3, r2
 800dc6a:	2b50      	cmp	r3, #80	; 0x50
 800dc6c:	d11d      	bne.n	800dcaa <__gethex+0x11e>
 800dc6e:	786b      	ldrb	r3, [r5, #1]
 800dc70:	2b2b      	cmp	r3, #43	; 0x2b
 800dc72:	d02c      	beq.n	800dcce <__gethex+0x142>
 800dc74:	2b2d      	cmp	r3, #45	; 0x2d
 800dc76:	d02e      	beq.n	800dcd6 <__gethex+0x14a>
 800dc78:	2300      	movs	r3, #0
 800dc7a:	1c6e      	adds	r6, r5, #1
 800dc7c:	9306      	str	r3, [sp, #24]
 800dc7e:	7830      	ldrb	r0, [r6, #0]
 800dc80:	f7ff ff6e 	bl	800db60 <__hexdig_fun>
 800dc84:	1e43      	subs	r3, r0, #1
 800dc86:	b2db      	uxtb	r3, r3
 800dc88:	2b18      	cmp	r3, #24
 800dc8a:	d82b      	bhi.n	800dce4 <__gethex+0x158>
 800dc8c:	3810      	subs	r0, #16
 800dc8e:	0004      	movs	r4, r0
 800dc90:	7870      	ldrb	r0, [r6, #1]
 800dc92:	f7ff ff65 	bl	800db60 <__hexdig_fun>
 800dc96:	1e43      	subs	r3, r0, #1
 800dc98:	b2db      	uxtb	r3, r3
 800dc9a:	3601      	adds	r6, #1
 800dc9c:	2b18      	cmp	r3, #24
 800dc9e:	d91c      	bls.n	800dcda <__gethex+0x14e>
 800dca0:	9b06      	ldr	r3, [sp, #24]
 800dca2:	2b00      	cmp	r3, #0
 800dca4:	d000      	beq.n	800dca8 <__gethex+0x11c>
 800dca6:	4264      	negs	r4, r4
 800dca8:	193f      	adds	r7, r7, r4
 800dcaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dcac:	601e      	str	r6, [r3, #0]
 800dcae:	9b04      	ldr	r3, [sp, #16]
 800dcb0:	2b00      	cmp	r3, #0
 800dcb2:	d019      	beq.n	800dce8 <__gethex+0x15c>
 800dcb4:	2600      	movs	r6, #0
 800dcb6:	9b08      	ldr	r3, [sp, #32]
 800dcb8:	42b3      	cmp	r3, r6
 800dcba:	d100      	bne.n	800dcbe <__gethex+0x132>
 800dcbc:	3606      	adds	r6, #6
 800dcbe:	0030      	movs	r0, r6
 800dcc0:	b00d      	add	sp, #52	; 0x34
 800dcc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dcc4:	2301      	movs	r3, #1
 800dcc6:	0027      	movs	r7, r4
 800dcc8:	9d01      	ldr	r5, [sp, #4]
 800dcca:	9304      	str	r3, [sp, #16]
 800dccc:	e7c9      	b.n	800dc62 <__gethex+0xd6>
 800dcce:	2300      	movs	r3, #0
 800dcd0:	9306      	str	r3, [sp, #24]
 800dcd2:	1cae      	adds	r6, r5, #2
 800dcd4:	e7d3      	b.n	800dc7e <__gethex+0xf2>
 800dcd6:	2301      	movs	r3, #1
 800dcd8:	e7fa      	b.n	800dcd0 <__gethex+0x144>
 800dcda:	230a      	movs	r3, #10
 800dcdc:	435c      	muls	r4, r3
 800dcde:	1824      	adds	r4, r4, r0
 800dce0:	3c10      	subs	r4, #16
 800dce2:	e7d5      	b.n	800dc90 <__gethex+0x104>
 800dce4:	002e      	movs	r6, r5
 800dce6:	e7e0      	b.n	800dcaa <__gethex+0x11e>
 800dce8:	9b01      	ldr	r3, [sp, #4]
 800dcea:	9904      	ldr	r1, [sp, #16]
 800dcec:	1aeb      	subs	r3, r5, r3
 800dcee:	3b01      	subs	r3, #1
 800dcf0:	2b07      	cmp	r3, #7
 800dcf2:	dc0a      	bgt.n	800dd0a <__gethex+0x17e>
 800dcf4:	9805      	ldr	r0, [sp, #20]
 800dcf6:	f000 fa89 	bl	800e20c <_Balloc>
 800dcfa:	1e04      	subs	r4, r0, #0
 800dcfc:	d108      	bne.n	800dd10 <__gethex+0x184>
 800dcfe:	0002      	movs	r2, r0
 800dd00:	21de      	movs	r1, #222	; 0xde
 800dd02:	4b62      	ldr	r3, [pc, #392]	; (800de8c <__gethex+0x300>)
 800dd04:	4862      	ldr	r0, [pc, #392]	; (800de90 <__gethex+0x304>)
 800dd06:	f001 fc2b 	bl	800f560 <__assert_func>
 800dd0a:	3101      	adds	r1, #1
 800dd0c:	105b      	asrs	r3, r3, #1
 800dd0e:	e7ef      	b.n	800dcf0 <__gethex+0x164>
 800dd10:	0003      	movs	r3, r0
 800dd12:	3314      	adds	r3, #20
 800dd14:	9304      	str	r3, [sp, #16]
 800dd16:	9309      	str	r3, [sp, #36]	; 0x24
 800dd18:	2300      	movs	r3, #0
 800dd1a:	001e      	movs	r6, r3
 800dd1c:	9306      	str	r3, [sp, #24]
 800dd1e:	9b01      	ldr	r3, [sp, #4]
 800dd20:	42ab      	cmp	r3, r5
 800dd22:	d340      	bcc.n	800dda6 <__gethex+0x21a>
 800dd24:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800dd26:	9b04      	ldr	r3, [sp, #16]
 800dd28:	c540      	stmia	r5!, {r6}
 800dd2a:	1aed      	subs	r5, r5, r3
 800dd2c:	10ad      	asrs	r5, r5, #2
 800dd2e:	0030      	movs	r0, r6
 800dd30:	6125      	str	r5, [r4, #16]
 800dd32:	f000 fb63 	bl	800e3fc <__hi0bits>
 800dd36:	9b02      	ldr	r3, [sp, #8]
 800dd38:	016d      	lsls	r5, r5, #5
 800dd3a:	681b      	ldr	r3, [r3, #0]
 800dd3c:	1a2e      	subs	r6, r5, r0
 800dd3e:	9301      	str	r3, [sp, #4]
 800dd40:	429e      	cmp	r6, r3
 800dd42:	dd5a      	ble.n	800ddfa <__gethex+0x26e>
 800dd44:	1af6      	subs	r6, r6, r3
 800dd46:	0031      	movs	r1, r6
 800dd48:	0020      	movs	r0, r4
 800dd4a:	f000 ff06 	bl	800eb5a <__any_on>
 800dd4e:	1e05      	subs	r5, r0, #0
 800dd50:	d016      	beq.n	800dd80 <__gethex+0x1f4>
 800dd52:	2501      	movs	r5, #1
 800dd54:	211f      	movs	r1, #31
 800dd56:	0028      	movs	r0, r5
 800dd58:	1e73      	subs	r3, r6, #1
 800dd5a:	4019      	ands	r1, r3
 800dd5c:	4088      	lsls	r0, r1
 800dd5e:	0001      	movs	r1, r0
 800dd60:	115a      	asrs	r2, r3, #5
 800dd62:	9804      	ldr	r0, [sp, #16]
 800dd64:	0092      	lsls	r2, r2, #2
 800dd66:	5812      	ldr	r2, [r2, r0]
 800dd68:	420a      	tst	r2, r1
 800dd6a:	d009      	beq.n	800dd80 <__gethex+0x1f4>
 800dd6c:	42ab      	cmp	r3, r5
 800dd6e:	dd06      	ble.n	800dd7e <__gethex+0x1f2>
 800dd70:	0020      	movs	r0, r4
 800dd72:	1eb1      	subs	r1, r6, #2
 800dd74:	f000 fef1 	bl	800eb5a <__any_on>
 800dd78:	3502      	adds	r5, #2
 800dd7a:	2800      	cmp	r0, #0
 800dd7c:	d100      	bne.n	800dd80 <__gethex+0x1f4>
 800dd7e:	2502      	movs	r5, #2
 800dd80:	0031      	movs	r1, r6
 800dd82:	0020      	movs	r0, r4
 800dd84:	f7ff fe98 	bl	800dab8 <rshift>
 800dd88:	19bf      	adds	r7, r7, r6
 800dd8a:	9b02      	ldr	r3, [sp, #8]
 800dd8c:	689b      	ldr	r3, [r3, #8]
 800dd8e:	9303      	str	r3, [sp, #12]
 800dd90:	42bb      	cmp	r3, r7
 800dd92:	da42      	bge.n	800de1a <__gethex+0x28e>
 800dd94:	0021      	movs	r1, r4
 800dd96:	9805      	ldr	r0, [sp, #20]
 800dd98:	f000 fa7c 	bl	800e294 <_Bfree>
 800dd9c:	2300      	movs	r3, #0
 800dd9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800dda0:	26a3      	movs	r6, #163	; 0xa3
 800dda2:	6013      	str	r3, [r2, #0]
 800dda4:	e78b      	b.n	800dcbe <__gethex+0x132>
 800dda6:	1e6b      	subs	r3, r5, #1
 800dda8:	9308      	str	r3, [sp, #32]
 800ddaa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ddac:	781b      	ldrb	r3, [r3, #0]
 800ddae:	4293      	cmp	r3, r2
 800ddb0:	d014      	beq.n	800dddc <__gethex+0x250>
 800ddb2:	9b06      	ldr	r3, [sp, #24]
 800ddb4:	2b20      	cmp	r3, #32
 800ddb6:	d104      	bne.n	800ddc2 <__gethex+0x236>
 800ddb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ddba:	c340      	stmia	r3!, {r6}
 800ddbc:	2600      	movs	r6, #0
 800ddbe:	9309      	str	r3, [sp, #36]	; 0x24
 800ddc0:	9606      	str	r6, [sp, #24]
 800ddc2:	9b08      	ldr	r3, [sp, #32]
 800ddc4:	7818      	ldrb	r0, [r3, #0]
 800ddc6:	f7ff fecb 	bl	800db60 <__hexdig_fun>
 800ddca:	230f      	movs	r3, #15
 800ddcc:	4018      	ands	r0, r3
 800ddce:	9b06      	ldr	r3, [sp, #24]
 800ddd0:	9d08      	ldr	r5, [sp, #32]
 800ddd2:	4098      	lsls	r0, r3
 800ddd4:	3304      	adds	r3, #4
 800ddd6:	4306      	orrs	r6, r0
 800ddd8:	9306      	str	r3, [sp, #24]
 800ddda:	e7a0      	b.n	800dd1e <__gethex+0x192>
 800dddc:	2301      	movs	r3, #1
 800ddde:	9a03      	ldr	r2, [sp, #12]
 800dde0:	1a9d      	subs	r5, r3, r2
 800dde2:	9b08      	ldr	r3, [sp, #32]
 800dde4:	195d      	adds	r5, r3, r5
 800dde6:	9b01      	ldr	r3, [sp, #4]
 800dde8:	429d      	cmp	r5, r3
 800ddea:	d3e2      	bcc.n	800ddb2 <__gethex+0x226>
 800ddec:	0028      	movs	r0, r5
 800ddee:	9907      	ldr	r1, [sp, #28]
 800ddf0:	f001 fab4 	bl	800f35c <strncmp>
 800ddf4:	2800      	cmp	r0, #0
 800ddf6:	d1dc      	bne.n	800ddb2 <__gethex+0x226>
 800ddf8:	e791      	b.n	800dd1e <__gethex+0x192>
 800ddfa:	9b01      	ldr	r3, [sp, #4]
 800ddfc:	2500      	movs	r5, #0
 800ddfe:	429e      	cmp	r6, r3
 800de00:	dac3      	bge.n	800dd8a <__gethex+0x1fe>
 800de02:	1b9e      	subs	r6, r3, r6
 800de04:	0021      	movs	r1, r4
 800de06:	0032      	movs	r2, r6
 800de08:	9805      	ldr	r0, [sp, #20]
 800de0a:	f000 fc61 	bl	800e6d0 <__lshift>
 800de0e:	0003      	movs	r3, r0
 800de10:	3314      	adds	r3, #20
 800de12:	0004      	movs	r4, r0
 800de14:	1bbf      	subs	r7, r7, r6
 800de16:	9304      	str	r3, [sp, #16]
 800de18:	e7b7      	b.n	800dd8a <__gethex+0x1fe>
 800de1a:	9b02      	ldr	r3, [sp, #8]
 800de1c:	685e      	ldr	r6, [r3, #4]
 800de1e:	42be      	cmp	r6, r7
 800de20:	dd71      	ble.n	800df06 <__gethex+0x37a>
 800de22:	9b01      	ldr	r3, [sp, #4]
 800de24:	1bf6      	subs	r6, r6, r7
 800de26:	42b3      	cmp	r3, r6
 800de28:	dc38      	bgt.n	800de9c <__gethex+0x310>
 800de2a:	9b02      	ldr	r3, [sp, #8]
 800de2c:	68db      	ldr	r3, [r3, #12]
 800de2e:	2b02      	cmp	r3, #2
 800de30:	d026      	beq.n	800de80 <__gethex+0x2f4>
 800de32:	2b03      	cmp	r3, #3
 800de34:	d02e      	beq.n	800de94 <__gethex+0x308>
 800de36:	2b01      	cmp	r3, #1
 800de38:	d119      	bne.n	800de6e <__gethex+0x2e2>
 800de3a:	9b01      	ldr	r3, [sp, #4]
 800de3c:	42b3      	cmp	r3, r6
 800de3e:	d116      	bne.n	800de6e <__gethex+0x2e2>
 800de40:	2b01      	cmp	r3, #1
 800de42:	d10d      	bne.n	800de60 <__gethex+0x2d4>
 800de44:	9b02      	ldr	r3, [sp, #8]
 800de46:	2662      	movs	r6, #98	; 0x62
 800de48:	685b      	ldr	r3, [r3, #4]
 800de4a:	9301      	str	r3, [sp, #4]
 800de4c:	9a01      	ldr	r2, [sp, #4]
 800de4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800de50:	601a      	str	r2, [r3, #0]
 800de52:	2301      	movs	r3, #1
 800de54:	9a04      	ldr	r2, [sp, #16]
 800de56:	6123      	str	r3, [r4, #16]
 800de58:	6013      	str	r3, [r2, #0]
 800de5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800de5c:	601c      	str	r4, [r3, #0]
 800de5e:	e72e      	b.n	800dcbe <__gethex+0x132>
 800de60:	9901      	ldr	r1, [sp, #4]
 800de62:	0020      	movs	r0, r4
 800de64:	3901      	subs	r1, #1
 800de66:	f000 fe78 	bl	800eb5a <__any_on>
 800de6a:	2800      	cmp	r0, #0
 800de6c:	d1ea      	bne.n	800de44 <__gethex+0x2b8>
 800de6e:	0021      	movs	r1, r4
 800de70:	9805      	ldr	r0, [sp, #20]
 800de72:	f000 fa0f 	bl	800e294 <_Bfree>
 800de76:	2300      	movs	r3, #0
 800de78:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800de7a:	2650      	movs	r6, #80	; 0x50
 800de7c:	6013      	str	r3, [r2, #0]
 800de7e:	e71e      	b.n	800dcbe <__gethex+0x132>
 800de80:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800de82:	2b00      	cmp	r3, #0
 800de84:	d1f3      	bne.n	800de6e <__gethex+0x2e2>
 800de86:	e7dd      	b.n	800de44 <__gethex+0x2b8>
 800de88:	0801029c 	.word	0x0801029c
 800de8c:	080101bc 	.word	0x080101bc
 800de90:	08010230 	.word	0x08010230
 800de94:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800de96:	2b00      	cmp	r3, #0
 800de98:	d1d4      	bne.n	800de44 <__gethex+0x2b8>
 800de9a:	e7e8      	b.n	800de6e <__gethex+0x2e2>
 800de9c:	1e77      	subs	r7, r6, #1
 800de9e:	2d00      	cmp	r5, #0
 800dea0:	d12f      	bne.n	800df02 <__gethex+0x376>
 800dea2:	2f00      	cmp	r7, #0
 800dea4:	d004      	beq.n	800deb0 <__gethex+0x324>
 800dea6:	0039      	movs	r1, r7
 800dea8:	0020      	movs	r0, r4
 800deaa:	f000 fe56 	bl	800eb5a <__any_on>
 800deae:	0005      	movs	r5, r0
 800deb0:	231f      	movs	r3, #31
 800deb2:	117a      	asrs	r2, r7, #5
 800deb4:	401f      	ands	r7, r3
 800deb6:	3b1e      	subs	r3, #30
 800deb8:	40bb      	lsls	r3, r7
 800deba:	9904      	ldr	r1, [sp, #16]
 800debc:	0092      	lsls	r2, r2, #2
 800debe:	5852      	ldr	r2, [r2, r1]
 800dec0:	421a      	tst	r2, r3
 800dec2:	d001      	beq.n	800dec8 <__gethex+0x33c>
 800dec4:	2302      	movs	r3, #2
 800dec6:	431d      	orrs	r5, r3
 800dec8:	9b01      	ldr	r3, [sp, #4]
 800deca:	0031      	movs	r1, r6
 800decc:	1b9b      	subs	r3, r3, r6
 800dece:	2602      	movs	r6, #2
 800ded0:	0020      	movs	r0, r4
 800ded2:	9301      	str	r3, [sp, #4]
 800ded4:	f7ff fdf0 	bl	800dab8 <rshift>
 800ded8:	9b02      	ldr	r3, [sp, #8]
 800deda:	685f      	ldr	r7, [r3, #4]
 800dedc:	2d00      	cmp	r5, #0
 800dede:	d041      	beq.n	800df64 <__gethex+0x3d8>
 800dee0:	9b02      	ldr	r3, [sp, #8]
 800dee2:	68db      	ldr	r3, [r3, #12]
 800dee4:	2b02      	cmp	r3, #2
 800dee6:	d010      	beq.n	800df0a <__gethex+0x37e>
 800dee8:	2b03      	cmp	r3, #3
 800deea:	d012      	beq.n	800df12 <__gethex+0x386>
 800deec:	2b01      	cmp	r3, #1
 800deee:	d106      	bne.n	800defe <__gethex+0x372>
 800def0:	07aa      	lsls	r2, r5, #30
 800def2:	d504      	bpl.n	800defe <__gethex+0x372>
 800def4:	9a04      	ldr	r2, [sp, #16]
 800def6:	6810      	ldr	r0, [r2, #0]
 800def8:	4305      	orrs	r5, r0
 800defa:	421d      	tst	r5, r3
 800defc:	d10c      	bne.n	800df18 <__gethex+0x38c>
 800defe:	2310      	movs	r3, #16
 800df00:	e02f      	b.n	800df62 <__gethex+0x3d6>
 800df02:	2501      	movs	r5, #1
 800df04:	e7d4      	b.n	800deb0 <__gethex+0x324>
 800df06:	2601      	movs	r6, #1
 800df08:	e7e8      	b.n	800dedc <__gethex+0x350>
 800df0a:	2301      	movs	r3, #1
 800df0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800df0e:	1a9b      	subs	r3, r3, r2
 800df10:	9313      	str	r3, [sp, #76]	; 0x4c
 800df12:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800df14:	2b00      	cmp	r3, #0
 800df16:	d0f2      	beq.n	800defe <__gethex+0x372>
 800df18:	6923      	ldr	r3, [r4, #16]
 800df1a:	2000      	movs	r0, #0
 800df1c:	9303      	str	r3, [sp, #12]
 800df1e:	009b      	lsls	r3, r3, #2
 800df20:	9304      	str	r3, [sp, #16]
 800df22:	0023      	movs	r3, r4
 800df24:	9a04      	ldr	r2, [sp, #16]
 800df26:	3314      	adds	r3, #20
 800df28:	1899      	adds	r1, r3, r2
 800df2a:	681a      	ldr	r2, [r3, #0]
 800df2c:	1c55      	adds	r5, r2, #1
 800df2e:	d01e      	beq.n	800df6e <__gethex+0x3e2>
 800df30:	3201      	adds	r2, #1
 800df32:	601a      	str	r2, [r3, #0]
 800df34:	0023      	movs	r3, r4
 800df36:	3314      	adds	r3, #20
 800df38:	2e02      	cmp	r6, #2
 800df3a:	d140      	bne.n	800dfbe <__gethex+0x432>
 800df3c:	9a02      	ldr	r2, [sp, #8]
 800df3e:	9901      	ldr	r1, [sp, #4]
 800df40:	6812      	ldr	r2, [r2, #0]
 800df42:	3a01      	subs	r2, #1
 800df44:	428a      	cmp	r2, r1
 800df46:	d10b      	bne.n	800df60 <__gethex+0x3d4>
 800df48:	114a      	asrs	r2, r1, #5
 800df4a:	211f      	movs	r1, #31
 800df4c:	9801      	ldr	r0, [sp, #4]
 800df4e:	0092      	lsls	r2, r2, #2
 800df50:	4001      	ands	r1, r0
 800df52:	2001      	movs	r0, #1
 800df54:	0005      	movs	r5, r0
 800df56:	408d      	lsls	r5, r1
 800df58:	58d3      	ldr	r3, [r2, r3]
 800df5a:	422b      	tst	r3, r5
 800df5c:	d000      	beq.n	800df60 <__gethex+0x3d4>
 800df5e:	2601      	movs	r6, #1
 800df60:	2320      	movs	r3, #32
 800df62:	431e      	orrs	r6, r3
 800df64:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800df66:	601c      	str	r4, [r3, #0]
 800df68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800df6a:	601f      	str	r7, [r3, #0]
 800df6c:	e6a7      	b.n	800dcbe <__gethex+0x132>
 800df6e:	c301      	stmia	r3!, {r0}
 800df70:	4299      	cmp	r1, r3
 800df72:	d8da      	bhi.n	800df2a <__gethex+0x39e>
 800df74:	9b03      	ldr	r3, [sp, #12]
 800df76:	68a2      	ldr	r2, [r4, #8]
 800df78:	4293      	cmp	r3, r2
 800df7a:	db17      	blt.n	800dfac <__gethex+0x420>
 800df7c:	6863      	ldr	r3, [r4, #4]
 800df7e:	9805      	ldr	r0, [sp, #20]
 800df80:	1c59      	adds	r1, r3, #1
 800df82:	f000 f943 	bl	800e20c <_Balloc>
 800df86:	1e05      	subs	r5, r0, #0
 800df88:	d103      	bne.n	800df92 <__gethex+0x406>
 800df8a:	0002      	movs	r2, r0
 800df8c:	2184      	movs	r1, #132	; 0x84
 800df8e:	4b1c      	ldr	r3, [pc, #112]	; (800e000 <__gethex+0x474>)
 800df90:	e6b8      	b.n	800dd04 <__gethex+0x178>
 800df92:	0021      	movs	r1, r4
 800df94:	6923      	ldr	r3, [r4, #16]
 800df96:	310c      	adds	r1, #12
 800df98:	1c9a      	adds	r2, r3, #2
 800df9a:	0092      	lsls	r2, r2, #2
 800df9c:	300c      	adds	r0, #12
 800df9e:	f000 f92c 	bl	800e1fa <memcpy>
 800dfa2:	0021      	movs	r1, r4
 800dfa4:	9805      	ldr	r0, [sp, #20]
 800dfa6:	f000 f975 	bl	800e294 <_Bfree>
 800dfaa:	002c      	movs	r4, r5
 800dfac:	6923      	ldr	r3, [r4, #16]
 800dfae:	1c5a      	adds	r2, r3, #1
 800dfb0:	6122      	str	r2, [r4, #16]
 800dfb2:	2201      	movs	r2, #1
 800dfb4:	3304      	adds	r3, #4
 800dfb6:	009b      	lsls	r3, r3, #2
 800dfb8:	18e3      	adds	r3, r4, r3
 800dfba:	605a      	str	r2, [r3, #4]
 800dfbc:	e7ba      	b.n	800df34 <__gethex+0x3a8>
 800dfbe:	6922      	ldr	r2, [r4, #16]
 800dfc0:	9903      	ldr	r1, [sp, #12]
 800dfc2:	428a      	cmp	r2, r1
 800dfc4:	dd09      	ble.n	800dfda <__gethex+0x44e>
 800dfc6:	2101      	movs	r1, #1
 800dfc8:	0020      	movs	r0, r4
 800dfca:	f7ff fd75 	bl	800dab8 <rshift>
 800dfce:	9b02      	ldr	r3, [sp, #8]
 800dfd0:	3701      	adds	r7, #1
 800dfd2:	689b      	ldr	r3, [r3, #8]
 800dfd4:	42bb      	cmp	r3, r7
 800dfd6:	dac2      	bge.n	800df5e <__gethex+0x3d2>
 800dfd8:	e6dc      	b.n	800dd94 <__gethex+0x208>
 800dfda:	221f      	movs	r2, #31
 800dfdc:	9d01      	ldr	r5, [sp, #4]
 800dfde:	9901      	ldr	r1, [sp, #4]
 800dfe0:	2601      	movs	r6, #1
 800dfe2:	4015      	ands	r5, r2
 800dfe4:	4211      	tst	r1, r2
 800dfe6:	d0bb      	beq.n	800df60 <__gethex+0x3d4>
 800dfe8:	9a04      	ldr	r2, [sp, #16]
 800dfea:	189b      	adds	r3, r3, r2
 800dfec:	3b04      	subs	r3, #4
 800dfee:	6818      	ldr	r0, [r3, #0]
 800dff0:	f000 fa04 	bl	800e3fc <__hi0bits>
 800dff4:	2320      	movs	r3, #32
 800dff6:	1b5d      	subs	r5, r3, r5
 800dff8:	42a8      	cmp	r0, r5
 800dffa:	dbe4      	blt.n	800dfc6 <__gethex+0x43a>
 800dffc:	e7b0      	b.n	800df60 <__gethex+0x3d4>
 800dffe:	46c0      	nop			; (mov r8, r8)
 800e000:	080101bc 	.word	0x080101bc

0800e004 <L_shift>:
 800e004:	2308      	movs	r3, #8
 800e006:	b570      	push	{r4, r5, r6, lr}
 800e008:	2520      	movs	r5, #32
 800e00a:	1a9a      	subs	r2, r3, r2
 800e00c:	0092      	lsls	r2, r2, #2
 800e00e:	1aad      	subs	r5, r5, r2
 800e010:	6843      	ldr	r3, [r0, #4]
 800e012:	6806      	ldr	r6, [r0, #0]
 800e014:	001c      	movs	r4, r3
 800e016:	40ac      	lsls	r4, r5
 800e018:	40d3      	lsrs	r3, r2
 800e01a:	4334      	orrs	r4, r6
 800e01c:	6004      	str	r4, [r0, #0]
 800e01e:	6043      	str	r3, [r0, #4]
 800e020:	3004      	adds	r0, #4
 800e022:	4288      	cmp	r0, r1
 800e024:	d3f4      	bcc.n	800e010 <L_shift+0xc>
 800e026:	bd70      	pop	{r4, r5, r6, pc}

0800e028 <__match>:
 800e028:	b530      	push	{r4, r5, lr}
 800e02a:	6803      	ldr	r3, [r0, #0]
 800e02c:	780c      	ldrb	r4, [r1, #0]
 800e02e:	3301      	adds	r3, #1
 800e030:	2c00      	cmp	r4, #0
 800e032:	d102      	bne.n	800e03a <__match+0x12>
 800e034:	6003      	str	r3, [r0, #0]
 800e036:	2001      	movs	r0, #1
 800e038:	bd30      	pop	{r4, r5, pc}
 800e03a:	781a      	ldrb	r2, [r3, #0]
 800e03c:	0015      	movs	r5, r2
 800e03e:	3d41      	subs	r5, #65	; 0x41
 800e040:	2d19      	cmp	r5, #25
 800e042:	d800      	bhi.n	800e046 <__match+0x1e>
 800e044:	3220      	adds	r2, #32
 800e046:	3101      	adds	r1, #1
 800e048:	42a2      	cmp	r2, r4
 800e04a:	d0ef      	beq.n	800e02c <__match+0x4>
 800e04c:	2000      	movs	r0, #0
 800e04e:	e7f3      	b.n	800e038 <__match+0x10>

0800e050 <__hexnan>:
 800e050:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e052:	680b      	ldr	r3, [r1, #0]
 800e054:	b08b      	sub	sp, #44	; 0x2c
 800e056:	115c      	asrs	r4, r3, #5
 800e058:	00a4      	lsls	r4, r4, #2
 800e05a:	9201      	str	r2, [sp, #4]
 800e05c:	1912      	adds	r2, r2, r4
 800e05e:	0019      	movs	r1, r3
 800e060:	9202      	str	r2, [sp, #8]
 800e062:	221f      	movs	r2, #31
 800e064:	4011      	ands	r1, r2
 800e066:	9008      	str	r0, [sp, #32]
 800e068:	9106      	str	r1, [sp, #24]
 800e06a:	4213      	tst	r3, r2
 800e06c:	d002      	beq.n	800e074 <__hexnan+0x24>
 800e06e:	9b02      	ldr	r3, [sp, #8]
 800e070:	3304      	adds	r3, #4
 800e072:	9302      	str	r3, [sp, #8]
 800e074:	9b02      	ldr	r3, [sp, #8]
 800e076:	2500      	movs	r5, #0
 800e078:	1f1e      	subs	r6, r3, #4
 800e07a:	0037      	movs	r7, r6
 800e07c:	0034      	movs	r4, r6
 800e07e:	9b08      	ldr	r3, [sp, #32]
 800e080:	6035      	str	r5, [r6, #0]
 800e082:	681b      	ldr	r3, [r3, #0]
 800e084:	9507      	str	r5, [sp, #28]
 800e086:	9305      	str	r3, [sp, #20]
 800e088:	9503      	str	r5, [sp, #12]
 800e08a:	9b05      	ldr	r3, [sp, #20]
 800e08c:	3301      	adds	r3, #1
 800e08e:	9309      	str	r3, [sp, #36]	; 0x24
 800e090:	9b05      	ldr	r3, [sp, #20]
 800e092:	785b      	ldrb	r3, [r3, #1]
 800e094:	9304      	str	r3, [sp, #16]
 800e096:	2b00      	cmp	r3, #0
 800e098:	d028      	beq.n	800e0ec <__hexnan+0x9c>
 800e09a:	9804      	ldr	r0, [sp, #16]
 800e09c:	f7ff fd60 	bl	800db60 <__hexdig_fun>
 800e0a0:	2800      	cmp	r0, #0
 800e0a2:	d154      	bne.n	800e14e <__hexnan+0xfe>
 800e0a4:	9b04      	ldr	r3, [sp, #16]
 800e0a6:	2b20      	cmp	r3, #32
 800e0a8:	d819      	bhi.n	800e0de <__hexnan+0x8e>
 800e0aa:	9b03      	ldr	r3, [sp, #12]
 800e0ac:	9a07      	ldr	r2, [sp, #28]
 800e0ae:	4293      	cmp	r3, r2
 800e0b0:	dd12      	ble.n	800e0d8 <__hexnan+0x88>
 800e0b2:	42bc      	cmp	r4, r7
 800e0b4:	d206      	bcs.n	800e0c4 <__hexnan+0x74>
 800e0b6:	2d07      	cmp	r5, #7
 800e0b8:	dc04      	bgt.n	800e0c4 <__hexnan+0x74>
 800e0ba:	002a      	movs	r2, r5
 800e0bc:	0039      	movs	r1, r7
 800e0be:	0020      	movs	r0, r4
 800e0c0:	f7ff ffa0 	bl	800e004 <L_shift>
 800e0c4:	9b01      	ldr	r3, [sp, #4]
 800e0c6:	2508      	movs	r5, #8
 800e0c8:	429c      	cmp	r4, r3
 800e0ca:	d905      	bls.n	800e0d8 <__hexnan+0x88>
 800e0cc:	1f27      	subs	r7, r4, #4
 800e0ce:	2500      	movs	r5, #0
 800e0d0:	003c      	movs	r4, r7
 800e0d2:	9b03      	ldr	r3, [sp, #12]
 800e0d4:	603d      	str	r5, [r7, #0]
 800e0d6:	9307      	str	r3, [sp, #28]
 800e0d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e0da:	9305      	str	r3, [sp, #20]
 800e0dc:	e7d5      	b.n	800e08a <__hexnan+0x3a>
 800e0de:	9b04      	ldr	r3, [sp, #16]
 800e0e0:	2b29      	cmp	r3, #41	; 0x29
 800e0e2:	d158      	bne.n	800e196 <__hexnan+0x146>
 800e0e4:	9b05      	ldr	r3, [sp, #20]
 800e0e6:	9a08      	ldr	r2, [sp, #32]
 800e0e8:	3302      	adds	r3, #2
 800e0ea:	6013      	str	r3, [r2, #0]
 800e0ec:	9b03      	ldr	r3, [sp, #12]
 800e0ee:	2b00      	cmp	r3, #0
 800e0f0:	d051      	beq.n	800e196 <__hexnan+0x146>
 800e0f2:	42bc      	cmp	r4, r7
 800e0f4:	d206      	bcs.n	800e104 <__hexnan+0xb4>
 800e0f6:	2d07      	cmp	r5, #7
 800e0f8:	dc04      	bgt.n	800e104 <__hexnan+0xb4>
 800e0fa:	002a      	movs	r2, r5
 800e0fc:	0039      	movs	r1, r7
 800e0fe:	0020      	movs	r0, r4
 800e100:	f7ff ff80 	bl	800e004 <L_shift>
 800e104:	9b01      	ldr	r3, [sp, #4]
 800e106:	429c      	cmp	r4, r3
 800e108:	d935      	bls.n	800e176 <__hexnan+0x126>
 800e10a:	001a      	movs	r2, r3
 800e10c:	0023      	movs	r3, r4
 800e10e:	cb02      	ldmia	r3!, {r1}
 800e110:	c202      	stmia	r2!, {r1}
 800e112:	429e      	cmp	r6, r3
 800e114:	d2fb      	bcs.n	800e10e <__hexnan+0xbe>
 800e116:	9b02      	ldr	r3, [sp, #8]
 800e118:	1c61      	adds	r1, r4, #1
 800e11a:	1eda      	subs	r2, r3, #3
 800e11c:	2304      	movs	r3, #4
 800e11e:	4291      	cmp	r1, r2
 800e120:	d805      	bhi.n	800e12e <__hexnan+0xde>
 800e122:	9b02      	ldr	r3, [sp, #8]
 800e124:	3b04      	subs	r3, #4
 800e126:	1b1c      	subs	r4, r3, r4
 800e128:	08a4      	lsrs	r4, r4, #2
 800e12a:	3401      	adds	r4, #1
 800e12c:	00a3      	lsls	r3, r4, #2
 800e12e:	9a01      	ldr	r2, [sp, #4]
 800e130:	18d4      	adds	r4, r2, r3
 800e132:	2300      	movs	r3, #0
 800e134:	c408      	stmia	r4!, {r3}
 800e136:	42a6      	cmp	r6, r4
 800e138:	d2fc      	bcs.n	800e134 <__hexnan+0xe4>
 800e13a:	6833      	ldr	r3, [r6, #0]
 800e13c:	2b00      	cmp	r3, #0
 800e13e:	d104      	bne.n	800e14a <__hexnan+0xfa>
 800e140:	9b01      	ldr	r3, [sp, #4]
 800e142:	429e      	cmp	r6, r3
 800e144:	d125      	bne.n	800e192 <__hexnan+0x142>
 800e146:	2301      	movs	r3, #1
 800e148:	6033      	str	r3, [r6, #0]
 800e14a:	2005      	movs	r0, #5
 800e14c:	e024      	b.n	800e198 <__hexnan+0x148>
 800e14e:	9b03      	ldr	r3, [sp, #12]
 800e150:	3501      	adds	r5, #1
 800e152:	3301      	adds	r3, #1
 800e154:	9303      	str	r3, [sp, #12]
 800e156:	2d08      	cmp	r5, #8
 800e158:	dd06      	ble.n	800e168 <__hexnan+0x118>
 800e15a:	9b01      	ldr	r3, [sp, #4]
 800e15c:	429c      	cmp	r4, r3
 800e15e:	d9bb      	bls.n	800e0d8 <__hexnan+0x88>
 800e160:	2300      	movs	r3, #0
 800e162:	2501      	movs	r5, #1
 800e164:	3c04      	subs	r4, #4
 800e166:	6023      	str	r3, [r4, #0]
 800e168:	220f      	movs	r2, #15
 800e16a:	6823      	ldr	r3, [r4, #0]
 800e16c:	4010      	ands	r0, r2
 800e16e:	011b      	lsls	r3, r3, #4
 800e170:	4318      	orrs	r0, r3
 800e172:	6020      	str	r0, [r4, #0]
 800e174:	e7b0      	b.n	800e0d8 <__hexnan+0x88>
 800e176:	9b06      	ldr	r3, [sp, #24]
 800e178:	2b00      	cmp	r3, #0
 800e17a:	d0de      	beq.n	800e13a <__hexnan+0xea>
 800e17c:	2220      	movs	r2, #32
 800e17e:	1ad2      	subs	r2, r2, r3
 800e180:	2301      	movs	r3, #1
 800e182:	425b      	negs	r3, r3
 800e184:	40d3      	lsrs	r3, r2
 800e186:	9c02      	ldr	r4, [sp, #8]
 800e188:	3c04      	subs	r4, #4
 800e18a:	6822      	ldr	r2, [r4, #0]
 800e18c:	4013      	ands	r3, r2
 800e18e:	6023      	str	r3, [r4, #0]
 800e190:	e7d3      	b.n	800e13a <__hexnan+0xea>
 800e192:	3e04      	subs	r6, #4
 800e194:	e7d1      	b.n	800e13a <__hexnan+0xea>
 800e196:	2004      	movs	r0, #4
 800e198:	b00b      	add	sp, #44	; 0x2c
 800e19a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e19c <_localeconv_r>:
 800e19c:	4800      	ldr	r0, [pc, #0]	; (800e1a0 <_localeconv_r+0x4>)
 800e19e:	4770      	bx	lr
 800e1a0:	200001b4 	.word	0x200001b4

0800e1a4 <__retarget_lock_init_recursive>:
 800e1a4:	4770      	bx	lr

0800e1a6 <__retarget_lock_acquire_recursive>:
 800e1a6:	4770      	bx	lr

0800e1a8 <__retarget_lock_release_recursive>:
 800e1a8:	4770      	bx	lr
	...

0800e1ac <malloc>:
 800e1ac:	b510      	push	{r4, lr}
 800e1ae:	4b03      	ldr	r3, [pc, #12]	; (800e1bc <malloc+0x10>)
 800e1b0:	0001      	movs	r1, r0
 800e1b2:	6818      	ldr	r0, [r3, #0]
 800e1b4:	f000 fd4c 	bl	800ec50 <_malloc_r>
 800e1b8:	bd10      	pop	{r4, pc}
 800e1ba:	46c0      	nop			; (mov r8, r8)
 800e1bc:	2000005c 	.word	0x2000005c

0800e1c0 <__ascii_mbtowc>:
 800e1c0:	b082      	sub	sp, #8
 800e1c2:	2900      	cmp	r1, #0
 800e1c4:	d100      	bne.n	800e1c8 <__ascii_mbtowc+0x8>
 800e1c6:	a901      	add	r1, sp, #4
 800e1c8:	1e10      	subs	r0, r2, #0
 800e1ca:	d006      	beq.n	800e1da <__ascii_mbtowc+0x1a>
 800e1cc:	2b00      	cmp	r3, #0
 800e1ce:	d006      	beq.n	800e1de <__ascii_mbtowc+0x1e>
 800e1d0:	7813      	ldrb	r3, [r2, #0]
 800e1d2:	600b      	str	r3, [r1, #0]
 800e1d4:	7810      	ldrb	r0, [r2, #0]
 800e1d6:	1e43      	subs	r3, r0, #1
 800e1d8:	4198      	sbcs	r0, r3
 800e1da:	b002      	add	sp, #8
 800e1dc:	4770      	bx	lr
 800e1de:	2002      	movs	r0, #2
 800e1e0:	4240      	negs	r0, r0
 800e1e2:	e7fa      	b.n	800e1da <__ascii_mbtowc+0x1a>

0800e1e4 <memchr>:
 800e1e4:	b2c9      	uxtb	r1, r1
 800e1e6:	1882      	adds	r2, r0, r2
 800e1e8:	4290      	cmp	r0, r2
 800e1ea:	d101      	bne.n	800e1f0 <memchr+0xc>
 800e1ec:	2000      	movs	r0, #0
 800e1ee:	4770      	bx	lr
 800e1f0:	7803      	ldrb	r3, [r0, #0]
 800e1f2:	428b      	cmp	r3, r1
 800e1f4:	d0fb      	beq.n	800e1ee <memchr+0xa>
 800e1f6:	3001      	adds	r0, #1
 800e1f8:	e7f6      	b.n	800e1e8 <memchr+0x4>

0800e1fa <memcpy>:
 800e1fa:	2300      	movs	r3, #0
 800e1fc:	b510      	push	{r4, lr}
 800e1fe:	429a      	cmp	r2, r3
 800e200:	d100      	bne.n	800e204 <memcpy+0xa>
 800e202:	bd10      	pop	{r4, pc}
 800e204:	5ccc      	ldrb	r4, [r1, r3]
 800e206:	54c4      	strb	r4, [r0, r3]
 800e208:	3301      	adds	r3, #1
 800e20a:	e7f8      	b.n	800e1fe <memcpy+0x4>

0800e20c <_Balloc>:
 800e20c:	b570      	push	{r4, r5, r6, lr}
 800e20e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800e210:	0006      	movs	r6, r0
 800e212:	000c      	movs	r4, r1
 800e214:	2d00      	cmp	r5, #0
 800e216:	d10e      	bne.n	800e236 <_Balloc+0x2a>
 800e218:	2010      	movs	r0, #16
 800e21a:	f7ff ffc7 	bl	800e1ac <malloc>
 800e21e:	1e02      	subs	r2, r0, #0
 800e220:	6270      	str	r0, [r6, #36]	; 0x24
 800e222:	d104      	bne.n	800e22e <_Balloc+0x22>
 800e224:	2166      	movs	r1, #102	; 0x66
 800e226:	4b19      	ldr	r3, [pc, #100]	; (800e28c <_Balloc+0x80>)
 800e228:	4819      	ldr	r0, [pc, #100]	; (800e290 <_Balloc+0x84>)
 800e22a:	f001 f999 	bl	800f560 <__assert_func>
 800e22e:	6045      	str	r5, [r0, #4]
 800e230:	6085      	str	r5, [r0, #8]
 800e232:	6005      	str	r5, [r0, #0]
 800e234:	60c5      	str	r5, [r0, #12]
 800e236:	6a75      	ldr	r5, [r6, #36]	; 0x24
 800e238:	68eb      	ldr	r3, [r5, #12]
 800e23a:	2b00      	cmp	r3, #0
 800e23c:	d013      	beq.n	800e266 <_Balloc+0x5a>
 800e23e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e240:	00a2      	lsls	r2, r4, #2
 800e242:	68db      	ldr	r3, [r3, #12]
 800e244:	189b      	adds	r3, r3, r2
 800e246:	6818      	ldr	r0, [r3, #0]
 800e248:	2800      	cmp	r0, #0
 800e24a:	d118      	bne.n	800e27e <_Balloc+0x72>
 800e24c:	2101      	movs	r1, #1
 800e24e:	000d      	movs	r5, r1
 800e250:	40a5      	lsls	r5, r4
 800e252:	1d6a      	adds	r2, r5, #5
 800e254:	0030      	movs	r0, r6
 800e256:	0092      	lsls	r2, r2, #2
 800e258:	f000 fca2 	bl	800eba0 <_calloc_r>
 800e25c:	2800      	cmp	r0, #0
 800e25e:	d00c      	beq.n	800e27a <_Balloc+0x6e>
 800e260:	6044      	str	r4, [r0, #4]
 800e262:	6085      	str	r5, [r0, #8]
 800e264:	e00d      	b.n	800e282 <_Balloc+0x76>
 800e266:	2221      	movs	r2, #33	; 0x21
 800e268:	2104      	movs	r1, #4
 800e26a:	0030      	movs	r0, r6
 800e26c:	f000 fc98 	bl	800eba0 <_calloc_r>
 800e270:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e272:	60e8      	str	r0, [r5, #12]
 800e274:	68db      	ldr	r3, [r3, #12]
 800e276:	2b00      	cmp	r3, #0
 800e278:	d1e1      	bne.n	800e23e <_Balloc+0x32>
 800e27a:	2000      	movs	r0, #0
 800e27c:	bd70      	pop	{r4, r5, r6, pc}
 800e27e:	6802      	ldr	r2, [r0, #0]
 800e280:	601a      	str	r2, [r3, #0]
 800e282:	2300      	movs	r3, #0
 800e284:	6103      	str	r3, [r0, #16]
 800e286:	60c3      	str	r3, [r0, #12]
 800e288:	e7f8      	b.n	800e27c <_Balloc+0x70>
 800e28a:	46c0      	nop			; (mov r8, r8)
 800e28c:	08010146 	.word	0x08010146
 800e290:	080102b0 	.word	0x080102b0

0800e294 <_Bfree>:
 800e294:	b570      	push	{r4, r5, r6, lr}
 800e296:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e298:	0005      	movs	r5, r0
 800e29a:	000c      	movs	r4, r1
 800e29c:	2e00      	cmp	r6, #0
 800e29e:	d10e      	bne.n	800e2be <_Bfree+0x2a>
 800e2a0:	2010      	movs	r0, #16
 800e2a2:	f7ff ff83 	bl	800e1ac <malloc>
 800e2a6:	1e02      	subs	r2, r0, #0
 800e2a8:	6268      	str	r0, [r5, #36]	; 0x24
 800e2aa:	d104      	bne.n	800e2b6 <_Bfree+0x22>
 800e2ac:	218a      	movs	r1, #138	; 0x8a
 800e2ae:	4b09      	ldr	r3, [pc, #36]	; (800e2d4 <_Bfree+0x40>)
 800e2b0:	4809      	ldr	r0, [pc, #36]	; (800e2d8 <_Bfree+0x44>)
 800e2b2:	f001 f955 	bl	800f560 <__assert_func>
 800e2b6:	6046      	str	r6, [r0, #4]
 800e2b8:	6086      	str	r6, [r0, #8]
 800e2ba:	6006      	str	r6, [r0, #0]
 800e2bc:	60c6      	str	r6, [r0, #12]
 800e2be:	2c00      	cmp	r4, #0
 800e2c0:	d007      	beq.n	800e2d2 <_Bfree+0x3e>
 800e2c2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800e2c4:	6862      	ldr	r2, [r4, #4]
 800e2c6:	68db      	ldr	r3, [r3, #12]
 800e2c8:	0092      	lsls	r2, r2, #2
 800e2ca:	189b      	adds	r3, r3, r2
 800e2cc:	681a      	ldr	r2, [r3, #0]
 800e2ce:	6022      	str	r2, [r4, #0]
 800e2d0:	601c      	str	r4, [r3, #0]
 800e2d2:	bd70      	pop	{r4, r5, r6, pc}
 800e2d4:	08010146 	.word	0x08010146
 800e2d8:	080102b0 	.word	0x080102b0

0800e2dc <__multadd>:
 800e2dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e2de:	000e      	movs	r6, r1
 800e2e0:	9001      	str	r0, [sp, #4]
 800e2e2:	000c      	movs	r4, r1
 800e2e4:	001d      	movs	r5, r3
 800e2e6:	2000      	movs	r0, #0
 800e2e8:	690f      	ldr	r7, [r1, #16]
 800e2ea:	3614      	adds	r6, #20
 800e2ec:	6833      	ldr	r3, [r6, #0]
 800e2ee:	3001      	adds	r0, #1
 800e2f0:	b299      	uxth	r1, r3
 800e2f2:	4351      	muls	r1, r2
 800e2f4:	0c1b      	lsrs	r3, r3, #16
 800e2f6:	4353      	muls	r3, r2
 800e2f8:	1949      	adds	r1, r1, r5
 800e2fa:	0c0d      	lsrs	r5, r1, #16
 800e2fc:	195b      	adds	r3, r3, r5
 800e2fe:	0c1d      	lsrs	r5, r3, #16
 800e300:	b289      	uxth	r1, r1
 800e302:	041b      	lsls	r3, r3, #16
 800e304:	185b      	adds	r3, r3, r1
 800e306:	c608      	stmia	r6!, {r3}
 800e308:	4287      	cmp	r7, r0
 800e30a:	dcef      	bgt.n	800e2ec <__multadd+0x10>
 800e30c:	2d00      	cmp	r5, #0
 800e30e:	d022      	beq.n	800e356 <__multadd+0x7a>
 800e310:	68a3      	ldr	r3, [r4, #8]
 800e312:	42bb      	cmp	r3, r7
 800e314:	dc19      	bgt.n	800e34a <__multadd+0x6e>
 800e316:	6863      	ldr	r3, [r4, #4]
 800e318:	9801      	ldr	r0, [sp, #4]
 800e31a:	1c59      	adds	r1, r3, #1
 800e31c:	f7ff ff76 	bl	800e20c <_Balloc>
 800e320:	1e06      	subs	r6, r0, #0
 800e322:	d105      	bne.n	800e330 <__multadd+0x54>
 800e324:	0002      	movs	r2, r0
 800e326:	21b5      	movs	r1, #181	; 0xb5
 800e328:	4b0c      	ldr	r3, [pc, #48]	; (800e35c <__multadd+0x80>)
 800e32a:	480d      	ldr	r0, [pc, #52]	; (800e360 <__multadd+0x84>)
 800e32c:	f001 f918 	bl	800f560 <__assert_func>
 800e330:	0021      	movs	r1, r4
 800e332:	6923      	ldr	r3, [r4, #16]
 800e334:	310c      	adds	r1, #12
 800e336:	1c9a      	adds	r2, r3, #2
 800e338:	0092      	lsls	r2, r2, #2
 800e33a:	300c      	adds	r0, #12
 800e33c:	f7ff ff5d 	bl	800e1fa <memcpy>
 800e340:	0021      	movs	r1, r4
 800e342:	9801      	ldr	r0, [sp, #4]
 800e344:	f7ff ffa6 	bl	800e294 <_Bfree>
 800e348:	0034      	movs	r4, r6
 800e34a:	1d3b      	adds	r3, r7, #4
 800e34c:	009b      	lsls	r3, r3, #2
 800e34e:	18e3      	adds	r3, r4, r3
 800e350:	605d      	str	r5, [r3, #4]
 800e352:	1c7b      	adds	r3, r7, #1
 800e354:	6123      	str	r3, [r4, #16]
 800e356:	0020      	movs	r0, r4
 800e358:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800e35a:	46c0      	nop			; (mov r8, r8)
 800e35c:	080101bc 	.word	0x080101bc
 800e360:	080102b0 	.word	0x080102b0

0800e364 <__s2b>:
 800e364:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e366:	0006      	movs	r6, r0
 800e368:	0018      	movs	r0, r3
 800e36a:	000c      	movs	r4, r1
 800e36c:	3008      	adds	r0, #8
 800e36e:	2109      	movs	r1, #9
 800e370:	9301      	str	r3, [sp, #4]
 800e372:	0015      	movs	r5, r2
 800e374:	f7f1 ff6c 	bl	8000250 <__divsi3>
 800e378:	2301      	movs	r3, #1
 800e37a:	2100      	movs	r1, #0
 800e37c:	4283      	cmp	r3, r0
 800e37e:	db0a      	blt.n	800e396 <__s2b+0x32>
 800e380:	0030      	movs	r0, r6
 800e382:	f7ff ff43 	bl	800e20c <_Balloc>
 800e386:	1e01      	subs	r1, r0, #0
 800e388:	d108      	bne.n	800e39c <__s2b+0x38>
 800e38a:	0002      	movs	r2, r0
 800e38c:	4b19      	ldr	r3, [pc, #100]	; (800e3f4 <__s2b+0x90>)
 800e38e:	481a      	ldr	r0, [pc, #104]	; (800e3f8 <__s2b+0x94>)
 800e390:	31ce      	adds	r1, #206	; 0xce
 800e392:	f001 f8e5 	bl	800f560 <__assert_func>
 800e396:	005b      	lsls	r3, r3, #1
 800e398:	3101      	adds	r1, #1
 800e39a:	e7ef      	b.n	800e37c <__s2b+0x18>
 800e39c:	9b08      	ldr	r3, [sp, #32]
 800e39e:	6143      	str	r3, [r0, #20]
 800e3a0:	2301      	movs	r3, #1
 800e3a2:	6103      	str	r3, [r0, #16]
 800e3a4:	2d09      	cmp	r5, #9
 800e3a6:	dd18      	ble.n	800e3da <__s2b+0x76>
 800e3a8:	0023      	movs	r3, r4
 800e3aa:	3309      	adds	r3, #9
 800e3ac:	001f      	movs	r7, r3
 800e3ae:	9300      	str	r3, [sp, #0]
 800e3b0:	1964      	adds	r4, r4, r5
 800e3b2:	783b      	ldrb	r3, [r7, #0]
 800e3b4:	220a      	movs	r2, #10
 800e3b6:	0030      	movs	r0, r6
 800e3b8:	3b30      	subs	r3, #48	; 0x30
 800e3ba:	f7ff ff8f 	bl	800e2dc <__multadd>
 800e3be:	3701      	adds	r7, #1
 800e3c0:	0001      	movs	r1, r0
 800e3c2:	42a7      	cmp	r7, r4
 800e3c4:	d1f5      	bne.n	800e3b2 <__s2b+0x4e>
 800e3c6:	002c      	movs	r4, r5
 800e3c8:	9b00      	ldr	r3, [sp, #0]
 800e3ca:	3c08      	subs	r4, #8
 800e3cc:	191c      	adds	r4, r3, r4
 800e3ce:	002f      	movs	r7, r5
 800e3d0:	9b01      	ldr	r3, [sp, #4]
 800e3d2:	429f      	cmp	r7, r3
 800e3d4:	db04      	blt.n	800e3e0 <__s2b+0x7c>
 800e3d6:	0008      	movs	r0, r1
 800e3d8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800e3da:	2509      	movs	r5, #9
 800e3dc:	340a      	adds	r4, #10
 800e3de:	e7f6      	b.n	800e3ce <__s2b+0x6a>
 800e3e0:	1b63      	subs	r3, r4, r5
 800e3e2:	5ddb      	ldrb	r3, [r3, r7]
 800e3e4:	220a      	movs	r2, #10
 800e3e6:	0030      	movs	r0, r6
 800e3e8:	3b30      	subs	r3, #48	; 0x30
 800e3ea:	f7ff ff77 	bl	800e2dc <__multadd>
 800e3ee:	3701      	adds	r7, #1
 800e3f0:	0001      	movs	r1, r0
 800e3f2:	e7ed      	b.n	800e3d0 <__s2b+0x6c>
 800e3f4:	080101bc 	.word	0x080101bc
 800e3f8:	080102b0 	.word	0x080102b0

0800e3fc <__hi0bits>:
 800e3fc:	0003      	movs	r3, r0
 800e3fe:	0c02      	lsrs	r2, r0, #16
 800e400:	2000      	movs	r0, #0
 800e402:	4282      	cmp	r2, r0
 800e404:	d101      	bne.n	800e40a <__hi0bits+0xe>
 800e406:	041b      	lsls	r3, r3, #16
 800e408:	3010      	adds	r0, #16
 800e40a:	0e1a      	lsrs	r2, r3, #24
 800e40c:	d101      	bne.n	800e412 <__hi0bits+0x16>
 800e40e:	3008      	adds	r0, #8
 800e410:	021b      	lsls	r3, r3, #8
 800e412:	0f1a      	lsrs	r2, r3, #28
 800e414:	d101      	bne.n	800e41a <__hi0bits+0x1e>
 800e416:	3004      	adds	r0, #4
 800e418:	011b      	lsls	r3, r3, #4
 800e41a:	0f9a      	lsrs	r2, r3, #30
 800e41c:	d101      	bne.n	800e422 <__hi0bits+0x26>
 800e41e:	3002      	adds	r0, #2
 800e420:	009b      	lsls	r3, r3, #2
 800e422:	2b00      	cmp	r3, #0
 800e424:	db03      	blt.n	800e42e <__hi0bits+0x32>
 800e426:	3001      	adds	r0, #1
 800e428:	005b      	lsls	r3, r3, #1
 800e42a:	d400      	bmi.n	800e42e <__hi0bits+0x32>
 800e42c:	2020      	movs	r0, #32
 800e42e:	4770      	bx	lr

0800e430 <__lo0bits>:
 800e430:	6803      	ldr	r3, [r0, #0]
 800e432:	0002      	movs	r2, r0
 800e434:	2107      	movs	r1, #7
 800e436:	0018      	movs	r0, r3
 800e438:	4008      	ands	r0, r1
 800e43a:	420b      	tst	r3, r1
 800e43c:	d00d      	beq.n	800e45a <__lo0bits+0x2a>
 800e43e:	3906      	subs	r1, #6
 800e440:	2000      	movs	r0, #0
 800e442:	420b      	tst	r3, r1
 800e444:	d105      	bne.n	800e452 <__lo0bits+0x22>
 800e446:	3002      	adds	r0, #2
 800e448:	4203      	tst	r3, r0
 800e44a:	d003      	beq.n	800e454 <__lo0bits+0x24>
 800e44c:	40cb      	lsrs	r3, r1
 800e44e:	0008      	movs	r0, r1
 800e450:	6013      	str	r3, [r2, #0]
 800e452:	4770      	bx	lr
 800e454:	089b      	lsrs	r3, r3, #2
 800e456:	6013      	str	r3, [r2, #0]
 800e458:	e7fb      	b.n	800e452 <__lo0bits+0x22>
 800e45a:	b299      	uxth	r1, r3
 800e45c:	2900      	cmp	r1, #0
 800e45e:	d101      	bne.n	800e464 <__lo0bits+0x34>
 800e460:	2010      	movs	r0, #16
 800e462:	0c1b      	lsrs	r3, r3, #16
 800e464:	b2d9      	uxtb	r1, r3
 800e466:	2900      	cmp	r1, #0
 800e468:	d101      	bne.n	800e46e <__lo0bits+0x3e>
 800e46a:	3008      	adds	r0, #8
 800e46c:	0a1b      	lsrs	r3, r3, #8
 800e46e:	0719      	lsls	r1, r3, #28
 800e470:	d101      	bne.n	800e476 <__lo0bits+0x46>
 800e472:	3004      	adds	r0, #4
 800e474:	091b      	lsrs	r3, r3, #4
 800e476:	0799      	lsls	r1, r3, #30
 800e478:	d101      	bne.n	800e47e <__lo0bits+0x4e>
 800e47a:	3002      	adds	r0, #2
 800e47c:	089b      	lsrs	r3, r3, #2
 800e47e:	07d9      	lsls	r1, r3, #31
 800e480:	d4e9      	bmi.n	800e456 <__lo0bits+0x26>
 800e482:	3001      	adds	r0, #1
 800e484:	085b      	lsrs	r3, r3, #1
 800e486:	d1e6      	bne.n	800e456 <__lo0bits+0x26>
 800e488:	2020      	movs	r0, #32
 800e48a:	e7e2      	b.n	800e452 <__lo0bits+0x22>

0800e48c <__i2b>:
 800e48c:	b510      	push	{r4, lr}
 800e48e:	000c      	movs	r4, r1
 800e490:	2101      	movs	r1, #1
 800e492:	f7ff febb 	bl	800e20c <_Balloc>
 800e496:	2800      	cmp	r0, #0
 800e498:	d106      	bne.n	800e4a8 <__i2b+0x1c>
 800e49a:	21a0      	movs	r1, #160	; 0xa0
 800e49c:	0002      	movs	r2, r0
 800e49e:	4b04      	ldr	r3, [pc, #16]	; (800e4b0 <__i2b+0x24>)
 800e4a0:	4804      	ldr	r0, [pc, #16]	; (800e4b4 <__i2b+0x28>)
 800e4a2:	0049      	lsls	r1, r1, #1
 800e4a4:	f001 f85c 	bl	800f560 <__assert_func>
 800e4a8:	2301      	movs	r3, #1
 800e4aa:	6144      	str	r4, [r0, #20]
 800e4ac:	6103      	str	r3, [r0, #16]
 800e4ae:	bd10      	pop	{r4, pc}
 800e4b0:	080101bc 	.word	0x080101bc
 800e4b4:	080102b0 	.word	0x080102b0

0800e4b8 <__multiply>:
 800e4b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e4ba:	690b      	ldr	r3, [r1, #16]
 800e4bc:	0014      	movs	r4, r2
 800e4be:	6912      	ldr	r2, [r2, #16]
 800e4c0:	000d      	movs	r5, r1
 800e4c2:	b089      	sub	sp, #36	; 0x24
 800e4c4:	4293      	cmp	r3, r2
 800e4c6:	da01      	bge.n	800e4cc <__multiply+0x14>
 800e4c8:	0025      	movs	r5, r4
 800e4ca:	000c      	movs	r4, r1
 800e4cc:	692f      	ldr	r7, [r5, #16]
 800e4ce:	6926      	ldr	r6, [r4, #16]
 800e4d0:	6869      	ldr	r1, [r5, #4]
 800e4d2:	19bb      	adds	r3, r7, r6
 800e4d4:	9302      	str	r3, [sp, #8]
 800e4d6:	68ab      	ldr	r3, [r5, #8]
 800e4d8:	19ba      	adds	r2, r7, r6
 800e4da:	4293      	cmp	r3, r2
 800e4dc:	da00      	bge.n	800e4e0 <__multiply+0x28>
 800e4de:	3101      	adds	r1, #1
 800e4e0:	f7ff fe94 	bl	800e20c <_Balloc>
 800e4e4:	9001      	str	r0, [sp, #4]
 800e4e6:	2800      	cmp	r0, #0
 800e4e8:	d106      	bne.n	800e4f8 <__multiply+0x40>
 800e4ea:	215e      	movs	r1, #94	; 0x5e
 800e4ec:	0002      	movs	r2, r0
 800e4ee:	4b48      	ldr	r3, [pc, #288]	; (800e610 <__multiply+0x158>)
 800e4f0:	4848      	ldr	r0, [pc, #288]	; (800e614 <__multiply+0x15c>)
 800e4f2:	31ff      	adds	r1, #255	; 0xff
 800e4f4:	f001 f834 	bl	800f560 <__assert_func>
 800e4f8:	9b01      	ldr	r3, [sp, #4]
 800e4fa:	2200      	movs	r2, #0
 800e4fc:	3314      	adds	r3, #20
 800e4fe:	469c      	mov	ip, r3
 800e500:	19bb      	adds	r3, r7, r6
 800e502:	009b      	lsls	r3, r3, #2
 800e504:	4463      	add	r3, ip
 800e506:	9303      	str	r3, [sp, #12]
 800e508:	4663      	mov	r3, ip
 800e50a:	9903      	ldr	r1, [sp, #12]
 800e50c:	428b      	cmp	r3, r1
 800e50e:	d32c      	bcc.n	800e56a <__multiply+0xb2>
 800e510:	002b      	movs	r3, r5
 800e512:	0022      	movs	r2, r4
 800e514:	3314      	adds	r3, #20
 800e516:	00bf      	lsls	r7, r7, #2
 800e518:	3214      	adds	r2, #20
 800e51a:	9306      	str	r3, [sp, #24]
 800e51c:	00b6      	lsls	r6, r6, #2
 800e51e:	19db      	adds	r3, r3, r7
 800e520:	9304      	str	r3, [sp, #16]
 800e522:	1993      	adds	r3, r2, r6
 800e524:	9307      	str	r3, [sp, #28]
 800e526:	2304      	movs	r3, #4
 800e528:	9305      	str	r3, [sp, #20]
 800e52a:	002b      	movs	r3, r5
 800e52c:	9904      	ldr	r1, [sp, #16]
 800e52e:	3315      	adds	r3, #21
 800e530:	9200      	str	r2, [sp, #0]
 800e532:	4299      	cmp	r1, r3
 800e534:	d305      	bcc.n	800e542 <__multiply+0x8a>
 800e536:	1b4b      	subs	r3, r1, r5
 800e538:	3b15      	subs	r3, #21
 800e53a:	089b      	lsrs	r3, r3, #2
 800e53c:	3301      	adds	r3, #1
 800e53e:	009b      	lsls	r3, r3, #2
 800e540:	9305      	str	r3, [sp, #20]
 800e542:	9b07      	ldr	r3, [sp, #28]
 800e544:	9a00      	ldr	r2, [sp, #0]
 800e546:	429a      	cmp	r2, r3
 800e548:	d311      	bcc.n	800e56e <__multiply+0xb6>
 800e54a:	9b02      	ldr	r3, [sp, #8]
 800e54c:	2b00      	cmp	r3, #0
 800e54e:	dd06      	ble.n	800e55e <__multiply+0xa6>
 800e550:	9b03      	ldr	r3, [sp, #12]
 800e552:	3b04      	subs	r3, #4
 800e554:	9303      	str	r3, [sp, #12]
 800e556:	681b      	ldr	r3, [r3, #0]
 800e558:	9300      	str	r3, [sp, #0]
 800e55a:	2b00      	cmp	r3, #0
 800e55c:	d054      	beq.n	800e608 <__multiply+0x150>
 800e55e:	9b01      	ldr	r3, [sp, #4]
 800e560:	9a02      	ldr	r2, [sp, #8]
 800e562:	0018      	movs	r0, r3
 800e564:	611a      	str	r2, [r3, #16]
 800e566:	b009      	add	sp, #36	; 0x24
 800e568:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e56a:	c304      	stmia	r3!, {r2}
 800e56c:	e7cd      	b.n	800e50a <__multiply+0x52>
 800e56e:	9b00      	ldr	r3, [sp, #0]
 800e570:	681b      	ldr	r3, [r3, #0]
 800e572:	b298      	uxth	r0, r3
 800e574:	2800      	cmp	r0, #0
 800e576:	d01c      	beq.n	800e5b2 <__multiply+0xfa>
 800e578:	4667      	mov	r7, ip
 800e57a:	2400      	movs	r4, #0
 800e57c:	9e06      	ldr	r6, [sp, #24]
 800e57e:	ce02      	ldmia	r6!, {r1}
 800e580:	683a      	ldr	r2, [r7, #0]
 800e582:	b28b      	uxth	r3, r1
 800e584:	4343      	muls	r3, r0
 800e586:	0c09      	lsrs	r1, r1, #16
 800e588:	4341      	muls	r1, r0
 800e58a:	b292      	uxth	r2, r2
 800e58c:	189b      	adds	r3, r3, r2
 800e58e:	191b      	adds	r3, r3, r4
 800e590:	000c      	movs	r4, r1
 800e592:	683a      	ldr	r2, [r7, #0]
 800e594:	0c11      	lsrs	r1, r2, #16
 800e596:	1861      	adds	r1, r4, r1
 800e598:	0c1c      	lsrs	r4, r3, #16
 800e59a:	1909      	adds	r1, r1, r4
 800e59c:	0c0c      	lsrs	r4, r1, #16
 800e59e:	b29b      	uxth	r3, r3
 800e5a0:	0409      	lsls	r1, r1, #16
 800e5a2:	430b      	orrs	r3, r1
 800e5a4:	c708      	stmia	r7!, {r3}
 800e5a6:	9b04      	ldr	r3, [sp, #16]
 800e5a8:	42b3      	cmp	r3, r6
 800e5aa:	d8e8      	bhi.n	800e57e <__multiply+0xc6>
 800e5ac:	4663      	mov	r3, ip
 800e5ae:	9a05      	ldr	r2, [sp, #20]
 800e5b0:	509c      	str	r4, [r3, r2]
 800e5b2:	9b00      	ldr	r3, [sp, #0]
 800e5b4:	681b      	ldr	r3, [r3, #0]
 800e5b6:	0c1e      	lsrs	r6, r3, #16
 800e5b8:	d020      	beq.n	800e5fc <__multiply+0x144>
 800e5ba:	4663      	mov	r3, ip
 800e5bc:	002c      	movs	r4, r5
 800e5be:	4660      	mov	r0, ip
 800e5c0:	2700      	movs	r7, #0
 800e5c2:	681b      	ldr	r3, [r3, #0]
 800e5c4:	3414      	adds	r4, #20
 800e5c6:	6822      	ldr	r2, [r4, #0]
 800e5c8:	b29b      	uxth	r3, r3
 800e5ca:	b291      	uxth	r1, r2
 800e5cc:	4371      	muls	r1, r6
 800e5ce:	6802      	ldr	r2, [r0, #0]
 800e5d0:	0c12      	lsrs	r2, r2, #16
 800e5d2:	1889      	adds	r1, r1, r2
 800e5d4:	19cf      	adds	r7, r1, r7
 800e5d6:	0439      	lsls	r1, r7, #16
 800e5d8:	430b      	orrs	r3, r1
 800e5da:	6003      	str	r3, [r0, #0]
 800e5dc:	cc02      	ldmia	r4!, {r1}
 800e5de:	6843      	ldr	r3, [r0, #4]
 800e5e0:	0c09      	lsrs	r1, r1, #16
 800e5e2:	4371      	muls	r1, r6
 800e5e4:	b29b      	uxth	r3, r3
 800e5e6:	0c3f      	lsrs	r7, r7, #16
 800e5e8:	18cb      	adds	r3, r1, r3
 800e5ea:	9a04      	ldr	r2, [sp, #16]
 800e5ec:	19db      	adds	r3, r3, r7
 800e5ee:	0c1f      	lsrs	r7, r3, #16
 800e5f0:	3004      	adds	r0, #4
 800e5f2:	42a2      	cmp	r2, r4
 800e5f4:	d8e7      	bhi.n	800e5c6 <__multiply+0x10e>
 800e5f6:	4662      	mov	r2, ip
 800e5f8:	9905      	ldr	r1, [sp, #20]
 800e5fa:	5053      	str	r3, [r2, r1]
 800e5fc:	9b00      	ldr	r3, [sp, #0]
 800e5fe:	3304      	adds	r3, #4
 800e600:	9300      	str	r3, [sp, #0]
 800e602:	2304      	movs	r3, #4
 800e604:	449c      	add	ip, r3
 800e606:	e79c      	b.n	800e542 <__multiply+0x8a>
 800e608:	9b02      	ldr	r3, [sp, #8]
 800e60a:	3b01      	subs	r3, #1
 800e60c:	9302      	str	r3, [sp, #8]
 800e60e:	e79c      	b.n	800e54a <__multiply+0x92>
 800e610:	080101bc 	.word	0x080101bc
 800e614:	080102b0 	.word	0x080102b0

0800e618 <__pow5mult>:
 800e618:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e61a:	2303      	movs	r3, #3
 800e61c:	0015      	movs	r5, r2
 800e61e:	0007      	movs	r7, r0
 800e620:	000e      	movs	r6, r1
 800e622:	401a      	ands	r2, r3
 800e624:	421d      	tst	r5, r3
 800e626:	d008      	beq.n	800e63a <__pow5mult+0x22>
 800e628:	4925      	ldr	r1, [pc, #148]	; (800e6c0 <__pow5mult+0xa8>)
 800e62a:	3a01      	subs	r2, #1
 800e62c:	0092      	lsls	r2, r2, #2
 800e62e:	5852      	ldr	r2, [r2, r1]
 800e630:	2300      	movs	r3, #0
 800e632:	0031      	movs	r1, r6
 800e634:	f7ff fe52 	bl	800e2dc <__multadd>
 800e638:	0006      	movs	r6, r0
 800e63a:	10ad      	asrs	r5, r5, #2
 800e63c:	d03d      	beq.n	800e6ba <__pow5mult+0xa2>
 800e63e:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 800e640:	2c00      	cmp	r4, #0
 800e642:	d10f      	bne.n	800e664 <__pow5mult+0x4c>
 800e644:	2010      	movs	r0, #16
 800e646:	f7ff fdb1 	bl	800e1ac <malloc>
 800e64a:	1e02      	subs	r2, r0, #0
 800e64c:	6278      	str	r0, [r7, #36]	; 0x24
 800e64e:	d105      	bne.n	800e65c <__pow5mult+0x44>
 800e650:	21d7      	movs	r1, #215	; 0xd7
 800e652:	4b1c      	ldr	r3, [pc, #112]	; (800e6c4 <__pow5mult+0xac>)
 800e654:	481c      	ldr	r0, [pc, #112]	; (800e6c8 <__pow5mult+0xb0>)
 800e656:	0049      	lsls	r1, r1, #1
 800e658:	f000 ff82 	bl	800f560 <__assert_func>
 800e65c:	6044      	str	r4, [r0, #4]
 800e65e:	6084      	str	r4, [r0, #8]
 800e660:	6004      	str	r4, [r0, #0]
 800e662:	60c4      	str	r4, [r0, #12]
 800e664:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e666:	689c      	ldr	r4, [r3, #8]
 800e668:	9301      	str	r3, [sp, #4]
 800e66a:	2c00      	cmp	r4, #0
 800e66c:	d108      	bne.n	800e680 <__pow5mult+0x68>
 800e66e:	0038      	movs	r0, r7
 800e670:	4916      	ldr	r1, [pc, #88]	; (800e6cc <__pow5mult+0xb4>)
 800e672:	f7ff ff0b 	bl	800e48c <__i2b>
 800e676:	9b01      	ldr	r3, [sp, #4]
 800e678:	0004      	movs	r4, r0
 800e67a:	6098      	str	r0, [r3, #8]
 800e67c:	2300      	movs	r3, #0
 800e67e:	6003      	str	r3, [r0, #0]
 800e680:	2301      	movs	r3, #1
 800e682:	421d      	tst	r5, r3
 800e684:	d00a      	beq.n	800e69c <__pow5mult+0x84>
 800e686:	0031      	movs	r1, r6
 800e688:	0022      	movs	r2, r4
 800e68a:	0038      	movs	r0, r7
 800e68c:	f7ff ff14 	bl	800e4b8 <__multiply>
 800e690:	0031      	movs	r1, r6
 800e692:	9001      	str	r0, [sp, #4]
 800e694:	0038      	movs	r0, r7
 800e696:	f7ff fdfd 	bl	800e294 <_Bfree>
 800e69a:	9e01      	ldr	r6, [sp, #4]
 800e69c:	106d      	asrs	r5, r5, #1
 800e69e:	d00c      	beq.n	800e6ba <__pow5mult+0xa2>
 800e6a0:	6820      	ldr	r0, [r4, #0]
 800e6a2:	2800      	cmp	r0, #0
 800e6a4:	d107      	bne.n	800e6b6 <__pow5mult+0x9e>
 800e6a6:	0022      	movs	r2, r4
 800e6a8:	0021      	movs	r1, r4
 800e6aa:	0038      	movs	r0, r7
 800e6ac:	f7ff ff04 	bl	800e4b8 <__multiply>
 800e6b0:	2300      	movs	r3, #0
 800e6b2:	6020      	str	r0, [r4, #0]
 800e6b4:	6003      	str	r3, [r0, #0]
 800e6b6:	0004      	movs	r4, r0
 800e6b8:	e7e2      	b.n	800e680 <__pow5mult+0x68>
 800e6ba:	0030      	movs	r0, r6
 800e6bc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800e6be:	46c0      	nop			; (mov r8, r8)
 800e6c0:	08010400 	.word	0x08010400
 800e6c4:	08010146 	.word	0x08010146
 800e6c8:	080102b0 	.word	0x080102b0
 800e6cc:	00000271 	.word	0x00000271

0800e6d0 <__lshift>:
 800e6d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e6d2:	000c      	movs	r4, r1
 800e6d4:	0017      	movs	r7, r2
 800e6d6:	6923      	ldr	r3, [r4, #16]
 800e6d8:	1155      	asrs	r5, r2, #5
 800e6da:	b087      	sub	sp, #28
 800e6dc:	18eb      	adds	r3, r5, r3
 800e6de:	9302      	str	r3, [sp, #8]
 800e6e0:	3301      	adds	r3, #1
 800e6e2:	9301      	str	r3, [sp, #4]
 800e6e4:	6849      	ldr	r1, [r1, #4]
 800e6e6:	68a3      	ldr	r3, [r4, #8]
 800e6e8:	9004      	str	r0, [sp, #16]
 800e6ea:	9a01      	ldr	r2, [sp, #4]
 800e6ec:	4293      	cmp	r3, r2
 800e6ee:	db11      	blt.n	800e714 <__lshift+0x44>
 800e6f0:	9804      	ldr	r0, [sp, #16]
 800e6f2:	f7ff fd8b 	bl	800e20c <_Balloc>
 800e6f6:	0002      	movs	r2, r0
 800e6f8:	2300      	movs	r3, #0
 800e6fa:	3214      	adds	r2, #20
 800e6fc:	0006      	movs	r6, r0
 800e6fe:	0011      	movs	r1, r2
 800e700:	9203      	str	r2, [sp, #12]
 800e702:	4298      	cmp	r0, r3
 800e704:	d10d      	bne.n	800e722 <__lshift+0x52>
 800e706:	21da      	movs	r1, #218	; 0xda
 800e708:	0002      	movs	r2, r0
 800e70a:	4b27      	ldr	r3, [pc, #156]	; (800e7a8 <__lshift+0xd8>)
 800e70c:	4827      	ldr	r0, [pc, #156]	; (800e7ac <__lshift+0xdc>)
 800e70e:	31ff      	adds	r1, #255	; 0xff
 800e710:	f000 ff26 	bl	800f560 <__assert_func>
 800e714:	3101      	adds	r1, #1
 800e716:	005b      	lsls	r3, r3, #1
 800e718:	e7e7      	b.n	800e6ea <__lshift+0x1a>
 800e71a:	2200      	movs	r2, #0
 800e71c:	0098      	lsls	r0, r3, #2
 800e71e:	500a      	str	r2, [r1, r0]
 800e720:	3301      	adds	r3, #1
 800e722:	42ab      	cmp	r3, r5
 800e724:	dbf9      	blt.n	800e71a <__lshift+0x4a>
 800e726:	43eb      	mvns	r3, r5
 800e728:	17db      	asrs	r3, r3, #31
 800e72a:	401d      	ands	r5, r3
 800e72c:	9b03      	ldr	r3, [sp, #12]
 800e72e:	00ad      	lsls	r5, r5, #2
 800e730:	211f      	movs	r1, #31
 800e732:	0038      	movs	r0, r7
 800e734:	195d      	adds	r5, r3, r5
 800e736:	0023      	movs	r3, r4
 800e738:	6922      	ldr	r2, [r4, #16]
 800e73a:	3314      	adds	r3, #20
 800e73c:	0092      	lsls	r2, r2, #2
 800e73e:	4008      	ands	r0, r1
 800e740:	4684      	mov	ip, r0
 800e742:	189a      	adds	r2, r3, r2
 800e744:	420f      	tst	r7, r1
 800e746:	d02a      	beq.n	800e79e <__lshift+0xce>
 800e748:	3101      	adds	r1, #1
 800e74a:	1a09      	subs	r1, r1, r0
 800e74c:	9105      	str	r1, [sp, #20]
 800e74e:	2100      	movs	r1, #0
 800e750:	9503      	str	r5, [sp, #12]
 800e752:	4667      	mov	r7, ip
 800e754:	6818      	ldr	r0, [r3, #0]
 800e756:	40b8      	lsls	r0, r7
 800e758:	4301      	orrs	r1, r0
 800e75a:	9803      	ldr	r0, [sp, #12]
 800e75c:	c002      	stmia	r0!, {r1}
 800e75e:	cb02      	ldmia	r3!, {r1}
 800e760:	9003      	str	r0, [sp, #12]
 800e762:	9805      	ldr	r0, [sp, #20]
 800e764:	40c1      	lsrs	r1, r0
 800e766:	429a      	cmp	r2, r3
 800e768:	d8f3      	bhi.n	800e752 <__lshift+0x82>
 800e76a:	0020      	movs	r0, r4
 800e76c:	3015      	adds	r0, #21
 800e76e:	2304      	movs	r3, #4
 800e770:	4282      	cmp	r2, r0
 800e772:	d304      	bcc.n	800e77e <__lshift+0xae>
 800e774:	1b13      	subs	r3, r2, r4
 800e776:	3b15      	subs	r3, #21
 800e778:	089b      	lsrs	r3, r3, #2
 800e77a:	3301      	adds	r3, #1
 800e77c:	009b      	lsls	r3, r3, #2
 800e77e:	50e9      	str	r1, [r5, r3]
 800e780:	2900      	cmp	r1, #0
 800e782:	d002      	beq.n	800e78a <__lshift+0xba>
 800e784:	9b02      	ldr	r3, [sp, #8]
 800e786:	3302      	adds	r3, #2
 800e788:	9301      	str	r3, [sp, #4]
 800e78a:	9b01      	ldr	r3, [sp, #4]
 800e78c:	9804      	ldr	r0, [sp, #16]
 800e78e:	3b01      	subs	r3, #1
 800e790:	0021      	movs	r1, r4
 800e792:	6133      	str	r3, [r6, #16]
 800e794:	f7ff fd7e 	bl	800e294 <_Bfree>
 800e798:	0030      	movs	r0, r6
 800e79a:	b007      	add	sp, #28
 800e79c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e79e:	cb02      	ldmia	r3!, {r1}
 800e7a0:	c502      	stmia	r5!, {r1}
 800e7a2:	429a      	cmp	r2, r3
 800e7a4:	d8fb      	bhi.n	800e79e <__lshift+0xce>
 800e7a6:	e7f0      	b.n	800e78a <__lshift+0xba>
 800e7a8:	080101bc 	.word	0x080101bc
 800e7ac:	080102b0 	.word	0x080102b0

0800e7b0 <__mcmp>:
 800e7b0:	6902      	ldr	r2, [r0, #16]
 800e7b2:	690b      	ldr	r3, [r1, #16]
 800e7b4:	b530      	push	{r4, r5, lr}
 800e7b6:	0004      	movs	r4, r0
 800e7b8:	1ad0      	subs	r0, r2, r3
 800e7ba:	429a      	cmp	r2, r3
 800e7bc:	d10d      	bne.n	800e7da <__mcmp+0x2a>
 800e7be:	009b      	lsls	r3, r3, #2
 800e7c0:	3414      	adds	r4, #20
 800e7c2:	3114      	adds	r1, #20
 800e7c4:	18e2      	adds	r2, r4, r3
 800e7c6:	18c9      	adds	r1, r1, r3
 800e7c8:	3a04      	subs	r2, #4
 800e7ca:	3904      	subs	r1, #4
 800e7cc:	6815      	ldr	r5, [r2, #0]
 800e7ce:	680b      	ldr	r3, [r1, #0]
 800e7d0:	429d      	cmp	r5, r3
 800e7d2:	d003      	beq.n	800e7dc <__mcmp+0x2c>
 800e7d4:	2001      	movs	r0, #1
 800e7d6:	429d      	cmp	r5, r3
 800e7d8:	d303      	bcc.n	800e7e2 <__mcmp+0x32>
 800e7da:	bd30      	pop	{r4, r5, pc}
 800e7dc:	4294      	cmp	r4, r2
 800e7de:	d3f3      	bcc.n	800e7c8 <__mcmp+0x18>
 800e7e0:	e7fb      	b.n	800e7da <__mcmp+0x2a>
 800e7e2:	4240      	negs	r0, r0
 800e7e4:	e7f9      	b.n	800e7da <__mcmp+0x2a>
	...

0800e7e8 <__mdiff>:
 800e7e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e7ea:	000e      	movs	r6, r1
 800e7ec:	0007      	movs	r7, r0
 800e7ee:	0011      	movs	r1, r2
 800e7f0:	0030      	movs	r0, r6
 800e7f2:	b087      	sub	sp, #28
 800e7f4:	0014      	movs	r4, r2
 800e7f6:	f7ff ffdb 	bl	800e7b0 <__mcmp>
 800e7fa:	1e05      	subs	r5, r0, #0
 800e7fc:	d110      	bne.n	800e820 <__mdiff+0x38>
 800e7fe:	0001      	movs	r1, r0
 800e800:	0038      	movs	r0, r7
 800e802:	f7ff fd03 	bl	800e20c <_Balloc>
 800e806:	1e02      	subs	r2, r0, #0
 800e808:	d104      	bne.n	800e814 <__mdiff+0x2c>
 800e80a:	4b40      	ldr	r3, [pc, #256]	; (800e90c <__mdiff+0x124>)
 800e80c:	4940      	ldr	r1, [pc, #256]	; (800e910 <__mdiff+0x128>)
 800e80e:	4841      	ldr	r0, [pc, #260]	; (800e914 <__mdiff+0x12c>)
 800e810:	f000 fea6 	bl	800f560 <__assert_func>
 800e814:	2301      	movs	r3, #1
 800e816:	6145      	str	r5, [r0, #20]
 800e818:	6103      	str	r3, [r0, #16]
 800e81a:	0010      	movs	r0, r2
 800e81c:	b007      	add	sp, #28
 800e81e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e820:	2301      	movs	r3, #1
 800e822:	9301      	str	r3, [sp, #4]
 800e824:	2800      	cmp	r0, #0
 800e826:	db04      	blt.n	800e832 <__mdiff+0x4a>
 800e828:	0023      	movs	r3, r4
 800e82a:	0034      	movs	r4, r6
 800e82c:	001e      	movs	r6, r3
 800e82e:	2300      	movs	r3, #0
 800e830:	9301      	str	r3, [sp, #4]
 800e832:	0038      	movs	r0, r7
 800e834:	6861      	ldr	r1, [r4, #4]
 800e836:	f7ff fce9 	bl	800e20c <_Balloc>
 800e83a:	1e02      	subs	r2, r0, #0
 800e83c:	d103      	bne.n	800e846 <__mdiff+0x5e>
 800e83e:	2190      	movs	r1, #144	; 0x90
 800e840:	4b32      	ldr	r3, [pc, #200]	; (800e90c <__mdiff+0x124>)
 800e842:	0089      	lsls	r1, r1, #2
 800e844:	e7e3      	b.n	800e80e <__mdiff+0x26>
 800e846:	9b01      	ldr	r3, [sp, #4]
 800e848:	2700      	movs	r7, #0
 800e84a:	60c3      	str	r3, [r0, #12]
 800e84c:	6920      	ldr	r0, [r4, #16]
 800e84e:	3414      	adds	r4, #20
 800e850:	9401      	str	r4, [sp, #4]
 800e852:	9b01      	ldr	r3, [sp, #4]
 800e854:	0084      	lsls	r4, r0, #2
 800e856:	191b      	adds	r3, r3, r4
 800e858:	0034      	movs	r4, r6
 800e85a:	9302      	str	r3, [sp, #8]
 800e85c:	6933      	ldr	r3, [r6, #16]
 800e85e:	3414      	adds	r4, #20
 800e860:	0099      	lsls	r1, r3, #2
 800e862:	1863      	adds	r3, r4, r1
 800e864:	9303      	str	r3, [sp, #12]
 800e866:	0013      	movs	r3, r2
 800e868:	3314      	adds	r3, #20
 800e86a:	469c      	mov	ip, r3
 800e86c:	9305      	str	r3, [sp, #20]
 800e86e:	9b01      	ldr	r3, [sp, #4]
 800e870:	9304      	str	r3, [sp, #16]
 800e872:	9b04      	ldr	r3, [sp, #16]
 800e874:	cc02      	ldmia	r4!, {r1}
 800e876:	cb20      	ldmia	r3!, {r5}
 800e878:	9304      	str	r3, [sp, #16]
 800e87a:	b2ab      	uxth	r3, r5
 800e87c:	19df      	adds	r7, r3, r7
 800e87e:	b28b      	uxth	r3, r1
 800e880:	1afb      	subs	r3, r7, r3
 800e882:	0c2d      	lsrs	r5, r5, #16
 800e884:	0c09      	lsrs	r1, r1, #16
 800e886:	1a69      	subs	r1, r5, r1
 800e888:	141d      	asrs	r5, r3, #16
 800e88a:	1949      	adds	r1, r1, r5
 800e88c:	140f      	asrs	r7, r1, #16
 800e88e:	b29b      	uxth	r3, r3
 800e890:	0409      	lsls	r1, r1, #16
 800e892:	430b      	orrs	r3, r1
 800e894:	4661      	mov	r1, ip
 800e896:	c108      	stmia	r1!, {r3}
 800e898:	9b03      	ldr	r3, [sp, #12]
 800e89a:	468c      	mov	ip, r1
 800e89c:	42a3      	cmp	r3, r4
 800e89e:	d8e8      	bhi.n	800e872 <__mdiff+0x8a>
 800e8a0:	0031      	movs	r1, r6
 800e8a2:	9c03      	ldr	r4, [sp, #12]
 800e8a4:	3115      	adds	r1, #21
 800e8a6:	2304      	movs	r3, #4
 800e8a8:	428c      	cmp	r4, r1
 800e8aa:	d304      	bcc.n	800e8b6 <__mdiff+0xce>
 800e8ac:	1ba3      	subs	r3, r4, r6
 800e8ae:	3b15      	subs	r3, #21
 800e8b0:	089b      	lsrs	r3, r3, #2
 800e8b2:	3301      	adds	r3, #1
 800e8b4:	009b      	lsls	r3, r3, #2
 800e8b6:	9901      	ldr	r1, [sp, #4]
 800e8b8:	18cc      	adds	r4, r1, r3
 800e8ba:	9905      	ldr	r1, [sp, #20]
 800e8bc:	0026      	movs	r6, r4
 800e8be:	18cb      	adds	r3, r1, r3
 800e8c0:	469c      	mov	ip, r3
 800e8c2:	9902      	ldr	r1, [sp, #8]
 800e8c4:	428e      	cmp	r6, r1
 800e8c6:	d310      	bcc.n	800e8ea <__mdiff+0x102>
 800e8c8:	9e02      	ldr	r6, [sp, #8]
 800e8ca:	1ee5      	subs	r5, r4, #3
 800e8cc:	2100      	movs	r1, #0
 800e8ce:	42ae      	cmp	r6, r5
 800e8d0:	d304      	bcc.n	800e8dc <__mdiff+0xf4>
 800e8d2:	0031      	movs	r1, r6
 800e8d4:	3103      	adds	r1, #3
 800e8d6:	1b09      	subs	r1, r1, r4
 800e8d8:	0889      	lsrs	r1, r1, #2
 800e8da:	0089      	lsls	r1, r1, #2
 800e8dc:	185b      	adds	r3, r3, r1
 800e8de:	3b04      	subs	r3, #4
 800e8e0:	6819      	ldr	r1, [r3, #0]
 800e8e2:	2900      	cmp	r1, #0
 800e8e4:	d00f      	beq.n	800e906 <__mdiff+0x11e>
 800e8e6:	6110      	str	r0, [r2, #16]
 800e8e8:	e797      	b.n	800e81a <__mdiff+0x32>
 800e8ea:	ce02      	ldmia	r6!, {r1}
 800e8ec:	b28d      	uxth	r5, r1
 800e8ee:	19ed      	adds	r5, r5, r7
 800e8f0:	0c0f      	lsrs	r7, r1, #16
 800e8f2:	1429      	asrs	r1, r5, #16
 800e8f4:	1879      	adds	r1, r7, r1
 800e8f6:	140f      	asrs	r7, r1, #16
 800e8f8:	b2ad      	uxth	r5, r5
 800e8fa:	0409      	lsls	r1, r1, #16
 800e8fc:	430d      	orrs	r5, r1
 800e8fe:	4661      	mov	r1, ip
 800e900:	c120      	stmia	r1!, {r5}
 800e902:	468c      	mov	ip, r1
 800e904:	e7dd      	b.n	800e8c2 <__mdiff+0xda>
 800e906:	3801      	subs	r0, #1
 800e908:	e7e9      	b.n	800e8de <__mdiff+0xf6>
 800e90a:	46c0      	nop			; (mov r8, r8)
 800e90c:	080101bc 	.word	0x080101bc
 800e910:	00000232 	.word	0x00000232
 800e914:	080102b0 	.word	0x080102b0

0800e918 <__ulp>:
 800e918:	4b0f      	ldr	r3, [pc, #60]	; (800e958 <__ulp+0x40>)
 800e91a:	4019      	ands	r1, r3
 800e91c:	4b0f      	ldr	r3, [pc, #60]	; (800e95c <__ulp+0x44>)
 800e91e:	18c9      	adds	r1, r1, r3
 800e920:	2900      	cmp	r1, #0
 800e922:	dd04      	ble.n	800e92e <__ulp+0x16>
 800e924:	2200      	movs	r2, #0
 800e926:	000b      	movs	r3, r1
 800e928:	0010      	movs	r0, r2
 800e92a:	0019      	movs	r1, r3
 800e92c:	4770      	bx	lr
 800e92e:	4249      	negs	r1, r1
 800e930:	2200      	movs	r2, #0
 800e932:	2300      	movs	r3, #0
 800e934:	1509      	asrs	r1, r1, #20
 800e936:	2913      	cmp	r1, #19
 800e938:	dc04      	bgt.n	800e944 <__ulp+0x2c>
 800e93a:	2080      	movs	r0, #128	; 0x80
 800e93c:	0300      	lsls	r0, r0, #12
 800e93e:	4108      	asrs	r0, r1
 800e940:	0003      	movs	r3, r0
 800e942:	e7f1      	b.n	800e928 <__ulp+0x10>
 800e944:	3914      	subs	r1, #20
 800e946:	2001      	movs	r0, #1
 800e948:	291e      	cmp	r1, #30
 800e94a:	dc02      	bgt.n	800e952 <__ulp+0x3a>
 800e94c:	2080      	movs	r0, #128	; 0x80
 800e94e:	0600      	lsls	r0, r0, #24
 800e950:	40c8      	lsrs	r0, r1
 800e952:	0002      	movs	r2, r0
 800e954:	e7e8      	b.n	800e928 <__ulp+0x10>
 800e956:	46c0      	nop			; (mov r8, r8)
 800e958:	7ff00000 	.word	0x7ff00000
 800e95c:	fcc00000 	.word	0xfcc00000

0800e960 <__b2d>:
 800e960:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e962:	0006      	movs	r6, r0
 800e964:	6903      	ldr	r3, [r0, #16]
 800e966:	3614      	adds	r6, #20
 800e968:	009b      	lsls	r3, r3, #2
 800e96a:	18f3      	adds	r3, r6, r3
 800e96c:	1f1d      	subs	r5, r3, #4
 800e96e:	682c      	ldr	r4, [r5, #0]
 800e970:	000f      	movs	r7, r1
 800e972:	0020      	movs	r0, r4
 800e974:	9301      	str	r3, [sp, #4]
 800e976:	f7ff fd41 	bl	800e3fc <__hi0bits>
 800e97a:	2320      	movs	r3, #32
 800e97c:	1a1b      	subs	r3, r3, r0
 800e97e:	491f      	ldr	r1, [pc, #124]	; (800e9fc <__b2d+0x9c>)
 800e980:	603b      	str	r3, [r7, #0]
 800e982:	280a      	cmp	r0, #10
 800e984:	dc16      	bgt.n	800e9b4 <__b2d+0x54>
 800e986:	230b      	movs	r3, #11
 800e988:	0027      	movs	r7, r4
 800e98a:	1a1b      	subs	r3, r3, r0
 800e98c:	40df      	lsrs	r7, r3
 800e98e:	4339      	orrs	r1, r7
 800e990:	469c      	mov	ip, r3
 800e992:	000b      	movs	r3, r1
 800e994:	2100      	movs	r1, #0
 800e996:	42ae      	cmp	r6, r5
 800e998:	d202      	bcs.n	800e9a0 <__b2d+0x40>
 800e99a:	9901      	ldr	r1, [sp, #4]
 800e99c:	3908      	subs	r1, #8
 800e99e:	6809      	ldr	r1, [r1, #0]
 800e9a0:	3015      	adds	r0, #21
 800e9a2:	4084      	lsls	r4, r0
 800e9a4:	4660      	mov	r0, ip
 800e9a6:	40c1      	lsrs	r1, r0
 800e9a8:	430c      	orrs	r4, r1
 800e9aa:	0022      	movs	r2, r4
 800e9ac:	0010      	movs	r0, r2
 800e9ae:	0019      	movs	r1, r3
 800e9b0:	b003      	add	sp, #12
 800e9b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e9b4:	2700      	movs	r7, #0
 800e9b6:	42ae      	cmp	r6, r5
 800e9b8:	d202      	bcs.n	800e9c0 <__b2d+0x60>
 800e9ba:	9d01      	ldr	r5, [sp, #4]
 800e9bc:	3d08      	subs	r5, #8
 800e9be:	682f      	ldr	r7, [r5, #0]
 800e9c0:	230b      	movs	r3, #11
 800e9c2:	425b      	negs	r3, r3
 800e9c4:	469c      	mov	ip, r3
 800e9c6:	4484      	add	ip, r0
 800e9c8:	280b      	cmp	r0, #11
 800e9ca:	d013      	beq.n	800e9f4 <__b2d+0x94>
 800e9cc:	4663      	mov	r3, ip
 800e9ce:	2020      	movs	r0, #32
 800e9d0:	409c      	lsls	r4, r3
 800e9d2:	1ac0      	subs	r0, r0, r3
 800e9d4:	003b      	movs	r3, r7
 800e9d6:	40c3      	lsrs	r3, r0
 800e9d8:	431c      	orrs	r4, r3
 800e9da:	4321      	orrs	r1, r4
 800e9dc:	000b      	movs	r3, r1
 800e9de:	2100      	movs	r1, #0
 800e9e0:	42b5      	cmp	r5, r6
 800e9e2:	d901      	bls.n	800e9e8 <__b2d+0x88>
 800e9e4:	3d04      	subs	r5, #4
 800e9e6:	6829      	ldr	r1, [r5, #0]
 800e9e8:	4664      	mov	r4, ip
 800e9ea:	40c1      	lsrs	r1, r0
 800e9ec:	40a7      	lsls	r7, r4
 800e9ee:	430f      	orrs	r7, r1
 800e9f0:	003a      	movs	r2, r7
 800e9f2:	e7db      	b.n	800e9ac <__b2d+0x4c>
 800e9f4:	4321      	orrs	r1, r4
 800e9f6:	000b      	movs	r3, r1
 800e9f8:	e7fa      	b.n	800e9f0 <__b2d+0x90>
 800e9fa:	46c0      	nop			; (mov r8, r8)
 800e9fc:	3ff00000 	.word	0x3ff00000

0800ea00 <__d2b>:
 800ea00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ea02:	2101      	movs	r1, #1
 800ea04:	0014      	movs	r4, r2
 800ea06:	001e      	movs	r6, r3
 800ea08:	9f08      	ldr	r7, [sp, #32]
 800ea0a:	f7ff fbff 	bl	800e20c <_Balloc>
 800ea0e:	1e05      	subs	r5, r0, #0
 800ea10:	d105      	bne.n	800ea1e <__d2b+0x1e>
 800ea12:	0002      	movs	r2, r0
 800ea14:	4b26      	ldr	r3, [pc, #152]	; (800eab0 <__d2b+0xb0>)
 800ea16:	4927      	ldr	r1, [pc, #156]	; (800eab4 <__d2b+0xb4>)
 800ea18:	4827      	ldr	r0, [pc, #156]	; (800eab8 <__d2b+0xb8>)
 800ea1a:	f000 fda1 	bl	800f560 <__assert_func>
 800ea1e:	0333      	lsls	r3, r6, #12
 800ea20:	0076      	lsls	r6, r6, #1
 800ea22:	0b1b      	lsrs	r3, r3, #12
 800ea24:	0d76      	lsrs	r6, r6, #21
 800ea26:	d124      	bne.n	800ea72 <__d2b+0x72>
 800ea28:	9301      	str	r3, [sp, #4]
 800ea2a:	2c00      	cmp	r4, #0
 800ea2c:	d027      	beq.n	800ea7e <__d2b+0x7e>
 800ea2e:	4668      	mov	r0, sp
 800ea30:	9400      	str	r4, [sp, #0]
 800ea32:	f7ff fcfd 	bl	800e430 <__lo0bits>
 800ea36:	9c00      	ldr	r4, [sp, #0]
 800ea38:	2800      	cmp	r0, #0
 800ea3a:	d01e      	beq.n	800ea7a <__d2b+0x7a>
 800ea3c:	9b01      	ldr	r3, [sp, #4]
 800ea3e:	2120      	movs	r1, #32
 800ea40:	001a      	movs	r2, r3
 800ea42:	1a09      	subs	r1, r1, r0
 800ea44:	408a      	lsls	r2, r1
 800ea46:	40c3      	lsrs	r3, r0
 800ea48:	4322      	orrs	r2, r4
 800ea4a:	616a      	str	r2, [r5, #20]
 800ea4c:	9301      	str	r3, [sp, #4]
 800ea4e:	9c01      	ldr	r4, [sp, #4]
 800ea50:	61ac      	str	r4, [r5, #24]
 800ea52:	1e63      	subs	r3, r4, #1
 800ea54:	419c      	sbcs	r4, r3
 800ea56:	3401      	adds	r4, #1
 800ea58:	612c      	str	r4, [r5, #16]
 800ea5a:	2e00      	cmp	r6, #0
 800ea5c:	d018      	beq.n	800ea90 <__d2b+0x90>
 800ea5e:	4b17      	ldr	r3, [pc, #92]	; (800eabc <__d2b+0xbc>)
 800ea60:	18f6      	adds	r6, r6, r3
 800ea62:	2335      	movs	r3, #53	; 0x35
 800ea64:	1836      	adds	r6, r6, r0
 800ea66:	1a18      	subs	r0, r3, r0
 800ea68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ea6a:	603e      	str	r6, [r7, #0]
 800ea6c:	6018      	str	r0, [r3, #0]
 800ea6e:	0028      	movs	r0, r5
 800ea70:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800ea72:	2280      	movs	r2, #128	; 0x80
 800ea74:	0352      	lsls	r2, r2, #13
 800ea76:	4313      	orrs	r3, r2
 800ea78:	e7d6      	b.n	800ea28 <__d2b+0x28>
 800ea7a:	616c      	str	r4, [r5, #20]
 800ea7c:	e7e7      	b.n	800ea4e <__d2b+0x4e>
 800ea7e:	a801      	add	r0, sp, #4
 800ea80:	f7ff fcd6 	bl	800e430 <__lo0bits>
 800ea84:	2401      	movs	r4, #1
 800ea86:	9b01      	ldr	r3, [sp, #4]
 800ea88:	612c      	str	r4, [r5, #16]
 800ea8a:	616b      	str	r3, [r5, #20]
 800ea8c:	3020      	adds	r0, #32
 800ea8e:	e7e4      	b.n	800ea5a <__d2b+0x5a>
 800ea90:	4b0b      	ldr	r3, [pc, #44]	; (800eac0 <__d2b+0xc0>)
 800ea92:	18c0      	adds	r0, r0, r3
 800ea94:	4b0b      	ldr	r3, [pc, #44]	; (800eac4 <__d2b+0xc4>)
 800ea96:	6038      	str	r0, [r7, #0]
 800ea98:	18e3      	adds	r3, r4, r3
 800ea9a:	009b      	lsls	r3, r3, #2
 800ea9c:	18eb      	adds	r3, r5, r3
 800ea9e:	6958      	ldr	r0, [r3, #20]
 800eaa0:	f7ff fcac 	bl	800e3fc <__hi0bits>
 800eaa4:	0164      	lsls	r4, r4, #5
 800eaa6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800eaa8:	1a24      	subs	r4, r4, r0
 800eaaa:	601c      	str	r4, [r3, #0]
 800eaac:	e7df      	b.n	800ea6e <__d2b+0x6e>
 800eaae:	46c0      	nop			; (mov r8, r8)
 800eab0:	080101bc 	.word	0x080101bc
 800eab4:	0000030a 	.word	0x0000030a
 800eab8:	080102b0 	.word	0x080102b0
 800eabc:	fffffbcd 	.word	0xfffffbcd
 800eac0:	fffffbce 	.word	0xfffffbce
 800eac4:	3fffffff 	.word	0x3fffffff

0800eac8 <__ratio>:
 800eac8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eaca:	b085      	sub	sp, #20
 800eacc:	000d      	movs	r5, r1
 800eace:	a902      	add	r1, sp, #8
 800ead0:	0004      	movs	r4, r0
 800ead2:	f7ff ff45 	bl	800e960 <__b2d>
 800ead6:	9000      	str	r0, [sp, #0]
 800ead8:	9101      	str	r1, [sp, #4]
 800eada:	9e00      	ldr	r6, [sp, #0]
 800eadc:	9f01      	ldr	r7, [sp, #4]
 800eade:	0028      	movs	r0, r5
 800eae0:	a903      	add	r1, sp, #12
 800eae2:	f7ff ff3d 	bl	800e960 <__b2d>
 800eae6:	6924      	ldr	r4, [r4, #16]
 800eae8:	692d      	ldr	r5, [r5, #16]
 800eaea:	0002      	movs	r2, r0
 800eaec:	1b65      	subs	r5, r4, r5
 800eaee:	016c      	lsls	r4, r5, #5
 800eaf0:	46a4      	mov	ip, r4
 800eaf2:	9d03      	ldr	r5, [sp, #12]
 800eaf4:	9c02      	ldr	r4, [sp, #8]
 800eaf6:	000b      	movs	r3, r1
 800eaf8:	1b64      	subs	r4, r4, r5
 800eafa:	4464      	add	r4, ip
 800eafc:	0525      	lsls	r5, r4, #20
 800eafe:	2c00      	cmp	r4, #0
 800eb00:	dd07      	ble.n	800eb12 <__ratio+0x4a>
 800eb02:	9901      	ldr	r1, [sp, #4]
 800eb04:	186f      	adds	r7, r5, r1
 800eb06:	0030      	movs	r0, r6
 800eb08:	0039      	movs	r1, r7
 800eb0a:	f7f2 fff7 	bl	8001afc <__aeabi_ddiv>
 800eb0e:	b005      	add	sp, #20
 800eb10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb12:	1b4b      	subs	r3, r1, r5
 800eb14:	e7f7      	b.n	800eb06 <__ratio+0x3e>

0800eb16 <__copybits>:
 800eb16:	b570      	push	{r4, r5, r6, lr}
 800eb18:	0015      	movs	r5, r2
 800eb1a:	6913      	ldr	r3, [r2, #16]
 800eb1c:	3514      	adds	r5, #20
 800eb1e:	009c      	lsls	r4, r3, #2
 800eb20:	0006      	movs	r6, r0
 800eb22:	002b      	movs	r3, r5
 800eb24:	3901      	subs	r1, #1
 800eb26:	1149      	asrs	r1, r1, #5
 800eb28:	3101      	adds	r1, #1
 800eb2a:	0089      	lsls	r1, r1, #2
 800eb2c:	1841      	adds	r1, r0, r1
 800eb2e:	192c      	adds	r4, r5, r4
 800eb30:	429c      	cmp	r4, r3
 800eb32:	d80d      	bhi.n	800eb50 <__copybits+0x3a>
 800eb34:	0015      	movs	r5, r2
 800eb36:	3511      	adds	r5, #17
 800eb38:	2300      	movs	r3, #0
 800eb3a:	42a5      	cmp	r5, r4
 800eb3c:	d803      	bhi.n	800eb46 <__copybits+0x30>
 800eb3e:	1aa3      	subs	r3, r4, r2
 800eb40:	3b11      	subs	r3, #17
 800eb42:	089b      	lsrs	r3, r3, #2
 800eb44:	009b      	lsls	r3, r3, #2
 800eb46:	18c0      	adds	r0, r0, r3
 800eb48:	2300      	movs	r3, #0
 800eb4a:	4281      	cmp	r1, r0
 800eb4c:	d803      	bhi.n	800eb56 <__copybits+0x40>
 800eb4e:	bd70      	pop	{r4, r5, r6, pc}
 800eb50:	cb20      	ldmia	r3!, {r5}
 800eb52:	c620      	stmia	r6!, {r5}
 800eb54:	e7ec      	b.n	800eb30 <__copybits+0x1a>
 800eb56:	c008      	stmia	r0!, {r3}
 800eb58:	e7f7      	b.n	800eb4a <__copybits+0x34>

0800eb5a <__any_on>:
 800eb5a:	0002      	movs	r2, r0
 800eb5c:	6900      	ldr	r0, [r0, #16]
 800eb5e:	b510      	push	{r4, lr}
 800eb60:	3214      	adds	r2, #20
 800eb62:	114b      	asrs	r3, r1, #5
 800eb64:	4298      	cmp	r0, r3
 800eb66:	db13      	blt.n	800eb90 <__any_on+0x36>
 800eb68:	dd0c      	ble.n	800eb84 <__any_on+0x2a>
 800eb6a:	241f      	movs	r4, #31
 800eb6c:	0008      	movs	r0, r1
 800eb6e:	4020      	ands	r0, r4
 800eb70:	4221      	tst	r1, r4
 800eb72:	d007      	beq.n	800eb84 <__any_on+0x2a>
 800eb74:	0099      	lsls	r1, r3, #2
 800eb76:	588c      	ldr	r4, [r1, r2]
 800eb78:	0021      	movs	r1, r4
 800eb7a:	40c1      	lsrs	r1, r0
 800eb7c:	4081      	lsls	r1, r0
 800eb7e:	2001      	movs	r0, #1
 800eb80:	428c      	cmp	r4, r1
 800eb82:	d104      	bne.n	800eb8e <__any_on+0x34>
 800eb84:	009b      	lsls	r3, r3, #2
 800eb86:	18d3      	adds	r3, r2, r3
 800eb88:	4293      	cmp	r3, r2
 800eb8a:	d803      	bhi.n	800eb94 <__any_on+0x3a>
 800eb8c:	2000      	movs	r0, #0
 800eb8e:	bd10      	pop	{r4, pc}
 800eb90:	0003      	movs	r3, r0
 800eb92:	e7f7      	b.n	800eb84 <__any_on+0x2a>
 800eb94:	3b04      	subs	r3, #4
 800eb96:	6819      	ldr	r1, [r3, #0]
 800eb98:	2900      	cmp	r1, #0
 800eb9a:	d0f5      	beq.n	800eb88 <__any_on+0x2e>
 800eb9c:	2001      	movs	r0, #1
 800eb9e:	e7f6      	b.n	800eb8e <__any_on+0x34>

0800eba0 <_calloc_r>:
 800eba0:	434a      	muls	r2, r1
 800eba2:	b570      	push	{r4, r5, r6, lr}
 800eba4:	0011      	movs	r1, r2
 800eba6:	0015      	movs	r5, r2
 800eba8:	f000 f852 	bl	800ec50 <_malloc_r>
 800ebac:	1e04      	subs	r4, r0, #0
 800ebae:	d003      	beq.n	800ebb8 <_calloc_r+0x18>
 800ebb0:	002a      	movs	r2, r5
 800ebb2:	2100      	movs	r1, #0
 800ebb4:	f7fc fa3a 	bl	800b02c <memset>
 800ebb8:	0020      	movs	r0, r4
 800ebba:	bd70      	pop	{r4, r5, r6, pc}

0800ebbc <_free_r>:
 800ebbc:	b570      	push	{r4, r5, r6, lr}
 800ebbe:	0005      	movs	r5, r0
 800ebc0:	2900      	cmp	r1, #0
 800ebc2:	d010      	beq.n	800ebe6 <_free_r+0x2a>
 800ebc4:	1f0c      	subs	r4, r1, #4
 800ebc6:	6823      	ldr	r3, [r4, #0]
 800ebc8:	2b00      	cmp	r3, #0
 800ebca:	da00      	bge.n	800ebce <_free_r+0x12>
 800ebcc:	18e4      	adds	r4, r4, r3
 800ebce:	0028      	movs	r0, r5
 800ebd0:	f000 fe66 	bl	800f8a0 <__malloc_lock>
 800ebd4:	4a1d      	ldr	r2, [pc, #116]	; (800ec4c <_free_r+0x90>)
 800ebd6:	6813      	ldr	r3, [r2, #0]
 800ebd8:	2b00      	cmp	r3, #0
 800ebda:	d105      	bne.n	800ebe8 <_free_r+0x2c>
 800ebdc:	6063      	str	r3, [r4, #4]
 800ebde:	6014      	str	r4, [r2, #0]
 800ebe0:	0028      	movs	r0, r5
 800ebe2:	f000 fe65 	bl	800f8b0 <__malloc_unlock>
 800ebe6:	bd70      	pop	{r4, r5, r6, pc}
 800ebe8:	42a3      	cmp	r3, r4
 800ebea:	d908      	bls.n	800ebfe <_free_r+0x42>
 800ebec:	6821      	ldr	r1, [r4, #0]
 800ebee:	1860      	adds	r0, r4, r1
 800ebf0:	4283      	cmp	r3, r0
 800ebf2:	d1f3      	bne.n	800ebdc <_free_r+0x20>
 800ebf4:	6818      	ldr	r0, [r3, #0]
 800ebf6:	685b      	ldr	r3, [r3, #4]
 800ebf8:	1841      	adds	r1, r0, r1
 800ebfa:	6021      	str	r1, [r4, #0]
 800ebfc:	e7ee      	b.n	800ebdc <_free_r+0x20>
 800ebfe:	001a      	movs	r2, r3
 800ec00:	685b      	ldr	r3, [r3, #4]
 800ec02:	2b00      	cmp	r3, #0
 800ec04:	d001      	beq.n	800ec0a <_free_r+0x4e>
 800ec06:	42a3      	cmp	r3, r4
 800ec08:	d9f9      	bls.n	800ebfe <_free_r+0x42>
 800ec0a:	6811      	ldr	r1, [r2, #0]
 800ec0c:	1850      	adds	r0, r2, r1
 800ec0e:	42a0      	cmp	r0, r4
 800ec10:	d10b      	bne.n	800ec2a <_free_r+0x6e>
 800ec12:	6820      	ldr	r0, [r4, #0]
 800ec14:	1809      	adds	r1, r1, r0
 800ec16:	1850      	adds	r0, r2, r1
 800ec18:	6011      	str	r1, [r2, #0]
 800ec1a:	4283      	cmp	r3, r0
 800ec1c:	d1e0      	bne.n	800ebe0 <_free_r+0x24>
 800ec1e:	6818      	ldr	r0, [r3, #0]
 800ec20:	685b      	ldr	r3, [r3, #4]
 800ec22:	1841      	adds	r1, r0, r1
 800ec24:	6011      	str	r1, [r2, #0]
 800ec26:	6053      	str	r3, [r2, #4]
 800ec28:	e7da      	b.n	800ebe0 <_free_r+0x24>
 800ec2a:	42a0      	cmp	r0, r4
 800ec2c:	d902      	bls.n	800ec34 <_free_r+0x78>
 800ec2e:	230c      	movs	r3, #12
 800ec30:	602b      	str	r3, [r5, #0]
 800ec32:	e7d5      	b.n	800ebe0 <_free_r+0x24>
 800ec34:	6821      	ldr	r1, [r4, #0]
 800ec36:	1860      	adds	r0, r4, r1
 800ec38:	4283      	cmp	r3, r0
 800ec3a:	d103      	bne.n	800ec44 <_free_r+0x88>
 800ec3c:	6818      	ldr	r0, [r3, #0]
 800ec3e:	685b      	ldr	r3, [r3, #4]
 800ec40:	1841      	adds	r1, r0, r1
 800ec42:	6021      	str	r1, [r4, #0]
 800ec44:	6063      	str	r3, [r4, #4]
 800ec46:	6054      	str	r4, [r2, #4]
 800ec48:	e7ca      	b.n	800ebe0 <_free_r+0x24>
 800ec4a:	46c0      	nop			; (mov r8, r8)
 800ec4c:	200004b4 	.word	0x200004b4

0800ec50 <_malloc_r>:
 800ec50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ec52:	2303      	movs	r3, #3
 800ec54:	1ccd      	adds	r5, r1, #3
 800ec56:	439d      	bics	r5, r3
 800ec58:	3508      	adds	r5, #8
 800ec5a:	0006      	movs	r6, r0
 800ec5c:	2d0c      	cmp	r5, #12
 800ec5e:	d21f      	bcs.n	800eca0 <_malloc_r+0x50>
 800ec60:	250c      	movs	r5, #12
 800ec62:	42a9      	cmp	r1, r5
 800ec64:	d81e      	bhi.n	800eca4 <_malloc_r+0x54>
 800ec66:	0030      	movs	r0, r6
 800ec68:	f000 fe1a 	bl	800f8a0 <__malloc_lock>
 800ec6c:	4925      	ldr	r1, [pc, #148]	; (800ed04 <_malloc_r+0xb4>)
 800ec6e:	680a      	ldr	r2, [r1, #0]
 800ec70:	0014      	movs	r4, r2
 800ec72:	2c00      	cmp	r4, #0
 800ec74:	d11a      	bne.n	800ecac <_malloc_r+0x5c>
 800ec76:	4f24      	ldr	r7, [pc, #144]	; (800ed08 <_malloc_r+0xb8>)
 800ec78:	683b      	ldr	r3, [r7, #0]
 800ec7a:	2b00      	cmp	r3, #0
 800ec7c:	d104      	bne.n	800ec88 <_malloc_r+0x38>
 800ec7e:	0021      	movs	r1, r4
 800ec80:	0030      	movs	r0, r6
 800ec82:	f000 fb0d 	bl	800f2a0 <_sbrk_r>
 800ec86:	6038      	str	r0, [r7, #0]
 800ec88:	0029      	movs	r1, r5
 800ec8a:	0030      	movs	r0, r6
 800ec8c:	f000 fb08 	bl	800f2a0 <_sbrk_r>
 800ec90:	1c43      	adds	r3, r0, #1
 800ec92:	d12b      	bne.n	800ecec <_malloc_r+0x9c>
 800ec94:	230c      	movs	r3, #12
 800ec96:	0030      	movs	r0, r6
 800ec98:	6033      	str	r3, [r6, #0]
 800ec9a:	f000 fe09 	bl	800f8b0 <__malloc_unlock>
 800ec9e:	e003      	b.n	800eca8 <_malloc_r+0x58>
 800eca0:	2d00      	cmp	r5, #0
 800eca2:	dade      	bge.n	800ec62 <_malloc_r+0x12>
 800eca4:	230c      	movs	r3, #12
 800eca6:	6033      	str	r3, [r6, #0]
 800eca8:	2000      	movs	r0, #0
 800ecaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ecac:	6823      	ldr	r3, [r4, #0]
 800ecae:	1b5b      	subs	r3, r3, r5
 800ecb0:	d419      	bmi.n	800ece6 <_malloc_r+0x96>
 800ecb2:	2b0b      	cmp	r3, #11
 800ecb4:	d903      	bls.n	800ecbe <_malloc_r+0x6e>
 800ecb6:	6023      	str	r3, [r4, #0]
 800ecb8:	18e4      	adds	r4, r4, r3
 800ecba:	6025      	str	r5, [r4, #0]
 800ecbc:	e003      	b.n	800ecc6 <_malloc_r+0x76>
 800ecbe:	6863      	ldr	r3, [r4, #4]
 800ecc0:	42a2      	cmp	r2, r4
 800ecc2:	d10e      	bne.n	800ece2 <_malloc_r+0x92>
 800ecc4:	600b      	str	r3, [r1, #0]
 800ecc6:	0030      	movs	r0, r6
 800ecc8:	f000 fdf2 	bl	800f8b0 <__malloc_unlock>
 800eccc:	0020      	movs	r0, r4
 800ecce:	2207      	movs	r2, #7
 800ecd0:	300b      	adds	r0, #11
 800ecd2:	1d23      	adds	r3, r4, #4
 800ecd4:	4390      	bics	r0, r2
 800ecd6:	1ac2      	subs	r2, r0, r3
 800ecd8:	4298      	cmp	r0, r3
 800ecda:	d0e6      	beq.n	800ecaa <_malloc_r+0x5a>
 800ecdc:	1a1b      	subs	r3, r3, r0
 800ecde:	50a3      	str	r3, [r4, r2]
 800ece0:	e7e3      	b.n	800ecaa <_malloc_r+0x5a>
 800ece2:	6053      	str	r3, [r2, #4]
 800ece4:	e7ef      	b.n	800ecc6 <_malloc_r+0x76>
 800ece6:	0022      	movs	r2, r4
 800ece8:	6864      	ldr	r4, [r4, #4]
 800ecea:	e7c2      	b.n	800ec72 <_malloc_r+0x22>
 800ecec:	2303      	movs	r3, #3
 800ecee:	1cc4      	adds	r4, r0, #3
 800ecf0:	439c      	bics	r4, r3
 800ecf2:	42a0      	cmp	r0, r4
 800ecf4:	d0e1      	beq.n	800ecba <_malloc_r+0x6a>
 800ecf6:	1a21      	subs	r1, r4, r0
 800ecf8:	0030      	movs	r0, r6
 800ecfa:	f000 fad1 	bl	800f2a0 <_sbrk_r>
 800ecfe:	1c43      	adds	r3, r0, #1
 800ed00:	d1db      	bne.n	800ecba <_malloc_r+0x6a>
 800ed02:	e7c7      	b.n	800ec94 <_malloc_r+0x44>
 800ed04:	200004b4 	.word	0x200004b4
 800ed08:	200004b8 	.word	0x200004b8

0800ed0c <__ssputs_r>:
 800ed0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ed0e:	688e      	ldr	r6, [r1, #8]
 800ed10:	b085      	sub	sp, #20
 800ed12:	0007      	movs	r7, r0
 800ed14:	000c      	movs	r4, r1
 800ed16:	9203      	str	r2, [sp, #12]
 800ed18:	9301      	str	r3, [sp, #4]
 800ed1a:	429e      	cmp	r6, r3
 800ed1c:	d83c      	bhi.n	800ed98 <__ssputs_r+0x8c>
 800ed1e:	2390      	movs	r3, #144	; 0x90
 800ed20:	898a      	ldrh	r2, [r1, #12]
 800ed22:	00db      	lsls	r3, r3, #3
 800ed24:	421a      	tst	r2, r3
 800ed26:	d034      	beq.n	800ed92 <__ssputs_r+0x86>
 800ed28:	2503      	movs	r5, #3
 800ed2a:	6909      	ldr	r1, [r1, #16]
 800ed2c:	6823      	ldr	r3, [r4, #0]
 800ed2e:	1a5b      	subs	r3, r3, r1
 800ed30:	9302      	str	r3, [sp, #8]
 800ed32:	6963      	ldr	r3, [r4, #20]
 800ed34:	9802      	ldr	r0, [sp, #8]
 800ed36:	435d      	muls	r5, r3
 800ed38:	0feb      	lsrs	r3, r5, #31
 800ed3a:	195d      	adds	r5, r3, r5
 800ed3c:	9b01      	ldr	r3, [sp, #4]
 800ed3e:	106d      	asrs	r5, r5, #1
 800ed40:	3301      	adds	r3, #1
 800ed42:	181b      	adds	r3, r3, r0
 800ed44:	42ab      	cmp	r3, r5
 800ed46:	d900      	bls.n	800ed4a <__ssputs_r+0x3e>
 800ed48:	001d      	movs	r5, r3
 800ed4a:	0553      	lsls	r3, r2, #21
 800ed4c:	d532      	bpl.n	800edb4 <__ssputs_r+0xa8>
 800ed4e:	0029      	movs	r1, r5
 800ed50:	0038      	movs	r0, r7
 800ed52:	f7ff ff7d 	bl	800ec50 <_malloc_r>
 800ed56:	1e06      	subs	r6, r0, #0
 800ed58:	d109      	bne.n	800ed6e <__ssputs_r+0x62>
 800ed5a:	230c      	movs	r3, #12
 800ed5c:	603b      	str	r3, [r7, #0]
 800ed5e:	2340      	movs	r3, #64	; 0x40
 800ed60:	2001      	movs	r0, #1
 800ed62:	89a2      	ldrh	r2, [r4, #12]
 800ed64:	4240      	negs	r0, r0
 800ed66:	4313      	orrs	r3, r2
 800ed68:	81a3      	strh	r3, [r4, #12]
 800ed6a:	b005      	add	sp, #20
 800ed6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ed6e:	9a02      	ldr	r2, [sp, #8]
 800ed70:	6921      	ldr	r1, [r4, #16]
 800ed72:	f7ff fa42 	bl	800e1fa <memcpy>
 800ed76:	89a3      	ldrh	r3, [r4, #12]
 800ed78:	4a14      	ldr	r2, [pc, #80]	; (800edcc <__ssputs_r+0xc0>)
 800ed7a:	401a      	ands	r2, r3
 800ed7c:	2380      	movs	r3, #128	; 0x80
 800ed7e:	4313      	orrs	r3, r2
 800ed80:	81a3      	strh	r3, [r4, #12]
 800ed82:	9b02      	ldr	r3, [sp, #8]
 800ed84:	6126      	str	r6, [r4, #16]
 800ed86:	18f6      	adds	r6, r6, r3
 800ed88:	6026      	str	r6, [r4, #0]
 800ed8a:	6165      	str	r5, [r4, #20]
 800ed8c:	9e01      	ldr	r6, [sp, #4]
 800ed8e:	1aed      	subs	r5, r5, r3
 800ed90:	60a5      	str	r5, [r4, #8]
 800ed92:	9b01      	ldr	r3, [sp, #4]
 800ed94:	429e      	cmp	r6, r3
 800ed96:	d900      	bls.n	800ed9a <__ssputs_r+0x8e>
 800ed98:	9e01      	ldr	r6, [sp, #4]
 800ed9a:	0032      	movs	r2, r6
 800ed9c:	9903      	ldr	r1, [sp, #12]
 800ed9e:	6820      	ldr	r0, [r4, #0]
 800eda0:	f000 fd6a 	bl	800f878 <memmove>
 800eda4:	68a3      	ldr	r3, [r4, #8]
 800eda6:	2000      	movs	r0, #0
 800eda8:	1b9b      	subs	r3, r3, r6
 800edaa:	60a3      	str	r3, [r4, #8]
 800edac:	6823      	ldr	r3, [r4, #0]
 800edae:	199e      	adds	r6, r3, r6
 800edb0:	6026      	str	r6, [r4, #0]
 800edb2:	e7da      	b.n	800ed6a <__ssputs_r+0x5e>
 800edb4:	002a      	movs	r2, r5
 800edb6:	0038      	movs	r0, r7
 800edb8:	f000 fd82 	bl	800f8c0 <_realloc_r>
 800edbc:	1e06      	subs	r6, r0, #0
 800edbe:	d1e0      	bne.n	800ed82 <__ssputs_r+0x76>
 800edc0:	0038      	movs	r0, r7
 800edc2:	6921      	ldr	r1, [r4, #16]
 800edc4:	f7ff fefa 	bl	800ebbc <_free_r>
 800edc8:	e7c7      	b.n	800ed5a <__ssputs_r+0x4e>
 800edca:	46c0      	nop			; (mov r8, r8)
 800edcc:	fffffb7f 	.word	0xfffffb7f

0800edd0 <_svfiprintf_r>:
 800edd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800edd2:	b0a1      	sub	sp, #132	; 0x84
 800edd4:	9003      	str	r0, [sp, #12]
 800edd6:	001d      	movs	r5, r3
 800edd8:	898b      	ldrh	r3, [r1, #12]
 800edda:	000f      	movs	r7, r1
 800eddc:	0016      	movs	r6, r2
 800edde:	061b      	lsls	r3, r3, #24
 800ede0:	d511      	bpl.n	800ee06 <_svfiprintf_r+0x36>
 800ede2:	690b      	ldr	r3, [r1, #16]
 800ede4:	2b00      	cmp	r3, #0
 800ede6:	d10e      	bne.n	800ee06 <_svfiprintf_r+0x36>
 800ede8:	2140      	movs	r1, #64	; 0x40
 800edea:	f7ff ff31 	bl	800ec50 <_malloc_r>
 800edee:	6038      	str	r0, [r7, #0]
 800edf0:	6138      	str	r0, [r7, #16]
 800edf2:	2800      	cmp	r0, #0
 800edf4:	d105      	bne.n	800ee02 <_svfiprintf_r+0x32>
 800edf6:	230c      	movs	r3, #12
 800edf8:	9a03      	ldr	r2, [sp, #12]
 800edfa:	3801      	subs	r0, #1
 800edfc:	6013      	str	r3, [r2, #0]
 800edfe:	b021      	add	sp, #132	; 0x84
 800ee00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ee02:	2340      	movs	r3, #64	; 0x40
 800ee04:	617b      	str	r3, [r7, #20]
 800ee06:	2300      	movs	r3, #0
 800ee08:	ac08      	add	r4, sp, #32
 800ee0a:	6163      	str	r3, [r4, #20]
 800ee0c:	3320      	adds	r3, #32
 800ee0e:	7663      	strb	r3, [r4, #25]
 800ee10:	3310      	adds	r3, #16
 800ee12:	76a3      	strb	r3, [r4, #26]
 800ee14:	9507      	str	r5, [sp, #28]
 800ee16:	0035      	movs	r5, r6
 800ee18:	782b      	ldrb	r3, [r5, #0]
 800ee1a:	2b00      	cmp	r3, #0
 800ee1c:	d001      	beq.n	800ee22 <_svfiprintf_r+0x52>
 800ee1e:	2b25      	cmp	r3, #37	; 0x25
 800ee20:	d147      	bne.n	800eeb2 <_svfiprintf_r+0xe2>
 800ee22:	1bab      	subs	r3, r5, r6
 800ee24:	9305      	str	r3, [sp, #20]
 800ee26:	42b5      	cmp	r5, r6
 800ee28:	d00c      	beq.n	800ee44 <_svfiprintf_r+0x74>
 800ee2a:	0032      	movs	r2, r6
 800ee2c:	0039      	movs	r1, r7
 800ee2e:	9803      	ldr	r0, [sp, #12]
 800ee30:	f7ff ff6c 	bl	800ed0c <__ssputs_r>
 800ee34:	1c43      	adds	r3, r0, #1
 800ee36:	d100      	bne.n	800ee3a <_svfiprintf_r+0x6a>
 800ee38:	e0ae      	b.n	800ef98 <_svfiprintf_r+0x1c8>
 800ee3a:	6962      	ldr	r2, [r4, #20]
 800ee3c:	9b05      	ldr	r3, [sp, #20]
 800ee3e:	4694      	mov	ip, r2
 800ee40:	4463      	add	r3, ip
 800ee42:	6163      	str	r3, [r4, #20]
 800ee44:	782b      	ldrb	r3, [r5, #0]
 800ee46:	2b00      	cmp	r3, #0
 800ee48:	d100      	bne.n	800ee4c <_svfiprintf_r+0x7c>
 800ee4a:	e0a5      	b.n	800ef98 <_svfiprintf_r+0x1c8>
 800ee4c:	2201      	movs	r2, #1
 800ee4e:	2300      	movs	r3, #0
 800ee50:	4252      	negs	r2, r2
 800ee52:	6062      	str	r2, [r4, #4]
 800ee54:	a904      	add	r1, sp, #16
 800ee56:	3254      	adds	r2, #84	; 0x54
 800ee58:	1852      	adds	r2, r2, r1
 800ee5a:	1c6e      	adds	r6, r5, #1
 800ee5c:	6023      	str	r3, [r4, #0]
 800ee5e:	60e3      	str	r3, [r4, #12]
 800ee60:	60a3      	str	r3, [r4, #8]
 800ee62:	7013      	strb	r3, [r2, #0]
 800ee64:	65a3      	str	r3, [r4, #88]	; 0x58
 800ee66:	2205      	movs	r2, #5
 800ee68:	7831      	ldrb	r1, [r6, #0]
 800ee6a:	4854      	ldr	r0, [pc, #336]	; (800efbc <_svfiprintf_r+0x1ec>)
 800ee6c:	f7ff f9ba 	bl	800e1e4 <memchr>
 800ee70:	1c75      	adds	r5, r6, #1
 800ee72:	2800      	cmp	r0, #0
 800ee74:	d11f      	bne.n	800eeb6 <_svfiprintf_r+0xe6>
 800ee76:	6822      	ldr	r2, [r4, #0]
 800ee78:	06d3      	lsls	r3, r2, #27
 800ee7a:	d504      	bpl.n	800ee86 <_svfiprintf_r+0xb6>
 800ee7c:	2353      	movs	r3, #83	; 0x53
 800ee7e:	a904      	add	r1, sp, #16
 800ee80:	185b      	adds	r3, r3, r1
 800ee82:	2120      	movs	r1, #32
 800ee84:	7019      	strb	r1, [r3, #0]
 800ee86:	0713      	lsls	r3, r2, #28
 800ee88:	d504      	bpl.n	800ee94 <_svfiprintf_r+0xc4>
 800ee8a:	2353      	movs	r3, #83	; 0x53
 800ee8c:	a904      	add	r1, sp, #16
 800ee8e:	185b      	adds	r3, r3, r1
 800ee90:	212b      	movs	r1, #43	; 0x2b
 800ee92:	7019      	strb	r1, [r3, #0]
 800ee94:	7833      	ldrb	r3, [r6, #0]
 800ee96:	2b2a      	cmp	r3, #42	; 0x2a
 800ee98:	d016      	beq.n	800eec8 <_svfiprintf_r+0xf8>
 800ee9a:	0035      	movs	r5, r6
 800ee9c:	2100      	movs	r1, #0
 800ee9e:	200a      	movs	r0, #10
 800eea0:	68e3      	ldr	r3, [r4, #12]
 800eea2:	782a      	ldrb	r2, [r5, #0]
 800eea4:	1c6e      	adds	r6, r5, #1
 800eea6:	3a30      	subs	r2, #48	; 0x30
 800eea8:	2a09      	cmp	r2, #9
 800eeaa:	d94e      	bls.n	800ef4a <_svfiprintf_r+0x17a>
 800eeac:	2900      	cmp	r1, #0
 800eeae:	d111      	bne.n	800eed4 <_svfiprintf_r+0x104>
 800eeb0:	e017      	b.n	800eee2 <_svfiprintf_r+0x112>
 800eeb2:	3501      	adds	r5, #1
 800eeb4:	e7b0      	b.n	800ee18 <_svfiprintf_r+0x48>
 800eeb6:	4b41      	ldr	r3, [pc, #260]	; (800efbc <_svfiprintf_r+0x1ec>)
 800eeb8:	6822      	ldr	r2, [r4, #0]
 800eeba:	1ac0      	subs	r0, r0, r3
 800eebc:	2301      	movs	r3, #1
 800eebe:	4083      	lsls	r3, r0
 800eec0:	4313      	orrs	r3, r2
 800eec2:	002e      	movs	r6, r5
 800eec4:	6023      	str	r3, [r4, #0]
 800eec6:	e7ce      	b.n	800ee66 <_svfiprintf_r+0x96>
 800eec8:	9b07      	ldr	r3, [sp, #28]
 800eeca:	1d19      	adds	r1, r3, #4
 800eecc:	681b      	ldr	r3, [r3, #0]
 800eece:	9107      	str	r1, [sp, #28]
 800eed0:	2b00      	cmp	r3, #0
 800eed2:	db01      	blt.n	800eed8 <_svfiprintf_r+0x108>
 800eed4:	930b      	str	r3, [sp, #44]	; 0x2c
 800eed6:	e004      	b.n	800eee2 <_svfiprintf_r+0x112>
 800eed8:	425b      	negs	r3, r3
 800eeda:	60e3      	str	r3, [r4, #12]
 800eedc:	2302      	movs	r3, #2
 800eede:	4313      	orrs	r3, r2
 800eee0:	6023      	str	r3, [r4, #0]
 800eee2:	782b      	ldrb	r3, [r5, #0]
 800eee4:	2b2e      	cmp	r3, #46	; 0x2e
 800eee6:	d10a      	bne.n	800eefe <_svfiprintf_r+0x12e>
 800eee8:	786b      	ldrb	r3, [r5, #1]
 800eeea:	2b2a      	cmp	r3, #42	; 0x2a
 800eeec:	d135      	bne.n	800ef5a <_svfiprintf_r+0x18a>
 800eeee:	9b07      	ldr	r3, [sp, #28]
 800eef0:	3502      	adds	r5, #2
 800eef2:	1d1a      	adds	r2, r3, #4
 800eef4:	681b      	ldr	r3, [r3, #0]
 800eef6:	9207      	str	r2, [sp, #28]
 800eef8:	2b00      	cmp	r3, #0
 800eefa:	db2b      	blt.n	800ef54 <_svfiprintf_r+0x184>
 800eefc:	9309      	str	r3, [sp, #36]	; 0x24
 800eefe:	4e30      	ldr	r6, [pc, #192]	; (800efc0 <_svfiprintf_r+0x1f0>)
 800ef00:	2203      	movs	r2, #3
 800ef02:	0030      	movs	r0, r6
 800ef04:	7829      	ldrb	r1, [r5, #0]
 800ef06:	f7ff f96d 	bl	800e1e4 <memchr>
 800ef0a:	2800      	cmp	r0, #0
 800ef0c:	d006      	beq.n	800ef1c <_svfiprintf_r+0x14c>
 800ef0e:	2340      	movs	r3, #64	; 0x40
 800ef10:	1b80      	subs	r0, r0, r6
 800ef12:	4083      	lsls	r3, r0
 800ef14:	6822      	ldr	r2, [r4, #0]
 800ef16:	3501      	adds	r5, #1
 800ef18:	4313      	orrs	r3, r2
 800ef1a:	6023      	str	r3, [r4, #0]
 800ef1c:	7829      	ldrb	r1, [r5, #0]
 800ef1e:	2206      	movs	r2, #6
 800ef20:	4828      	ldr	r0, [pc, #160]	; (800efc4 <_svfiprintf_r+0x1f4>)
 800ef22:	1c6e      	adds	r6, r5, #1
 800ef24:	7621      	strb	r1, [r4, #24]
 800ef26:	f7ff f95d 	bl	800e1e4 <memchr>
 800ef2a:	2800      	cmp	r0, #0
 800ef2c:	d03c      	beq.n	800efa8 <_svfiprintf_r+0x1d8>
 800ef2e:	4b26      	ldr	r3, [pc, #152]	; (800efc8 <_svfiprintf_r+0x1f8>)
 800ef30:	2b00      	cmp	r3, #0
 800ef32:	d125      	bne.n	800ef80 <_svfiprintf_r+0x1b0>
 800ef34:	2207      	movs	r2, #7
 800ef36:	9b07      	ldr	r3, [sp, #28]
 800ef38:	3307      	adds	r3, #7
 800ef3a:	4393      	bics	r3, r2
 800ef3c:	3308      	adds	r3, #8
 800ef3e:	9307      	str	r3, [sp, #28]
 800ef40:	6963      	ldr	r3, [r4, #20]
 800ef42:	9a04      	ldr	r2, [sp, #16]
 800ef44:	189b      	adds	r3, r3, r2
 800ef46:	6163      	str	r3, [r4, #20]
 800ef48:	e765      	b.n	800ee16 <_svfiprintf_r+0x46>
 800ef4a:	4343      	muls	r3, r0
 800ef4c:	0035      	movs	r5, r6
 800ef4e:	2101      	movs	r1, #1
 800ef50:	189b      	adds	r3, r3, r2
 800ef52:	e7a6      	b.n	800eea2 <_svfiprintf_r+0xd2>
 800ef54:	2301      	movs	r3, #1
 800ef56:	425b      	negs	r3, r3
 800ef58:	e7d0      	b.n	800eefc <_svfiprintf_r+0x12c>
 800ef5a:	2300      	movs	r3, #0
 800ef5c:	200a      	movs	r0, #10
 800ef5e:	001a      	movs	r2, r3
 800ef60:	3501      	adds	r5, #1
 800ef62:	6063      	str	r3, [r4, #4]
 800ef64:	7829      	ldrb	r1, [r5, #0]
 800ef66:	1c6e      	adds	r6, r5, #1
 800ef68:	3930      	subs	r1, #48	; 0x30
 800ef6a:	2909      	cmp	r1, #9
 800ef6c:	d903      	bls.n	800ef76 <_svfiprintf_r+0x1a6>
 800ef6e:	2b00      	cmp	r3, #0
 800ef70:	d0c5      	beq.n	800eefe <_svfiprintf_r+0x12e>
 800ef72:	9209      	str	r2, [sp, #36]	; 0x24
 800ef74:	e7c3      	b.n	800eefe <_svfiprintf_r+0x12e>
 800ef76:	4342      	muls	r2, r0
 800ef78:	0035      	movs	r5, r6
 800ef7a:	2301      	movs	r3, #1
 800ef7c:	1852      	adds	r2, r2, r1
 800ef7e:	e7f1      	b.n	800ef64 <_svfiprintf_r+0x194>
 800ef80:	ab07      	add	r3, sp, #28
 800ef82:	9300      	str	r3, [sp, #0]
 800ef84:	003a      	movs	r2, r7
 800ef86:	0021      	movs	r1, r4
 800ef88:	4b10      	ldr	r3, [pc, #64]	; (800efcc <_svfiprintf_r+0x1fc>)
 800ef8a:	9803      	ldr	r0, [sp, #12]
 800ef8c:	f7fc f900 	bl	800b190 <_printf_float>
 800ef90:	9004      	str	r0, [sp, #16]
 800ef92:	9b04      	ldr	r3, [sp, #16]
 800ef94:	3301      	adds	r3, #1
 800ef96:	d1d3      	bne.n	800ef40 <_svfiprintf_r+0x170>
 800ef98:	89bb      	ldrh	r3, [r7, #12]
 800ef9a:	980d      	ldr	r0, [sp, #52]	; 0x34
 800ef9c:	065b      	lsls	r3, r3, #25
 800ef9e:	d400      	bmi.n	800efa2 <_svfiprintf_r+0x1d2>
 800efa0:	e72d      	b.n	800edfe <_svfiprintf_r+0x2e>
 800efa2:	2001      	movs	r0, #1
 800efa4:	4240      	negs	r0, r0
 800efa6:	e72a      	b.n	800edfe <_svfiprintf_r+0x2e>
 800efa8:	ab07      	add	r3, sp, #28
 800efaa:	9300      	str	r3, [sp, #0]
 800efac:	003a      	movs	r2, r7
 800efae:	0021      	movs	r1, r4
 800efb0:	4b06      	ldr	r3, [pc, #24]	; (800efcc <_svfiprintf_r+0x1fc>)
 800efb2:	9803      	ldr	r0, [sp, #12]
 800efb4:	f7fc fbaa 	bl	800b70c <_printf_i>
 800efb8:	e7ea      	b.n	800ef90 <_svfiprintf_r+0x1c0>
 800efba:	46c0      	nop			; (mov r8, r8)
 800efbc:	0801040c 	.word	0x0801040c
 800efc0:	08010412 	.word	0x08010412
 800efc4:	08010416 	.word	0x08010416
 800efc8:	0800b191 	.word	0x0800b191
 800efcc:	0800ed0d 	.word	0x0800ed0d

0800efd0 <__sfputc_r>:
 800efd0:	6893      	ldr	r3, [r2, #8]
 800efd2:	b510      	push	{r4, lr}
 800efd4:	3b01      	subs	r3, #1
 800efd6:	6093      	str	r3, [r2, #8]
 800efd8:	2b00      	cmp	r3, #0
 800efda:	da04      	bge.n	800efe6 <__sfputc_r+0x16>
 800efdc:	6994      	ldr	r4, [r2, #24]
 800efde:	42a3      	cmp	r3, r4
 800efe0:	db07      	blt.n	800eff2 <__sfputc_r+0x22>
 800efe2:	290a      	cmp	r1, #10
 800efe4:	d005      	beq.n	800eff2 <__sfputc_r+0x22>
 800efe6:	6813      	ldr	r3, [r2, #0]
 800efe8:	1c58      	adds	r0, r3, #1
 800efea:	6010      	str	r0, [r2, #0]
 800efec:	7019      	strb	r1, [r3, #0]
 800efee:	0008      	movs	r0, r1
 800eff0:	bd10      	pop	{r4, pc}
 800eff2:	f000 f9c5 	bl	800f380 <__swbuf_r>
 800eff6:	0001      	movs	r1, r0
 800eff8:	e7f9      	b.n	800efee <__sfputc_r+0x1e>

0800effa <__sfputs_r>:
 800effa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800effc:	0006      	movs	r6, r0
 800effe:	000f      	movs	r7, r1
 800f000:	0014      	movs	r4, r2
 800f002:	18d5      	adds	r5, r2, r3
 800f004:	42ac      	cmp	r4, r5
 800f006:	d101      	bne.n	800f00c <__sfputs_r+0x12>
 800f008:	2000      	movs	r0, #0
 800f00a:	e007      	b.n	800f01c <__sfputs_r+0x22>
 800f00c:	7821      	ldrb	r1, [r4, #0]
 800f00e:	003a      	movs	r2, r7
 800f010:	0030      	movs	r0, r6
 800f012:	f7ff ffdd 	bl	800efd0 <__sfputc_r>
 800f016:	3401      	adds	r4, #1
 800f018:	1c43      	adds	r3, r0, #1
 800f01a:	d1f3      	bne.n	800f004 <__sfputs_r+0xa>
 800f01c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800f020 <_vfiprintf_r>:
 800f020:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f022:	b0a1      	sub	sp, #132	; 0x84
 800f024:	0006      	movs	r6, r0
 800f026:	000c      	movs	r4, r1
 800f028:	001f      	movs	r7, r3
 800f02a:	9203      	str	r2, [sp, #12]
 800f02c:	2800      	cmp	r0, #0
 800f02e:	d004      	beq.n	800f03a <_vfiprintf_r+0x1a>
 800f030:	6983      	ldr	r3, [r0, #24]
 800f032:	2b00      	cmp	r3, #0
 800f034:	d101      	bne.n	800f03a <_vfiprintf_r+0x1a>
 800f036:	f7fe fc9f 	bl	800d978 <__sinit>
 800f03a:	4b8e      	ldr	r3, [pc, #568]	; (800f274 <_vfiprintf_r+0x254>)
 800f03c:	429c      	cmp	r4, r3
 800f03e:	d11c      	bne.n	800f07a <_vfiprintf_r+0x5a>
 800f040:	6874      	ldr	r4, [r6, #4]
 800f042:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f044:	07db      	lsls	r3, r3, #31
 800f046:	d405      	bmi.n	800f054 <_vfiprintf_r+0x34>
 800f048:	89a3      	ldrh	r3, [r4, #12]
 800f04a:	059b      	lsls	r3, r3, #22
 800f04c:	d402      	bmi.n	800f054 <_vfiprintf_r+0x34>
 800f04e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f050:	f7ff f8a9 	bl	800e1a6 <__retarget_lock_acquire_recursive>
 800f054:	89a3      	ldrh	r3, [r4, #12]
 800f056:	071b      	lsls	r3, r3, #28
 800f058:	d502      	bpl.n	800f060 <_vfiprintf_r+0x40>
 800f05a:	6923      	ldr	r3, [r4, #16]
 800f05c:	2b00      	cmp	r3, #0
 800f05e:	d11d      	bne.n	800f09c <_vfiprintf_r+0x7c>
 800f060:	0021      	movs	r1, r4
 800f062:	0030      	movs	r0, r6
 800f064:	f000 fa04 	bl	800f470 <__swsetup_r>
 800f068:	2800      	cmp	r0, #0
 800f06a:	d017      	beq.n	800f09c <_vfiprintf_r+0x7c>
 800f06c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f06e:	07db      	lsls	r3, r3, #31
 800f070:	d50d      	bpl.n	800f08e <_vfiprintf_r+0x6e>
 800f072:	2001      	movs	r0, #1
 800f074:	4240      	negs	r0, r0
 800f076:	b021      	add	sp, #132	; 0x84
 800f078:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f07a:	4b7f      	ldr	r3, [pc, #508]	; (800f278 <_vfiprintf_r+0x258>)
 800f07c:	429c      	cmp	r4, r3
 800f07e:	d101      	bne.n	800f084 <_vfiprintf_r+0x64>
 800f080:	68b4      	ldr	r4, [r6, #8]
 800f082:	e7de      	b.n	800f042 <_vfiprintf_r+0x22>
 800f084:	4b7d      	ldr	r3, [pc, #500]	; (800f27c <_vfiprintf_r+0x25c>)
 800f086:	429c      	cmp	r4, r3
 800f088:	d1db      	bne.n	800f042 <_vfiprintf_r+0x22>
 800f08a:	68f4      	ldr	r4, [r6, #12]
 800f08c:	e7d9      	b.n	800f042 <_vfiprintf_r+0x22>
 800f08e:	89a3      	ldrh	r3, [r4, #12]
 800f090:	059b      	lsls	r3, r3, #22
 800f092:	d4ee      	bmi.n	800f072 <_vfiprintf_r+0x52>
 800f094:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f096:	f7ff f887 	bl	800e1a8 <__retarget_lock_release_recursive>
 800f09a:	e7ea      	b.n	800f072 <_vfiprintf_r+0x52>
 800f09c:	2300      	movs	r3, #0
 800f09e:	ad08      	add	r5, sp, #32
 800f0a0:	616b      	str	r3, [r5, #20]
 800f0a2:	3320      	adds	r3, #32
 800f0a4:	766b      	strb	r3, [r5, #25]
 800f0a6:	3310      	adds	r3, #16
 800f0a8:	76ab      	strb	r3, [r5, #26]
 800f0aa:	9707      	str	r7, [sp, #28]
 800f0ac:	9f03      	ldr	r7, [sp, #12]
 800f0ae:	783b      	ldrb	r3, [r7, #0]
 800f0b0:	2b00      	cmp	r3, #0
 800f0b2:	d001      	beq.n	800f0b8 <_vfiprintf_r+0x98>
 800f0b4:	2b25      	cmp	r3, #37	; 0x25
 800f0b6:	d14e      	bne.n	800f156 <_vfiprintf_r+0x136>
 800f0b8:	9b03      	ldr	r3, [sp, #12]
 800f0ba:	1afb      	subs	r3, r7, r3
 800f0bc:	9305      	str	r3, [sp, #20]
 800f0be:	9b03      	ldr	r3, [sp, #12]
 800f0c0:	429f      	cmp	r7, r3
 800f0c2:	d00d      	beq.n	800f0e0 <_vfiprintf_r+0xc0>
 800f0c4:	9b05      	ldr	r3, [sp, #20]
 800f0c6:	0021      	movs	r1, r4
 800f0c8:	0030      	movs	r0, r6
 800f0ca:	9a03      	ldr	r2, [sp, #12]
 800f0cc:	f7ff ff95 	bl	800effa <__sfputs_r>
 800f0d0:	1c43      	adds	r3, r0, #1
 800f0d2:	d100      	bne.n	800f0d6 <_vfiprintf_r+0xb6>
 800f0d4:	e0b5      	b.n	800f242 <_vfiprintf_r+0x222>
 800f0d6:	696a      	ldr	r2, [r5, #20]
 800f0d8:	9b05      	ldr	r3, [sp, #20]
 800f0da:	4694      	mov	ip, r2
 800f0dc:	4463      	add	r3, ip
 800f0de:	616b      	str	r3, [r5, #20]
 800f0e0:	783b      	ldrb	r3, [r7, #0]
 800f0e2:	2b00      	cmp	r3, #0
 800f0e4:	d100      	bne.n	800f0e8 <_vfiprintf_r+0xc8>
 800f0e6:	e0ac      	b.n	800f242 <_vfiprintf_r+0x222>
 800f0e8:	2201      	movs	r2, #1
 800f0ea:	1c7b      	adds	r3, r7, #1
 800f0ec:	9303      	str	r3, [sp, #12]
 800f0ee:	2300      	movs	r3, #0
 800f0f0:	4252      	negs	r2, r2
 800f0f2:	606a      	str	r2, [r5, #4]
 800f0f4:	a904      	add	r1, sp, #16
 800f0f6:	3254      	adds	r2, #84	; 0x54
 800f0f8:	1852      	adds	r2, r2, r1
 800f0fa:	602b      	str	r3, [r5, #0]
 800f0fc:	60eb      	str	r3, [r5, #12]
 800f0fe:	60ab      	str	r3, [r5, #8]
 800f100:	7013      	strb	r3, [r2, #0]
 800f102:	65ab      	str	r3, [r5, #88]	; 0x58
 800f104:	9b03      	ldr	r3, [sp, #12]
 800f106:	2205      	movs	r2, #5
 800f108:	7819      	ldrb	r1, [r3, #0]
 800f10a:	485d      	ldr	r0, [pc, #372]	; (800f280 <_vfiprintf_r+0x260>)
 800f10c:	f7ff f86a 	bl	800e1e4 <memchr>
 800f110:	9b03      	ldr	r3, [sp, #12]
 800f112:	1c5f      	adds	r7, r3, #1
 800f114:	2800      	cmp	r0, #0
 800f116:	d120      	bne.n	800f15a <_vfiprintf_r+0x13a>
 800f118:	682a      	ldr	r2, [r5, #0]
 800f11a:	06d3      	lsls	r3, r2, #27
 800f11c:	d504      	bpl.n	800f128 <_vfiprintf_r+0x108>
 800f11e:	2353      	movs	r3, #83	; 0x53
 800f120:	a904      	add	r1, sp, #16
 800f122:	185b      	adds	r3, r3, r1
 800f124:	2120      	movs	r1, #32
 800f126:	7019      	strb	r1, [r3, #0]
 800f128:	0713      	lsls	r3, r2, #28
 800f12a:	d504      	bpl.n	800f136 <_vfiprintf_r+0x116>
 800f12c:	2353      	movs	r3, #83	; 0x53
 800f12e:	a904      	add	r1, sp, #16
 800f130:	185b      	adds	r3, r3, r1
 800f132:	212b      	movs	r1, #43	; 0x2b
 800f134:	7019      	strb	r1, [r3, #0]
 800f136:	9b03      	ldr	r3, [sp, #12]
 800f138:	781b      	ldrb	r3, [r3, #0]
 800f13a:	2b2a      	cmp	r3, #42	; 0x2a
 800f13c:	d016      	beq.n	800f16c <_vfiprintf_r+0x14c>
 800f13e:	2100      	movs	r1, #0
 800f140:	68eb      	ldr	r3, [r5, #12]
 800f142:	9f03      	ldr	r7, [sp, #12]
 800f144:	783a      	ldrb	r2, [r7, #0]
 800f146:	1c78      	adds	r0, r7, #1
 800f148:	3a30      	subs	r2, #48	; 0x30
 800f14a:	4684      	mov	ip, r0
 800f14c:	2a09      	cmp	r2, #9
 800f14e:	d94f      	bls.n	800f1f0 <_vfiprintf_r+0x1d0>
 800f150:	2900      	cmp	r1, #0
 800f152:	d111      	bne.n	800f178 <_vfiprintf_r+0x158>
 800f154:	e017      	b.n	800f186 <_vfiprintf_r+0x166>
 800f156:	3701      	adds	r7, #1
 800f158:	e7a9      	b.n	800f0ae <_vfiprintf_r+0x8e>
 800f15a:	4b49      	ldr	r3, [pc, #292]	; (800f280 <_vfiprintf_r+0x260>)
 800f15c:	682a      	ldr	r2, [r5, #0]
 800f15e:	1ac0      	subs	r0, r0, r3
 800f160:	2301      	movs	r3, #1
 800f162:	4083      	lsls	r3, r0
 800f164:	4313      	orrs	r3, r2
 800f166:	602b      	str	r3, [r5, #0]
 800f168:	9703      	str	r7, [sp, #12]
 800f16a:	e7cb      	b.n	800f104 <_vfiprintf_r+0xe4>
 800f16c:	9b07      	ldr	r3, [sp, #28]
 800f16e:	1d19      	adds	r1, r3, #4
 800f170:	681b      	ldr	r3, [r3, #0]
 800f172:	9107      	str	r1, [sp, #28]
 800f174:	2b00      	cmp	r3, #0
 800f176:	db01      	blt.n	800f17c <_vfiprintf_r+0x15c>
 800f178:	930b      	str	r3, [sp, #44]	; 0x2c
 800f17a:	e004      	b.n	800f186 <_vfiprintf_r+0x166>
 800f17c:	425b      	negs	r3, r3
 800f17e:	60eb      	str	r3, [r5, #12]
 800f180:	2302      	movs	r3, #2
 800f182:	4313      	orrs	r3, r2
 800f184:	602b      	str	r3, [r5, #0]
 800f186:	783b      	ldrb	r3, [r7, #0]
 800f188:	2b2e      	cmp	r3, #46	; 0x2e
 800f18a:	d10a      	bne.n	800f1a2 <_vfiprintf_r+0x182>
 800f18c:	787b      	ldrb	r3, [r7, #1]
 800f18e:	2b2a      	cmp	r3, #42	; 0x2a
 800f190:	d137      	bne.n	800f202 <_vfiprintf_r+0x1e2>
 800f192:	9b07      	ldr	r3, [sp, #28]
 800f194:	3702      	adds	r7, #2
 800f196:	1d1a      	adds	r2, r3, #4
 800f198:	681b      	ldr	r3, [r3, #0]
 800f19a:	9207      	str	r2, [sp, #28]
 800f19c:	2b00      	cmp	r3, #0
 800f19e:	db2d      	blt.n	800f1fc <_vfiprintf_r+0x1dc>
 800f1a0:	9309      	str	r3, [sp, #36]	; 0x24
 800f1a2:	2203      	movs	r2, #3
 800f1a4:	7839      	ldrb	r1, [r7, #0]
 800f1a6:	4837      	ldr	r0, [pc, #220]	; (800f284 <_vfiprintf_r+0x264>)
 800f1a8:	f7ff f81c 	bl	800e1e4 <memchr>
 800f1ac:	2800      	cmp	r0, #0
 800f1ae:	d007      	beq.n	800f1c0 <_vfiprintf_r+0x1a0>
 800f1b0:	4b34      	ldr	r3, [pc, #208]	; (800f284 <_vfiprintf_r+0x264>)
 800f1b2:	682a      	ldr	r2, [r5, #0]
 800f1b4:	1ac0      	subs	r0, r0, r3
 800f1b6:	2340      	movs	r3, #64	; 0x40
 800f1b8:	4083      	lsls	r3, r0
 800f1ba:	4313      	orrs	r3, r2
 800f1bc:	3701      	adds	r7, #1
 800f1be:	602b      	str	r3, [r5, #0]
 800f1c0:	7839      	ldrb	r1, [r7, #0]
 800f1c2:	1c7b      	adds	r3, r7, #1
 800f1c4:	2206      	movs	r2, #6
 800f1c6:	4830      	ldr	r0, [pc, #192]	; (800f288 <_vfiprintf_r+0x268>)
 800f1c8:	9303      	str	r3, [sp, #12]
 800f1ca:	7629      	strb	r1, [r5, #24]
 800f1cc:	f7ff f80a 	bl	800e1e4 <memchr>
 800f1d0:	2800      	cmp	r0, #0
 800f1d2:	d045      	beq.n	800f260 <_vfiprintf_r+0x240>
 800f1d4:	4b2d      	ldr	r3, [pc, #180]	; (800f28c <_vfiprintf_r+0x26c>)
 800f1d6:	2b00      	cmp	r3, #0
 800f1d8:	d127      	bne.n	800f22a <_vfiprintf_r+0x20a>
 800f1da:	2207      	movs	r2, #7
 800f1dc:	9b07      	ldr	r3, [sp, #28]
 800f1de:	3307      	adds	r3, #7
 800f1e0:	4393      	bics	r3, r2
 800f1e2:	3308      	adds	r3, #8
 800f1e4:	9307      	str	r3, [sp, #28]
 800f1e6:	696b      	ldr	r3, [r5, #20]
 800f1e8:	9a04      	ldr	r2, [sp, #16]
 800f1ea:	189b      	adds	r3, r3, r2
 800f1ec:	616b      	str	r3, [r5, #20]
 800f1ee:	e75d      	b.n	800f0ac <_vfiprintf_r+0x8c>
 800f1f0:	210a      	movs	r1, #10
 800f1f2:	434b      	muls	r3, r1
 800f1f4:	4667      	mov	r7, ip
 800f1f6:	189b      	adds	r3, r3, r2
 800f1f8:	3909      	subs	r1, #9
 800f1fa:	e7a3      	b.n	800f144 <_vfiprintf_r+0x124>
 800f1fc:	2301      	movs	r3, #1
 800f1fe:	425b      	negs	r3, r3
 800f200:	e7ce      	b.n	800f1a0 <_vfiprintf_r+0x180>
 800f202:	2300      	movs	r3, #0
 800f204:	001a      	movs	r2, r3
 800f206:	3701      	adds	r7, #1
 800f208:	606b      	str	r3, [r5, #4]
 800f20a:	7839      	ldrb	r1, [r7, #0]
 800f20c:	1c78      	adds	r0, r7, #1
 800f20e:	3930      	subs	r1, #48	; 0x30
 800f210:	4684      	mov	ip, r0
 800f212:	2909      	cmp	r1, #9
 800f214:	d903      	bls.n	800f21e <_vfiprintf_r+0x1fe>
 800f216:	2b00      	cmp	r3, #0
 800f218:	d0c3      	beq.n	800f1a2 <_vfiprintf_r+0x182>
 800f21a:	9209      	str	r2, [sp, #36]	; 0x24
 800f21c:	e7c1      	b.n	800f1a2 <_vfiprintf_r+0x182>
 800f21e:	230a      	movs	r3, #10
 800f220:	435a      	muls	r2, r3
 800f222:	4667      	mov	r7, ip
 800f224:	1852      	adds	r2, r2, r1
 800f226:	3b09      	subs	r3, #9
 800f228:	e7ef      	b.n	800f20a <_vfiprintf_r+0x1ea>
 800f22a:	ab07      	add	r3, sp, #28
 800f22c:	9300      	str	r3, [sp, #0]
 800f22e:	0022      	movs	r2, r4
 800f230:	0029      	movs	r1, r5
 800f232:	0030      	movs	r0, r6
 800f234:	4b16      	ldr	r3, [pc, #88]	; (800f290 <_vfiprintf_r+0x270>)
 800f236:	f7fb ffab 	bl	800b190 <_printf_float>
 800f23a:	9004      	str	r0, [sp, #16]
 800f23c:	9b04      	ldr	r3, [sp, #16]
 800f23e:	3301      	adds	r3, #1
 800f240:	d1d1      	bne.n	800f1e6 <_vfiprintf_r+0x1c6>
 800f242:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f244:	07db      	lsls	r3, r3, #31
 800f246:	d405      	bmi.n	800f254 <_vfiprintf_r+0x234>
 800f248:	89a3      	ldrh	r3, [r4, #12]
 800f24a:	059b      	lsls	r3, r3, #22
 800f24c:	d402      	bmi.n	800f254 <_vfiprintf_r+0x234>
 800f24e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f250:	f7fe ffaa 	bl	800e1a8 <__retarget_lock_release_recursive>
 800f254:	89a3      	ldrh	r3, [r4, #12]
 800f256:	065b      	lsls	r3, r3, #25
 800f258:	d500      	bpl.n	800f25c <_vfiprintf_r+0x23c>
 800f25a:	e70a      	b.n	800f072 <_vfiprintf_r+0x52>
 800f25c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800f25e:	e70a      	b.n	800f076 <_vfiprintf_r+0x56>
 800f260:	ab07      	add	r3, sp, #28
 800f262:	9300      	str	r3, [sp, #0]
 800f264:	0022      	movs	r2, r4
 800f266:	0029      	movs	r1, r5
 800f268:	0030      	movs	r0, r6
 800f26a:	4b09      	ldr	r3, [pc, #36]	; (800f290 <_vfiprintf_r+0x270>)
 800f26c:	f7fc fa4e 	bl	800b70c <_printf_i>
 800f270:	e7e3      	b.n	800f23a <_vfiprintf_r+0x21a>
 800f272:	46c0      	nop			; (mov r8, r8)
 800f274:	080101f0 	.word	0x080101f0
 800f278:	08010210 	.word	0x08010210
 800f27c:	080101d0 	.word	0x080101d0
 800f280:	0801040c 	.word	0x0801040c
 800f284:	08010412 	.word	0x08010412
 800f288:	08010416 	.word	0x08010416
 800f28c:	0800b191 	.word	0x0800b191
 800f290:	0800effb 	.word	0x0800effb

0800f294 <nan>:
 800f294:	2000      	movs	r0, #0
 800f296:	4901      	ldr	r1, [pc, #4]	; (800f29c <nan+0x8>)
 800f298:	4770      	bx	lr
 800f29a:	46c0      	nop			; (mov r8, r8)
 800f29c:	7ff80000 	.word	0x7ff80000

0800f2a0 <_sbrk_r>:
 800f2a0:	2300      	movs	r3, #0
 800f2a2:	b570      	push	{r4, r5, r6, lr}
 800f2a4:	4d06      	ldr	r5, [pc, #24]	; (800f2c0 <_sbrk_r+0x20>)
 800f2a6:	0004      	movs	r4, r0
 800f2a8:	0008      	movs	r0, r1
 800f2aa:	602b      	str	r3, [r5, #0]
 800f2ac:	f7f8 f898 	bl	80073e0 <_sbrk>
 800f2b0:	1c43      	adds	r3, r0, #1
 800f2b2:	d103      	bne.n	800f2bc <_sbrk_r+0x1c>
 800f2b4:	682b      	ldr	r3, [r5, #0]
 800f2b6:	2b00      	cmp	r3, #0
 800f2b8:	d000      	beq.n	800f2bc <_sbrk_r+0x1c>
 800f2ba:	6023      	str	r3, [r4, #0]
 800f2bc:	bd70      	pop	{r4, r5, r6, pc}
 800f2be:	46c0      	nop			; (mov r8, r8)
 800f2c0:	2000063c 	.word	0x2000063c

0800f2c4 <__sread>:
 800f2c4:	b570      	push	{r4, r5, r6, lr}
 800f2c6:	000c      	movs	r4, r1
 800f2c8:	250e      	movs	r5, #14
 800f2ca:	5f49      	ldrsh	r1, [r1, r5]
 800f2cc:	f000 fb1e 	bl	800f90c <_read_r>
 800f2d0:	2800      	cmp	r0, #0
 800f2d2:	db03      	blt.n	800f2dc <__sread+0x18>
 800f2d4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800f2d6:	181b      	adds	r3, r3, r0
 800f2d8:	6563      	str	r3, [r4, #84]	; 0x54
 800f2da:	bd70      	pop	{r4, r5, r6, pc}
 800f2dc:	89a3      	ldrh	r3, [r4, #12]
 800f2de:	4a02      	ldr	r2, [pc, #8]	; (800f2e8 <__sread+0x24>)
 800f2e0:	4013      	ands	r3, r2
 800f2e2:	81a3      	strh	r3, [r4, #12]
 800f2e4:	e7f9      	b.n	800f2da <__sread+0x16>
 800f2e6:	46c0      	nop			; (mov r8, r8)
 800f2e8:	ffffefff 	.word	0xffffefff

0800f2ec <__swrite>:
 800f2ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f2ee:	001f      	movs	r7, r3
 800f2f0:	898b      	ldrh	r3, [r1, #12]
 800f2f2:	0005      	movs	r5, r0
 800f2f4:	000c      	movs	r4, r1
 800f2f6:	0016      	movs	r6, r2
 800f2f8:	05db      	lsls	r3, r3, #23
 800f2fa:	d505      	bpl.n	800f308 <__swrite+0x1c>
 800f2fc:	230e      	movs	r3, #14
 800f2fe:	5ec9      	ldrsh	r1, [r1, r3]
 800f300:	2200      	movs	r2, #0
 800f302:	2302      	movs	r3, #2
 800f304:	f000 fa38 	bl	800f778 <_lseek_r>
 800f308:	89a3      	ldrh	r3, [r4, #12]
 800f30a:	4a05      	ldr	r2, [pc, #20]	; (800f320 <__swrite+0x34>)
 800f30c:	0028      	movs	r0, r5
 800f30e:	4013      	ands	r3, r2
 800f310:	81a3      	strh	r3, [r4, #12]
 800f312:	0032      	movs	r2, r6
 800f314:	230e      	movs	r3, #14
 800f316:	5ee1      	ldrsh	r1, [r4, r3]
 800f318:	003b      	movs	r3, r7
 800f31a:	f000 f895 	bl	800f448 <_write_r>
 800f31e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f320:	ffffefff 	.word	0xffffefff

0800f324 <__sseek>:
 800f324:	b570      	push	{r4, r5, r6, lr}
 800f326:	000c      	movs	r4, r1
 800f328:	250e      	movs	r5, #14
 800f32a:	5f49      	ldrsh	r1, [r1, r5]
 800f32c:	f000 fa24 	bl	800f778 <_lseek_r>
 800f330:	89a3      	ldrh	r3, [r4, #12]
 800f332:	1c42      	adds	r2, r0, #1
 800f334:	d103      	bne.n	800f33e <__sseek+0x1a>
 800f336:	4a05      	ldr	r2, [pc, #20]	; (800f34c <__sseek+0x28>)
 800f338:	4013      	ands	r3, r2
 800f33a:	81a3      	strh	r3, [r4, #12]
 800f33c:	bd70      	pop	{r4, r5, r6, pc}
 800f33e:	2280      	movs	r2, #128	; 0x80
 800f340:	0152      	lsls	r2, r2, #5
 800f342:	4313      	orrs	r3, r2
 800f344:	81a3      	strh	r3, [r4, #12]
 800f346:	6560      	str	r0, [r4, #84]	; 0x54
 800f348:	e7f8      	b.n	800f33c <__sseek+0x18>
 800f34a:	46c0      	nop			; (mov r8, r8)
 800f34c:	ffffefff 	.word	0xffffefff

0800f350 <__sclose>:
 800f350:	b510      	push	{r4, lr}
 800f352:	230e      	movs	r3, #14
 800f354:	5ec9      	ldrsh	r1, [r1, r3]
 800f356:	f000 f921 	bl	800f59c <_close_r>
 800f35a:	bd10      	pop	{r4, pc}

0800f35c <strncmp>:
 800f35c:	b530      	push	{r4, r5, lr}
 800f35e:	0005      	movs	r5, r0
 800f360:	1e10      	subs	r0, r2, #0
 800f362:	d00b      	beq.n	800f37c <strncmp+0x20>
 800f364:	2400      	movs	r4, #0
 800f366:	3a01      	subs	r2, #1
 800f368:	5d2b      	ldrb	r3, [r5, r4]
 800f36a:	5d08      	ldrb	r0, [r1, r4]
 800f36c:	4283      	cmp	r3, r0
 800f36e:	d104      	bne.n	800f37a <strncmp+0x1e>
 800f370:	4294      	cmp	r4, r2
 800f372:	d002      	beq.n	800f37a <strncmp+0x1e>
 800f374:	3401      	adds	r4, #1
 800f376:	2b00      	cmp	r3, #0
 800f378:	d1f6      	bne.n	800f368 <strncmp+0xc>
 800f37a:	1a18      	subs	r0, r3, r0
 800f37c:	bd30      	pop	{r4, r5, pc}
	...

0800f380 <__swbuf_r>:
 800f380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f382:	0005      	movs	r5, r0
 800f384:	000e      	movs	r6, r1
 800f386:	0014      	movs	r4, r2
 800f388:	2800      	cmp	r0, #0
 800f38a:	d004      	beq.n	800f396 <__swbuf_r+0x16>
 800f38c:	6983      	ldr	r3, [r0, #24]
 800f38e:	2b00      	cmp	r3, #0
 800f390:	d101      	bne.n	800f396 <__swbuf_r+0x16>
 800f392:	f7fe faf1 	bl	800d978 <__sinit>
 800f396:	4b22      	ldr	r3, [pc, #136]	; (800f420 <__swbuf_r+0xa0>)
 800f398:	429c      	cmp	r4, r3
 800f39a:	d12e      	bne.n	800f3fa <__swbuf_r+0x7a>
 800f39c:	686c      	ldr	r4, [r5, #4]
 800f39e:	69a3      	ldr	r3, [r4, #24]
 800f3a0:	60a3      	str	r3, [r4, #8]
 800f3a2:	89a3      	ldrh	r3, [r4, #12]
 800f3a4:	071b      	lsls	r3, r3, #28
 800f3a6:	d532      	bpl.n	800f40e <__swbuf_r+0x8e>
 800f3a8:	6923      	ldr	r3, [r4, #16]
 800f3aa:	2b00      	cmp	r3, #0
 800f3ac:	d02f      	beq.n	800f40e <__swbuf_r+0x8e>
 800f3ae:	6823      	ldr	r3, [r4, #0]
 800f3b0:	6922      	ldr	r2, [r4, #16]
 800f3b2:	b2f7      	uxtb	r7, r6
 800f3b4:	1a98      	subs	r0, r3, r2
 800f3b6:	6963      	ldr	r3, [r4, #20]
 800f3b8:	b2f6      	uxtb	r6, r6
 800f3ba:	4283      	cmp	r3, r0
 800f3bc:	dc05      	bgt.n	800f3ca <__swbuf_r+0x4a>
 800f3be:	0021      	movs	r1, r4
 800f3c0:	0028      	movs	r0, r5
 800f3c2:	f000 f989 	bl	800f6d8 <_fflush_r>
 800f3c6:	2800      	cmp	r0, #0
 800f3c8:	d127      	bne.n	800f41a <__swbuf_r+0x9a>
 800f3ca:	68a3      	ldr	r3, [r4, #8]
 800f3cc:	3001      	adds	r0, #1
 800f3ce:	3b01      	subs	r3, #1
 800f3d0:	60a3      	str	r3, [r4, #8]
 800f3d2:	6823      	ldr	r3, [r4, #0]
 800f3d4:	1c5a      	adds	r2, r3, #1
 800f3d6:	6022      	str	r2, [r4, #0]
 800f3d8:	701f      	strb	r7, [r3, #0]
 800f3da:	6963      	ldr	r3, [r4, #20]
 800f3dc:	4283      	cmp	r3, r0
 800f3de:	d004      	beq.n	800f3ea <__swbuf_r+0x6a>
 800f3e0:	89a3      	ldrh	r3, [r4, #12]
 800f3e2:	07db      	lsls	r3, r3, #31
 800f3e4:	d507      	bpl.n	800f3f6 <__swbuf_r+0x76>
 800f3e6:	2e0a      	cmp	r6, #10
 800f3e8:	d105      	bne.n	800f3f6 <__swbuf_r+0x76>
 800f3ea:	0021      	movs	r1, r4
 800f3ec:	0028      	movs	r0, r5
 800f3ee:	f000 f973 	bl	800f6d8 <_fflush_r>
 800f3f2:	2800      	cmp	r0, #0
 800f3f4:	d111      	bne.n	800f41a <__swbuf_r+0x9a>
 800f3f6:	0030      	movs	r0, r6
 800f3f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f3fa:	4b0a      	ldr	r3, [pc, #40]	; (800f424 <__swbuf_r+0xa4>)
 800f3fc:	429c      	cmp	r4, r3
 800f3fe:	d101      	bne.n	800f404 <__swbuf_r+0x84>
 800f400:	68ac      	ldr	r4, [r5, #8]
 800f402:	e7cc      	b.n	800f39e <__swbuf_r+0x1e>
 800f404:	4b08      	ldr	r3, [pc, #32]	; (800f428 <__swbuf_r+0xa8>)
 800f406:	429c      	cmp	r4, r3
 800f408:	d1c9      	bne.n	800f39e <__swbuf_r+0x1e>
 800f40a:	68ec      	ldr	r4, [r5, #12]
 800f40c:	e7c7      	b.n	800f39e <__swbuf_r+0x1e>
 800f40e:	0021      	movs	r1, r4
 800f410:	0028      	movs	r0, r5
 800f412:	f000 f82d 	bl	800f470 <__swsetup_r>
 800f416:	2800      	cmp	r0, #0
 800f418:	d0c9      	beq.n	800f3ae <__swbuf_r+0x2e>
 800f41a:	2601      	movs	r6, #1
 800f41c:	4276      	negs	r6, r6
 800f41e:	e7ea      	b.n	800f3f6 <__swbuf_r+0x76>
 800f420:	080101f0 	.word	0x080101f0
 800f424:	08010210 	.word	0x08010210
 800f428:	080101d0 	.word	0x080101d0

0800f42c <__ascii_wctomb>:
 800f42c:	0003      	movs	r3, r0
 800f42e:	1e08      	subs	r0, r1, #0
 800f430:	d005      	beq.n	800f43e <__ascii_wctomb+0x12>
 800f432:	2aff      	cmp	r2, #255	; 0xff
 800f434:	d904      	bls.n	800f440 <__ascii_wctomb+0x14>
 800f436:	228a      	movs	r2, #138	; 0x8a
 800f438:	2001      	movs	r0, #1
 800f43a:	601a      	str	r2, [r3, #0]
 800f43c:	4240      	negs	r0, r0
 800f43e:	4770      	bx	lr
 800f440:	2001      	movs	r0, #1
 800f442:	700a      	strb	r2, [r1, #0]
 800f444:	e7fb      	b.n	800f43e <__ascii_wctomb+0x12>
	...

0800f448 <_write_r>:
 800f448:	b570      	push	{r4, r5, r6, lr}
 800f44a:	0004      	movs	r4, r0
 800f44c:	0008      	movs	r0, r1
 800f44e:	0011      	movs	r1, r2
 800f450:	001a      	movs	r2, r3
 800f452:	2300      	movs	r3, #0
 800f454:	4d05      	ldr	r5, [pc, #20]	; (800f46c <_write_r+0x24>)
 800f456:	602b      	str	r3, [r5, #0]
 800f458:	f7f7 ff62 	bl	8007320 <_write>
 800f45c:	1c43      	adds	r3, r0, #1
 800f45e:	d103      	bne.n	800f468 <_write_r+0x20>
 800f460:	682b      	ldr	r3, [r5, #0]
 800f462:	2b00      	cmp	r3, #0
 800f464:	d000      	beq.n	800f468 <_write_r+0x20>
 800f466:	6023      	str	r3, [r4, #0]
 800f468:	bd70      	pop	{r4, r5, r6, pc}
 800f46a:	46c0      	nop			; (mov r8, r8)
 800f46c:	2000063c 	.word	0x2000063c

0800f470 <__swsetup_r>:
 800f470:	4b37      	ldr	r3, [pc, #220]	; (800f550 <__swsetup_r+0xe0>)
 800f472:	b570      	push	{r4, r5, r6, lr}
 800f474:	681d      	ldr	r5, [r3, #0]
 800f476:	0006      	movs	r6, r0
 800f478:	000c      	movs	r4, r1
 800f47a:	2d00      	cmp	r5, #0
 800f47c:	d005      	beq.n	800f48a <__swsetup_r+0x1a>
 800f47e:	69ab      	ldr	r3, [r5, #24]
 800f480:	2b00      	cmp	r3, #0
 800f482:	d102      	bne.n	800f48a <__swsetup_r+0x1a>
 800f484:	0028      	movs	r0, r5
 800f486:	f7fe fa77 	bl	800d978 <__sinit>
 800f48a:	4b32      	ldr	r3, [pc, #200]	; (800f554 <__swsetup_r+0xe4>)
 800f48c:	429c      	cmp	r4, r3
 800f48e:	d10f      	bne.n	800f4b0 <__swsetup_r+0x40>
 800f490:	686c      	ldr	r4, [r5, #4]
 800f492:	230c      	movs	r3, #12
 800f494:	5ee2      	ldrsh	r2, [r4, r3]
 800f496:	b293      	uxth	r3, r2
 800f498:	0711      	lsls	r1, r2, #28
 800f49a:	d42d      	bmi.n	800f4f8 <__swsetup_r+0x88>
 800f49c:	06d9      	lsls	r1, r3, #27
 800f49e:	d411      	bmi.n	800f4c4 <__swsetup_r+0x54>
 800f4a0:	2309      	movs	r3, #9
 800f4a2:	2001      	movs	r0, #1
 800f4a4:	6033      	str	r3, [r6, #0]
 800f4a6:	3337      	adds	r3, #55	; 0x37
 800f4a8:	4313      	orrs	r3, r2
 800f4aa:	81a3      	strh	r3, [r4, #12]
 800f4ac:	4240      	negs	r0, r0
 800f4ae:	bd70      	pop	{r4, r5, r6, pc}
 800f4b0:	4b29      	ldr	r3, [pc, #164]	; (800f558 <__swsetup_r+0xe8>)
 800f4b2:	429c      	cmp	r4, r3
 800f4b4:	d101      	bne.n	800f4ba <__swsetup_r+0x4a>
 800f4b6:	68ac      	ldr	r4, [r5, #8]
 800f4b8:	e7eb      	b.n	800f492 <__swsetup_r+0x22>
 800f4ba:	4b28      	ldr	r3, [pc, #160]	; (800f55c <__swsetup_r+0xec>)
 800f4bc:	429c      	cmp	r4, r3
 800f4be:	d1e8      	bne.n	800f492 <__swsetup_r+0x22>
 800f4c0:	68ec      	ldr	r4, [r5, #12]
 800f4c2:	e7e6      	b.n	800f492 <__swsetup_r+0x22>
 800f4c4:	075b      	lsls	r3, r3, #29
 800f4c6:	d513      	bpl.n	800f4f0 <__swsetup_r+0x80>
 800f4c8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f4ca:	2900      	cmp	r1, #0
 800f4cc:	d008      	beq.n	800f4e0 <__swsetup_r+0x70>
 800f4ce:	0023      	movs	r3, r4
 800f4d0:	3344      	adds	r3, #68	; 0x44
 800f4d2:	4299      	cmp	r1, r3
 800f4d4:	d002      	beq.n	800f4dc <__swsetup_r+0x6c>
 800f4d6:	0030      	movs	r0, r6
 800f4d8:	f7ff fb70 	bl	800ebbc <_free_r>
 800f4dc:	2300      	movs	r3, #0
 800f4de:	6363      	str	r3, [r4, #52]	; 0x34
 800f4e0:	2224      	movs	r2, #36	; 0x24
 800f4e2:	89a3      	ldrh	r3, [r4, #12]
 800f4e4:	4393      	bics	r3, r2
 800f4e6:	81a3      	strh	r3, [r4, #12]
 800f4e8:	2300      	movs	r3, #0
 800f4ea:	6063      	str	r3, [r4, #4]
 800f4ec:	6923      	ldr	r3, [r4, #16]
 800f4ee:	6023      	str	r3, [r4, #0]
 800f4f0:	2308      	movs	r3, #8
 800f4f2:	89a2      	ldrh	r2, [r4, #12]
 800f4f4:	4313      	orrs	r3, r2
 800f4f6:	81a3      	strh	r3, [r4, #12]
 800f4f8:	6923      	ldr	r3, [r4, #16]
 800f4fa:	2b00      	cmp	r3, #0
 800f4fc:	d10b      	bne.n	800f516 <__swsetup_r+0xa6>
 800f4fe:	21a0      	movs	r1, #160	; 0xa0
 800f500:	2280      	movs	r2, #128	; 0x80
 800f502:	89a3      	ldrh	r3, [r4, #12]
 800f504:	0089      	lsls	r1, r1, #2
 800f506:	0092      	lsls	r2, r2, #2
 800f508:	400b      	ands	r3, r1
 800f50a:	4293      	cmp	r3, r2
 800f50c:	d003      	beq.n	800f516 <__swsetup_r+0xa6>
 800f50e:	0021      	movs	r1, r4
 800f510:	0030      	movs	r0, r6
 800f512:	f000 f96d 	bl	800f7f0 <__smakebuf_r>
 800f516:	220c      	movs	r2, #12
 800f518:	5ea3      	ldrsh	r3, [r4, r2]
 800f51a:	2001      	movs	r0, #1
 800f51c:	001a      	movs	r2, r3
 800f51e:	b299      	uxth	r1, r3
 800f520:	4002      	ands	r2, r0
 800f522:	4203      	tst	r3, r0
 800f524:	d00f      	beq.n	800f546 <__swsetup_r+0xd6>
 800f526:	2200      	movs	r2, #0
 800f528:	60a2      	str	r2, [r4, #8]
 800f52a:	6962      	ldr	r2, [r4, #20]
 800f52c:	4252      	negs	r2, r2
 800f52e:	61a2      	str	r2, [r4, #24]
 800f530:	2000      	movs	r0, #0
 800f532:	6922      	ldr	r2, [r4, #16]
 800f534:	4282      	cmp	r2, r0
 800f536:	d1ba      	bne.n	800f4ae <__swsetup_r+0x3e>
 800f538:	060a      	lsls	r2, r1, #24
 800f53a:	d5b8      	bpl.n	800f4ae <__swsetup_r+0x3e>
 800f53c:	2240      	movs	r2, #64	; 0x40
 800f53e:	4313      	orrs	r3, r2
 800f540:	81a3      	strh	r3, [r4, #12]
 800f542:	3801      	subs	r0, #1
 800f544:	e7b3      	b.n	800f4ae <__swsetup_r+0x3e>
 800f546:	0788      	lsls	r0, r1, #30
 800f548:	d400      	bmi.n	800f54c <__swsetup_r+0xdc>
 800f54a:	6962      	ldr	r2, [r4, #20]
 800f54c:	60a2      	str	r2, [r4, #8]
 800f54e:	e7ef      	b.n	800f530 <__swsetup_r+0xc0>
 800f550:	2000005c 	.word	0x2000005c
 800f554:	080101f0 	.word	0x080101f0
 800f558:	08010210 	.word	0x08010210
 800f55c:	080101d0 	.word	0x080101d0

0800f560 <__assert_func>:
 800f560:	b530      	push	{r4, r5, lr}
 800f562:	0014      	movs	r4, r2
 800f564:	001a      	movs	r2, r3
 800f566:	4b09      	ldr	r3, [pc, #36]	; (800f58c <__assert_func+0x2c>)
 800f568:	0005      	movs	r5, r0
 800f56a:	681b      	ldr	r3, [r3, #0]
 800f56c:	b085      	sub	sp, #20
 800f56e:	68d8      	ldr	r0, [r3, #12]
 800f570:	4b07      	ldr	r3, [pc, #28]	; (800f590 <__assert_func+0x30>)
 800f572:	2c00      	cmp	r4, #0
 800f574:	d101      	bne.n	800f57a <__assert_func+0x1a>
 800f576:	4b07      	ldr	r3, [pc, #28]	; (800f594 <__assert_func+0x34>)
 800f578:	001c      	movs	r4, r3
 800f57a:	9301      	str	r3, [sp, #4]
 800f57c:	9100      	str	r1, [sp, #0]
 800f57e:	002b      	movs	r3, r5
 800f580:	4905      	ldr	r1, [pc, #20]	; (800f598 <__assert_func+0x38>)
 800f582:	9402      	str	r4, [sp, #8]
 800f584:	f000 f8e8 	bl	800f758 <fiprintf>
 800f588:	f000 f9d4 	bl	800f934 <abort>
 800f58c:	2000005c 	.word	0x2000005c
 800f590:	0801041d 	.word	0x0801041d
 800f594:	08010458 	.word	0x08010458
 800f598:	0801042a 	.word	0x0801042a

0800f59c <_close_r>:
 800f59c:	2300      	movs	r3, #0
 800f59e:	b570      	push	{r4, r5, r6, lr}
 800f5a0:	4d06      	ldr	r5, [pc, #24]	; (800f5bc <_close_r+0x20>)
 800f5a2:	0004      	movs	r4, r0
 800f5a4:	0008      	movs	r0, r1
 800f5a6:	602b      	str	r3, [r5, #0]
 800f5a8:	f7f7 ff0c 	bl	80073c4 <_close>
 800f5ac:	1c43      	adds	r3, r0, #1
 800f5ae:	d103      	bne.n	800f5b8 <_close_r+0x1c>
 800f5b0:	682b      	ldr	r3, [r5, #0]
 800f5b2:	2b00      	cmp	r3, #0
 800f5b4:	d000      	beq.n	800f5b8 <_close_r+0x1c>
 800f5b6:	6023      	str	r3, [r4, #0]
 800f5b8:	bd70      	pop	{r4, r5, r6, pc}
 800f5ba:	46c0      	nop			; (mov r8, r8)
 800f5bc:	2000063c 	.word	0x2000063c

0800f5c0 <__sflush_r>:
 800f5c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f5c2:	898b      	ldrh	r3, [r1, #12]
 800f5c4:	0005      	movs	r5, r0
 800f5c6:	000c      	movs	r4, r1
 800f5c8:	071a      	lsls	r2, r3, #28
 800f5ca:	d45f      	bmi.n	800f68c <__sflush_r+0xcc>
 800f5cc:	684a      	ldr	r2, [r1, #4]
 800f5ce:	2a00      	cmp	r2, #0
 800f5d0:	dc04      	bgt.n	800f5dc <__sflush_r+0x1c>
 800f5d2:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 800f5d4:	2a00      	cmp	r2, #0
 800f5d6:	dc01      	bgt.n	800f5dc <__sflush_r+0x1c>
 800f5d8:	2000      	movs	r0, #0
 800f5da:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800f5dc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f5de:	2f00      	cmp	r7, #0
 800f5e0:	d0fa      	beq.n	800f5d8 <__sflush_r+0x18>
 800f5e2:	2200      	movs	r2, #0
 800f5e4:	2180      	movs	r1, #128	; 0x80
 800f5e6:	682e      	ldr	r6, [r5, #0]
 800f5e8:	602a      	str	r2, [r5, #0]
 800f5ea:	001a      	movs	r2, r3
 800f5ec:	0149      	lsls	r1, r1, #5
 800f5ee:	400a      	ands	r2, r1
 800f5f0:	420b      	tst	r3, r1
 800f5f2:	d034      	beq.n	800f65e <__sflush_r+0x9e>
 800f5f4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f5f6:	89a3      	ldrh	r3, [r4, #12]
 800f5f8:	075b      	lsls	r3, r3, #29
 800f5fa:	d506      	bpl.n	800f60a <__sflush_r+0x4a>
 800f5fc:	6863      	ldr	r3, [r4, #4]
 800f5fe:	1ac0      	subs	r0, r0, r3
 800f600:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f602:	2b00      	cmp	r3, #0
 800f604:	d001      	beq.n	800f60a <__sflush_r+0x4a>
 800f606:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f608:	1ac0      	subs	r0, r0, r3
 800f60a:	0002      	movs	r2, r0
 800f60c:	6a21      	ldr	r1, [r4, #32]
 800f60e:	2300      	movs	r3, #0
 800f610:	0028      	movs	r0, r5
 800f612:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f614:	47b8      	blx	r7
 800f616:	89a1      	ldrh	r1, [r4, #12]
 800f618:	1c43      	adds	r3, r0, #1
 800f61a:	d106      	bne.n	800f62a <__sflush_r+0x6a>
 800f61c:	682b      	ldr	r3, [r5, #0]
 800f61e:	2b1d      	cmp	r3, #29
 800f620:	d831      	bhi.n	800f686 <__sflush_r+0xc6>
 800f622:	4a2c      	ldr	r2, [pc, #176]	; (800f6d4 <__sflush_r+0x114>)
 800f624:	40da      	lsrs	r2, r3
 800f626:	07d3      	lsls	r3, r2, #31
 800f628:	d52d      	bpl.n	800f686 <__sflush_r+0xc6>
 800f62a:	2300      	movs	r3, #0
 800f62c:	6063      	str	r3, [r4, #4]
 800f62e:	6923      	ldr	r3, [r4, #16]
 800f630:	6023      	str	r3, [r4, #0]
 800f632:	04cb      	lsls	r3, r1, #19
 800f634:	d505      	bpl.n	800f642 <__sflush_r+0x82>
 800f636:	1c43      	adds	r3, r0, #1
 800f638:	d102      	bne.n	800f640 <__sflush_r+0x80>
 800f63a:	682b      	ldr	r3, [r5, #0]
 800f63c:	2b00      	cmp	r3, #0
 800f63e:	d100      	bne.n	800f642 <__sflush_r+0x82>
 800f640:	6560      	str	r0, [r4, #84]	; 0x54
 800f642:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f644:	602e      	str	r6, [r5, #0]
 800f646:	2900      	cmp	r1, #0
 800f648:	d0c6      	beq.n	800f5d8 <__sflush_r+0x18>
 800f64a:	0023      	movs	r3, r4
 800f64c:	3344      	adds	r3, #68	; 0x44
 800f64e:	4299      	cmp	r1, r3
 800f650:	d002      	beq.n	800f658 <__sflush_r+0x98>
 800f652:	0028      	movs	r0, r5
 800f654:	f7ff fab2 	bl	800ebbc <_free_r>
 800f658:	2000      	movs	r0, #0
 800f65a:	6360      	str	r0, [r4, #52]	; 0x34
 800f65c:	e7bd      	b.n	800f5da <__sflush_r+0x1a>
 800f65e:	2301      	movs	r3, #1
 800f660:	0028      	movs	r0, r5
 800f662:	6a21      	ldr	r1, [r4, #32]
 800f664:	47b8      	blx	r7
 800f666:	1c43      	adds	r3, r0, #1
 800f668:	d1c5      	bne.n	800f5f6 <__sflush_r+0x36>
 800f66a:	682b      	ldr	r3, [r5, #0]
 800f66c:	2b00      	cmp	r3, #0
 800f66e:	d0c2      	beq.n	800f5f6 <__sflush_r+0x36>
 800f670:	2b1d      	cmp	r3, #29
 800f672:	d001      	beq.n	800f678 <__sflush_r+0xb8>
 800f674:	2b16      	cmp	r3, #22
 800f676:	d101      	bne.n	800f67c <__sflush_r+0xbc>
 800f678:	602e      	str	r6, [r5, #0]
 800f67a:	e7ad      	b.n	800f5d8 <__sflush_r+0x18>
 800f67c:	2340      	movs	r3, #64	; 0x40
 800f67e:	89a2      	ldrh	r2, [r4, #12]
 800f680:	4313      	orrs	r3, r2
 800f682:	81a3      	strh	r3, [r4, #12]
 800f684:	e7a9      	b.n	800f5da <__sflush_r+0x1a>
 800f686:	2340      	movs	r3, #64	; 0x40
 800f688:	430b      	orrs	r3, r1
 800f68a:	e7fa      	b.n	800f682 <__sflush_r+0xc2>
 800f68c:	690f      	ldr	r7, [r1, #16]
 800f68e:	2f00      	cmp	r7, #0
 800f690:	d0a2      	beq.n	800f5d8 <__sflush_r+0x18>
 800f692:	680a      	ldr	r2, [r1, #0]
 800f694:	600f      	str	r7, [r1, #0]
 800f696:	1bd2      	subs	r2, r2, r7
 800f698:	9201      	str	r2, [sp, #4]
 800f69a:	2200      	movs	r2, #0
 800f69c:	079b      	lsls	r3, r3, #30
 800f69e:	d100      	bne.n	800f6a2 <__sflush_r+0xe2>
 800f6a0:	694a      	ldr	r2, [r1, #20]
 800f6a2:	60a2      	str	r2, [r4, #8]
 800f6a4:	9b01      	ldr	r3, [sp, #4]
 800f6a6:	2b00      	cmp	r3, #0
 800f6a8:	dc00      	bgt.n	800f6ac <__sflush_r+0xec>
 800f6aa:	e795      	b.n	800f5d8 <__sflush_r+0x18>
 800f6ac:	003a      	movs	r2, r7
 800f6ae:	0028      	movs	r0, r5
 800f6b0:	9b01      	ldr	r3, [sp, #4]
 800f6b2:	6a21      	ldr	r1, [r4, #32]
 800f6b4:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800f6b6:	47b0      	blx	r6
 800f6b8:	2800      	cmp	r0, #0
 800f6ba:	dc06      	bgt.n	800f6ca <__sflush_r+0x10a>
 800f6bc:	2340      	movs	r3, #64	; 0x40
 800f6be:	2001      	movs	r0, #1
 800f6c0:	89a2      	ldrh	r2, [r4, #12]
 800f6c2:	4240      	negs	r0, r0
 800f6c4:	4313      	orrs	r3, r2
 800f6c6:	81a3      	strh	r3, [r4, #12]
 800f6c8:	e787      	b.n	800f5da <__sflush_r+0x1a>
 800f6ca:	9b01      	ldr	r3, [sp, #4]
 800f6cc:	183f      	adds	r7, r7, r0
 800f6ce:	1a1b      	subs	r3, r3, r0
 800f6d0:	9301      	str	r3, [sp, #4]
 800f6d2:	e7e7      	b.n	800f6a4 <__sflush_r+0xe4>
 800f6d4:	20400001 	.word	0x20400001

0800f6d8 <_fflush_r>:
 800f6d8:	690b      	ldr	r3, [r1, #16]
 800f6da:	b570      	push	{r4, r5, r6, lr}
 800f6dc:	0005      	movs	r5, r0
 800f6de:	000c      	movs	r4, r1
 800f6e0:	2b00      	cmp	r3, #0
 800f6e2:	d102      	bne.n	800f6ea <_fflush_r+0x12>
 800f6e4:	2500      	movs	r5, #0
 800f6e6:	0028      	movs	r0, r5
 800f6e8:	bd70      	pop	{r4, r5, r6, pc}
 800f6ea:	2800      	cmp	r0, #0
 800f6ec:	d004      	beq.n	800f6f8 <_fflush_r+0x20>
 800f6ee:	6983      	ldr	r3, [r0, #24]
 800f6f0:	2b00      	cmp	r3, #0
 800f6f2:	d101      	bne.n	800f6f8 <_fflush_r+0x20>
 800f6f4:	f7fe f940 	bl	800d978 <__sinit>
 800f6f8:	4b14      	ldr	r3, [pc, #80]	; (800f74c <_fflush_r+0x74>)
 800f6fa:	429c      	cmp	r4, r3
 800f6fc:	d11b      	bne.n	800f736 <_fflush_r+0x5e>
 800f6fe:	686c      	ldr	r4, [r5, #4]
 800f700:	220c      	movs	r2, #12
 800f702:	5ea3      	ldrsh	r3, [r4, r2]
 800f704:	2b00      	cmp	r3, #0
 800f706:	d0ed      	beq.n	800f6e4 <_fflush_r+0xc>
 800f708:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800f70a:	07d2      	lsls	r2, r2, #31
 800f70c:	d404      	bmi.n	800f718 <_fflush_r+0x40>
 800f70e:	059b      	lsls	r3, r3, #22
 800f710:	d402      	bmi.n	800f718 <_fflush_r+0x40>
 800f712:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f714:	f7fe fd47 	bl	800e1a6 <__retarget_lock_acquire_recursive>
 800f718:	0028      	movs	r0, r5
 800f71a:	0021      	movs	r1, r4
 800f71c:	f7ff ff50 	bl	800f5c0 <__sflush_r>
 800f720:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f722:	0005      	movs	r5, r0
 800f724:	07db      	lsls	r3, r3, #31
 800f726:	d4de      	bmi.n	800f6e6 <_fflush_r+0xe>
 800f728:	89a3      	ldrh	r3, [r4, #12]
 800f72a:	059b      	lsls	r3, r3, #22
 800f72c:	d4db      	bmi.n	800f6e6 <_fflush_r+0xe>
 800f72e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f730:	f7fe fd3a 	bl	800e1a8 <__retarget_lock_release_recursive>
 800f734:	e7d7      	b.n	800f6e6 <_fflush_r+0xe>
 800f736:	4b06      	ldr	r3, [pc, #24]	; (800f750 <_fflush_r+0x78>)
 800f738:	429c      	cmp	r4, r3
 800f73a:	d101      	bne.n	800f740 <_fflush_r+0x68>
 800f73c:	68ac      	ldr	r4, [r5, #8]
 800f73e:	e7df      	b.n	800f700 <_fflush_r+0x28>
 800f740:	4b04      	ldr	r3, [pc, #16]	; (800f754 <_fflush_r+0x7c>)
 800f742:	429c      	cmp	r4, r3
 800f744:	d1dc      	bne.n	800f700 <_fflush_r+0x28>
 800f746:	68ec      	ldr	r4, [r5, #12]
 800f748:	e7da      	b.n	800f700 <_fflush_r+0x28>
 800f74a:	46c0      	nop			; (mov r8, r8)
 800f74c:	080101f0 	.word	0x080101f0
 800f750:	08010210 	.word	0x08010210
 800f754:	080101d0 	.word	0x080101d0

0800f758 <fiprintf>:
 800f758:	b40e      	push	{r1, r2, r3}
 800f75a:	b503      	push	{r0, r1, lr}
 800f75c:	0001      	movs	r1, r0
 800f75e:	ab03      	add	r3, sp, #12
 800f760:	4804      	ldr	r0, [pc, #16]	; (800f774 <fiprintf+0x1c>)
 800f762:	cb04      	ldmia	r3!, {r2}
 800f764:	6800      	ldr	r0, [r0, #0]
 800f766:	9301      	str	r3, [sp, #4]
 800f768:	f7ff fc5a 	bl	800f020 <_vfiprintf_r>
 800f76c:	b002      	add	sp, #8
 800f76e:	bc08      	pop	{r3}
 800f770:	b003      	add	sp, #12
 800f772:	4718      	bx	r3
 800f774:	2000005c 	.word	0x2000005c

0800f778 <_lseek_r>:
 800f778:	b570      	push	{r4, r5, r6, lr}
 800f77a:	0004      	movs	r4, r0
 800f77c:	0008      	movs	r0, r1
 800f77e:	0011      	movs	r1, r2
 800f780:	001a      	movs	r2, r3
 800f782:	2300      	movs	r3, #0
 800f784:	4d05      	ldr	r5, [pc, #20]	; (800f79c <_lseek_r+0x24>)
 800f786:	602b      	str	r3, [r5, #0]
 800f788:	f7f7 fe28 	bl	80073dc <_lseek>
 800f78c:	1c43      	adds	r3, r0, #1
 800f78e:	d103      	bne.n	800f798 <_lseek_r+0x20>
 800f790:	682b      	ldr	r3, [r5, #0]
 800f792:	2b00      	cmp	r3, #0
 800f794:	d000      	beq.n	800f798 <_lseek_r+0x20>
 800f796:	6023      	str	r3, [r4, #0]
 800f798:	bd70      	pop	{r4, r5, r6, pc}
 800f79a:	46c0      	nop			; (mov r8, r8)
 800f79c:	2000063c 	.word	0x2000063c

0800f7a0 <__swhatbuf_r>:
 800f7a0:	b570      	push	{r4, r5, r6, lr}
 800f7a2:	000e      	movs	r6, r1
 800f7a4:	001d      	movs	r5, r3
 800f7a6:	230e      	movs	r3, #14
 800f7a8:	5ec9      	ldrsh	r1, [r1, r3]
 800f7aa:	0014      	movs	r4, r2
 800f7ac:	b096      	sub	sp, #88	; 0x58
 800f7ae:	2900      	cmp	r1, #0
 800f7b0:	da07      	bge.n	800f7c2 <__swhatbuf_r+0x22>
 800f7b2:	2300      	movs	r3, #0
 800f7b4:	602b      	str	r3, [r5, #0]
 800f7b6:	89b3      	ldrh	r3, [r6, #12]
 800f7b8:	061b      	lsls	r3, r3, #24
 800f7ba:	d411      	bmi.n	800f7e0 <__swhatbuf_r+0x40>
 800f7bc:	2380      	movs	r3, #128	; 0x80
 800f7be:	00db      	lsls	r3, r3, #3
 800f7c0:	e00f      	b.n	800f7e2 <__swhatbuf_r+0x42>
 800f7c2:	466a      	mov	r2, sp
 800f7c4:	f000 f8be 	bl	800f944 <_fstat_r>
 800f7c8:	2800      	cmp	r0, #0
 800f7ca:	dbf2      	blt.n	800f7b2 <__swhatbuf_r+0x12>
 800f7cc:	23f0      	movs	r3, #240	; 0xf0
 800f7ce:	9901      	ldr	r1, [sp, #4]
 800f7d0:	021b      	lsls	r3, r3, #8
 800f7d2:	4019      	ands	r1, r3
 800f7d4:	4b05      	ldr	r3, [pc, #20]	; (800f7ec <__swhatbuf_r+0x4c>)
 800f7d6:	18c9      	adds	r1, r1, r3
 800f7d8:	424b      	negs	r3, r1
 800f7da:	4159      	adcs	r1, r3
 800f7dc:	6029      	str	r1, [r5, #0]
 800f7de:	e7ed      	b.n	800f7bc <__swhatbuf_r+0x1c>
 800f7e0:	2340      	movs	r3, #64	; 0x40
 800f7e2:	2000      	movs	r0, #0
 800f7e4:	6023      	str	r3, [r4, #0]
 800f7e6:	b016      	add	sp, #88	; 0x58
 800f7e8:	bd70      	pop	{r4, r5, r6, pc}
 800f7ea:	46c0      	nop			; (mov r8, r8)
 800f7ec:	ffffe000 	.word	0xffffe000

0800f7f0 <__smakebuf_r>:
 800f7f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f7f2:	2602      	movs	r6, #2
 800f7f4:	898b      	ldrh	r3, [r1, #12]
 800f7f6:	0005      	movs	r5, r0
 800f7f8:	000c      	movs	r4, r1
 800f7fa:	4233      	tst	r3, r6
 800f7fc:	d006      	beq.n	800f80c <__smakebuf_r+0x1c>
 800f7fe:	0023      	movs	r3, r4
 800f800:	3347      	adds	r3, #71	; 0x47
 800f802:	6023      	str	r3, [r4, #0]
 800f804:	6123      	str	r3, [r4, #16]
 800f806:	2301      	movs	r3, #1
 800f808:	6163      	str	r3, [r4, #20]
 800f80a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800f80c:	466a      	mov	r2, sp
 800f80e:	ab01      	add	r3, sp, #4
 800f810:	f7ff ffc6 	bl	800f7a0 <__swhatbuf_r>
 800f814:	9900      	ldr	r1, [sp, #0]
 800f816:	0007      	movs	r7, r0
 800f818:	0028      	movs	r0, r5
 800f81a:	f7ff fa19 	bl	800ec50 <_malloc_r>
 800f81e:	2800      	cmp	r0, #0
 800f820:	d108      	bne.n	800f834 <__smakebuf_r+0x44>
 800f822:	220c      	movs	r2, #12
 800f824:	5ea3      	ldrsh	r3, [r4, r2]
 800f826:	059a      	lsls	r2, r3, #22
 800f828:	d4ef      	bmi.n	800f80a <__smakebuf_r+0x1a>
 800f82a:	2203      	movs	r2, #3
 800f82c:	4393      	bics	r3, r2
 800f82e:	431e      	orrs	r6, r3
 800f830:	81a6      	strh	r6, [r4, #12]
 800f832:	e7e4      	b.n	800f7fe <__smakebuf_r+0xe>
 800f834:	4b0f      	ldr	r3, [pc, #60]	; (800f874 <__smakebuf_r+0x84>)
 800f836:	62ab      	str	r3, [r5, #40]	; 0x28
 800f838:	2380      	movs	r3, #128	; 0x80
 800f83a:	89a2      	ldrh	r2, [r4, #12]
 800f83c:	6020      	str	r0, [r4, #0]
 800f83e:	4313      	orrs	r3, r2
 800f840:	81a3      	strh	r3, [r4, #12]
 800f842:	9b00      	ldr	r3, [sp, #0]
 800f844:	6120      	str	r0, [r4, #16]
 800f846:	6163      	str	r3, [r4, #20]
 800f848:	9b01      	ldr	r3, [sp, #4]
 800f84a:	2b00      	cmp	r3, #0
 800f84c:	d00d      	beq.n	800f86a <__smakebuf_r+0x7a>
 800f84e:	0028      	movs	r0, r5
 800f850:	230e      	movs	r3, #14
 800f852:	5ee1      	ldrsh	r1, [r4, r3]
 800f854:	f000 f888 	bl	800f968 <_isatty_r>
 800f858:	2800      	cmp	r0, #0
 800f85a:	d006      	beq.n	800f86a <__smakebuf_r+0x7a>
 800f85c:	2203      	movs	r2, #3
 800f85e:	89a3      	ldrh	r3, [r4, #12]
 800f860:	4393      	bics	r3, r2
 800f862:	001a      	movs	r2, r3
 800f864:	2301      	movs	r3, #1
 800f866:	4313      	orrs	r3, r2
 800f868:	81a3      	strh	r3, [r4, #12]
 800f86a:	89a0      	ldrh	r0, [r4, #12]
 800f86c:	4307      	orrs	r7, r0
 800f86e:	81a7      	strh	r7, [r4, #12]
 800f870:	e7cb      	b.n	800f80a <__smakebuf_r+0x1a>
 800f872:	46c0      	nop			; (mov r8, r8)
 800f874:	0800d8fd 	.word	0x0800d8fd

0800f878 <memmove>:
 800f878:	b510      	push	{r4, lr}
 800f87a:	4288      	cmp	r0, r1
 800f87c:	d902      	bls.n	800f884 <memmove+0xc>
 800f87e:	188b      	adds	r3, r1, r2
 800f880:	4298      	cmp	r0, r3
 800f882:	d303      	bcc.n	800f88c <memmove+0x14>
 800f884:	2300      	movs	r3, #0
 800f886:	e007      	b.n	800f898 <memmove+0x20>
 800f888:	5c8b      	ldrb	r3, [r1, r2]
 800f88a:	5483      	strb	r3, [r0, r2]
 800f88c:	3a01      	subs	r2, #1
 800f88e:	d2fb      	bcs.n	800f888 <memmove+0x10>
 800f890:	bd10      	pop	{r4, pc}
 800f892:	5ccc      	ldrb	r4, [r1, r3]
 800f894:	54c4      	strb	r4, [r0, r3]
 800f896:	3301      	adds	r3, #1
 800f898:	429a      	cmp	r2, r3
 800f89a:	d1fa      	bne.n	800f892 <memmove+0x1a>
 800f89c:	e7f8      	b.n	800f890 <memmove+0x18>
	...

0800f8a0 <__malloc_lock>:
 800f8a0:	b510      	push	{r4, lr}
 800f8a2:	4802      	ldr	r0, [pc, #8]	; (800f8ac <__malloc_lock+0xc>)
 800f8a4:	f7fe fc7f 	bl	800e1a6 <__retarget_lock_acquire_recursive>
 800f8a8:	bd10      	pop	{r4, pc}
 800f8aa:	46c0      	nop			; (mov r8, r8)
 800f8ac:	20000634 	.word	0x20000634

0800f8b0 <__malloc_unlock>:
 800f8b0:	b510      	push	{r4, lr}
 800f8b2:	4802      	ldr	r0, [pc, #8]	; (800f8bc <__malloc_unlock+0xc>)
 800f8b4:	f7fe fc78 	bl	800e1a8 <__retarget_lock_release_recursive>
 800f8b8:	bd10      	pop	{r4, pc}
 800f8ba:	46c0      	nop			; (mov r8, r8)
 800f8bc:	20000634 	.word	0x20000634

0800f8c0 <_realloc_r>:
 800f8c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f8c2:	0007      	movs	r7, r0
 800f8c4:	000d      	movs	r5, r1
 800f8c6:	0016      	movs	r6, r2
 800f8c8:	2900      	cmp	r1, #0
 800f8ca:	d105      	bne.n	800f8d8 <_realloc_r+0x18>
 800f8cc:	0011      	movs	r1, r2
 800f8ce:	f7ff f9bf 	bl	800ec50 <_malloc_r>
 800f8d2:	0004      	movs	r4, r0
 800f8d4:	0020      	movs	r0, r4
 800f8d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f8d8:	2a00      	cmp	r2, #0
 800f8da:	d103      	bne.n	800f8e4 <_realloc_r+0x24>
 800f8dc:	f7ff f96e 	bl	800ebbc <_free_r>
 800f8e0:	0034      	movs	r4, r6
 800f8e2:	e7f7      	b.n	800f8d4 <_realloc_r+0x14>
 800f8e4:	f000 f852 	bl	800f98c <_malloc_usable_size_r>
 800f8e8:	002c      	movs	r4, r5
 800f8ea:	42b0      	cmp	r0, r6
 800f8ec:	d2f2      	bcs.n	800f8d4 <_realloc_r+0x14>
 800f8ee:	0031      	movs	r1, r6
 800f8f0:	0038      	movs	r0, r7
 800f8f2:	f7ff f9ad 	bl	800ec50 <_malloc_r>
 800f8f6:	1e04      	subs	r4, r0, #0
 800f8f8:	d0ec      	beq.n	800f8d4 <_realloc_r+0x14>
 800f8fa:	0029      	movs	r1, r5
 800f8fc:	0032      	movs	r2, r6
 800f8fe:	f7fe fc7c 	bl	800e1fa <memcpy>
 800f902:	0029      	movs	r1, r5
 800f904:	0038      	movs	r0, r7
 800f906:	f7ff f959 	bl	800ebbc <_free_r>
 800f90a:	e7e3      	b.n	800f8d4 <_realloc_r+0x14>

0800f90c <_read_r>:
 800f90c:	b570      	push	{r4, r5, r6, lr}
 800f90e:	0004      	movs	r4, r0
 800f910:	0008      	movs	r0, r1
 800f912:	0011      	movs	r1, r2
 800f914:	001a      	movs	r2, r3
 800f916:	2300      	movs	r3, #0
 800f918:	4d05      	ldr	r5, [pc, #20]	; (800f930 <_read_r+0x24>)
 800f91a:	602b      	str	r3, [r5, #0]
 800f91c:	f7f7 fcae 	bl	800727c <_read>
 800f920:	1c43      	adds	r3, r0, #1
 800f922:	d103      	bne.n	800f92c <_read_r+0x20>
 800f924:	682b      	ldr	r3, [r5, #0]
 800f926:	2b00      	cmp	r3, #0
 800f928:	d000      	beq.n	800f92c <_read_r+0x20>
 800f92a:	6023      	str	r3, [r4, #0]
 800f92c:	bd70      	pop	{r4, r5, r6, pc}
 800f92e:	46c0      	nop			; (mov r8, r8)
 800f930:	2000063c 	.word	0x2000063c

0800f934 <abort>:
 800f934:	2006      	movs	r0, #6
 800f936:	b510      	push	{r4, lr}
 800f938:	f000 f85a 	bl	800f9f0 <raise>
 800f93c:	2001      	movs	r0, #1
 800f93e:	f7f7 fc97 	bl	8007270 <_exit>
	...

0800f944 <_fstat_r>:
 800f944:	2300      	movs	r3, #0
 800f946:	b570      	push	{r4, r5, r6, lr}
 800f948:	4d06      	ldr	r5, [pc, #24]	; (800f964 <_fstat_r+0x20>)
 800f94a:	0004      	movs	r4, r0
 800f94c:	0008      	movs	r0, r1
 800f94e:	0011      	movs	r1, r2
 800f950:	602b      	str	r3, [r5, #0]
 800f952:	f7f7 fd3b 	bl	80073cc <_fstat>
 800f956:	1c43      	adds	r3, r0, #1
 800f958:	d103      	bne.n	800f962 <_fstat_r+0x1e>
 800f95a:	682b      	ldr	r3, [r5, #0]
 800f95c:	2b00      	cmp	r3, #0
 800f95e:	d000      	beq.n	800f962 <_fstat_r+0x1e>
 800f960:	6023      	str	r3, [r4, #0]
 800f962:	bd70      	pop	{r4, r5, r6, pc}
 800f964:	2000063c 	.word	0x2000063c

0800f968 <_isatty_r>:
 800f968:	2300      	movs	r3, #0
 800f96a:	b570      	push	{r4, r5, r6, lr}
 800f96c:	4d06      	ldr	r5, [pc, #24]	; (800f988 <_isatty_r+0x20>)
 800f96e:	0004      	movs	r4, r0
 800f970:	0008      	movs	r0, r1
 800f972:	602b      	str	r3, [r5, #0]
 800f974:	f7f7 fd30 	bl	80073d8 <_isatty>
 800f978:	1c43      	adds	r3, r0, #1
 800f97a:	d103      	bne.n	800f984 <_isatty_r+0x1c>
 800f97c:	682b      	ldr	r3, [r5, #0]
 800f97e:	2b00      	cmp	r3, #0
 800f980:	d000      	beq.n	800f984 <_isatty_r+0x1c>
 800f982:	6023      	str	r3, [r4, #0]
 800f984:	bd70      	pop	{r4, r5, r6, pc}
 800f986:	46c0      	nop			; (mov r8, r8)
 800f988:	2000063c 	.word	0x2000063c

0800f98c <_malloc_usable_size_r>:
 800f98c:	1f0b      	subs	r3, r1, #4
 800f98e:	681b      	ldr	r3, [r3, #0]
 800f990:	1f18      	subs	r0, r3, #4
 800f992:	2b00      	cmp	r3, #0
 800f994:	da01      	bge.n	800f99a <_malloc_usable_size_r+0xe>
 800f996:	580b      	ldr	r3, [r1, r0]
 800f998:	18c0      	adds	r0, r0, r3
 800f99a:	4770      	bx	lr

0800f99c <_raise_r>:
 800f99c:	b570      	push	{r4, r5, r6, lr}
 800f99e:	0004      	movs	r4, r0
 800f9a0:	000d      	movs	r5, r1
 800f9a2:	291f      	cmp	r1, #31
 800f9a4:	d904      	bls.n	800f9b0 <_raise_r+0x14>
 800f9a6:	2316      	movs	r3, #22
 800f9a8:	6003      	str	r3, [r0, #0]
 800f9aa:	2001      	movs	r0, #1
 800f9ac:	4240      	negs	r0, r0
 800f9ae:	bd70      	pop	{r4, r5, r6, pc}
 800f9b0:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800f9b2:	2b00      	cmp	r3, #0
 800f9b4:	d004      	beq.n	800f9c0 <_raise_r+0x24>
 800f9b6:	008a      	lsls	r2, r1, #2
 800f9b8:	189b      	adds	r3, r3, r2
 800f9ba:	681a      	ldr	r2, [r3, #0]
 800f9bc:	2a00      	cmp	r2, #0
 800f9be:	d108      	bne.n	800f9d2 <_raise_r+0x36>
 800f9c0:	0020      	movs	r0, r4
 800f9c2:	f000 f831 	bl	800fa28 <_getpid_r>
 800f9c6:	002a      	movs	r2, r5
 800f9c8:	0001      	movs	r1, r0
 800f9ca:	0020      	movs	r0, r4
 800f9cc:	f000 f81a 	bl	800fa04 <_kill_r>
 800f9d0:	e7ed      	b.n	800f9ae <_raise_r+0x12>
 800f9d2:	2000      	movs	r0, #0
 800f9d4:	2a01      	cmp	r2, #1
 800f9d6:	d0ea      	beq.n	800f9ae <_raise_r+0x12>
 800f9d8:	1c51      	adds	r1, r2, #1
 800f9da:	d103      	bne.n	800f9e4 <_raise_r+0x48>
 800f9dc:	2316      	movs	r3, #22
 800f9de:	3001      	adds	r0, #1
 800f9e0:	6023      	str	r3, [r4, #0]
 800f9e2:	e7e4      	b.n	800f9ae <_raise_r+0x12>
 800f9e4:	2400      	movs	r4, #0
 800f9e6:	0028      	movs	r0, r5
 800f9e8:	601c      	str	r4, [r3, #0]
 800f9ea:	4790      	blx	r2
 800f9ec:	0020      	movs	r0, r4
 800f9ee:	e7de      	b.n	800f9ae <_raise_r+0x12>

0800f9f0 <raise>:
 800f9f0:	b510      	push	{r4, lr}
 800f9f2:	4b03      	ldr	r3, [pc, #12]	; (800fa00 <raise+0x10>)
 800f9f4:	0001      	movs	r1, r0
 800f9f6:	6818      	ldr	r0, [r3, #0]
 800f9f8:	f7ff ffd0 	bl	800f99c <_raise_r>
 800f9fc:	bd10      	pop	{r4, pc}
 800f9fe:	46c0      	nop			; (mov r8, r8)
 800fa00:	2000005c 	.word	0x2000005c

0800fa04 <_kill_r>:
 800fa04:	2300      	movs	r3, #0
 800fa06:	b570      	push	{r4, r5, r6, lr}
 800fa08:	4d06      	ldr	r5, [pc, #24]	; (800fa24 <_kill_r+0x20>)
 800fa0a:	0004      	movs	r4, r0
 800fa0c:	0008      	movs	r0, r1
 800fa0e:	0011      	movs	r1, r2
 800fa10:	602b      	str	r3, [r5, #0]
 800fa12:	f7f7 fc25 	bl	8007260 <_kill>
 800fa16:	1c43      	adds	r3, r0, #1
 800fa18:	d103      	bne.n	800fa22 <_kill_r+0x1e>
 800fa1a:	682b      	ldr	r3, [r5, #0]
 800fa1c:	2b00      	cmp	r3, #0
 800fa1e:	d000      	beq.n	800fa22 <_kill_r+0x1e>
 800fa20:	6023      	str	r3, [r4, #0]
 800fa22:	bd70      	pop	{r4, r5, r6, pc}
 800fa24:	2000063c 	.word	0x2000063c

0800fa28 <_getpid_r>:
 800fa28:	b510      	push	{r4, lr}
 800fa2a:	f7f7 fc17 	bl	800725c <_getpid>
 800fa2e:	bd10      	pop	{r4, pc}

0800fa30 <_init>:
 800fa30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fa32:	46c0      	nop			; (mov r8, r8)
 800fa34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fa36:	bc08      	pop	{r3}
 800fa38:	469e      	mov	lr, r3
 800fa3a:	4770      	bx	lr

0800fa3c <_fini>:
 800fa3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fa3e:	46c0      	nop			; (mov r8, r8)
 800fa40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fa42:	bc08      	pop	{r3}
 800fa44:	469e      	mov	lr, r3
 800fa46:	4770      	bx	lr
